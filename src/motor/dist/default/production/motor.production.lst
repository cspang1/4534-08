

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Apr 22 11:58:02 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    79                           	psect	param0,global,class=BANK0,space=1,delta=1
    80  0000                     
    81                           	psect	idataCOMRAM
    82  001EA4                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _args
    86  001EA4  0131               	dw	305
    87  001EA6  005A               	dw	90
    88  001EA8  001F               	dw	31
    89  001EAA  005A               	dw	90
    90  001EAC  0131               	dw	305
    91  001EAE  FFA6               	dw	65446
    92  001EB0  001F               	dw	31
    93  001EB2  FFA6               	dw	65446
    94  001EB4  0131               	dw	305
    95  001EB6  0000               	dw	0
    96                           
    97                           ;initializer for _cmds
    98  001EB8  0000               	dw	0
    99  001EBA  0002               	dw	2
   100  001EBC  0000               	dw	0
   101  001EBE  0002               	dw	2
   102  001EC0  0000               	dw	0
   103  001EC2  0002               	dw	2
   104  001EC4  0000               	dw	0
   105  001EC6  0002               	dw	2
   106  001EC8  0000               	dw	0
   107  001ECA  FFFF               	dw	65535
   108                           
   109                           ;initializer for _ready
   110  001ECC  01                 	db	1
   111  0000                     _ADCON1	set	4033
   112  0000                     _CMCON	set	4020
   113  0000                     _INTCONbits	set	4082
   114  0000                     _IPR1bits	set	3999
   115  0000                     _LATA	set	3977
   116  0000                     _LATB	set	3978
   117  0000                     _OSCCON	set	4051
   118  0000                     _OSCCONbits	set	4051
   119  0000                     _OSCTUNEbits	set	3995
   120  0000                     _PIE1bits	set	3997
   121  0000                     _PIR1bits	set	3998
   122  0000                     _PORTA	set	3968
   123  0000                     _PORTB	set	3969
   124  0000                     _RCONbits	set	4048
   125  0000                     _RCREG	set	4014
   126  0000                     _RCSTA	set	4011
   127  0000                     _RCSTAbits	set	4011
   128  0000                     _SPBRG	set	4015
   129  0000                     _SPBRGH	set	4016
   130  0000                     _SSPADD	set	4040
   131  0000                     _SSPBUF	set	4041
   132  0000                     _SSPCON1	set	4038
   133  0000                     _SSPCON1bits	set	4038
   134  0000                     _SSPCON2	set	4037
   135  0000                     _SSPCON2bits	set	4037
   136  0000                     _SSPSTAT	set	4039
   137  0000                     _SSPSTATbits	set	4039
   138  0000                     _T0CON	set	4053
   139  0000                     _T0CONbits	set	4053
   140  0000                     _T1CON	set	4045
   141  0000                     _T1CONbits	set	4045
   142  0000                     _TMR0H	set	4055
   143  0000                     _TMR0L	set	4054
   144  0000                     _TMR1H	set	4047
   145  0000                     _TMR1L	set	4046
   146  0000                     _TRISA	set	3986
   147  0000                     _TRISB	set	3987
   148  0000                     _TRISCbits	set	3988
   149  0000                     _TXREG	set	4013
   150  0000                     _TXSTA	set	4012
   151  0000                     _TXSTAbits	set	4012
   152                           
   153                           	psect	nvCOMRAM
   154  000061                     __pnvCOMRAM:
   155                           	opt stack 0
   156  000061                     _uc_ptr:
   157                           	opt stack 0
   158  000061                     	ds	2
   159                           
   160                           	psect	nvBANK0
   161  0000CC                     __pnvBANK0:
   162                           	opt stack 0
   163  0000CC                     _ic_ptr:
   164                           	opt stack 0
   165  0000CC                     	ds	2
   166                           
   167                           ; #config settings
   168  0000                     
   169                           	psect	cinit
   170  0019FA                     __pcinit:
   171                           	opt stack 0
   172  0019FA                     start_initialization:
   173                           	opt stack 0
   174  0019FA                     __initialization:
   175                           	opt stack 0
   176                           
   177                           ; Clear objects allocated to BANK2 (54 bytes)
   178  0019FA  EE02  F055         	lfsr	0,__pbssBANK2
   179  0019FE  0E36               	movlw	54
   180  001A00                     clear_0:
   181  001A00  6AEE               	clrf	postinc0,c
   182  001A02  06E8               	decf	wreg,f,c
   183  001A04  E1FD               	bnz	clear_0
   184                           
   185                           ; Clear objects allocated to BANK1 (162 bytes)
   186  001A06  EE01  F000         	lfsr	0,__pbssBANK1
   187  001A0A  0EA2               	movlw	162
   188  001A0C                     clear_1:
   189  001A0C  6AEE               	clrf	postinc0,c
   190  001A0E  06E8               	decf	wreg,f,c
   191  001A10  E1FD               	bnz	clear_1
   192                           
   193                           ; Clear objects allocated to BANK0 (6 bytes)
   194  001A12  0100               	movlb	0
   195  001A14  6BCB               	clrf	(__pbssBANK0+5)& (0+255),b
   196  001A16  6BCA               	clrf	(__pbssBANK0+4)& (0+255),b
   197  001A18  6BC9               	clrf	(__pbssBANK0+3)& (0+255),b
   198  001A1A  6BC8               	clrf	(__pbssBANK0+2)& (0+255),b
   199  001A1C  6BC7               	clrf	(__pbssBANK0+1)& (0+255),b
   200  001A1E  6BC6               	clrf	__pbssBANK0& (0+255),b
   201                           
   202                           ; Clear objects allocated to COMRAM (4 bytes)
   203  001A20  6A60               	clrf	(__pbssCOMRAM+3)& (0+255),c
   204  001A22  6A5F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   205  001A24  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   206  001A26  6A5D               	clrf	__pbssCOMRAM& (0+255),c
   207                           
   208                           ; Initialize objects allocated to COMRAM (41 bytes)
   209                           ; load TBLPTR registers with __pidataCOMRAM
   210  001A28  0EA4               	movlw	low __pidataCOMRAM
   211  001A2A  6EF6               	movwf	tblptrl,c
   212  001A2C  0E1E               	movlw	high __pidataCOMRAM
   213  001A2E  6EF7               	movwf	tblptrh,c
   214  001A30  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   215  001A32  6EF8               	movwf	tblptru,c
   216  001A34  EE00  F034         	lfsr	0,__pdataCOMRAM
   217  001A38  EE10 F029          	lfsr	1,41
   218  001A3C                     copy_data0:
   219  001A3C  0009               	tblrd		*+
   220  001A3E  CFF5 FFEE          	movff	tablat,postinc0
   221  001A42  50E5               	movf	postdec1,w,c
   222  001A44  50E1               	movf	fsr1l,w,c
   223  001A46  E1FA               	bnz	copy_data0
   224  001A48                     end_of_initialization:
   225                           	opt stack 0
   226  001A48                     __end_of__initialization:
   227                           	opt stack 0
   228  001A48  0E00               	movlw	low (__Lmediumconst shr (0+16))
   229  001A4A  6EF8               	movwf	tblptru,c
   230  001A4C  0100               	movlb	0
   231  001A4E  EF1F  F003         	goto	_main	;jump to C main() function
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           tblptrl	equ	0xFF6
   235                           tablat	equ	0xFF5
   236                           postinc0	equ	0xFEE
   237                           wreg	equ	0xFE8
   238                           postdec1	equ	0xFE5
   239                           fsr1l	equ	0xFE1
   240                           
   241                           	psect	bssCOMRAM
   242  00005D                     __pbssCOMRAM:
   243                           	opt stack 0
   244  00005D                     _curCmd:
   245                           	opt stack 0
   246  00005D                     	ds	2
   247  00005F                     _MQ_Main_Willing_to_block:
   248                           	opt stack 0
   249  00005F                     	ds	1
   250  000060                     _USART_Status:
   251                           	opt stack 0
   252  000060                     	ds	1
   253                           tblptru	equ	0xFF8
   254                           tblptrh	equ	0xFF7
   255                           tblptrl	equ	0xFF6
   256                           tablat	equ	0xFF5
   257                           postinc0	equ	0xFEE
   258                           wreg	equ	0xFE8
   259                           postdec1	equ	0xFE5
   260                           fsr1l	equ	0xFE1
   261                           
   262                           	psect	dataCOMRAM
   263  000034                     __pdataCOMRAM:
   264                           	opt stack 0
   265  000034                     _args:
   266                           	opt stack 0
   267  000034                     	ds	20
   268  000048                     _cmds:
   269                           	opt stack 0
   270  000048                     	ds	20
   271  00005C                     _ready:
   272                           	opt stack 0
   273  00005C                     	ds	1
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           postdec1	equ	0xFE5
   281                           fsr1l	equ	0xFE1
   282                           
   283                           	psect	bssBANK0
   284  0000C6                     __pbssBANK0:
   285                           	opt stack 0
   286  0000C6                     stop@F5239:
   287                           	opt stack 0
   288  0000C6                     	ds	2
   289  0000C8                     timer0_lthread@F5147:
   290                           	opt stack 0
   291  0000C8                     	ds	2
   292  0000CA                     timer1_lthread@F5087:
   293                           	opt stack 0
   294  0000CA                     	ds	2
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	bssBANK1
   305  000100                     __pbssBANK1:
   306                           	opt stack 0
   307  000100                     _FromMainLow_MQ:
   308                           	opt stack 0
   309  000100                     	ds	54
   310  000136                     _ToMainHigh_MQ:
   311                           	opt stack 0
   312  000136                     	ds	54
   313  00016C                     _ToMainLow_MQ:
   314                           	opt stack 0
   315  00016C                     	ds	54
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           wreg	equ	0xFE8
   322                           postdec1	equ	0xFE5
   323                           fsr1l	equ	0xFE1
   324                           
   325                           	psect	bssBANK2
   326  000255                     __pbssBANK2:
   327                           	opt stack 0
   328  000255                     _FromMainHigh_MQ:
   329                           	opt stack 0
   330  000255                     	ds	54
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           postdec1	equ	0xFE5
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	cstackBANK2
   341  000200                     __pcstackBANK2:
   342                           	opt stack 0
   343  000200                     main@msgbuffer:
   344                           	opt stack 0
   345                           
   346                           ; 11 bytes @ 0x0
   347  000200                     	ds	11
   348  00020B                     main@baud:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0xB
   352  00020B                     	ds	1
   353  00020C                     main@UARTConfig:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0xC
   357  00020C                     	ds	1
   358  00020D                     main@command:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0xD
   362  00020D                     	ds	1
   363  00020E                     main@valuec:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0xE
   367  00020E                     	ds	1
   368  00020F                     main@uthread_data:
   369                           	opt stack 0
   370                           
   371                           ; 10 bytes @ 0xF
   372  00020F                     	ds	10
   373  000219                     main@last_reg_recvd:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x19
   377  000219                     	ds	1
   378  00021A                     main@uc:
   379                           	opt stack 0
   380                           
   381                           ; 5 bytes @ 0x1A
   382  00021A                     	ds	5
   383  00021F                     main@msgtype:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x1F
   387  00021F                     	ds	1
   388  000220                     main@length:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x20
   392  000220                     	ds	1
   393  000221                     main@t0thread_data:
   394                           	opt stack 0
   395                           
   396                           ; 12 bytes @ 0x21
   397  000221                     	ds	12
   398  00022D                     main@t1thread_data:
   399                           	opt stack 0
   400                           
   401                           ; 12 bytes @ 0x2D
   402  00022D                     	ds	12
   403  000239                     main@ic:
   404                           	opt stack 0
   405                           
   406                           ; 28 bytes @ 0x39
   407  000239                     	ds	28
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           postdec1	equ	0xFE5
   415                           fsr1l	equ	0xFE1
   416                           
   417                           	psect	cstackBANK1
   418  0001A2                     __pcstackBANK1:
   419                           	opt stack 0
   420  0001A2                     recv_msg@slot:
   421                           	opt stack 0
   422  0001A2                     send_msg@tlength:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x0
   426  0001A2                     	ds	1
   427  0001A3                     recv_msg@tlength:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x1
   431  0001A3                     	ds	1
   432  0001A4                     send_msg@slot:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x2
   436  0001A4                     	ds	1
   437  0001A5                     send_msg@qmsg:
   438                           	opt stack 0
   439  0001A5                     recv_msg@qmsg:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x3
   443  0001A5                     	ds	2
   444  0001A7                     ToMainLow_sendmsg@length:
   445                           	opt stack 0
   446  0001A7                     FromMainLow_sendmsg@length:
   447                           	opt stack 0
   448  0001A7                     ToMainLow_recvmsg@msgtype:
   449                           	opt stack 0
   450  0001A7                     ToMainHigh_recvmsg@msgtype:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x5
   454  0001A7                     	ds	1
   455  0001A8                     sendUARTarr@data:
   456                           	opt stack 0
   457  0001A8                     uart_lthread@uptr:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x6
   461  0001A8                     	ds	1
   462  0001A9                     ToMainLow_recvmsg@data:
   463                           	opt stack 0
   464  0001A9                     ToMainHigh_recvmsg@data:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x7
   468  0001A9                     	ds	1
   469  0001AA                     sendUARTarr@retval:
   470                           	opt stack 0
   471  0001AA                     uart_lthread@msgtype:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x8
   475  0001AA                     	ds	1
   476  0001AB                     sendUARTarr@length:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x9
   480  0001AB                     	ds	1
   481  0001AC                     move@tptr:
   482                           	opt stack 0
   483  0001AC                     moveDist@tptr:
   484                           	opt stack 0
   485  0001AC                     turn@tptr:
   486                           	opt stack 0
   487  0001AC                     stop@tptr:
   488                           	opt stack 0
   489  0001AC                     timer0_lthread@tptr:
   490                           	opt stack 0
   491  0001AC                     timer1_lthread@tptr:
   492                           	opt stack 0
   493  0001AC                     uart_lthread@length:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0xA
   497  0001AC                     	ds	2
   498  0001AE                     ??_timer0_lthread:
   499  0001AE                     ??_timer1_lthread:
   500  0001AE                     move@test:
   501                           	opt stack 0
   502  0001AE                     moveDist@dist:
   503                           	opt stack 0
   504  0001AE                     turn@angle:
   505                           	opt stack 0
   506  0001AE                     stop@test:
   507                           	opt stack 0
   508  0001AE                     uart_lthread@msgbuffer:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0xC
   512  0001AE                     	ds	2
   513  0001B0                     ??_turn:
   514  0001B0                     uart_lthread@status:
   515                           	opt stack 0
   516  0001B0                     moveDist@test:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0xE
   520  0001B0                     	ds	1
   521  0001B1                     _turn$995:
   522                           	opt stack 0
   523  0001B1                     uart_lthread@index:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0xF
   527  0001B1                     	ds	1
   528  0001B2                     timer0_lthread@temp:
   529                           	opt stack 0
   530  0001B2                     timer1_lthread@temp:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x10
   534  0001B2                     	ds	1
   535  0001B3                     _turn$996:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x11
   539  0001B3                     	ds	2
   540  0001B5                     turn@test:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x13
   544  0001B5                     	ds	2
   545  0001B7                     ??_main:
   546                           
   547                           ; 0 bytes @ 0x15
   548  0001B7                     	ds	2
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           tblptrl	equ	0xFF6
   552                           tablat	equ	0xFF5
   553                           postinc0	equ	0xFEE
   554                           wreg	equ	0xFE8
   555                           postdec1	equ	0xFE5
   556                           fsr1l	equ	0xFE1
   557                           
   558                           	psect	cstackBANK0
   559  000080                     __pcstackBANK0:
   560                           	opt stack 0
   561  000080                     ?i2_in_high_int:
   562                           	opt stack 0
   563  000080                     handle_start@data_read:
   564                           	opt stack 0
   565  000080                     i2check_msg@qptr:
   566                           	opt stack 0
   567  000080                     i2memcpy@d1:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x0
   571  000080                     	ds	2
   572  000082                     ??i2_check_msg:
   573  000082                     ?i2_in_low_int:
   574                           	opt stack 0
   575  000082                     i2memcpy@s1:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x2
   579  000082                     	ds	2
   580  000084                     i2memcpy@n:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x4
   584  000084                     	ds	2
   585  000086                     i2memcpy@d:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x6
   589  000086                     	ds	2
   590  000088                     i2memcpy@s:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x8
   594  000088                     	ds	2
   595  00008A                     i2send_msg@qptr:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0xA
   599  00008A                     	ds	2
   600  00008C                     i2send_msg@length:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0xC
   604  00008C                     	ds	1
   605  00008D                     i2send_msg@msgtype:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0xD
   609  00008D                     	ds	1
   610  00008E                     i2send_msg@data:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0xE
   614  00008E                     	ds	2
   615  000090                     ??i2_send_msg:
   616                           
   617                           ; 0 bytes @ 0x10
   618  000090                     	ds	1
   619  000091                     i2send_msg@tlength:
   620                           	opt stack 0
   621                           
   622                           ; 2 bytes @ 0x11
   623  000091                     	ds	2
   624  000093                     i2send_msg@slot:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x13
   628  000093                     	ds	1
   629  000094                     i2send_msg@qmsg:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x14
   633  000094                     	ds	2
   634  000096                     ToMainHigh_sendmsg@msgtype:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x16
   638  000096                     	ds	1
   639  000097                     ToMainHigh_sendmsg@data:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x17
   643  000097                     	ds	2
   644  000099                     ToMainHigh_sendmsg@length:
   645                           	opt stack 0
   646                           
   647                           ; 1 bytes @ 0x19
   648  000099                     	ds	1
   649  00009A                     ??_i2c_int_handler:
   650                           
   651                           ; 0 bytes @ 0x1A
   652  00009A                     	ds	1
   653  00009B                     i2c_int_handler@error_buf:
   654                           	opt stack 0
   655                           
   656                           ; 3 bytes @ 0x1B
   657  00009B                     	ds	3
   658  00009E                     i2c_int_handler@data_written:
   659                           	opt stack 0
   660                           
   661                           ; 1 bytes @ 0x1E
   662  00009E                     	ds	1
   663  00009F                     i2c_int_handler@overrun_error:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x1F
   667  00009F                     	ds	1
   668  0000A0                     i2c_int_handler@i2c_data:
   669                           	opt stack 0
   670                           
   671                           ; 1 bytes @ 0x20
   672  0000A0                     	ds	1
   673  0000A1                     i2c_int_handler@msg_to_send:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x21
   677  0000A1                     	ds	1
   678  0000A2                     i2c_int_handler@msg_ready:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x22
   682  0000A2                     	ds	1
   683  0000A3                     i2c_int_handler@data_read:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x23
   687  0000A3                     	ds	1
   688  0000A4                     ??_InterruptHandlerHigh:
   689                           
   690                           ; 0 bytes @ 0x24
   691  0000A4                     	ds	14
   692  0000B2                     ?_abs:
   693                           	opt stack 0
   694  0000B2                     ?_in_high_int:
   695                           	opt stack 0
   696  0000B2                     ?___lwmod:
   697                           	opt stack 0
   698  0000B2                     i2c_configure_slave@addr:
   699                           	opt stack 0
   700  0000B2                     OpenTimer0@config:
   701                           	opt stack 0
   702  0000B2                     OpenTimer1@config:
   703                           	opt stack 0
   704  0000B2                     Delay1KTCYx@unit:
   705                           	opt stack 0
   706  0000B2                     init_queue@qptr:
   707                           	opt stack 0
   708  0000B2                     check_msg@qptr:
   709                           	opt stack 0
   710  0000B2                     start_i2c_slave_reply@msg:
   711                           	opt stack 0
   712  0000B2                     init_i2c@ic:
   713                           	opt stack 0
   714  0000B2                     init_uart_recv@uc:
   715                           	opt stack 0
   716  0000B2                     init_timer0_lthread@tptr:
   717                           	opt stack 0
   718  0000B2                     init_timer1_lthread@tptr:
   719                           	opt stack 0
   720  0000B2                     init_uart_lthread@uptr:
   721                           	opt stack 0
   722  0000B2                     WriteTimer0@timer0:
   723                           	opt stack 0
   724  0000B2                     WriteTimer1@timer1:
   725                           	opt stack 0
   726  0000B2                     OpenUSART@spbrg:
   727                           	opt stack 0
   728  0000B2                     abs@a:
   729                           	opt stack 0
   730  0000B2                     ___lwmod@dividend:
   731                           	opt stack 0
   732  0000B2                     memcpy@d1:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x32
   736  0000B2                     	ds	2
   737  0000B4                     ??_OpenUSART:
   738  0000B4                     ??_start_i2c_slave_reply:
   739  0000B4                     ??_abs:
   740  0000B4                     ??_check_msg:
   741  0000B4                     ?_in_low_int:
   742                           	opt stack 0
   743  0000B4                     init_queue@i:
   744                           	opt stack 0
   745  0000B4                     WriteTimer0@timer:
   746                           	opt stack 0
   747  0000B4                     WriteTimer1@timer:
   748                           	opt stack 0
   749  0000B4                     ___lwmod@divisor:
   750                           	opt stack 0
   751  0000B4                     memcpy@s1:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x34
   755  0000B4                     	ds	1
   756  0000B5                     
   757                           ; 0 bytes @ 0x35
   758  0000B5                     	ds	1
   759  0000B6                     ?_in_main:
   760                           	opt stack 0
   761  0000B6                     start_i2c_slave_reply@length:
   762                           	opt stack 0
   763  0000B6                     ___lwmod@counter:
   764                           	opt stack 0
   765  0000B6                     memcpy@n:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x36
   769  0000B6                     	ds	1
   770  0000B7                     OpenUSART@config:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x37
   774  0000B7                     	ds	1
   775  0000B8                     memcpy@d:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x38
   779  0000B8                     	ds	2
   780  0000BA                     memcpy@s:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x3A
   784  0000BA                     	ds	2
   785  0000BC                     send_msg@qptr:
   786                           	opt stack 0
   787  0000BC                     recv_msg@qptr:
   788                           	opt stack 0
   789                           
   790                           ; 2 bytes @ 0x3C
   791  0000BC                     	ds	2
   792  0000BE                     send_msg@length:
   793                           	opt stack 0
   794  0000BE                     recv_msg@maxlength:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x3E
   798  0000BE                     	ds	1
   799  0000BF                     send_msg@msgtype:
   800                           	opt stack 0
   801  0000BF                     recv_msg@msgtype:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0x3F
   805  0000BF                     	ds	1
   806  0000C0                     send_msg@data:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x40
   810  0000C0                     	ds	1
   811  0000C1                     recv_msg@data:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x41
   815  0000C1                     	ds	1
   816  0000C2                     ??_send_msg:
   817                           
   818                           ; 0 bytes @ 0x42
   819  0000C2                     	ds	1
   820  0000C3                     ??_recv_msg:
   821  0000C3                     ToMainLow_sendmsg@msgtype:
   822                           	opt stack 0
   823  0000C3                     FromMainLow_sendmsg@msgtype:
   824                           	opt stack 0
   825                           
   826                           ; 1 bytes @ 0x43
   827  0000C3                     	ds	1
   828  0000C4                     ToMainLow_sendmsg@data:
   829                           	opt stack 0
   830  0000C4                     FromMainLow_sendmsg@data:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x44
   834  0000C4                     	ds	1
   835  0000C5                     ToMainLow_recvmsg@maxlength:
   836                           	opt stack 0
   837  0000C5                     ToMainHigh_recvmsg@maxlength:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x45
   841  0000C5                     	ds	1
   842  0000C6                     tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           postinc0	equ	0xFEE
   847                           wreg	equ	0xFE8
   848                           postdec1	equ	0xFE5
   849                           fsr1l	equ	0xFE1
   850                           
   851                           ; 0 bytes @ 0x46
   852                           
   853                           	psect	cstackCOMRAM
   854  000001                     __pcstackCOMRAM:
   855                           	opt stack 0
   856  000001                     ReadUSART@data:
   857                           	opt stack 0
   858  000001                     i1memcpy@d1:
   859                           	opt stack 0
   860                           
   861                           ; 2 bytes @ 0x0
   862  000001                     	ds	2
   863  000003                     i1memcpy@s1:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x2
   867  000003                     	ds	2
   868  000005                     i1memcpy@n:
   869                           	opt stack 0
   870                           
   871                           ; 2 bytes @ 0x4
   872  000005                     	ds	2
   873  000007                     i1memcpy@d:
   874                           	opt stack 0
   875                           
   876                           ; 2 bytes @ 0x6
   877  000007                     	ds	2
   878  000009                     i1memcpy@s:
   879                           	opt stack 0
   880                           
   881                           ; 2 bytes @ 0x8
   882  000009                     	ds	2
   883  00000B                     i1send_msg@qptr:
   884                           	opt stack 0
   885  00000B                     i1recv_msg@qptr:
   886                           	opt stack 0
   887                           
   888                           ; 2 bytes @ 0xA
   889  00000B                     	ds	2
   890  00000D                     i1send_msg@length:
   891                           	opt stack 0
   892  00000D                     i1recv_msg@maxlength:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0xC
   896  00000D                     	ds	1
   897  00000E                     i1send_msg@msgtype:
   898                           	opt stack 0
   899  00000E                     i1recv_msg@msgtype:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0xD
   903  00000E                     	ds	1
   904  00000F                     i1send_msg@data:
   905                           	opt stack 0
   906                           
   907                           ; 2 bytes @ 0xE
   908  00000F                     	ds	1
   909  000010                     i1recv_msg@data:
   910                           	opt stack 0
   911                           
   912                           ; 2 bytes @ 0xF
   913  000010                     	ds	1
   914  000011                     ??i1_send_msg:
   915                           
   916                           ; 0 bytes @ 0x10
   917  000011                     	ds	1
   918  000012                     ??i1_recv_msg:
   919  000012                     i1send_msg@tlength:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x11
   923  000012                     	ds	2
   924  000014                     i1send_msg@slot:
   925                           	opt stack 0
   926  000014                     i1recv_msg@slot:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x13
   930  000014                     	ds	1
   931  000015                     i1send_msg@qmsg:
   932                           	opt stack 0
   933  000015                     i1recv_msg@tlength:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x14
   937  000015                     	ds	2
   938  000017                     i1ToMainLow_sendmsg@msgtype:
   939                           	opt stack 0
   940  000017                     i1recv_msg@qmsg:
   941                           	opt stack 0
   942                           
   943                           ; 2 bytes @ 0x16
   944  000017                     	ds	1
   945  000018                     i1ToMainLow_sendmsg@data:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0x17
   949  000018                     	ds	1
   950  000019                     FromMainLow_recvmsg@msgtype:
   951                           	opt stack 0
   952                           
   953                           ; 2 bytes @ 0x18
   954  000019                     	ds	1
   955  00001A                     i1ToMainLow_sendmsg@length:
   956                           	opt stack 0
   957                           
   958                           ; 1 bytes @ 0x19
   959  00001A                     	ds	1
   960  00001B                     ??_uart_recv_int_handler:
   961  00001B                     FromMainLow_recvmsg@data:
   962                           	opt stack 0
   963                           
   964                           ; 2 bytes @ 0x1A
   965  00001B                     	ds	2
   966  00001D                     FromMainLow_recvmsg@maxlength:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x1C
   970  00001D                     	ds	1
   971  00001E                     uart_trans_int_handler@data:
   972                           	opt stack 0
   973                           
   974                           ; 2 bytes @ 0x1D
   975  00001E                     	ds	2
   976  000020                     uart_trans_int_handler@msgtype:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0x1F
   980  000020                     	ds	1
   981  000021                     uart_trans_int_handler@curIndex:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x20
   985  000021                     	ds	1
   986  000022                     uart_trans_int_handler@length:
   987                           	opt stack 0
   988                           
   989                           ; 1 bytes @ 0x21
   990  000022                     	ds	1
   991  000023                     ??_InterruptHandlerLow:
   992                           
   993                           ; 0 bytes @ 0x22
   994  000023                     	ds	17
   995                           tblptru	equ	0xFF8
   996                           tblptrh	equ	0xFF7
   997                           tblptrl	equ	0xFF6
   998                           tablat	equ	0xFF5
   999                           postinc0	equ	0xFEE
  1000                           wreg	equ	0xFE8
  1001                           postdec1	equ	0xFE5
  1002                           fsr1l	equ	0xFE1
  1003                           
  1004 ;;
  1005 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1006 ;;
  1007 ;; *************** function _main *****************
  1008 ;; Defined at:
  1009 ;;		line 38 in file "src/main.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;  valuec          1   14[BANK2 ] unsigned char 
  1014 ;;  command         1   13[BANK2 ] unsigned char 
  1015 ;;  ic             28   57[BANK2 ] struct __i2c_comm
  1016 ;;  t1thread_dat   12   45[BANK2 ] struct __timer1_thread_s
  1017 ;;  t0thread_dat   12   33[BANK2 ] struct __timer0_thread_s
  1018 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
  1019 ;;  uthread_data   10   15[BANK2 ] struct __uart_thread_str
  1020 ;;  uc              5   26[BANK2 ] struct __uart_comm
  1021 ;;  length          1   32[BANK2 ] char 
  1022 ;;  msgtype         1   31[BANK2 ] unsigned char 
  1023 ;;  last_reg_rec    1   25[BANK2 ] unsigned char 
  1024 ;;  UARTConfig      1   12[BANK2 ] unsigned char 
  1025 ;;  baud            1   11[BANK2 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;		None               void
  1028 ;; Registers used:
  1029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0       0      85       0
  1037 ;;      Temps:          0       0       2       0       0
  1038 ;;      Totals:         0       0       2      85       0
  1039 ;;Total ram usage:       87 bytes
  1040 ;; Hardware stack levels required when called:   15
  1041 ;; This function calls:
  1042 ;;		_OpenTimer0
  1043 ;;		_OpenTimer1
  1044 ;;		_OpenUSART
  1045 ;;		_ToMainHigh_recvmsg
  1046 ;;		_ToMainLow_recvmsg
  1047 ;;		_block_on_To_msgqueues
  1048 ;;		_enable_interrupts
  1049 ;;		_i2c_configure_slave
  1050 ;;		_init_i2c
  1051 ;;		_init_queues
  1052 ;;		_init_timer0_lthread
  1053 ;;		_init_timer1_lthread
  1054 ;;		_init_uart_lthread
  1055 ;;		_init_uart_recv
  1056 ;;		_move
  1057 ;;		_moveDist
  1058 ;;		_start_i2c_slave_reply
  1059 ;;		_stop
  1060 ;;		_timer0_lthread
  1061 ;;		_timer1_lthread
  1062 ;;		_turn
  1063 ;;		_uart_lthread
  1064 ;; This function is called by:
  1065 ;;		Startup code after reset
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text0
  1070  00063E                     __ptext0:
  1071                           	opt stack 0
  1072  00063E                     _main:
  1073                           	opt stack 16
  1074                           
  1075                           ;main.c: 39: signed char length;
  1076                           ;main.c: 40: unsigned char msgtype;
  1077                           ;main.c: 41: unsigned char last_reg_recvd;
  1078                           ;main.c: 42: unsigned char baud, UARTConfig;
  1079                           ;main.c: 43: uart_comm uc;
  1080                           ;main.c: 44: i2c_comm ic;
  1081                           ;main.c: 45: unsigned char msgbuffer[10 + 1];
  1082                           ;main.c: 46: uart_thread_struct uthread_data;
  1083                           ;main.c: 47: timer1_thread_struct t1thread_data;
  1084                           ;main.c: 48: timer0_thread_struct t0thread_data;
  1085                           ;main.c: 51: PORTA = 0x0;
  1086                           
  1087                           ;incstack = 0
  1088  00063E  0E00               	movlw	0
  1089  000640  6E80               	movwf	3968,c	;volatile
  1090                           
  1091                           ;main.c: 52: LATA = 0x0;
  1092  000642  0E00               	movlw	0
  1093  000644  6E89               	movwf	3977,c	;volatile
  1094                           
  1095                           ;main.c: 53: ADCON1 = 0x0F;
  1096  000646  0E0F               	movlw	15
  1097  000648  6EC1               	movwf	4033,c	;volatile
  1098                           
  1099                           ;main.c: 54: CMCON = 0x07;
  1100  00064A  0E07               	movlw	7
  1101  00064C  6EB4               	movwf	4020,c	;volatile
  1102                           
  1103                           ;main.c: 55: TRISA = 0x00;
  1104  00064E  0E00               	movlw	0
  1105  000650  6E92               	movwf	3986,c	;volatile
  1106                           
  1107                           ;main.c: 58: PORTB = 0x0;
  1108  000652  0E00               	movlw	0
  1109  000654  6E81               	movwf	3969,c	;volatile
  1110                           
  1111                           ;main.c: 59: LATB = 0x0;
  1112  000656  0E00               	movlw	0
  1113  000658  6E8A               	movwf	3978,c	;volatile
  1114                           
  1115                           ;main.c: 60: TRISB = 0xFF;
  1116  00065A  6893               	setf	3987,c	;volatile
  1117                           
  1118                           ;main.c: 62: OSCCON = 0x82;
  1119  00065C  0E82               	movlw	130
  1120  00065E  6ED3               	movwf	4051,c	;volatile
  1121                           
  1122                           ;main.c: 63: OSCTUNEbits.PLLEN = 1;
  1123  000660  8C9B               	bsf	3995,6,c	;volatile
  1124                           
  1125                           ;main.c: 66: init_uart_recv(&uc);
  1126  000662  0102               	movlb	2	; () banked
  1127  000664  0E02               	movlw	high main@uc
  1128  000666  0100               	movlb	0	; () banked
  1129  000668  6FB3               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1130  00066A  0102               	movlb	2	; () banked
  1131  00066C  0E1A               	movlw	low main@uc
  1132  00066E  0100               	movlb	0	; () banked
  1133  000670  6FB2               	movwf	init_uart_recv@uc& (0+255),b
  1134  000672  ECB3  F00F         	call	_init_uart_recv	;wreg free
  1135                           
  1136                           ;main.c: 69: init_i2c(&ic);
  1137  000676  0102               	movlb	2	; () banked
  1138  000678  0E02               	movlw	high main@ic
  1139  00067A  0100               	movlb	0	; () banked
  1140  00067C  6FB3               	movwf	(init_i2c@ic+1)& (0+255),b
  1141  00067E  0102               	movlb	2	; () banked
  1142  000680  0E39               	movlw	low main@ic
  1143  000682  0100               	movlb	0	; () banked
  1144  000684  6FB2               	movwf	init_i2c@ic& (0+255),b
  1145  000686  ECDE  F00B         	call	_init_i2c	;wreg free
  1146                           
  1147                           ;main.c: 72: init_timer1_lthread(&t1thread_data);
  1148  00068A  0102               	movlb	2	; () banked
  1149  00068C  0E02               	movlw	high main@t1thread_data
  1150  00068E  0100               	movlb	0	; () banked
  1151  000690  6FB3               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1152  000692  0102               	movlb	2	; () banked
  1153  000694  0E2D               	movlw	low main@t1thread_data
  1154  000696  0100               	movlb	0	; () banked
  1155  000698  6FB2               	movwf	init_timer1_lthread@tptr& (0+255),b
  1156  00069A  EC81  F00A         	call	_init_timer1_lthread	;wreg free
  1157                           
  1158                           ;main.c: 75: init_timer0_lthread(&t0thread_data);
  1159  00069E  0102               	movlb	2	; () banked
  1160  0006A0  0E02               	movlw	high main@t0thread_data
  1161  0006A2  0100               	movlb	0	; () banked
  1162  0006A4  6FB3               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
  1163  0006A6  0102               	movlb	2	; () banked
  1164  0006A8  0E21               	movlw	low main@t0thread_data
  1165  0006AA  0100               	movlb	0	; () banked
  1166  0006AC  6FB2               	movwf	init_timer0_lthread@tptr& (0+255),b
  1167  0006AE  ECA8  F008         	call	_init_timer0_lthread	;wreg free
  1168                           
  1169                           ;main.c: 78: init_uart_lthread(&uthread_data);
  1170  0006B2  0102               	movlb	2	; () banked
  1171  0006B4  0E02               	movlw	high main@uthread_data
  1172  0006B6  0100               	movlb	0	; () banked
  1173  0006B8  6FB3               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1174  0006BA  0102               	movlb	2	; () banked
  1175  0006BC  0E0F               	movlw	low main@uthread_data
  1176  0006BE  0100               	movlb	0	; () banked
  1177  0006C0  6FB2               	movwf	init_uart_lthread@uptr& (0+255),b
  1178  0006C2  EC04  F010         	call	_init_uart_lthread	;wreg free
  1179                           
  1180                           ;main.c: 81: init_queues();
  1181  0006C6  EC29  F00D         	call	_init_queues	;wreg free
  1182                           
  1183                           ;main.c: 85: OpenTimer0(0b11111111 & 0b10111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1184  0006CA  0EAF               	movlw	175
  1185  0006CC  EC7B  F00F         	call	_OpenTimer0
  1186                           
  1187                           ;main.c: 86: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111);
  1188  0006D0  0EC7               	movlw	199
  1189  0006D2  ECDB  F00E         	call	_OpenTimer1
  1190                           
  1191                           ;main.c: 87: T0CONbits.TMR0ON = 0;;
  1192  0006D6  9ED5               	bcf	4053,7,c	;volatile
  1193                           
  1194                           ;main.c: 88: T1CONbits.TMR1ON = 0;;
  1195  0006D8  90CD               	bcf	4045,0,c	;volatile
  1196                           
  1197                           ;main.c: 91: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11101111
      +                          ;
  1198  0006DA  0EEC               	movlw	236
  1199  0006DC  0102               	movlb	2	; () banked
  1200  0006DE  6F0C               	movwf	main@UARTConfig& (0+255),b
  1201                           
  1202                           ; BSR set to: 2
  1203                           ;main.c: 92: baud = 77;
  1204  0006E0  0E4D               	movlw	77
  1205  0006E2  0102               	movlb	2	; () banked
  1206  0006E4  6F0B               	movwf	main@baud& (0+255),b
  1207                           
  1208                           ; BSR set to: 2
  1209                           ;main.c: 93: OpenUSART(UARTConfig,baud);
  1210  0006E6  0102               	movlb	2	; () banked
  1211  0006E8  0100               	movlb	0	; () banked
  1212  0006EA  C20B  F0B2         	movff	main@baud,OpenUSART@spbrg
  1213  0006EE  0100               	movlb	0	; () banked
  1214  0006F0  6BB3               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1215  0006F2  0102               	movlb	2	; () banked
  1216  0006F4  510C               	movf	main@UARTConfig& (0+255),w,b
  1217  0006F6  EC63  F00B         	call	_OpenUSART
  1218                           
  1219                           ;main.c: 98: IPR1bits.TMR1IP = 0;
  1220  0006FA  909F               	bcf	3999,0,c	;volatile
  1221                           
  1222                           ;main.c: 100: IPR1bits.RCIP = 0;
  1223  0006FC  9A9F               	bcf	3999,5,c	;volatile
  1224                           
  1225                           ;main.c: 102: IPR1bits.TXIP = 0;
  1226  0006FE  989F               	bcf	3999,4,c	;volatile
  1227                           
  1228                           ;main.c: 104: IPR1bits.SSPIP = 1;
  1229  000700  869F               	bsf	3999,3,c	;volatile
  1230                           
  1231                           ;main.c: 107: i2c_configure_slave(0x9A);
  1232  000702  0E9A               	movlw	154
  1233  000704  EC67  F00F         	call	_i2c_configure_slave
  1234                           
  1235                           ;main.c: 110: PIE1bits.SSPIE = 1;
  1236  000708  869D               	bsf	3997,3,c	;volatile
  1237                           
  1238                           ;main.c: 114: enable_interrupts();
  1239  00070A  ECFD  F00F         	call	_enable_interrupts	;wreg free
  1240                           
  1241                           ;main.c: 116: moveDist(&t1thread_data, 25);
  1242  00070E  0102               	movlb	2	; () banked
  1243  000710  0E02               	movlw	high main@t1thread_data
  1244  000712  0101               	movlb	1	; () banked
  1245  000714  6FAD               	movwf	(moveDist@tptr+1)& (0+255),b
  1246  000716  0102               	movlb	2	; () banked
  1247  000718  0E2D               	movlw	low main@t1thread_data
  1248  00071A  0101               	movlb	1	; () banked
  1249  00071C  6FAC               	movwf	moveDist@tptr& (0+255),b
  1250  00071E  0E00               	movlw	0
  1251  000720  0101               	movlb	1	; () banked
  1252  000722  6FAF               	movwf	(moveDist@dist+1)& (0+255),b
  1253  000724  0E19               	movlw	25
  1254  000726  0101               	movlb	1	; () banked
  1255  000728  6FAE               	movwf	moveDist@dist& (0+255),b
  1256  00072A  ECD2  F009         	call	_moveDist	;wreg free
  1257  00072E                     l4216:
  1258                           
  1259                           ;main.c: 158: block_on_To_msgqueues();
  1260  00072E  ECA2  F00C         	call	_block_on_To_msgqueues	;wreg free
  1261                           
  1262                           ;main.c: 161: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1263  000732  0102               	movlb	2	; () banked
  1264  000734  0E02               	movlw	high main@msgtype
  1265  000736  0101               	movlb	1	; () banked
  1266  000738  6FA8               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1267  00073A  0102               	movlb	2	; () banked
  1268  00073C  0E1F               	movlw	low main@msgtype
  1269  00073E  0101               	movlb	1	; () banked
  1270  000740  6FA7               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1271  000742  0102               	movlb	2	; () banked
  1272  000744  0E02               	movlw	high main@msgbuffer
  1273  000746  0101               	movlb	1	; () banked
  1274  000748  6FAA               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1275  00074A  0102               	movlb	2	; () banked
  1276  00074C  0E00               	movlw	low main@msgbuffer
  1277  00074E  0101               	movlb	1	; () banked
  1278  000750  6FA9               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1279  000752  0E0A               	movlw	10
  1280  000754  EC4D  F00E         	call	_ToMainHigh_recvmsg
  1281  000758  0102               	movlb	2	; () banked
  1282  00075A  6F20               	movwf	main@length& (0+255),b
  1283                           
  1284                           ; BSR set to: 2
  1285                           ;main.c: 162: if (length < 0) {
  1286  00075C  0102               	movlb	2	; () banked
  1287  00075E  BF20               	btfsc	main@length& (0+255),7,b
  1288  000760  D0A9               	goto	l4254
  1289  000762  D09A               	goto	l4252
  1290  000764                     l4222:
  1291                           
  1292                           ; BSR set to: 2
  1293                           ;main.c: 170: {
  1294                           ;main.c: 171: timer0_lthread(&t0thread_data);
  1295  000764  0102               	movlb	2	; () banked
  1296  000766  0E02               	movlw	high main@t0thread_data
  1297  000768  0101               	movlb	1	; () banked
  1298  00076A  6FAD               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1299  00076C  0102               	movlb	2	; () banked
  1300  00076E  0E21               	movlw	low main@t0thread_data
  1301  000770  0101               	movlb	1	; () banked
  1302  000772  6FAC               	movwf	timer0_lthread@tptr& (0+255),b
  1303  000774  ECC8  F005         	call	_timer0_lthread	;wreg free
  1304                           
  1305                           ;main.c: 172: break;
  1306  000778  D09D               	goto	l4254
  1307  00077A                     l142:
  1308                           
  1309                           ; BSR set to: 2
  1310                           ;main.c: 175: {
  1311                           ;main.c: 176: last_reg_recvd = msgbuffer[0];
  1312  00077A  C200  F219         	movff	main@msgbuffer,main@last_reg_recvd
  1313                           
  1314                           ; BSR set to: 2
  1315                           ;main.c: 177: unsigned char command = (last_reg_recvd&192)>>6;
  1316  00077E  0102               	movlb	2	; () banked
  1317  000780  4519               	rlncf	main@last_reg_recvd& (0+255),w,b
  1318  000782  46E8               	rlncf	wreg,f,c
  1319  000784  0B03               	andlw	3
  1320  000786  0B03               	andlw	3
  1321  000788  0102               	movlb	2	; () banked
  1322  00078A  6F0D               	movwf	main@command& (0+255),b
  1323                           
  1324                           ;main.c: 178: unsigned char valuec = last_reg_recvd&63;
  1325  00078C  0102               	movlb	2	; () banked
  1326  00078E  5119               	movf	main@last_reg_recvd& (0+255),w,b
  1327  000790  0B3F               	andlw	63
  1328  000792  0102               	movlb	2	; () banked
  1329  000794  6F0E               	movwf	main@valuec& (0+255),b
  1330                           
  1331                           ;main.c: 179: switch(command){
  1332  000796  D040               	goto	l4236
  1333  000798                     l4226:
  1334                           
  1335                           ; BSR set to: 2
  1336                           ;main.c: 181: {
  1337                           ;main.c: 182: stop(&t1thread_data);
  1338  000798  0102               	movlb	2	; () banked
  1339  00079A  0E02               	movlw	high main@t1thread_data
  1340  00079C  0101               	movlb	1	; () banked
  1341  00079E  6FAD               	movwf	(stop@tptr+1)& (0+255),b
  1342  0007A0  0102               	movlb	2	; () banked
  1343  0007A2  0E2D               	movlw	low main@t1thread_data
  1344  0007A4  0101               	movlb	1	; () banked
  1345  0007A6  6FAC               	movwf	stop@tptr& (0+255),b
  1346  0007A8  ECD0  F00C         	call	_stop	;wreg free
  1347                           
  1348                           ;main.c: 183: break;
  1349  0007AC  D083               	goto	l4254
  1350  0007AE                     l4228:
  1351                           
  1352                           ;main.c: 186: {
  1353                           ;main.c: 187: move(&t1thread_data);
  1354  0007AE  0102               	movlb	2	; () banked
  1355  0007B0  0E02               	movlw	high main@t1thread_data
  1356  0007B2  0101               	movlb	1	; () banked
  1357  0007B4  6FAD               	movwf	(move@tptr+1)& (0+255),b
  1358  0007B6  0102               	movlb	2	; () banked
  1359  0007B8  0E2D               	movlw	low main@t1thread_data
  1360  0007BA  0101               	movlb	1	; () banked
  1361  0007BC  6FAC               	movwf	move@tptr& (0+255),b
  1362  0007BE  ECA4  F00B         	call	_move	;wreg free
  1363                           
  1364                           ;main.c: 188: break;
  1365  0007C2  D078               	goto	l4254
  1366  0007C4                     l4230:
  1367                           
  1368                           ;main.c: 191: {
  1369                           ;main.c: 192: turn(&t0thread_data, -valuec);
  1370  0007C4  0102               	movlb	2	; () banked
  1371  0007C6  0E02               	movlw	high main@t0thread_data
  1372  0007C8  0101               	movlb	1	; () banked
  1373  0007CA  6FAD               	movwf	(turn@tptr+1)& (0+255),b
  1374  0007CC  0102               	movlb	2	; () banked
  1375  0007CE  0E21               	movlw	low main@t0thread_data
  1376  0007D0  0101               	movlb	1	; () banked
  1377  0007D2  6FAC               	movwf	turn@tptr& (0+255),b
  1378  0007D4  0102               	movlb	2	; () banked
  1379  0007D6  510E               	movf	main@valuec& (0+255),w,b
  1380  0007D8  0101               	movlb	1	; () banked
  1381  0007DA  6FB7               	movwf	??_main& (0+255),b
  1382  0007DC  6BB8               	clrf	(??_main+1)& (0+255),b
  1383  0007DE  0101               	movlb	1	; () banked
  1384  0007E0  1FB7               	comf	??_main& (0+255),f,b
  1385  0007E2  1FB8               	comf	(??_main+1)& (0+255),f,b
  1386  0007E4  4BB7               	infsnz	??_main& (0+255),f,b
  1387  0007E6  2BB8               	incf	(??_main+1)& (0+255),f,b
  1388  0007E8  C1B7  F1AE         	movff	??_main,turn@angle
  1389  0007EC  C1B8  F1AF         	movff	??_main+1,turn@angle+1
  1390  0007F0  ECD4  F006         	call	_turn	;wreg free
  1391                           
  1392                           ;main.c: 193: break;
  1393  0007F4  D05F               	goto	l4254
  1394  0007F6                     l4232:
  1395                           
  1396                           ;main.c: 196: {
  1397                           ;main.c: 197: turn(&t0thread_data, valuec);
  1398  0007F6  0102               	movlb	2	; () banked
  1399  0007F8  0E02               	movlw	high main@t0thread_data
  1400  0007FA  0101               	movlb	1	; () banked
  1401  0007FC  6FAD               	movwf	(turn@tptr+1)& (0+255),b
  1402  0007FE  0102               	movlb	2	; () banked
  1403  000800  0E21               	movlw	low main@t0thread_data
  1404  000802  0101               	movlb	1	; () banked
  1405  000804  6FAC               	movwf	turn@tptr& (0+255),b
  1406  000806  0102               	movlb	2	; () banked
  1407  000808  0101               	movlb	1	; () banked
  1408  00080A  C20E  F1AE         	movff	main@valuec,turn@angle
  1409  00080E  0101               	movlb	1	; () banked
  1410  000810  6BAF               	clrf	(turn@angle+1)& (0+255),b
  1411  000812  ECD4  F006         	call	_turn	;wreg free
  1412                           
  1413                           ;main.c: 198: break;
  1414  000816  D04E               	goto	l4254
  1415  000818                     l4236:
  1416  000818  0102               	movlb	2	; () banked
  1417  00081A  510D               	movf	main@command& (0+255),w,b
  1418                           
  1419                           ; Switch size 1, requested type "space"
  1420                           ; Number of cases is 4, Range of values is 0 to 3
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte           13     7 (average)
  1424                           ;	Chosen strategy is simple_byte
  1425  00081C  0A00               	xorlw	0	; case 0
  1426  00081E  B4D8               	btfsc	status,2,c
  1427  000820  D7BB               	goto	l4226
  1428  000822  0A01               	xorlw	1	; case 1
  1429  000824  B4D8               	btfsc	status,2,c
  1430  000826  D7C3               	goto	l4228
  1431  000828  0A03               	xorlw	3	; case 2
  1432  00082A  B4D8               	btfsc	status,2,c
  1433  00082C  D7CB               	goto	l4230
  1434  00082E  0A01               	xorlw	1	; case 3
  1435  000830  B4D8               	btfsc	status,2,c
  1436  000832  D7E1               	goto	l4232
  1437  000834  D03F               	goto	l4254
  1438  000836                     l149:
  1439                           
  1440                           ; BSR set to: 2
  1441                           ;main.c: 204: {
  1442                           ;main.c: 207: last_reg_recvd = msgbuffer[0];
  1443  000836  C200  F219         	movff	main@msgbuffer,main@last_reg_recvd
  1444                           
  1445                           ;main.c: 208: break;
  1446  00083A  D03C               	goto	l4254
  1447  00083C                     l4238:
  1448                           
  1449                           ; BSR set to: 2
  1450                           ;main.c: 221: {
  1451                           ;main.c: 222: length = 2;
  1452  00083C  0E02               	movlw	2
  1453  00083E  0102               	movlb	2	; () banked
  1454  000840  6F20               	movwf	main@length& (0+255),b
  1455                           
  1456                           ;main.c: 223: msgbuffer[0] = 0x55;
  1457  000842  0E55               	movlw	85
  1458  000844  0102               	movlb	2	; () banked
  1459  000846  6F00               	movwf	main@msgbuffer& (0+255),b
  1460                           
  1461                           ;main.c: 224: msgbuffer[1] = 0xAA;
  1462  000848  0EAA               	movlw	170
  1463  00084A  0102               	movlb	2	; () banked
  1464  00084C  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1465                           
  1466                           ;main.c: 225: break;
  1467  00084E  D017               	goto	l4248
  1468  000850                     l4240:
  1469                           
  1470                           ; BSR set to: 2
  1471                           ;main.c: 228: {
  1472                           ;main.c: 229: length = 1;
  1473  000850  0E01               	movlw	1
  1474  000852  0102               	movlb	2	; () banked
  1475  000854  6F20               	movwf	main@length& (0+255),b
  1476                           
  1477                           ;main.c: 230: msgbuffer[0] = 0x3A;
  1478  000856  0E3A               	movlw	58
  1479  000858  D004               	goto	L1
  1480  00085A                     l4242:
  1481                           
  1482                           ; BSR set to: 2
  1483                           ;main.c: 234: {
  1484                           ;main.c: 235: length = 1;
  1485  00085A  0E01               	movlw	1
  1486  00085C  0102               	movlb	2	; () banked
  1487  00085E  6F20               	movwf	main@length& (0+255),b
  1488                           
  1489                           ;main.c: 236: msgbuffer[0] = 0xA3;
  1490  000860  0EA3               	movlw	163
  1491  000862                     L1:
  1492  000862  0102               	movlb	2	; () banked
  1493  000864  6F00               	movwf	main@msgbuffer& (0+255),b
  1494                           
  1495                           ;main.c: 237: break;
  1496  000866  D00B               	goto	l4248
  1497  000868                     l4246:
  1498                           
  1499                           ; BSR set to: 2
  1500  000868  0102               	movlb	2	; () banked
  1501  00086A  5119               	movf	main@last_reg_recvd& (0+255),w,b
  1502                           
  1503                           ; Switch size 1, requested type "space"
  1504                           ; Number of cases is 3, Range of values is 168 to 170
  1505                           ; switch strategies available:
  1506                           ; Name         Instructions Cycles
  1507                           ; simple_byte           10     6 (average)
  1508                           ;	Chosen strategy is simple_byte
  1509  00086C  0AA8               	xorlw	168	; case 168
  1510  00086E  B4D8               	btfsc	status,2,c
  1511  000870  D7EF               	goto	l4240
  1512  000872  0A01               	xorlw	1	; case 169
  1513  000874  B4D8               	btfsc	status,2,c
  1514  000876  D7F1               	goto	l4242
  1515  000878  0A03               	xorlw	3	; case 170
  1516  00087A  B4D8               	btfsc	status,2,c
  1517  00087C  D7DF               	goto	l4238
  1518  00087E                     l4248:
  1519                           
  1520                           ; BSR set to: 2
  1521                           ;main.c: 240: start_i2c_slave_reply(length, msgbuffer);
  1522  00087E  0102               	movlb	2	; () banked
  1523  000880  0E02               	movlw	high main@msgbuffer
  1524  000882  0100               	movlb	0	; () banked
  1525  000884  6FB3               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1526  000886  0102               	movlb	2	; () banked
  1527  000888  0E00               	movlw	low main@msgbuffer
  1528  00088A  0100               	movlb	0	; () banked
  1529  00088C  6FB2               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1530  00088E  0102               	movlb	2	; () banked
  1531  000890  5120               	movf	main@length& (0+255),w,b
  1532  000892  EC52  F006         	call	_start_i2c_slave_reply
  1533                           
  1534                           ;main.c: 241: break;
  1535  000896  D00E               	goto	l4254
  1536  000898                     l4252:
  1537  000898  0102               	movlb	2	; () banked
  1538  00089A  511F               	movf	main@msgtype& (0+255),w,b
  1539                           
  1540                           ; Switch size 1, requested type "space"
  1541                           ; Number of cases is 4, Range of values is 10 to 42
  1542                           ; switch strategies available:
  1543                           ; Name         Instructions Cycles
  1544                           ; simple_byte           13     7 (average)
  1545                           ;	Chosen strategy is simple_byte
  1546  00089C  0A0A               	xorlw	10	; case 10
  1547  00089E  B4D8               	btfsc	status,2,c
  1548  0008A0  D761               	goto	l4222
  1549  0008A2  0A22               	xorlw	34	; case 40
  1550  0008A4  B4D8               	btfsc	status,2,c
  1551  0008A6  D769               	goto	l142
  1552  0008A8  0A01               	xorlw	1	; case 41
  1553  0008AA  B4D8               	btfsc	status,2,c
  1554  0008AC  D7C4               	goto	l149
  1555  0008AE  0A03               	xorlw	3	; case 42
  1556  0008B0  B4D8               	btfsc	status,2,c
  1557  0008B2  D7DA               	goto	l4246
  1558  0008B4                     l4254:
  1559                           
  1560                           ;main.c: 249: }
  1561                           ;main.c: 253: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1562  0008B4  0102               	movlb	2	; () banked
  1563  0008B6  0E02               	movlw	high main@msgtype
  1564  0008B8  0101               	movlb	1	; () banked
  1565  0008BA  6FA8               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1566  0008BC  0102               	movlb	2	; () banked
  1567  0008BE  0E1F               	movlw	low main@msgtype
  1568  0008C0  0101               	movlb	1	; () banked
  1569  0008C2  6FA7               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1570  0008C4  0102               	movlb	2	; () banked
  1571  0008C6  0E02               	movlw	high main@msgbuffer
  1572  0008C8  0101               	movlb	1	; () banked
  1573  0008CA  6FAA               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1574  0008CC  0102               	movlb	2	; () banked
  1575  0008CE  0E00               	movlw	low main@msgbuffer
  1576  0008D0  0101               	movlb	1	; () banked
  1577  0008D2  6FA9               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1578  0008D4  0E0A               	movlw	10
  1579  0008D6  EC2E  F00E         	call	_ToMainLow_recvmsg
  1580  0008DA  0102               	movlb	2	; () banked
  1581  0008DC  6F20               	movwf	main@length& (0+255),b
  1582                           
  1583                           ; BSR set to: 2
  1584                           ;main.c: 254: if (length < 0) {
  1585  0008DE  0102               	movlb	2	; () banked
  1586  0008E0  BF20               	btfsc	main@length& (0+255),7,b
  1587  0008E2  D725               	goto	l4216
  1588  0008E4  D02D               	goto	l4266
  1589  0008E6                     l4260:
  1590                           
  1591                           ; BSR set to: 2
  1592                           ;main.c: 262: {
  1593                           ;main.c: 263: timer1_lthread(&t1thread_data);
  1594  0008E6  0102               	movlb	2	; () banked
  1595  0008E8  0E02               	movlw	high main@t1thread_data
  1596  0008EA  0101               	movlb	1	; () banked
  1597  0008EC  6FAD               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1598  0008EE  0102               	movlb	2	; () banked
  1599  0008F0  0E2D               	movlw	low main@t1thread_data
  1600  0008F2  0101               	movlb	1	; () banked
  1601  0008F4  6FAC               	movwf	timer1_lthread@tptr& (0+255),b
  1602  0008F6  EC3E  F005         	call	_timer1_lthread	;wreg free
  1603                           
  1604                           ;main.c: 264: break;
  1605  0008FA  D719               	goto	l4216
  1606  0008FC                     l4262:
  1607                           
  1608                           ;main.c: 267: case 31:
  1609                           ;main.c: 268: case 32:
  1610                           ;main.c: 269: {
  1611                           ;main.c: 270: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1612  0008FC  0102               	movlb	2	; () banked
  1613  0008FE  0E02               	movlw	high main@uthread_data
  1614  000900  0101               	movlb	1	; () banked
  1615  000902  6FA9               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1616  000904  0102               	movlb	2	; () banked
  1617  000906  0E0F               	movlw	low main@uthread_data
  1618  000908  0101               	movlb	1	; () banked
  1619  00090A  6FA8               	movwf	uart_lthread@uptr& (0+255),b
  1620  00090C  0102               	movlb	2	; () banked
  1621  00090E  0101               	movlb	1	; () banked
  1622  000910  C21F  F1AA         	movff	main@msgtype,uart_lthread@msgtype
  1623  000914  0101               	movlb	1	; () banked
  1624  000916  6BAB               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1625  000918  0102               	movlb	2	; () banked
  1626  00091A  5120               	movf	main@length& (0+255),w,b
  1627  00091C  0101               	movlb	1	; () banked
  1628  00091E  6FAC               	movwf	uart_lthread@length& (0+255),b
  1629  000920  0101               	movlb	1	; () banked
  1630  000922  6BAD               	clrf	(uart_lthread@length+1)& (0+255),b
  1631  000924  0101               	movlb	1	; () banked
  1632  000926  BFAC               	btfsc	uart_lthread@length& (0+255),7,b
  1633  000928  07AD               	decf	(uart_lthread@length+1)& (0+255),f,b
  1634  00092A  0102               	movlb	2	; () banked
  1635  00092C  0E02               	movlw	high main@msgbuffer
  1636  00092E  0101               	movlb	1	; () banked
  1637  000930  6FAF               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1638  000932  0102               	movlb	2	; () banked
  1639  000934  0E00               	movlw	low main@msgbuffer
  1640  000936  0101               	movlb	1	; () banked
  1641  000938  6FAE               	movwf	uart_lthread@msgbuffer& (0+255),b
  1642  00093A  EC72  F009         	call	_uart_lthread	;wreg free
  1643                           
  1644                           ;main.c: 271: break;
  1645  00093E  D6F7               	goto	l4216
  1646  000940                     l4266:
  1647  000940  0102               	movlb	2	; () banked
  1648  000942  511F               	movf	main@msgtype& (0+255),w,b
  1649                           
  1650                           ; Switch size 1, requested type "space"
  1651                           ; Number of cases is 4, Range of values is 11 to 32
  1652                           ; switch strategies available:
  1653                           ; Name         Instructions Cycles
  1654                           ; simple_byte           13     7 (average)
  1655                           ;	Chosen strategy is simple_byte
  1656  000944  0A0B               	xorlw	11	; case 11
  1657  000946  B4D8               	btfsc	status,2,c
  1658  000948  D7CE               	goto	l4260
  1659  00094A  0A15               	xorlw	21	; case 30
  1660  00094C  B4D8               	btfsc	status,2,c
  1661  00094E  D7D6               	goto	l4262
  1662  000950  0A01               	xorlw	1	; case 31
  1663  000952  B4D8               	btfsc	status,2,c
  1664  000954  D7D3               	goto	l4262
  1665  000956  0A3F               	xorlw	63	; case 32
  1666  000958  B4D8               	btfsc	status,2,c
  1667  00095A  D7D0               	goto	l4262
  1668  00095C  D6E8               	goto	l4216
  1669  00095E                     __end_of_main:
  1670                           	opt stack 0
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           postdec1	equ	0xFE5
  1678                           fsr1l	equ	0xFE1
  1679                           status	equ	0xFD8
  1680                           
  1681 ;; *************** function _uart_lthread *****************
  1682 ;; Defined at:
  1683 ;;		line 12 in file "src/uart_thread.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;  uptr            2    6[BANK1 ] PTR struct __uart_thread
  1686 ;;		 -> main@uthread_data(10), 
  1687 ;;  msgtype         2    8[BANK1 ] int 
  1688 ;;  length          2   10[BANK1 ] int 
  1689 ;;  msgbuffer       2   12[BANK1 ] PTR unsigned char 
  1690 ;;		 -> main@msgbuffer(11), 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  index           2   15[BANK1 ] int 
  1693 ;;  status          1   14[BANK1 ] char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  2    6[BANK1 ] int 
  1696 ;; Registers used:
  1697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1703 ;;      Params:         0       0       8       0       0
  1704 ;;      Locals:         0       0       3       0       0
  1705 ;;      Temps:          0       0       0       0       0
  1706 ;;      Totals:         0       0      11       0       0
  1707 ;;Total ram usage:       11 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:   13
  1710 ;; This function calls:
  1711 ;;		_FromMainLow_sendmsg
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text1
  1718  0012E4                     __ptext1:
  1719                           	opt stack 0
  1720  0012E4                     _uart_lthread:
  1721                           	opt stack 17
  1722                           
  1723                           ;uart_thread.c: 13: if (msgtype == 30) {
  1724                           
  1725                           ; BSR set to: 2
  1726                           ;incstack = 0
  1727  0012E4  0101               	movlb	1	; () banked
  1728  0012E6  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1729  0012E8  0A1E               	xorlw	30
  1730  0012EA  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1731  0012EC  B4D8               	btfsc	status,2,c
  1732  0012EE  0012               	return	
  1733                           
  1734                           ; BSR set to: 1
  1735                           ;uart_thread.c: 16: else if(msgtype == 31){
  1736                           
  1737                           ; BSR set to: 1
  1738                           
  1739                           ; BSR set to: 1
  1740                           ;uart_thread.c: 15: }
  1741  0012F0  0101               	movlb	1	; () banked
  1742  0012F2  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1743  0012F4  0A1F               	xorlw	31
  1744  0012F6  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1745  0012F8  A4D8               	btfss	status,2,c
  1746  0012FA  D041               	goto	l4132
  1747                           
  1748                           ; BSR set to: 1
  1749                           ;uart_thread.c: 18: int index = 0;
  1750  0012FC  0E00               	movlw	0
  1751  0012FE  0101               	movlb	1	; () banked
  1752  001300  6FB2               	movwf	(uart_lthread@index+1)& (0+255),b
  1753  001302  0E00               	movlw	0
  1754  001304  0101               	movlb	1	; () banked
  1755  001306  6FB1               	movwf	uart_lthread@index& (0+255),b
  1756                           
  1757                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1758  001308  0E00               	movlw	0
  1759  00130A  0101               	movlb	1	; () banked
  1760  00130C  6FB2               	movwf	(uart_lthread@index+1)& (0+255),b
  1761  00130E  0E00               	movlw	0
  1762  001310  0101               	movlb	1	; () banked
  1763  001312  6FB1               	movwf	uart_lthread@index& (0+255),b
  1764  001314                     
  1765                           ; BSR set to: 1
  1766  001314  0101               	movlb	1	; () banked
  1767  001316  51B2               	movf	(uart_lthread@index+1)& (0+255),w,b
  1768  001318  0A80               	xorlw	128
  1769  00131A  0F80               	addlw	-128
  1770  00131C  0E0A               	movlw	10
  1771  00131E  B4D8               	btfsc	status,2,c
  1772  001320  5DB1               	subwf	uart_lthread@index& (0+255),w,b
  1773  001322  B0D8               	btfsc	status,0,c
  1774  001324  D01A               	goto	l4128
  1775                           
  1776                           ; BSR set to: 1
  1777                           
  1778                           ; BSR set to: 1
  1779                           
  1780                           ; BSR set to: 1
  1781  001326  0101               	movlb	1	; () banked
  1782  001328  51B1               	movf	uart_lthread@index& (0+255),w,b
  1783  00132A  0101               	movlb	1	; () banked
  1784  00132C  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1785  00132E  6ED9               	movwf	fsr2l,c
  1786  001330  0101               	movlb	1	; () banked
  1787  001332  51B2               	movf	(uart_lthread@index+1)& (0+255),w,b
  1788  001334  0101               	movlb	1	; () banked
  1789  001336  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1790  001338  6EDA               	movwf	fsr2h,c
  1791  00133A  0101               	movlb	1	; () banked
  1792  00133C  51B1               	movf	uart_lthread@index& (0+255),w,b
  1793  00133E  0101               	movlb	1	; () banked
  1794  001340  25A8               	addwf	uart_lthread@uptr& (0+255),w,b
  1795  001342  6EE1               	movwf	fsr1l,c
  1796  001344  0101               	movlb	1	; () banked
  1797  001346  51B2               	movf	(uart_lthread@index+1)& (0+255),w,b
  1798  001348  0101               	movlb	1	; () banked
  1799  00134A  21A9               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1800  00134C  6EE2               	movwf	fsr1h,c
  1801  00134E  CFDF FFE7          	movff	indf2,indf1
  1802                           
  1803                           ; BSR set to: 1
  1804  001352  0101               	movlb	1	; () banked
  1805  001354  4BB1               	infsnz	uart_lthread@index& (0+255),f,b
  1806  001356  2BB2               	incf	(uart_lthread@index+1)& (0+255),f,b
  1807  001358  D7DD               	goto	L2
  1808  00135A                     l4128:
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1812  00135A  C1AA  F0C3         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1813  00135E  0101               	movlb	1	; () banked
  1814  001360  0100               	movlb	0	; () banked
  1815  001362  C1A9  F0C5         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1816  001366  0101               	movlb	1	; () banked
  1817  001368  0100               	movlb	0	; () banked
  1818  00136A  C1A8  F0C4         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1819  00136E  0101               	movlb	1	; () banked
  1820  001370  51AC               	movf	uart_lthread@length& (0+255),w,b
  1821  001372  EC0D  F00F         	call	_FromMainLow_sendmsg
  1822  001376  0101               	movlb	1	; () banked
  1823  001378  6FB0               	movwf	uart_lthread@status& (0+255),b
  1824                           
  1825                           ; BSR set to: 1
  1826                           ;uart_thread.c: 25: }
  1827                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1828                           
  1829                           ; BSR set to: 1
  1830  00137A  889D               	bsf	3997,4,c	;volatile
  1831                           
  1832                           ;uart_thread.c: 29: }
  1833  00137C  0012               	return	
  1834  00137E                     l4132:
  1835                           
  1836                           ; BSR set to: 1
  1837                           ;uart_thread.c: 30: else if(msgtype == 32){
  1838  00137E  0101               	movlb	1	; () banked
  1839  001380  51AA               	movf	uart_lthread@msgtype& (0+255),w,b
  1840  001382  0A20               	xorlw	32
  1841  001384  11AB               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1842  001386  A4D8               	btfss	status,2,c
  1843  001388  0012               	return	
  1844                           
  1845                           ; BSR set to: 1
  1846                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1847  00138A  0101               	movlb	1	; () banked
  1848  00138C  51AC               	movf	uart_lthread@length& (0+255),w,b
  1849  00138E  0101               	movlb	1	; () banked
  1850  001390  25AE               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1851  001392  6ED9               	movwf	fsr2l,c
  1852  001394  0101               	movlb	1	; () banked
  1853  001396  51AD               	movf	(uart_lthread@length+1)& (0+255),w,b
  1854  001398  0101               	movlb	1	; () banked
  1855  00139A  21AF               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1856  00139C  6EDA               	movwf	fsr2h,c
  1857  00139E  0E00               	movlw	0
  1858  0013A0  6EDF               	movwf	indf2,c
  1859  0013A2  0012               	return	
  1860  0013A4                     __end_of_uart_lthread:
  1861                           	opt stack 0
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           indf1	equ	0xFE7
  1869                           postdec1	equ	0xFE5
  1870                           fsr1h	equ	0xFE2
  1871                           fsr1l	equ	0xFE1
  1872                           indf2	equ	0xFDF
  1873                           fsr2h	equ	0xFDA
  1874                           fsr2l	equ	0xFD9
  1875                           status	equ	0xFD8
  1876                           
  1877 ;; *************** function _FromMainLow_sendmsg *****************
  1878 ;; Defined at:
  1879 ;;		line 150 in file "src/messages.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  length          1    wreg     unsigned char 
  1882 ;;  msgtype         1   67[BANK0 ] unsigned char 
  1883 ;;  data            2   68[BANK0 ] PTR void 
  1884 ;;		 -> main@uthread_data(10), 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;  length          1    5[BANK1 ] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      char 
  1889 ;; Registers used:
  1890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1896 ;;      Params:         0       3       0       0       0
  1897 ;;      Locals:         0       0       1       0       0
  1898 ;;      Temps:          0       0       0       0       0
  1899 ;;      Totals:         0       3       1       0       0
  1900 ;;Total ram usage:        4 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:   12
  1903 ;; This function calls:
  1904 ;;		_send_msg
  1905 ;; This function is called by:
  1906 ;;		_uart_lthread
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           	psect	text2
  1911  001E1A                     __ptext2:
  1912                           	opt stack 0
  1913  001E1A                     _FromMainLow_sendmsg:
  1914                           	opt stack 17
  1915                           
  1916                           ; BSR set to: 1
  1917                           ;incstack = 0
  1918                           ;FromMainLow_sendmsg@length stored from wreg
  1919  001E1A  0101               	movlb	1	; () banked
  1920  001E1C  6FA7               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1921                           
  1922                           ; BSR set to: 1
  1923                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1924  001E1E  0101               	movlb	1	; () banked
  1925  001E20  0E01               	movlw	high _FromMainLow_MQ
  1926  001E22  0100               	movlb	0	; () banked
  1927  001E24  6FBD               	movwf	(send_msg@qptr+1)& (0+255),b
  1928  001E26  0101               	movlb	1	; () banked
  1929  001E28  0E00               	movlw	low _FromMainLow_MQ
  1930  001E2A  0100               	movlb	0	; () banked
  1931  001E2C  6FBC               	movwf	send_msg@qptr& (0+255),b
  1932  001E2E  C1A7  F0BE         	movff	FromMainLow_sendmsg@length,send_msg@length
  1933  001E32  C0C3  F0BF         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1934  001E36  0100               	movlb	0	; () banked
  1935  001E38  C0C5  F0C1         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1936  001E3C  0100               	movlb	0	; () banked
  1937  001E3E  C0C4  F0C0         	movff	FromMainLow_sendmsg@data,send_msg@data
  1938  001E42  EC52  F007         	call	_send_msg	;wreg free
  1939  001E46  0012               	return	
  1940  001E48                     __end_of_FromMainLow_sendmsg:
  1941                           	opt stack 0
  1942                           tblptru	equ	0xFF8
  1943                           tblptrh	equ	0xFF7
  1944                           tblptrl	equ	0xFF6
  1945                           tablat	equ	0xFF5
  1946                           postinc0	equ	0xFEE
  1947                           wreg	equ	0xFE8
  1948                           indf1	equ	0xFE7
  1949                           postdec1	equ	0xFE5
  1950                           fsr1h	equ	0xFE2
  1951                           fsr1l	equ	0xFE1
  1952                           indf2	equ	0xFDF
  1953                           fsr2h	equ	0xFDA
  1954                           fsr2l	equ	0xFD9
  1955                           status	equ	0xFD8
  1956                           
  1957 ;; *************** function _turn *****************
  1958 ;; Defined at:
  1959 ;;		line 32 in file "src/motors.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  tptr            2   10[BANK1 ] PTR struct __timer0_thre
  1962 ;;		 -> main@t0thread_data(12), 
  1963 ;;  angle           2   12[BANK1 ] int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  test            2   19[BANK1 ] unsigned char [2]
  1966 ;; Return value:  Size  Location     Type
  1967 ;;		None               void
  1968 ;; Registers used:
  1969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1975 ;;      Params:         0       0       4       0       0
  1976 ;;      Locals:         0       0       6       0       0
  1977 ;;      Temps:          0       0       1       0       0
  1978 ;;      Totals:         0       0      11       0       0
  1979 ;;Total ram usage:       11 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:   14
  1982 ;; This function calls:
  1983 ;;		_WriteTimer0
  1984 ;;		_abs
  1985 ;;		_sendUARTarr
  1986 ;; This function is called by:
  1987 ;;		_main
  1988 ;; This function uses a non-reentrant model
  1989 ;;
  1990                           
  1991                           	psect	text3
  1992  000DA8                     __ptext3:
  1993                           	opt stack 0
  1994  000DA8                     _turn:
  1995                           	opt stack 16
  1996                           
  1997                           ;motors.c: 33: PORTA = 0x01;
  1998                           
  1999                           ;incstack = 0
  2000  000DA8  0E01               	movlw	1
  2001  000DAA  6E80               	movwf	3968,c	;volatile
  2002                           
  2003                           ;motors.c: 34: tptr->curMove = abs(angle);
  2004  000DAC  C1AE  F0B2         	movff	turn@angle,abs@a
  2005  000DB0  C1AF  F0B3         	movff	turn@angle+1,abs@a+1
  2006  000DB4  ECCF  F00D         	call	_abs	;wreg free
  2007  000DB8  0101               	movlb	1	; () banked
  2008  000DBA  EE20 F008          	lfsr	2,8
  2009  000DBE  0101               	movlb	1	; () banked
  2010  000DC0  51AC               	movf	turn@tptr& (0+255),w,b
  2011  000DC2  26D9               	addwf	fsr2l,f,c
  2012  000DC4  0101               	movlb	1	; () banked
  2013  000DC6  51AD               	movf	(turn@tptr+1)& (0+255),w,b
  2014  000DC8  22DA               	addwfc	fsr2h,f,c
  2015  000DCA  0100               	movlb	0	; () banked
  2016  000DCC  C0B2  FFDE         	movff	?_abs,postinc2
  2017  000DD0  0100               	movlb	0	; () banked
  2018  000DD2  C0B3  FFDD         	movff	?_abs+1,postdec2
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;motors.c: 35: tptr->distLim = true;
  2022  000DD6  0101               	movlb	1	; () banked
  2023  000DD8  EE20 F00A          	lfsr	2,10
  2024  000DDC  0101               	movlb	1	; () banked
  2025  000DDE  51AC               	movf	turn@tptr& (0+255),w,b
  2026  000DE0  26D9               	addwf	fsr2l,f,c
  2027  000DE2  0101               	movlb	1	; () banked
  2028  000DE4  51AD               	movf	(turn@tptr+1)& (0+255),w,b
  2029  000DE6  22DA               	addwfc	fsr2h,f,c
  2030  000DE8  0E01               	movlw	1
  2031  000DEA  6EDF               	movwf	indf2,c
  2032                           
  2033                           ; BSR set to: 1
  2034                           ;motors.c: 36: T0CONbits.TMR0ON = 1;;
  2035  000DEC  8ED5               	bsf	4053,7,c	;volatile
  2036                           
  2037                           ; BSR set to: 1
  2038                           ;motors.c: 37: unsigned char test[2];
  2039                           ;motors.c: 38: test[0] = (angle < 0) ? tptr->ctrlR[0] : tptr->ctrlL[0];
  2040  000DEE  0101               	movlb	1	; () banked
  2041  000DF0  BFAF               	btfsc	(turn@angle+1)& (0+255),7,b
  2042  000DF2  D004               	goto	l4058
  2043                           
  2044                           ; BSR set to: 1
  2045  000DF4  0101               	movlb	1	; () banked
  2046  000DF6  EE20 F002          	lfsr	2,2
  2047  000DFA  D003               	goto	L3
  2048  000DFC                     l4058:
  2049                           
  2050                           ; BSR set to: 1
  2051  000DFC  0101               	movlb	1	; () banked
  2052  000DFE  EE20 F004          	lfsr	2,4
  2053  000E02                     L3:
  2054  000E02  0101               	movlb	1	; () banked
  2055  000E04  51AC               	movf	turn@tptr& (0+255),w,b
  2056  000E06  26D9               	addwf	fsr2l,f,c
  2057  000E08  0101               	movlb	1	; () banked
  2058  000E0A  51AD               	movf	(turn@tptr+1)& (0+255),w,b
  2059  000E0C  22DA               	addwfc	fsr2h,f,c
  2060  000E0E  50DF               	movf	indf2,w,c
  2061  000E10  0101               	movlb	1	; () banked
  2062  000E12  6FB0               	movwf	??_turn& (0+255),b
  2063  000E14  0101               	movlb	1	; () banked
  2064  000E16  51B0               	movf	??_turn& (0+255),w,b
  2065  000E18  0101               	movlb	1	; () banked
  2066  000E1A  6FB1               	movwf	_turn$995& (0+255),b
  2067  000E1C  0101               	movlb	1	; () banked
  2068  000E1E  6BB2               	clrf	(_turn$995+1)& (0+255),b
  2069                           
  2070                           ; BSR set to: 1
  2071                           
  2072                           ; BSR set to: 1
  2073  000E20  C1B1  F1B5         	movff	_turn$995,turn@test
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;motors.c: 39: test[1] = (angle < 0) ? tptr->ctrlR[1] : tptr->ctrlL[1];
  2077  000E24  0101               	movlb	1	; () banked
  2078  000E26  BFAF               	btfsc	(turn@angle+1)& (0+255),7,b
  2079  000E28  D004               	goto	l4066
  2080                           
  2081                           ; BSR set to: 1
  2082  000E2A  0101               	movlb	1	; () banked
  2083  000E2C  EE20 F003          	lfsr	2,3
  2084  000E30  D003               	goto	L4
  2085  000E32                     l4066:
  2086                           
  2087                           ; BSR set to: 1
  2088  000E32  0101               	movlb	1	; () banked
  2089  000E34  EE20 F005          	lfsr	2,5
  2090  000E38                     L4:
  2091  000E38  0101               	movlb	1	; () banked
  2092  000E3A  51AC               	movf	turn@tptr& (0+255),w,b
  2093  000E3C  26D9               	addwf	fsr2l,f,c
  2094  000E3E  0101               	movlb	1	; () banked
  2095  000E40  51AD               	movf	(turn@tptr+1)& (0+255),w,b
  2096  000E42  22DA               	addwfc	fsr2h,f,c
  2097  000E44  50DF               	movf	indf2,w,c
  2098  000E46  0101               	movlb	1	; () banked
  2099  000E48  6FB0               	movwf	??_turn& (0+255),b
  2100  000E4A  0101               	movlb	1	; () banked
  2101  000E4C  51B0               	movf	??_turn& (0+255),w,b
  2102  000E4E  0101               	movlb	1	; () banked
  2103  000E50  6FB3               	movwf	_turn$996& (0+255),b
  2104  000E52  0101               	movlb	1	; () banked
  2105  000E54  6BB4               	clrf	(_turn$996+1)& (0+255),b
  2106                           
  2107                           ; BSR set to: 1
  2108                           
  2109                           ; BSR set to: 1
  2110  000E56  C1B3  F1B6         	movff	_turn$996,turn@test+1
  2111                           
  2112                           ; BSR set to: 1
  2113                           ;motors.c: 40: sendUARTarr(2,test);
  2114  000E5A  0101               	movlb	1	; () banked
  2115  000E5C  0E01               	movlw	high turn@test
  2116  000E5E  0101               	movlb	1	; () banked
  2117  000E60  6FA9               	movwf	(sendUARTarr@data+1)& (0+255),b
  2118  000E62  0101               	movlb	1	; () banked
  2119  000E64  0EB5               	movlw	low turn@test
  2120  000E66  0101               	movlb	1	; () banked
  2121  000E68  6FA8               	movwf	sendUARTarr@data& (0+255),b
  2122  000E6A  0E02               	movlw	2
  2123  000E6C  ECA9  F00E         	call	_sendUARTarr
  2124                           
  2125                           ;motors.c: 41: WriteTimer0(tptr->cmDist);
  2126  000E70  0101               	movlb	1	; () banked
  2127  000E72  EE20 F006          	lfsr	2,6
  2128  000E76  0101               	movlb	1	; () banked
  2129  000E78  51AC               	movf	turn@tptr& (0+255),w,b
  2130  000E7A  26D9               	addwf	fsr2l,f,c
  2131  000E7C  0101               	movlb	1	; () banked
  2132  000E7E  51AD               	movf	(turn@tptr+1)& (0+255),w,b
  2133  000E80  22DA               	addwfc	fsr2h,f,c
  2134  000E82  0100               	movlb	0	; () banked
  2135  000E84  CFDE F0B2          	movff	postinc2,WriteTimer0@timer0
  2136  000E88  0100               	movlb	0	; () banked
  2137  000E8A  CFDD F0B3          	movff	postdec2,WriteTimer0@timer0+1
  2138  000E8E  ECDB  F00F         	call	_WriteTimer0	;wreg free
  2139                           
  2140                           ;motors.c: 42: tptr->cmCount = 0;
  2141  000E92  C1AC  FFD9         	movff	turn@tptr,fsr2l
  2142  000E96  C1AD  FFDA         	movff	turn@tptr+1,fsr2h
  2143  000E9A  0E00               	movlw	0
  2144  000E9C  6EDE               	movwf	postinc2,c
  2145  000E9E  0E00               	movlw	0
  2146  000EA0  6EDD               	movwf	postdec2,c
  2147  000EA2  0012               	return	
  2148  000EA4                     __end_of_turn:
  2149                           	opt stack 0
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           postinc0	equ	0xFEE
  2155                           wreg	equ	0xFE8
  2156                           indf1	equ	0xFE7
  2157                           postdec1	equ	0xFE5
  2158                           fsr1h	equ	0xFE2
  2159                           fsr1l	equ	0xFE1
  2160                           indf2	equ	0xFDF
  2161                           postinc2	equ	0xFDE
  2162                           postdec2	equ	0xFDD
  2163                           fsr2h	equ	0xFDA
  2164                           fsr2l	equ	0xFD9
  2165                           status	equ	0xFD8
  2166                           
  2167 ;; *************** function _abs *****************
  2168 ;; Defined at:
  2169 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\abs.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  a               2   50[BANK0 ] int 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  2   50[BANK0 ] int 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, prodl
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2183 ;;      Params:         0       2       0       0       0
  2184 ;;      Locals:         0       0       0       0       0
  2185 ;;      Temps:          0       2       0       0       0
  2186 ;;      Totals:         0       4       0       0       0
  2187 ;;Total ram usage:        4 bytes
  2188 ;; Hardware stack levels used:    1
  2189 ;; Hardware stack levels required when called:   10
  2190 ;; This function calls:
  2191 ;;		Nothing
  2192 ;; This function is called by:
  2193 ;;		_turn
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text4
  2198  001B9E                     __ptext4:
  2199                           	opt stack 0
  2200  001B9E                     _abs:
  2201                           	opt stack 19
  2202                           
  2203                           ;incstack = 0
  2204  001B9E  0100               	movlb	0	; () banked
  2205  001BA0  51B3               	movf	(abs@a+1)& (0+255),w,b
  2206  001BA2  0A80               	xorlw	128
  2207  001BA4  6EF3               	movwf	prodl,c
  2208  001BA6  0E80               	movlw	128
  2209  001BA8  5CF3               	subwf	prodl,w,c
  2210  001BAA  0E00               	movlw	0
  2211  001BAC  B4D8               	btfsc	status,2,c
  2212  001BAE  5DB2               	subwf	abs@a& (0+255),w,b
  2213  001BB0  B0D8               	btfsc	status,0,c
  2214  001BB2  D010               	goto	l649
  2215                           
  2216                           ; BSR set to: 0
  2217  001BB4  0100               	movlb	0	; () banked
  2218  001BB6  C0B2  F0B4         	movff	abs@a,??_abs
  2219  001BBA  0100               	movlb	0	; () banked
  2220  001BBC  C0B3  F0B5         	movff	abs@a+1,??_abs+1
  2221  001BC0  0100               	movlb	0	; () banked
  2222  001BC2  1FB4               	comf	??_abs& (0+255),f,b
  2223  001BC4  1FB5               	comf	(??_abs+1)& (0+255),f,b
  2224  001BC6  4BB4               	infsnz	??_abs& (0+255),f,b
  2225  001BC8  2BB5               	incf	(??_abs+1)& (0+255),f,b
  2226  001BCA  C0B4  F0B2         	movff	??_abs,?_abs
  2227  001BCE  C0B5  F0B3         	movff	??_abs+1,?_abs+1
  2228  001BD2  0012               	return	
  2229  001BD4                     l649:
  2230                           
  2231                           ; BSR set to: 0
  2232  001BD4  C0B2  F0B2         	movff	abs@a,?_abs
  2233  001BD8  C0B3  F0B3         	movff	abs@a+1,?_abs+1
  2234                           
  2235                           ; BSR set to: 0
  2236  001BDC  0012               	return	
  2237  001BDE                     __end_of_abs:
  2238                           	opt stack 0
  2239                           tblptru	equ	0xFF8
  2240                           tblptrh	equ	0xFF7
  2241                           tblptrl	equ	0xFF6
  2242                           tablat	equ	0xFF5
  2243                           prodl	equ	0xFF3
  2244                           postinc0	equ	0xFEE
  2245                           wreg	equ	0xFE8
  2246                           indf1	equ	0xFE7
  2247                           postdec1	equ	0xFE5
  2248                           fsr1h	equ	0xFE2
  2249                           fsr1l	equ	0xFE1
  2250                           indf2	equ	0xFDF
  2251                           postinc2	equ	0xFDE
  2252                           postdec2	equ	0xFDD
  2253                           fsr2h	equ	0xFDA
  2254                           fsr2l	equ	0xFD9
  2255                           status	equ	0xFD8
  2256                           
  2257 ;; *************** function _timer1_lthread *****************
  2258 ;; Defined at:
  2259 ;;		line 16 in file "src/timer1_thread.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  tptr            2   10[BANK1 ] PTR struct __timer1_thre
  2262 ;;		 -> main@t1thread_data(12), 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  temp            2   16[BANK1 ] unsigned char [2]
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  2   10[BANK1 ] int 
  2267 ;; Registers used:
  2268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2274 ;;      Params:         0       0       2       0       0
  2275 ;;      Locals:         0       0       2       0       0
  2276 ;;      Temps:          0       0       4       0       0
  2277 ;;      Totals:         0       0       8       0       0
  2278 ;;Total ram usage:        8 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:   14
  2281 ;; This function calls:
  2282 ;;		_WriteTimer1
  2283 ;;		___lwmod
  2284 ;;		_sendUARTarr
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text5
  2291  000A7C                     __ptext5:
  2292                           	opt stack 0
  2293  000A7C                     _timer1_lthread:
  2294                           	opt stack 16
  2295                           
  2296                           ;timer1_thread.c: 17: tptr->cmCount++;
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;incstack = 0
  2300  000A7C  C1AC  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2301  000A80  C1AD  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2302  000A84  2ADE               	incf	postinc2,f,c
  2303  000A86  0E00               	movlw	0
  2304  000A88  22DD               	addwfc	postdec2,f,c
  2305                           
  2306                           ;timer1_thread.c: 19: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  2307  000A8A  0101               	movlb	1	; () banked
  2308  000A8C  EE20 F00A          	lfsr	2,10
  2309  000A90  0101               	movlb	1	; () banked
  2310  000A92  51AC               	movf	timer1_lthread@tptr& (0+255),w,b
  2311  000A94  26D9               	addwf	fsr2l,f,c
  2312  000A96  0101               	movlb	1	; () banked
  2313  000A98  51AD               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2314  000A9A  22DA               	addwfc	fsr2h,f,c
  2315  000A9C  50DF               	movf	indf2,w,c
  2316  000A9E  B4D8               	btfsc	status,2,c
  2317  000AA0  D065               	goto	l4108
  2318                           
  2319                           ; BSR set to: 1
  2320  000AA2  C1AC  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2321  000AA6  C1AD  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2322  000AAA  0100               	movlb	0	; () banked
  2323  000AAC  CFDE F0B2          	movff	postinc2,___lwmod@dividend
  2324  000AB0  0100               	movlb	0	; () banked
  2325  000AB2  CFDD F0B3          	movff	postdec2,___lwmod@dividend+1
  2326  000AB6  0101               	movlb	1	; () banked
  2327  000AB8  EE20 F006          	lfsr	2,6
  2328  000ABC  0101               	movlb	1	; () banked
  2329  000ABE  51AC               	movf	timer1_lthread@tptr& (0+255),w,b
  2330  000AC0  26D9               	addwf	fsr2l,f,c
  2331  000AC2  0101               	movlb	1	; () banked
  2332  000AC4  51AD               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2333  000AC6  22DA               	addwfc	fsr2h,f,c
  2334  000AC8  0100               	movlb	0	; () banked
  2335  000ACA  CFDE F0B4          	movff	postinc2,___lwmod@divisor
  2336  000ACE  0100               	movlb	0	; () banked
  2337  000AD0  CFDD F0B5          	movff	postdec2,___lwmod@divisor+1
  2338  000AD4  EC43  F00C         	call	___lwmod	;wreg free
  2339  000AD8  0EFF               	movlw	255
  2340  000ADA  0101               	movlb	1	; () banked
  2341  000ADC  6FAE               	movwf	??_timer1_lthread& (0+255),b
  2342  000ADE  0EFF               	movlw	255
  2343  000AE0  6FAF               	movwf	(??_timer1_lthread+1)& (0+255),b
  2344  000AE2  0101               	movlb	1	; () banked
  2345  000AE4  EE20 F006          	lfsr	2,6
  2346  000AE8  0101               	movlb	1	; () banked
  2347  000AEA  51AC               	movf	timer1_lthread@tptr& (0+255),w,b
  2348  000AEC  26D9               	addwf	fsr2l,f,c
  2349  000AEE  0101               	movlb	1	; () banked
  2350  000AF0  51AD               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2351  000AF2  22DA               	addwfc	fsr2h,f,c
  2352  000AF4  CFDE F1B0          	movff	postinc2,??_timer1_lthread+2
  2353  000AF8  CFDD F1B1          	movff	postdec2,??_timer1_lthread+3
  2354  000AFC  0101               	movlb	1	; () banked
  2355  000AFE  51AE               	movf	??_timer1_lthread& (0+255),w,b
  2356  000B00  0101               	movlb	1	; () banked
  2357  000B02  27B0               	addwf	(??_timer1_lthread+2)& (0+255),f,b
  2358  000B04  0101               	movlb	1	; () banked
  2359  000B06  51AF               	movf	(??_timer1_lthread+1)& (0+255),w,b
  2360  000B08  0101               	movlb	1	; () banked
  2361  000B0A  23B1               	addwfc	(??_timer1_lthread+3)& (0+255),f,b
  2362  000B0C  0100               	movlb	0	; () banked
  2363  000B0E  51B3               	movf	(?___lwmod+1)& (0+255),w,b
  2364  000B10  0101               	movlb	1	; () banked
  2365  000B12  19B1               	xorwf	(??_timer1_lthread+3)& (0+255),w,b
  2366  000B14  E104               	bnz	u2975
  2367  000B16  0100               	movlb	0	; () banked
  2368  000B18  51B2               	movf	?___lwmod& (0+255),w,b
  2369  000B1A  0101               	movlb	1	; () banked
  2370  000B1C  19B0               	xorwf	(??_timer1_lthread+2)& (0+255),w,b
  2371  000B1E                     u2975:
  2372  000B1E  A4D8               	btfss	status,2,c
  2373  000B20  D025               	goto	l4108
  2374                           
  2375                           ; BSR set to: 1
  2376                           ;timer1_thread.c: 20: unsigned char temp[2] = {0,0};
  2377  000B22  C0CA  F1B2         	movff	timer1_lthread@F5087,timer1_lthread@temp
  2378  000B26  C0CB  F1B3         	movff	timer1_lthread@F5087+1,timer1_lthread@temp+1
  2379                           
  2380                           ; BSR set to: 1
  2381                           ;timer1_thread.c: 21: sendUARTarr(2,temp);
  2382  000B2A  0101               	movlb	1	; () banked
  2383  000B2C  0E01               	movlw	high timer1_lthread@temp
  2384  000B2E  0101               	movlb	1	; () banked
  2385  000B30  6FA9               	movwf	(sendUARTarr@data+1)& (0+255),b
  2386  000B32  0101               	movlb	1	; () banked
  2387  000B34  0EB2               	movlw	low timer1_lthread@temp
  2388  000B36  0101               	movlb	1	; () banked
  2389  000B38  6FA8               	movwf	sendUARTarr@data& (0+255),b
  2390  000B3A  0E02               	movlw	2
  2391  000B3C  ECA9  F00E         	call	_sendUARTarr
  2392                           
  2393                           ;timer1_thread.c: 22: T1CONbits.TMR1ON = 0;;
  2394  000B40  90CD               	bcf	4045,0,c	;volatile
  2395                           
  2396                           ;timer1_thread.c: 23: PORTA = 0x00;
  2397  000B42  0E00               	movlw	0
  2398  000B44  6E80               	movwf	3968,c	;volatile
  2399                           
  2400                           ;timer1_thread.c: 24: tptr->ready = true;
  2401  000B46  0101               	movlb	1	; () banked
  2402  000B48  EE20 F00B          	lfsr	2,11
  2403  000B4C  0101               	movlb	1	; () banked
  2404  000B4E  51AC               	movf	timer1_lthread@tptr& (0+255),w,b
  2405  000B50  26D9               	addwf	fsr2l,f,c
  2406  000B52  0101               	movlb	1	; () banked
  2407  000B54  51AD               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2408  000B56  22DA               	addwfc	fsr2h,f,c
  2409  000B58  0E01               	movlw	1
  2410  000B5A  6EDF               	movwf	indf2,c
  2411                           
  2412                           ; BSR set to: 1
  2413                           ;timer1_thread.c: 25: tptr->cmCount = 0;
  2414  000B5C  C1AC  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2415  000B60  C1AD  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2416  000B64  0E00               	movlw	0
  2417  000B66  6EDE               	movwf	postinc2,c
  2418  000B68  0E00               	movlw	0
  2419  000B6A  6EDD               	movwf	postdec2,c
  2420  000B6C                     l4108:
  2421                           
  2422                           ; BSR set to: 1
  2423                           ;timer1_thread.c: 26: }
  2424                           ;timer1_thread.c: 28: WriteTimer1(tptr->cmDist);
  2425  000B6C  0101               	movlb	1	; () banked
  2426  000B6E  EE20 F004          	lfsr	2,4
  2427  000B72  0101               	movlb	1	; () banked
  2428  000B74  51AC               	movf	timer1_lthread@tptr& (0+255),w,b
  2429  000B76  26D9               	addwf	fsr2l,f,c
  2430  000B78  0101               	movlb	1	; () banked
  2431  000B7A  51AD               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2432  000B7C  22DA               	addwfc	fsr2h,f,c
  2433  000B7E  0100               	movlb	0	; () banked
  2434  000B80  CFDE F0B2          	movff	postinc2,WriteTimer1@timer1
  2435  000B84  0100               	movlb	0	; () banked
  2436  000B86  CFDD F0B3          	movff	postdec2,WriteTimer1@timer1+1
  2437  000B8A  ECE4  F00F         	call	_WriteTimer1	;wreg free
  2438  000B8E  0012               	return	
  2439  000B90                     __end_of_timer1_lthread:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           prodl	equ	0xFF3
  2446                           postinc0	equ	0xFEE
  2447                           wreg	equ	0xFE8
  2448                           indf1	equ	0xFE7
  2449                           postdec1	equ	0xFE5
  2450                           fsr1h	equ	0xFE2
  2451                           fsr1l	equ	0xFE1
  2452                           indf2	equ	0xFDF
  2453                           postinc2	equ	0xFDE
  2454                           postdec2	equ	0xFDD
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _timer0_lthread *****************
  2460 ;; Defined at:
  2461 ;;		line 19 in file "src/timer0_thread.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  tptr            2   10[BANK1 ] PTR struct __timer0_thre
  2464 ;;		 -> main@t0thread_data(12), 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  temp            2   16[BANK1 ] unsigned char [2]
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  2   10[BANK1 ] int 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2476 ;;      Params:         0       0       2       0       0
  2477 ;;      Locals:         0       0       2       0       0
  2478 ;;      Temps:          0       0       4       0       0
  2479 ;;      Totals:         0       0       8       0       0
  2480 ;;Total ram usage:        8 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:   14
  2483 ;; This function calls:
  2484 ;;		_WriteTimer0
  2485 ;;		___lwmod
  2486 ;;		_sendUARTarr
  2487 ;; This function is called by:
  2488 ;;		_main
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492                           	psect	text6
  2493  000B90                     __ptext6:
  2494                           	opt stack 0
  2495  000B90                     _timer0_lthread:
  2496                           	opt stack 16
  2497                           
  2498                           ;timer0_thread.c: 20: tptr->cmCount++;
  2499                           
  2500                           ;incstack = 0
  2501  000B90  C1AC  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2502  000B94  C1AD  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2503  000B98  2ADE               	incf	postinc2,f,c
  2504  000B9A  0E00               	movlw	0
  2505  000B9C  22DD               	addwfc	postdec2,f,c
  2506                           
  2507                           ;timer0_thread.c: 22: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  2508  000B9E  0101               	movlb	1	; () banked
  2509  000BA0  EE20 F00A          	lfsr	2,10
  2510  000BA4  0101               	movlb	1	; () banked
  2511  000BA6  51AC               	movf	timer0_lthread@tptr& (0+255),w,b
  2512  000BA8  26D9               	addwf	fsr2l,f,c
  2513  000BAA  0101               	movlb	1	; () banked
  2514  000BAC  51AD               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2515  000BAE  22DA               	addwfc	fsr2h,f,c
  2516  000BB0  50DF               	movf	indf2,w,c
  2517  000BB2  B4D8               	btfsc	status,2,c
  2518  000BB4  D065               	goto	l4016
  2519                           
  2520                           ; BSR set to: 1
  2521  000BB6  C1AC  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2522  000BBA  C1AD  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2523  000BBE  0100               	movlb	0	; () banked
  2524  000BC0  CFDE F0B2          	movff	postinc2,___lwmod@dividend
  2525  000BC4  0100               	movlb	0	; () banked
  2526  000BC6  CFDD F0B3          	movff	postdec2,___lwmod@dividend+1
  2527  000BCA  0101               	movlb	1	; () banked
  2528  000BCC  EE20 F008          	lfsr	2,8
  2529  000BD0  0101               	movlb	1	; () banked
  2530  000BD2  51AC               	movf	timer0_lthread@tptr& (0+255),w,b
  2531  000BD4  26D9               	addwf	fsr2l,f,c
  2532  000BD6  0101               	movlb	1	; () banked
  2533  000BD8  51AD               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2534  000BDA  22DA               	addwfc	fsr2h,f,c
  2535  000BDC  0100               	movlb	0	; () banked
  2536  000BDE  CFDE F0B4          	movff	postinc2,___lwmod@divisor
  2537  000BE2  0100               	movlb	0	; () banked
  2538  000BE4  CFDD F0B5          	movff	postdec2,___lwmod@divisor+1
  2539  000BE8  EC43  F00C         	call	___lwmod	;wreg free
  2540  000BEC  0EFF               	movlw	255
  2541  000BEE  0101               	movlb	1	; () banked
  2542  000BF0  6FAE               	movwf	??_timer0_lthread& (0+255),b
  2543  000BF2  0EFF               	movlw	255
  2544  000BF4  6FAF               	movwf	(??_timer0_lthread+1)& (0+255),b
  2545  000BF6  0101               	movlb	1	; () banked
  2546  000BF8  EE20 F008          	lfsr	2,8
  2547  000BFC  0101               	movlb	1	; () banked
  2548  000BFE  51AC               	movf	timer0_lthread@tptr& (0+255),w,b
  2549  000C00  26D9               	addwf	fsr2l,f,c
  2550  000C02  0101               	movlb	1	; () banked
  2551  000C04  51AD               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2552  000C06  22DA               	addwfc	fsr2h,f,c
  2553  000C08  CFDE F1B0          	movff	postinc2,??_timer0_lthread+2
  2554  000C0C  CFDD F1B1          	movff	postdec2,??_timer0_lthread+3
  2555  000C10  0101               	movlb	1	; () banked
  2556  000C12  51AE               	movf	??_timer0_lthread& (0+255),w,b
  2557  000C14  0101               	movlb	1	; () banked
  2558  000C16  27B0               	addwf	(??_timer0_lthread+2)& (0+255),f,b
  2559  000C18  0101               	movlb	1	; () banked
  2560  000C1A  51AF               	movf	(??_timer0_lthread+1)& (0+255),w,b
  2561  000C1C  0101               	movlb	1	; () banked
  2562  000C1E  23B1               	addwfc	(??_timer0_lthread+3)& (0+255),f,b
  2563  000C20  0100               	movlb	0	; () banked
  2564  000C22  51B3               	movf	(?___lwmod+1)& (0+255),w,b
  2565  000C24  0101               	movlb	1	; () banked
  2566  000C26  19B1               	xorwf	(??_timer0_lthread+3)& (0+255),w,b
  2567  000C28  E104               	bnz	u2925
  2568  000C2A  0100               	movlb	0	; () banked
  2569  000C2C  51B2               	movf	?___lwmod& (0+255),w,b
  2570  000C2E  0101               	movlb	1	; () banked
  2571  000C30  19B0               	xorwf	(??_timer0_lthread+2)& (0+255),w,b
  2572  000C32                     u2925:
  2573  000C32  A4D8               	btfss	status,2,c
  2574  000C34  D025               	goto	l4016
  2575                           
  2576                           ; BSR set to: 1
  2577                           ;timer0_thread.c: 23: unsigned char temp[2] = {0,0};
  2578  000C36  C0C8  F1B2         	movff	timer0_lthread@F5147,timer0_lthread@temp
  2579  000C3A  C0C9  F1B3         	movff	timer0_lthread@F5147+1,timer0_lthread@temp+1
  2580                           
  2581                           ; BSR set to: 1
  2582                           ;timer0_thread.c: 24: sendUARTarr(2,temp);
  2583  000C3E  0101               	movlb	1	; () banked
  2584  000C40  0E01               	movlw	high timer0_lthread@temp
  2585  000C42  0101               	movlb	1	; () banked
  2586  000C44  6FA9               	movwf	(sendUARTarr@data+1)& (0+255),b
  2587  000C46  0101               	movlb	1	; () banked
  2588  000C48  0EB2               	movlw	low timer0_lthread@temp
  2589  000C4A  0101               	movlb	1	; () banked
  2590  000C4C  6FA8               	movwf	sendUARTarr@data& (0+255),b
  2591  000C4E  0E02               	movlw	2
  2592  000C50  ECA9  F00E         	call	_sendUARTarr
  2593                           
  2594                           ;timer0_thread.c: 25: T0CONbits.TMR0ON = 0;;
  2595  000C54  9ED5               	bcf	4053,7,c	;volatile
  2596                           
  2597                           ;timer0_thread.c: 26: PORTA = 0x00;
  2598  000C56  0E00               	movlw	0
  2599  000C58  6E80               	movwf	3968,c	;volatile
  2600                           
  2601                           ;timer0_thread.c: 27: tptr->ready = true;
  2602  000C5A  0101               	movlb	1	; () banked
  2603  000C5C  EE20 F00B          	lfsr	2,11
  2604  000C60  0101               	movlb	1	; () banked
  2605  000C62  51AC               	movf	timer0_lthread@tptr& (0+255),w,b
  2606  000C64  26D9               	addwf	fsr2l,f,c
  2607  000C66  0101               	movlb	1	; () banked
  2608  000C68  51AD               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2609  000C6A  22DA               	addwfc	fsr2h,f,c
  2610  000C6C  0E01               	movlw	1
  2611  000C6E  6EDF               	movwf	indf2,c
  2612                           
  2613                           ; BSR set to: 1
  2614                           ;timer0_thread.c: 28: tptr->cmCount = 0;
  2615  000C70  C1AC  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2616  000C74  C1AD  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2617  000C78  0E00               	movlw	0
  2618  000C7A  6EDE               	movwf	postinc2,c
  2619  000C7C  0E00               	movlw	0
  2620  000C7E  6EDD               	movwf	postdec2,c
  2621  000C80                     l4016:
  2622                           
  2623                           ; BSR set to: 1
  2624                           ;timer0_thread.c: 29: }
  2625                           ;timer0_thread.c: 31: WriteTimer0(tptr->cmDist);
  2626  000C80  0101               	movlb	1	; () banked
  2627  000C82  EE20 F006          	lfsr	2,6
  2628  000C86  0101               	movlb	1	; () banked
  2629  000C88  51AC               	movf	timer0_lthread@tptr& (0+255),w,b
  2630  000C8A  26D9               	addwf	fsr2l,f,c
  2631  000C8C  0101               	movlb	1	; () banked
  2632  000C8E  51AD               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2633  000C90  22DA               	addwfc	fsr2h,f,c
  2634  000C92  0100               	movlb	0	; () banked
  2635  000C94  CFDE F0B2          	movff	postinc2,WriteTimer0@timer0
  2636  000C98  0100               	movlb	0	; () banked
  2637  000C9A  CFDD F0B3          	movff	postdec2,WriteTimer0@timer0+1
  2638  000C9E  ECDB  F00F         	call	_WriteTimer0	;wreg free
  2639  000CA2  0012               	return	
  2640  000CA4                     __end_of_timer0_lthread:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodl	equ	0xFF3
  2647                           postinc0	equ	0xFEE
  2648                           wreg	equ	0xFE8
  2649                           indf1	equ	0xFE7
  2650                           postdec1	equ	0xFE5
  2651                           fsr1h	equ	0xFE2
  2652                           fsr1l	equ	0xFE1
  2653                           indf2	equ	0xFDF
  2654                           postinc2	equ	0xFDE
  2655                           postdec2	equ	0xFDD
  2656                           fsr2h	equ	0xFDA
  2657                           fsr2l	equ	0xFD9
  2658                           status	equ	0xFD8
  2659                           
  2660 ;; *************** function ___lwmod *****************
  2661 ;; Defined at:
  2662 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  dividend        2   50[BANK0 ] unsigned int 
  2665 ;;  divisor         2   52[BANK0 ] unsigned int 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  counter         1   54[BANK0 ] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  2   50[BANK0 ] unsigned int 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2677 ;;      Params:         0       4       0       0       0
  2678 ;;      Locals:         0       1       0       0       0
  2679 ;;      Temps:          0       0       0       0       0
  2680 ;;      Totals:         0       5       0       0       0
  2681 ;;Total ram usage:        5 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:   10
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_timer0_lthread
  2688 ;;		_timer1_lthread
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text7
  2693  001886                     __ptext7:
  2694                           	opt stack 0
  2695  001886                     ___lwmod:
  2696                           	opt stack 19
  2697                           
  2698                           ;incstack = 0
  2699  001886  0100               	movlb	0	; () banked
  2700  001888  51B5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2701  00188A  11B4               	iorwf	___lwmod@divisor& (0+255),w,b
  2702  00188C  B4D8               	btfsc	status,2,c
  2703  00188E  D026               	goto	l1135
  2704                           
  2705                           ; BSR set to: 0
  2706  001890  0E01               	movlw	1
  2707  001892  0100               	movlb	0	; () banked
  2708  001894  6FB6               	movwf	___lwmod@counter& (0+255),b
  2709  001896  D006               	goto	l3564
  2710  001898                     l3562:
  2711                           
  2712                           ; BSR set to: 0
  2713  001898  0100               	movlb	0	; () banked
  2714  00189A  90D8               	bcf	status,0,c
  2715  00189C  37B4               	rlcf	___lwmod@divisor& (0+255),f,b
  2716  00189E  37B5               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2717  0018A0  0100               	movlb	0	; () banked
  2718  0018A2  2BB6               	incf	___lwmod@counter& (0+255),f,b
  2719  0018A4                     l3564:
  2720                           
  2721                           ; BSR set to: 0
  2722  0018A4  0100               	movlb	0	; () banked
  2723  0018A6  AFB5               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2724  0018A8  D7F7               	goto	l3562
  2725  0018AA                     l3566:
  2726                           
  2727                           ; BSR set to: 0
  2728  0018AA  0100               	movlb	0	; () banked
  2729  0018AC  51B4               	movf	___lwmod@divisor& (0+255),w,b
  2730  0018AE  0100               	movlb	0	; () banked
  2731  0018B0  5DB2               	subwf	___lwmod@dividend& (0+255),w,b
  2732  0018B2  0100               	movlb	0	; () banked
  2733  0018B4  51B5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2734  0018B6  0100               	movlb	0	; () banked
  2735  0018B8  59B3               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2736  0018BA  A0D8               	btfss	status,0,c
  2737  0018BC  D008               	goto	l3570
  2738                           
  2739                           ; BSR set to: 0
  2740  0018BE  0100               	movlb	0	; () banked
  2741  0018C0  51B4               	movf	___lwmod@divisor& (0+255),w,b
  2742  0018C2  0100               	movlb	0	; () banked
  2743  0018C4  5FB2               	subwf	___lwmod@dividend& (0+255),f,b
  2744  0018C6  0100               	movlb	0	; () banked
  2745  0018C8  51B5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2746  0018CA  0100               	movlb	0	; () banked
  2747  0018CC  5BB3               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2748  0018CE                     l3570:
  2749                           
  2750                           ; BSR set to: 0
  2751  0018CE  0100               	movlb	0	; () banked
  2752  0018D0  90D8               	bcf	status,0,c
  2753  0018D2  33B5               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2754  0018D4  33B4               	rrcf	___lwmod@divisor& (0+255),f,b
  2755                           
  2756                           ; BSR set to: 0
  2757  0018D6  0100               	movlb	0	; () banked
  2758  0018D8  2FB6               	decfsz	___lwmod@counter& (0+255),f,b
  2759  0018DA  D7E7               	goto	l3566
  2760  0018DC                     l1135:
  2761                           
  2762                           ; BSR set to: 0
  2763  0018DC  C0B2  F0B2         	movff	___lwmod@dividend,?___lwmod
  2764  0018E0  C0B3  F0B3         	movff	___lwmod@dividend+1,?___lwmod+1
  2765                           
  2766                           ; BSR set to: 0
  2767  0018E4  0012               	return	
  2768  0018E6                     __end_of___lwmod:
  2769                           	opt stack 0
  2770                           tblptru	equ	0xFF8
  2771                           tblptrh	equ	0xFF7
  2772                           tblptrl	equ	0xFF6
  2773                           tablat	equ	0xFF5
  2774                           prodl	equ	0xFF3
  2775                           postinc0	equ	0xFEE
  2776                           wreg	equ	0xFE8
  2777                           indf1	equ	0xFE7
  2778                           postdec1	equ	0xFE5
  2779                           fsr1h	equ	0xFE2
  2780                           fsr1l	equ	0xFE1
  2781                           indf2	equ	0xFDF
  2782                           postinc2	equ	0xFDE
  2783                           postdec2	equ	0xFDD
  2784                           fsr2h	equ	0xFDA
  2785                           fsr2l	equ	0xFD9
  2786                           status	equ	0xFD8
  2787                           
  2788 ;; *************** function _WriteTimer0 *****************
  2789 ;; Defined at:
  2790 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  timer0          2   50[BANK0 ] unsigned int 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  timer           2   52[BANK0 ] struct Timers
  2795 ;; Return value:  Size  Location     Type
  2796 ;;		None               void
  2797 ;; Registers used:
  2798 ;;		None
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2804 ;;      Params:         0       2       0       0       0
  2805 ;;      Locals:         0       2       0       0       0
  2806 ;;      Temps:          0       0       0       0       0
  2807 ;;      Totals:         0       4       0       0       0
  2808 ;;Total ram usage:        4 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:   10
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_turn
  2815 ;;		_timer0_lthread
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text8
  2820  001FB6                     __ptext8:
  2821                           	opt stack 0
  2822  001FB6                     _WriteTimer0:
  2823                           	opt stack 19
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;incstack = 0
  2827  001FB6  C0B2  F0B4         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2828  001FBA  C0B3  F0B5         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2829  001FBE  C0B5  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2830  001FC2  C0B4  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2831  001FC6  0012               	return	
  2832  001FC8                     __end_of_WriteTimer0:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           prodl	equ	0xFF3
  2839                           postinc0	equ	0xFEE
  2840                           wreg	equ	0xFE8
  2841                           indf1	equ	0xFE7
  2842                           postdec1	equ	0xFE5
  2843                           fsr1h	equ	0xFE2
  2844                           fsr1l	equ	0xFE1
  2845                           indf2	equ	0xFDF
  2846                           postinc2	equ	0xFDE
  2847                           postdec2	equ	0xFDD
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _stop *****************
  2853 ;; Defined at:
  2854 ;;		line 45 in file "src/motors.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  tptr            2   10[BANK1 ] PTR struct __timer1_thre
  2857 ;;		 -> main@t1thread_data(12), 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  test            2   12[BANK1 ] unsigned char [2]
  2860 ;; Return value:  Size  Location     Type
  2861 ;;		None               void
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2869 ;;      Params:         0       0       2       0       0
  2870 ;;      Locals:         0       0       2       0       0
  2871 ;;      Temps:          0       0       0       0       0
  2872 ;;      Totals:         0       0       4       0       0
  2873 ;;Total ram usage:        4 bytes
  2874 ;; Hardware stack levels used:    1
  2875 ;; Hardware stack levels required when called:   14
  2876 ;; This function calls:
  2877 ;;		_WriteTimer1
  2878 ;;		_sendUARTarr
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text9
  2885  0019A0                     __ptext9:
  2886                           	opt stack 0
  2887  0019A0                     _stop:
  2888                           	opt stack 16
  2889                           
  2890                           ;motors.c: 46: PORTA = 0x00;
  2891                           
  2892                           ;incstack = 0
  2893  0019A0  0E00               	movlw	0
  2894  0019A2  6E80               	movwf	3968,c	;volatile
  2895                           
  2896                           ;motors.c: 47: unsigned char test[2] = {0,0};
  2897  0019A4  C0C6  F1AE         	movff	stop@F5239,stop@test
  2898  0019A8  C0C7  F1AF         	movff	stop@F5239+1,stop@test+1
  2899                           
  2900                           ;motors.c: 48: sendUARTarr(2,test);
  2901  0019AC  0101               	movlb	1	; () banked
  2902  0019AE  0E01               	movlw	high stop@test
  2903  0019B0  0101               	movlb	1	; () banked
  2904  0019B2  6FA9               	movwf	(sendUARTarr@data+1)& (0+255),b
  2905  0019B4  0101               	movlb	1	; () banked
  2906  0019B6  0EAE               	movlw	low stop@test
  2907  0019B8  0101               	movlb	1	; () banked
  2908  0019BA  6FA8               	movwf	sendUARTarr@data& (0+255),b
  2909  0019BC  0E02               	movlw	2
  2910  0019BE  ECA9  F00E         	call	_sendUARTarr
  2911                           
  2912                           ;motors.c: 49: WriteTimer1(tptr->cmDist);
  2913  0019C2  0101               	movlb	1	; () banked
  2914  0019C4  EE20 F004          	lfsr	2,4
  2915  0019C8  0101               	movlb	1	; () banked
  2916  0019CA  51AC               	movf	stop@tptr& (0+255),w,b
  2917  0019CC  26D9               	addwf	fsr2l,f,c
  2918  0019CE  0101               	movlb	1	; () banked
  2919  0019D0  51AD               	movf	(stop@tptr+1)& (0+255),w,b
  2920  0019D2  22DA               	addwfc	fsr2h,f,c
  2921  0019D4  0100               	movlb	0	; () banked
  2922  0019D6  CFDE F0B2          	movff	postinc2,WriteTimer1@timer1
  2923  0019DA  0100               	movlb	0	; () banked
  2924  0019DC  CFDD F0B3          	movff	postdec2,WriteTimer1@timer1+1
  2925  0019E0  ECE4  F00F         	call	_WriteTimer1	;wreg free
  2926                           
  2927                           ;motors.c: 50: T0CONbits.TMR0ON = 0;;
  2928  0019E4  9ED5               	bcf	4053,7,c	;volatile
  2929                           
  2930                           ;motors.c: 51: T1CONbits.TMR1ON = 0;;
  2931  0019E6  90CD               	bcf	4045,0,c	;volatile
  2932                           
  2933                           ;motors.c: 52: tptr->cmCount = 0;
  2934  0019E8  C1AC  FFD9         	movff	stop@tptr,fsr2l
  2935  0019EC  C1AD  FFDA         	movff	stop@tptr+1,fsr2h
  2936  0019F0  0E00               	movlw	0
  2937  0019F2  6EDE               	movwf	postinc2,c
  2938  0019F4  0E00               	movlw	0
  2939  0019F6  6EDD               	movwf	postdec2,c
  2940  0019F8  0012               	return	
  2941  0019FA                     __end_of_stop:
  2942                           	opt stack 0
  2943                           tblptru	equ	0xFF8
  2944                           tblptrh	equ	0xFF7
  2945                           tblptrl	equ	0xFF6
  2946                           tablat	equ	0xFF5
  2947                           prodl	equ	0xFF3
  2948                           postinc0	equ	0xFEE
  2949                           wreg	equ	0xFE8
  2950                           indf1	equ	0xFE7
  2951                           postdec1	equ	0xFE5
  2952                           fsr1h	equ	0xFE2
  2953                           fsr1l	equ	0xFE1
  2954                           indf2	equ	0xFDF
  2955                           postinc2	equ	0xFDE
  2956                           postdec2	equ	0xFDD
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function _start_i2c_slave_reply *****************
  2962 ;; Defined at:
  2963 ;;		line 53 in file "src/my_i2c.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  length          1    wreg     unsigned char 
  2966 ;;  msg             2   50[BANK0 ] PTR unsigned char 
  2967 ;;		 -> main@msgbuffer(11), 
  2968 ;; Auto vars:     Size  Location     Type
  2969 ;;  length          1   54[BANK0 ] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;		None               void
  2972 ;; Registers used:
  2973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2979 ;;      Params:         0       2       0       0       0
  2980 ;;      Locals:         0       1       0       0       0
  2981 ;;      Temps:          0       2       0       0       0
  2982 ;;      Totals:         0       5       0       0       0
  2983 ;;Total ram usage:        5 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:   10
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_main
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text10
  2994  000CA4                     __ptext10:
  2995                           	opt stack 0
  2996  000CA4                     _start_i2c_slave_reply:
  2997                           	opt stack 20
  2998                           
  2999                           ;incstack = 0
  3000                           ;start_i2c_slave_reply@length stored from wreg
  3001  000CA4  0100               	movlb	0	; () banked
  3002  000CA6  6FB6               	movwf	start_i2c_slave_reply@length& (0+255),b
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  3006  000CA8  0100               	movlb	0	; () banked
  3007  000CAA  EE20 F019          	lfsr	2,25
  3008  000CAE  0100               	movlb	0	; () banked
  3009  000CB0  51CC               	movf	_ic_ptr& (0+255),w,b
  3010  000CB2  26D9               	addwf	fsr2l,f,c
  3011  000CB4  0100               	movlb	0	; () banked
  3012  000CB6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3013  000CB8  22DA               	addwfc	fsr2h,f,c
  3014  000CBA  0E00               	movlw	0
  3015  000CBC  6EDF               	movwf	indf2,c
  3016  000CBE  D03E               	goto	l4082
  3017  000CC0                     l4078:
  3018                           
  3019                           ; BSR set to: 0
  3020                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  3021  000CC0  0100               	movlb	0	; () banked
  3022  000CC2  EE20 F019          	lfsr	2,25
  3023  000CC6  0100               	movlb	0	; () banked
  3024  000CC8  51CC               	movf	_ic_ptr& (0+255),w,b
  3025  000CCA  26D9               	addwf	fsr2l,f,c
  3026  000CCC  0100               	movlb	0	; () banked
  3027  000CCE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3028  000CD0  22DA               	addwfc	fsr2h,f,c
  3029  000CD2  50DF               	movf	indf2,w,c
  3030  000CD4  0100               	movlb	0	; () banked
  3031  000CD6  6FB4               	movwf	??_start_i2c_slave_reply& (0+255),b
  3032  000CD8  0100               	movlb	0	; () banked
  3033  000CDA  51B4               	movf	??_start_i2c_slave_reply& (0+255),w,b
  3034  000CDC  0D01               	mullw	1
  3035  000CDE  50F3               	movf	prodl,w,c
  3036  000CE0  0100               	movlb	0	; () banked
  3037  000CE2  25B2               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  3038  000CE4  6ED9               	movwf	fsr2l,c
  3039  000CE6  50F4               	movf	prodh,w,c
  3040  000CE8  0100               	movlb	0	; () banked
  3041  000CEA  21B3               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  3042  000CEC  6EDA               	movwf	fsr2h,c
  3043  000CEE  0100               	movlb	0	; () banked
  3044  000CF0  EE10 F019          	lfsr	1,25
  3045  000CF4  0100               	movlb	0	; () banked
  3046  000CF6  51CC               	movf	_ic_ptr& (0+255),w,b
  3047  000CF8  26E1               	addwf	fsr1l,f,c
  3048  000CFA  0100               	movlb	0	; () banked
  3049  000CFC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3050  000CFE  22E2               	addwfc	fsr1h,f,c
  3051  000D00  50E7               	movf	indf1,w,c
  3052  000D02  0100               	movlb	0	; () banked
  3053  000D04  6FB5               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  3054  000D06  0100               	movlb	0	; () banked
  3055  000D08  51B5               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  3056  000D0A  0D01               	mullw	1
  3057  000D0C  0E0F               	movlw	15
  3058  000D0E  26F3               	addwf	prodl,f,c
  3059  000D10  0E00               	movlw	0
  3060  000D12  22F4               	addwfc	prodh,f,c
  3061  000D14  50F3               	movf	prodl,w,c
  3062  000D16  0100               	movlb	0	; () banked
  3063  000D18  25CC               	addwf	_ic_ptr& (0+255),w,b
  3064  000D1A  6EE1               	movwf	fsr1l,c
  3065  000D1C  50F4               	movf	prodh,w,c
  3066  000D1E  0100               	movlb	0	; () banked
  3067  000D20  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3068  000D22  6EE2               	movwf	fsr1h,c
  3069  000D24  CFDF FFE7          	movff	indf2,indf1
  3070                           
  3071                           ; BSR set to: 0
  3072  000D28  0100               	movlb	0	; () banked
  3073  000D2A  EE20 F019          	lfsr	2,25
  3074  000D2E  0100               	movlb	0	; () banked
  3075  000D30  51CC               	movf	_ic_ptr& (0+255),w,b
  3076  000D32  26D9               	addwf	fsr2l,f,c
  3077  000D34  0100               	movlb	0	; () banked
  3078  000D36  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3079  000D38  22DA               	addwfc	fsr2h,f,c
  3080  000D3A  2ADF               	incf	indf2,f,c
  3081  000D3C                     l4082:
  3082                           
  3083                           ; BSR set to: 0
  3084  000D3C  0100               	movlb	0	; () banked
  3085  000D3E  EE20 F019          	lfsr	2,25
  3086  000D42  0100               	movlb	0	; () banked
  3087  000D44  51CC               	movf	_ic_ptr& (0+255),w,b
  3088  000D46  26D9               	addwf	fsr2l,f,c
  3089  000D48  0100               	movlb	0	; () banked
  3090  000D4A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3091  000D4C  22DA               	addwfc	fsr2h,f,c
  3092  000D4E  50DF               	movf	indf2,w,c
  3093  000D50  0100               	movlb	0	; () banked
  3094  000D52  6FB4               	movwf	??_start_i2c_slave_reply& (0+255),b
  3095  000D54  0100               	movlb	0	; () banked
  3096  000D56  51B6               	movf	start_i2c_slave_reply@length& (0+255),w,b
  3097  000D58  0100               	movlb	0	; () banked
  3098  000D5A  5DB4               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  3099  000D5C  A0D8               	btfss	status,0,c
  3100  000D5E  D7B0               	goto	l4078
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;my_i2c.c: 57: }
  3104                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  3105                           
  3106                           ; BSR set to: 0
  3107  000D60  0100               	movlb	0	; () banked
  3108  000D62  EE20 F019          	lfsr	2,25
  3109  000D66  0100               	movlb	0	; () banked
  3110  000D68  51CC               	movf	_ic_ptr& (0+255),w,b
  3111  000D6A  26D9               	addwf	fsr2l,f,c
  3112  000D6C  0100               	movlb	0	; () banked
  3113  000D6E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3114  000D70  22DA               	addwfc	fsr2h,f,c
  3115  000D72  0100               	movlb	0	; () banked
  3116  000D74  C0B6  FFDF         	movff	start_i2c_slave_reply@length,indf2
  3117                           
  3118                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  3119  000D78  0100               	movlb	0	; () banked
  3120  000D7A  EE20 F01A          	lfsr	2,26
  3121  000D7E  0100               	movlb	0	; () banked
  3122  000D80  51CC               	movf	_ic_ptr& (0+255),w,b
  3123  000D82  26D9               	addwf	fsr2l,f,c
  3124  000D84  0100               	movlb	0	; () banked
  3125  000D86  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3126  000D88  22DA               	addwfc	fsr2h,f,c
  3127  000D8A  0E01               	movlw	1
  3128  000D8C  6EDF               	movwf	indf2,c
  3129                           
  3130                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  3131  000D8E  0100               	movlb	0	; () banked
  3132  000D90  EE20 F00F          	lfsr	2,15
  3133  000D94  0100               	movlb	0	; () banked
  3134  000D96  51CC               	movf	_ic_ptr& (0+255),w,b
  3135  000D98  26D9               	addwf	fsr2l,f,c
  3136  000D9A  0100               	movlb	0	; () banked
  3137  000D9C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3138  000D9E  22DA               	addwfc	fsr2h,f,c
  3139  000DA0  50DF               	movf	indf2,w,c
  3140  000DA2  6EC9               	movwf	4041,c	;volatile
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  3144  000DA4  88C6               	bsf	4038,4,c	;volatile
  3145                           
  3146                           ; BSR set to: 0
  3147  000DA6  0012               	return	
  3148  000DA8                     __end_of_start_i2c_slave_reply:
  3149                           	opt stack 0
  3150                           tblptru	equ	0xFF8
  3151                           tblptrh	equ	0xFF7
  3152                           tblptrl	equ	0xFF6
  3153                           tablat	equ	0xFF5
  3154                           prodh	equ	0xFF4
  3155                           prodl	equ	0xFF3
  3156                           postinc0	equ	0xFEE
  3157                           wreg	equ	0xFE8
  3158                           indf1	equ	0xFE7
  3159                           postdec1	equ	0xFE5
  3160                           fsr1h	equ	0xFE2
  3161                           fsr1l	equ	0xFE1
  3162                           indf2	equ	0xFDF
  3163                           postinc2	equ	0xFDE
  3164                           postdec2	equ	0xFDD
  3165                           fsr2h	equ	0xFDA
  3166                           fsr2l	equ	0xFD9
  3167                           status	equ	0xFD8
  3168                           
  3169 ;; *************** function _moveDist *****************
  3170 ;; Defined at:
  3171 ;;		line 19 in file "src/motors.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  tptr            2   10[BANK1 ] PTR struct __timer1_thre
  3174 ;;		 -> main@t1thread_data(12), 
  3175 ;;  dist            2   12[BANK1 ] int 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  test            2   14[BANK1 ] unsigned char [2]
  3178 ;; Return value:  Size  Location     Type
  3179 ;;		None               void
  3180 ;; Registers used:
  3181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3187 ;;      Params:         0       0       4       0       0
  3188 ;;      Locals:         0       0       2       0       0
  3189 ;;      Temps:          0       0       0       0       0
  3190 ;;      Totals:         0       0       6       0       0
  3191 ;;Total ram usage:        6 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; Hardware stack levels required when called:   14
  3194 ;; This function calls:
  3195 ;;		_WriteTimer1
  3196 ;;		_sendUARTarr
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text11
  3203  0013A4                     __ptext11:
  3204                           	opt stack 0
  3205  0013A4                     _moveDist:
  3206                           	opt stack 16
  3207                           
  3208                           ;motors.c: 20: PORTA = 0x01;
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;incstack = 0
  3212  0013A4  0E01               	movlw	1
  3213  0013A6  6E80               	movwf	3968,c	;volatile
  3214                           
  3215                           ;motors.c: 21: tptr->distLim = true;
  3216  0013A8  0101               	movlb	1	; () banked
  3217  0013AA  EE20 F00A          	lfsr	2,10
  3218  0013AE  0101               	movlb	1	; () banked
  3219  0013B0  51AC               	movf	moveDist@tptr& (0+255),w,b
  3220  0013B2  26D9               	addwf	fsr2l,f,c
  3221  0013B4  0101               	movlb	1	; () banked
  3222  0013B6  51AD               	movf	(moveDist@tptr+1)& (0+255),w,b
  3223  0013B8  22DA               	addwfc	fsr2h,f,c
  3224  0013BA  0E01               	movlw	1
  3225  0013BC  6EDF               	movwf	indf2,c
  3226                           
  3227                           ; BSR set to: 1
  3228                           ;motors.c: 22: tptr->curMove = dist;
  3229  0013BE  0101               	movlb	1	; () banked
  3230  0013C0  EE20 F006          	lfsr	2,6
  3231  0013C4  0101               	movlb	1	; () banked
  3232  0013C6  51AC               	movf	moveDist@tptr& (0+255),w,b
  3233  0013C8  26D9               	addwf	fsr2l,f,c
  3234  0013CA  0101               	movlb	1	; () banked
  3235  0013CC  51AD               	movf	(moveDist@tptr+1)& (0+255),w,b
  3236  0013CE  22DA               	addwfc	fsr2h,f,c
  3237  0013D0  0101               	movlb	1	; () banked
  3238  0013D2  C1AE  FFDE         	movff	moveDist@dist,postinc2
  3239  0013D6  0101               	movlb	1	; () banked
  3240  0013D8  C1AF  FFDD         	movff	moveDist@dist+1,postdec2
  3241                           
  3242                           ; BSR set to: 1
  3243                           ;motors.c: 23: unsigned char test[2];
  3244                           ;motors.c: 24: test[0] = tptr->ctrl[0];
  3245  0013DC  0101               	movlb	1	; () banked
  3246  0013DE  EE20 F002          	lfsr	2,2
  3247  0013E2  0101               	movlb	1	; () banked
  3248  0013E4  51AC               	movf	moveDist@tptr& (0+255),w,b
  3249  0013E6  26D9               	addwf	fsr2l,f,c
  3250  0013E8  0101               	movlb	1	; () banked
  3251  0013EA  51AD               	movf	(moveDist@tptr+1)& (0+255),w,b
  3252  0013EC  22DA               	addwfc	fsr2h,f,c
  3253  0013EE  50DF               	movf	indf2,w,c
  3254  0013F0  0101               	movlb	1	; () banked
  3255  0013F2  6FB0               	movwf	moveDist@test& (0+255),b
  3256                           
  3257                           ; BSR set to: 1
  3258                           ;motors.c: 25: test[1] = tptr->ctrl[1];
  3259  0013F4  0101               	movlb	1	; () banked
  3260  0013F6  EE20 F003          	lfsr	2,3
  3261  0013FA  0101               	movlb	1	; () banked
  3262  0013FC  51AC               	movf	moveDist@tptr& (0+255),w,b
  3263  0013FE  26D9               	addwf	fsr2l,f,c
  3264  001400  0101               	movlb	1	; () banked
  3265  001402  51AD               	movf	(moveDist@tptr+1)& (0+255),w,b
  3266  001404  22DA               	addwfc	fsr2h,f,c
  3267  001406  50DF               	movf	indf2,w,c
  3268  001408  0101               	movlb	1	; () banked
  3269  00140A  6FB1               	movwf	(moveDist@test+1)& (0+255),b
  3270                           
  3271                           ; BSR set to: 1
  3272                           ;motors.c: 26: T1CONbits.TMR1ON = 1;;
  3273  00140C  80CD               	bsf	4045,0,c	;volatile
  3274                           
  3275                           ; BSR set to: 1
  3276                           ;motors.c: 27: sendUARTarr(2,test);
  3277  00140E  0101               	movlb	1	; () banked
  3278  001410  0E01               	movlw	high moveDist@test
  3279  001412  0101               	movlb	1	; () banked
  3280  001414  6FA9               	movwf	(sendUARTarr@data+1)& (0+255),b
  3281  001416  0101               	movlb	1	; () banked
  3282  001418  0EB0               	movlw	low moveDist@test
  3283  00141A  0101               	movlb	1	; () banked
  3284  00141C  6FA8               	movwf	sendUARTarr@data& (0+255),b
  3285  00141E  0E02               	movlw	2
  3286  001420  ECA9  F00E         	call	_sendUARTarr
  3287                           
  3288                           ;motors.c: 28: WriteTimer1(tptr->cmDist);
  3289  001424  0101               	movlb	1	; () banked
  3290  001426  EE20 F004          	lfsr	2,4
  3291  00142A  0101               	movlb	1	; () banked
  3292  00142C  51AC               	movf	moveDist@tptr& (0+255),w,b
  3293  00142E  26D9               	addwf	fsr2l,f,c
  3294  001430  0101               	movlb	1	; () banked
  3295  001432  51AD               	movf	(moveDist@tptr+1)& (0+255),w,b
  3296  001434  22DA               	addwfc	fsr2h,f,c
  3297  001436  0100               	movlb	0	; () banked
  3298  001438  CFDE F0B2          	movff	postinc2,WriteTimer1@timer1
  3299  00143C  0100               	movlb	0	; () banked
  3300  00143E  CFDD F0B3          	movff	postdec2,WriteTimer1@timer1+1
  3301  001442  ECE4  F00F         	call	_WriteTimer1	;wreg free
  3302                           
  3303                           ;motors.c: 29: tptr->cmCount = 0;
  3304  001446  C1AC  FFD9         	movff	moveDist@tptr,fsr2l
  3305  00144A  C1AD  FFDA         	movff	moveDist@tptr+1,fsr2h
  3306  00144E  0E00               	movlw	0
  3307  001450  6EDE               	movwf	postinc2,c
  3308  001452  0E00               	movlw	0
  3309  001454  6EDD               	movwf	postdec2,c
  3310  001456  0012               	return	
  3311  001458                     __end_of_moveDist:
  3312                           	opt stack 0
  3313                           tblptru	equ	0xFF8
  3314                           tblptrh	equ	0xFF7
  3315                           tblptrl	equ	0xFF6
  3316                           tablat	equ	0xFF5
  3317                           prodh	equ	0xFF4
  3318                           prodl	equ	0xFF3
  3319                           postinc0	equ	0xFEE
  3320                           wreg	equ	0xFE8
  3321                           indf1	equ	0xFE7
  3322                           postdec1	equ	0xFE5
  3323                           fsr1h	equ	0xFE2
  3324                           fsr1l	equ	0xFE1
  3325                           indf2	equ	0xFDF
  3326                           postinc2	equ	0xFDE
  3327                           postdec2	equ	0xFDD
  3328                           fsr2h	equ	0xFDA
  3329                           fsr2l	equ	0xFD9
  3330                           status	equ	0xFD8
  3331                           
  3332 ;; *************** function _WriteTimer1 *****************
  3333 ;; Defined at:
  3334 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  timer1          2   50[BANK0 ] unsigned int 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  timer           2   52[BANK0 ] struct Timers
  3339 ;; Return value:  Size  Location     Type
  3340 ;;		None               void
  3341 ;; Registers used:
  3342 ;;		None
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3348 ;;      Params:         0       2       0       0       0
  3349 ;;      Locals:         0       2       0       0       0
  3350 ;;      Temps:          0       0       0       0       0
  3351 ;;      Totals:         0       4       0       0       0
  3352 ;;Total ram usage:        4 bytes
  3353 ;; Hardware stack levels used:    1
  3354 ;; Hardware stack levels required when called:   10
  3355 ;; This function calls:
  3356 ;;		Nothing
  3357 ;; This function is called by:
  3358 ;;		_moveDist
  3359 ;;		_stop
  3360 ;;		_timer1_lthread
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364                           	psect	text12
  3365  001FC8                     __ptext12:
  3366                           	opt stack 0
  3367  001FC8                     _WriteTimer1:
  3368                           	opt stack 19
  3369                           
  3370                           ;incstack = 0
  3371  001FC8  C0B2  F0B4         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3372  001FCC  C0B3  F0B5         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3373  001FD0  C0B5  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3374  001FD4  C0B4  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3375  001FD8  0012               	return	
  3376  001FDA                     __end_of_WriteTimer1:
  3377                           	opt stack 0
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           prodh	equ	0xFF4
  3383                           prodl	equ	0xFF3
  3384                           postinc0	equ	0xFEE
  3385                           wreg	equ	0xFE8
  3386                           indf1	equ	0xFE7
  3387                           postdec1	equ	0xFE5
  3388                           fsr1h	equ	0xFE2
  3389                           fsr1l	equ	0xFE1
  3390                           indf2	equ	0xFDF
  3391                           postinc2	equ	0xFDE
  3392                           postdec2	equ	0xFDD
  3393                           fsr2h	equ	0xFDA
  3394                           fsr2l	equ	0xFD9
  3395                           status	equ	0xFD8
  3396                           
  3397 ;; *************** function _move *****************
  3398 ;; Defined at:
  3399 ;;		line 8 in file "src/motors.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  tptr            2   10[BANK1 ] PTR struct __timer1_thre
  3402 ;;		 -> main@t1thread_data(12), 
  3403 ;; Auto vars:     Size  Location     Type
  3404 ;;  test            2   12[BANK1 ] unsigned char [2]
  3405 ;; Return value:  Size  Location     Type
  3406 ;;		None               void
  3407 ;; Registers used:
  3408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3414 ;;      Params:         0       0       2       0       0
  3415 ;;      Locals:         0       0       2       0       0
  3416 ;;      Temps:          0       0       0       0       0
  3417 ;;      Totals:         0       0       4       0       0
  3418 ;;Total ram usage:        4 bytes
  3419 ;; Hardware stack levels used:    1
  3420 ;; Hardware stack levels required when called:   14
  3421 ;; This function calls:
  3422 ;;		_sendUARTarr
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text13
  3429  001748                     __ptext13:
  3430                           	opt stack 0
  3431  001748                     _move:
  3432                           	opt stack 16
  3433                           
  3434                           ;motors.c: 9: PORTA = 0x01;
  3435                           
  3436                           ;incstack = 0
  3437  001748  0E01               	movlw	1
  3438  00174A  6E80               	movwf	3968,c	;volatile
  3439                           
  3440                           ;motors.c: 10: tptr->distLim = false;
  3441  00174C  0101               	movlb	1	; () banked
  3442  00174E  EE20 F00A          	lfsr	2,10
  3443  001752  0101               	movlb	1	; () banked
  3444  001754  51AC               	movf	move@tptr& (0+255),w,b
  3445  001756  26D9               	addwf	fsr2l,f,c
  3446  001758  0101               	movlb	1	; () banked
  3447  00175A  51AD               	movf	(move@tptr+1)& (0+255),w,b
  3448  00175C  22DA               	addwfc	fsr2h,f,c
  3449  00175E  0E00               	movlw	0
  3450  001760  6EDF               	movwf	indf2,c
  3451                           
  3452                           ; BSR set to: 1
  3453                           ;motors.c: 11: unsigned char test[2];
  3454                           ;motors.c: 12: test[0] = tptr->ctrl[0];
  3455  001762  0101               	movlb	1	; () banked
  3456  001764  EE20 F002          	lfsr	2,2
  3457  001768  0101               	movlb	1	; () banked
  3458  00176A  51AC               	movf	move@tptr& (0+255),w,b
  3459  00176C  26D9               	addwf	fsr2l,f,c
  3460  00176E  0101               	movlb	1	; () banked
  3461  001770  51AD               	movf	(move@tptr+1)& (0+255),w,b
  3462  001772  22DA               	addwfc	fsr2h,f,c
  3463  001774  50DF               	movf	indf2,w,c
  3464  001776  0101               	movlb	1	; () banked
  3465  001778  6FAE               	movwf	move@test& (0+255),b
  3466                           
  3467                           ; BSR set to: 1
  3468                           ;motors.c: 13: test[1] = tptr->ctrl[1];
  3469  00177A  0101               	movlb	1	; () banked
  3470  00177C  EE20 F003          	lfsr	2,3
  3471  001780  0101               	movlb	1	; () banked
  3472  001782  51AC               	movf	move@tptr& (0+255),w,b
  3473  001784  26D9               	addwf	fsr2l,f,c
  3474  001786  0101               	movlb	1	; () banked
  3475  001788  51AD               	movf	(move@tptr+1)& (0+255),w,b
  3476  00178A  22DA               	addwfc	fsr2h,f,c
  3477  00178C  50DF               	movf	indf2,w,c
  3478  00178E  0101               	movlb	1	; () banked
  3479  001790  6FAF               	movwf	(move@test+1)& (0+255),b
  3480                           
  3481                           ; BSR set to: 1
  3482                           ;motors.c: 14: T1CONbits.TMR1ON = 1;;
  3483  001792  80CD               	bsf	4045,0,c	;volatile
  3484                           
  3485                           ; BSR set to: 1
  3486                           ;motors.c: 15: sendUARTarr(2,test);
  3487  001794  0101               	movlb	1	; () banked
  3488  001796  0E01               	movlw	high move@test
  3489  001798  0101               	movlb	1	; () banked
  3490  00179A  6FA9               	movwf	(sendUARTarr@data+1)& (0+255),b
  3491  00179C  0101               	movlb	1	; () banked
  3492  00179E  0EAE               	movlw	low move@test
  3493  0017A0  0101               	movlb	1	; () banked
  3494  0017A2  6FA8               	movwf	sendUARTarr@data& (0+255),b
  3495  0017A4  0E02               	movlw	2
  3496  0017A6  ECA9  F00E         	call	_sendUARTarr
  3497                           
  3498                           ;motors.c: 16: tptr->cmCount = 0;
  3499  0017AA  C1AC  FFD9         	movff	move@tptr,fsr2l
  3500  0017AE  C1AD  FFDA         	movff	move@tptr+1,fsr2h
  3501  0017B2  0E00               	movlw	0
  3502  0017B4  6EDE               	movwf	postinc2,c
  3503  0017B6  0E00               	movlw	0
  3504  0017B8  6EDD               	movwf	postdec2,c
  3505  0017BA  0012               	return	
  3506  0017BC                     __end_of_move:
  3507                           	opt stack 0
  3508                           tblptru	equ	0xFF8
  3509                           tblptrh	equ	0xFF7
  3510                           tblptrl	equ	0xFF6
  3511                           tablat	equ	0xFF5
  3512                           prodh	equ	0xFF4
  3513                           prodl	equ	0xFF3
  3514                           postinc0	equ	0xFEE
  3515                           wreg	equ	0xFE8
  3516                           indf1	equ	0xFE7
  3517                           postdec1	equ	0xFE5
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           postdec2	equ	0xFDD
  3523                           fsr2h	equ	0xFDA
  3524                           fsr2l	equ	0xFD9
  3525                           status	equ	0xFD8
  3526                           
  3527 ;; *************** function _sendUARTarr *****************
  3528 ;; Defined at:
  3529 ;;		line 85 in file "src/my_uart.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  length          1    wreg     unsigned char 
  3532 ;;  data            2    6[BANK1 ] PTR unsigned char 
  3533 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), stop@test(2), turn@test(2), 
  3534 ;;		 -> moveDist@test(2), move@test(2), 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  length          1    9[BANK1 ] unsigned char 
  3537 ;;  retval          1    8[BANK1 ] char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      enum E4455
  3540 ;; Registers used:
  3541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3547 ;;      Params:         0       0       2       0       0
  3548 ;;      Locals:         0       0       2       0       0
  3549 ;;      Temps:          0       0       0       0       0
  3550 ;;      Totals:         0       0       4       0       0
  3551 ;;Total ram usage:        4 bytes
  3552 ;; Hardware stack levels used:    1
  3553 ;; Hardware stack levels required when called:   13
  3554 ;; This function calls:
  3555 ;;		_ToMainLow_sendmsg
  3556 ;; This function is called by:
  3557 ;;		_move
  3558 ;;		_moveDist
  3559 ;;		_turn
  3560 ;;		_stop
  3561 ;;		_timer0_lthread
  3562 ;;		_timer1_lthread
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text14
  3567  001D52                     __ptext14:
  3568                           	opt stack 0
  3569  001D52                     _sendUARTarr:
  3570                           	opt stack 16
  3571                           
  3572                           ;incstack = 0
  3573                           ;sendUARTarr@length stored from wreg
  3574  001D52  0101               	movlb	1	; () banked
  3575  001D54  6FAB               	movwf	sendUARTarr@length& (0+255),b
  3576                           
  3577                           ; BSR set to: 1
  3578                           ;my_uart.c: 86: if(length > 10){
  3579  001D56  0E0A               	movlw	10
  3580  001D58  0101               	movlb	1	; () banked
  3581  001D5A  65AB               	cpfsgt	sendUARTarr@length& (0+255),b
  3582  001D5C  D001               	goto	l3514
  3583  001D5E  0012               	return	
  3584  001D60                     l3514:
  3585                           
  3586                           ; BSR set to: 1
  3587                           ;my_uart.c: 89: }
  3588                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  3589  001D60  0E1F               	movlw	31
  3590  001D62  0100               	movlb	0	; () banked
  3591  001D64  6FC3               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  3592  001D66  0101               	movlb	1	; () banked
  3593  001D68  0100               	movlb	0	; () banked
  3594  001D6A  C1A9  F0C5         	movff	sendUARTarr@data+1,ToMainLow_sendmsg@data+1
  3595  001D6E  0101               	movlb	1	; () banked
  3596  001D70  0100               	movlb	0	; () banked
  3597  001D72  C1A8  F0C4         	movff	sendUARTarr@data,ToMainLow_sendmsg@data
  3598  001D76  0101               	movlb	1	; () banked
  3599  001D78  51AB               	movf	sendUARTarr@length& (0+255),w,b
  3600  001D7A  EC24  F00F         	call	_ToMainLow_sendmsg
  3601  001D7E  0101               	movlb	1	; () banked
  3602  001D80  6FAA               	movwf	sendUARTarr@retval& (0+255),b
  3603  001D82  0012               	return	
  3604  001D84                     __end_of_sendUARTarr:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           prodh	equ	0xFF4
  3611                           prodl	equ	0xFF3
  3612                           postinc0	equ	0xFEE
  3613                           wreg	equ	0xFE8
  3614                           indf1	equ	0xFE7
  3615                           postdec1	equ	0xFE5
  3616                           fsr1h	equ	0xFE2
  3617                           fsr1l	equ	0xFE1
  3618                           indf2	equ	0xFDF
  3619                           postinc2	equ	0xFDE
  3620                           postdec2	equ	0xFDD
  3621                           fsr2h	equ	0xFDA
  3622                           fsr2l	equ	0xFD9
  3623                           status	equ	0xFD8
  3624                           
  3625 ;; *************** function _ToMainLow_sendmsg *****************
  3626 ;; Defined at:
  3627 ;;		line 103 in file "src/messages.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  length          1    wreg     unsigned char 
  3630 ;;  msgtype         1   67[BANK0 ] unsigned char 
  3631 ;;  data            2   68[BANK0 ] PTR void 
  3632 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  3633 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@uc(5), 
  3634 ;;		 -> NULL(0), 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  length          1    5[BANK1 ] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  1    wreg      char 
  3639 ;; Registers used:
  3640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3646 ;;      Params:         0       3       0       0       0
  3647 ;;      Locals:         0       0       1       0       0
  3648 ;;      Temps:          0       0       0       0       0
  3649 ;;      Totals:         0       3       1       0       0
  3650 ;;Total ram usage:        4 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; Hardware stack levels required when called:   12
  3653 ;; This function calls:
  3654 ;;		_send_msg
  3655 ;; This function is called by:
  3656 ;;		_sendUARTarr
  3657 ;;		_sendUARTbyte
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text15
  3662  001E48                     __ptext15:
  3663                           	opt stack 0
  3664  001E48                     _ToMainLow_sendmsg:
  3665                           	opt stack 16
  3666                           
  3667                           ; BSR set to: 1
  3668                           ;incstack = 0
  3669                           ;ToMainLow_sendmsg@length stored from wreg
  3670  001E48  0101               	movlb	1	; () banked
  3671  001E4A  6FA7               	movwf	ToMainLow_sendmsg@length& (0+255),b
  3672                           
  3673                           ; BSR set to: 1
  3674                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  3675  001E4C  0101               	movlb	1	; () banked
  3676  001E4E  0E01               	movlw	high _ToMainLow_MQ
  3677  001E50  0100               	movlb	0	; () banked
  3678  001E52  6FBD               	movwf	(send_msg@qptr+1)& (0+255),b
  3679  001E54  0101               	movlb	1	; () banked
  3680  001E56  0E6C               	movlw	low _ToMainLow_MQ
  3681  001E58  0100               	movlb	0	; () banked
  3682  001E5A  6FBC               	movwf	send_msg@qptr& (0+255),b
  3683  001E5C  C1A7  F0BE         	movff	ToMainLow_sendmsg@length,send_msg@length
  3684  001E60  C0C3  F0BF         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  3685  001E64  0100               	movlb	0	; () banked
  3686  001E66  C0C5  F0C1         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  3687  001E6A  0100               	movlb	0	; () banked
  3688  001E6C  C0C4  F0C0         	movff	ToMainLow_sendmsg@data,send_msg@data
  3689  001E70  EC52  F007         	call	_send_msg	;wreg free
  3690  001E74  0012               	return	
  3691  001E76                     __end_of_ToMainLow_sendmsg:
  3692                           	opt stack 0
  3693                           tblptru	equ	0xFF8
  3694                           tblptrh	equ	0xFF7
  3695                           tblptrl	equ	0xFF6
  3696                           tablat	equ	0xFF5
  3697                           prodh	equ	0xFF4
  3698                           prodl	equ	0xFF3
  3699                           postinc0	equ	0xFEE
  3700                           wreg	equ	0xFE8
  3701                           indf1	equ	0xFE7
  3702                           postdec1	equ	0xFE5
  3703                           fsr1h	equ	0xFE2
  3704                           fsr1l	equ	0xFE1
  3705                           indf2	equ	0xFDF
  3706                           postinc2	equ	0xFDE
  3707                           postdec2	equ	0xFDD
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _send_msg *****************
  3713 ;; Defined at:
  3714 ;;		line 24 in file "src/messages.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  qptr            2   60[BANK0 ] PTR struct __msg_queue
  3717 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3718 ;;  length          1   62[BANK0 ] unsigned char 
  3719 ;;  msgtype         1   63[BANK0 ] unsigned char 
  3720 ;;  data            2   64[BANK0 ] PTR void 
  3721 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  3722 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  3723 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  qmsg            2    3[BANK1 ] PTR struct __msg
  3726 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3727 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3728 ;;  tlength         2    0[BANK1 ] unsigned int 
  3729 ;;  slot            1    2[BANK1 ] unsigned char 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      char 
  3732 ;; Registers used:
  3733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3739 ;;      Params:         0       6       0       0       0
  3740 ;;      Locals:         0       0       5       0       0
  3741 ;;      Temps:          0       1       0       0       0
  3742 ;;      Totals:         0       7       5       0       0
  3743 ;;Total ram usage:       12 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:   11
  3746 ;; This function calls:
  3747 ;;		_memcpy
  3748 ;; This function is called by:
  3749 ;;		_ToMainLow_sendmsg
  3750 ;;		_FromMainLow_sendmsg
  3751 ;;		_FromMainHigh_sendmsg
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text16
  3756  000EA4                     __ptext16:
  3757                           	opt stack 0
  3758  000EA4                     _send_msg:
  3759                           	opt stack 17
  3760                           
  3761                           ;messages.c: 25: unsigned char slot;
  3762                           ;messages.c: 27: msg *qmsg;
  3763                           ;messages.c: 28: size_t tlength = length;
  3764                           
  3765                           ;incstack = 0
  3766  000EA4  0100               	movlb	0	; () banked
  3767  000EA6  0101               	movlb	1	; () banked
  3768  000EA8  C0BE  F1A2         	movff	send_msg@length,send_msg@tlength
  3769  000EAC  0101               	movlb	1	; () banked
  3770  000EAE  6BA3               	clrf	(send_msg@tlength+1)& (0+255),b
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3774  000EB0  0100               	movlb	0	; () banked
  3775  000EB2  EE20 F034          	lfsr	2,52
  3776  000EB6  0100               	movlb	0	; () banked
  3777  000EB8  51BC               	movf	send_msg@qptr& (0+255),w,b
  3778  000EBA  26D9               	addwf	fsr2l,f,c
  3779  000EBC  0100               	movlb	0	; () banked
  3780  000EBE  51BD               	movf	(send_msg@qptr+1)& (0+255),w,b
  3781  000EC0  22DA               	addwfc	fsr2h,f,c
  3782  000EC2  50DF               	movf	indf2,w,c
  3783  000EC4  0101               	movlb	1	; () banked
  3784  000EC6  6FA4               	movwf	send_msg@slot& (0+255),b
  3785                           
  3786                           ; BSR set to: 1
  3787                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3788  000EC8  0101               	movlb	1	; () banked
  3789  000ECA  51A4               	movf	send_msg@slot& (0+255),w,b
  3790  000ECC  0D0D               	mullw	13
  3791  000ECE  50F3               	movf	prodl,w,c
  3792  000ED0  0100               	movlb	0	; () banked
  3793  000ED2  25BC               	addwf	send_msg@qptr& (0+255),w,b
  3794  000ED4  0101               	movlb	1	; () banked
  3795  000ED6  6FA5               	movwf	send_msg@qmsg& (0+255),b
  3796  000ED8  50F4               	movf	prodh,w,c
  3797  000EDA  0100               	movlb	0	; () banked
  3798  000EDC  21BD               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3799  000EDE  0101               	movlb	1	; () banked
  3800  000EE0  6FA6               	movwf	(send_msg@qmsg+1)& (0+255),b
  3801                           
  3802                           ; BSR set to: 1
  3803                           ;messages.c: 41: if (qmsg->full != 0) {
  3804  000EE2  C1A5  FFD9         	movff	send_msg@qmsg,fsr2l
  3805  000EE6  C1A6  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3806  000EEA  50DF               	movf	indf2,w,c
  3807  000EEC  B4D8               	btfsc	status,2,c
  3808  000EEE  D002               	goto	l3288
  3809                           
  3810                           ; BSR set to: 1
  3811                           ;messages.c: 42: return (-1);
  3812  000EF0  0EFF               	movlw	255
  3813  000EF2  0012               	return	
  3814  000EF4                     l3288:
  3815                           
  3816                           ; BSR set to: 1
  3817                           ;messages.c: 43: }
  3818                           ;messages.c: 46: qmsg->length = length;
  3819  000EF4  0101               	movlb	1	; () banked
  3820  000EF6  EE20 F001          	lfsr	2,1
  3821  000EFA  0101               	movlb	1	; () banked
  3822  000EFC  51A5               	movf	send_msg@qmsg& (0+255),w,b
  3823  000EFE  26D9               	addwf	fsr2l,f,c
  3824  000F00  0101               	movlb	1	; () banked
  3825  000F02  51A6               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3826  000F04  22DA               	addwfc	fsr2h,f,c
  3827  000F06  0100               	movlb	0	; () banked
  3828  000F08  C0BE  FFDF         	movff	send_msg@length,indf2
  3829                           
  3830                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3831  000F0C  0101               	movlb	1	; () banked
  3832  000F0E  EE20 F002          	lfsr	2,2
  3833  000F12  0101               	movlb	1	; () banked
  3834  000F14  51A5               	movf	send_msg@qmsg& (0+255),w,b
  3835  000F16  26D9               	addwf	fsr2l,f,c
  3836  000F18  0101               	movlb	1	; () banked
  3837  000F1A  51A6               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3838  000F1C  22DA               	addwfc	fsr2h,f,c
  3839  000F1E  0100               	movlb	0	; () banked
  3840  000F20  C0BF  FFDF         	movff	send_msg@msgtype,indf2
  3841                           
  3842                           ; BSR set to: 0
  3843                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3844  000F24  0E03               	movlw	3
  3845  000F26  0101               	movlb	1	; () banked
  3846  000F28  25A5               	addwf	send_msg@qmsg& (0+255),w,b
  3847  000F2A  0100               	movlb	0	; () banked
  3848  000F2C  6FB2               	movwf	memcpy@d1& (0+255),b
  3849  000F2E  0E00               	movlw	0
  3850  000F30  0101               	movlb	1	; () banked
  3851  000F32  21A6               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3852  000F34  0100               	movlb	0	; () banked
  3853  000F36  6FB3               	movwf	(memcpy@d1+1)& (0+255),b
  3854  000F38  0100               	movlb	0	; () banked
  3855  000F3A  C0C1  F0B5         	movff	send_msg@data+1,memcpy@s1+1
  3856  000F3E  0100               	movlb	0	; () banked
  3857  000F40  C0C0  F0B4         	movff	send_msg@data,memcpy@s1
  3858  000F44  C1A2  F0B6         	movff	send_msg@tlength,memcpy@n
  3859  000F48  C1A3  F0B7         	movff	send_msg@tlength+1,memcpy@n+1
  3860  000F4C  EC7F  F00D         	call	_memcpy	;wreg free
  3861                           
  3862                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3863  000F50  0100               	movlb	0	; () banked
  3864  000F52  EE20 F034          	lfsr	2,52
  3865  000F56  0100               	movlb	0	; () banked
  3866  000F58  51BC               	movf	send_msg@qptr& (0+255),w,b
  3867  000F5A  26D9               	addwf	fsr2l,f,c
  3868  000F5C  0100               	movlb	0	; () banked
  3869  000F5E  51BD               	movf	(send_msg@qptr+1)& (0+255),w,b
  3870  000F60  22DA               	addwfc	fsr2h,f,c
  3871  000F62  0100               	movlb	0	; () banked
  3872  000F64  EE10 F034          	lfsr	1,52
  3873  000F68  0100               	movlb	0	; () banked
  3874  000F6A  51BC               	movf	send_msg@qptr& (0+255),w,b
  3875  000F6C  26E1               	addwf	fsr1l,f,c
  3876  000F6E  0100               	movlb	0	; () banked
  3877  000F70  51BD               	movf	(send_msg@qptr+1)& (0+255),w,b
  3878  000F72  22E2               	addwfc	fsr1h,f,c
  3879  000F74  50E7               	movf	indf1,w,c
  3880  000F76  0100               	movlb	0	; () banked
  3881  000F78  6FC2               	movwf	??_send_msg& (0+255),b
  3882  000F7A  0100               	movlb	0	; () banked
  3883  000F7C  29C2               	incf	??_send_msg& (0+255),w,b
  3884  000F7E  0B03               	andlw	3
  3885  000F80  6EDF               	movwf	indf2,c
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;messages.c: 59: qmsg->full = 1;
  3889  000F82  C1A5  FFD9         	movff	send_msg@qmsg,fsr2l
  3890  000F86  C1A6  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3891  000F8A  0E01               	movlw	1
  3892  000F8C  6EDF               	movwf	indf2,c
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;messages.c: 60: return (1);
  3896  000F8E  0E01               	movlw	1
  3897  000F90  0012               	return	
  3898  000F92                     __end_of_send_msg:
  3899                           	opt stack 0
  3900                           tblptru	equ	0xFF8
  3901                           tblptrh	equ	0xFF7
  3902                           tblptrl	equ	0xFF6
  3903                           tablat	equ	0xFF5
  3904                           prodh	equ	0xFF4
  3905                           prodl	equ	0xFF3
  3906                           postinc0	equ	0xFEE
  3907                           wreg	equ	0xFE8
  3908                           indf1	equ	0xFE7
  3909                           postdec1	equ	0xFE5
  3910                           fsr1h	equ	0xFE2
  3911                           fsr1l	equ	0xFE1
  3912                           indf2	equ	0xFDF
  3913                           postinc2	equ	0xFDE
  3914                           postdec2	equ	0xFDD
  3915                           fsr2h	equ	0xFDA
  3916                           fsr2l	equ	0xFD9
  3917                           status	equ	0xFD8
  3918                           
  3919 ;; *************** function _init_uart_recv *****************
  3920 ;; Defined at:
  3921 ;;		line 80 in file "src/my_uart.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  uc              2   50[BANK0 ] PTR struct __uart_comm
  3924 ;;		 -> main@uc(5), 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;		None
  3927 ;; Return value:  Size  Location     Type
  3928 ;;		None               void
  3929 ;; Registers used:
  3930 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3936 ;;      Params:         0       2       0       0       0
  3937 ;;      Locals:         0       0       0       0       0
  3938 ;;      Temps:          0       0       0       0       0
  3939 ;;      Totals:         0       2       0       0       0
  3940 ;;Total ram usage:        2 bytes
  3941 ;; Hardware stack levels used:    1
  3942 ;; Hardware stack levels required when called:   10
  3943 ;; This function calls:
  3944 ;;		Nothing
  3945 ;; This function is called by:
  3946 ;;		_main
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text17
  3951  001F66                     __ptext17:
  3952                           	opt stack 0
  3953  001F66                     _init_uart_recv:
  3954                           	opt stack 20
  3955                           
  3956                           ;my_uart.c: 81: uc_ptr = uc;
  3957                           
  3958                           ;incstack = 0
  3959  001F66  0100               	movlb	0	; () banked
  3960  001F68  C0B3  F062         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3961  001F6C  0100               	movlb	0	; () banked
  3962  001F6E  C0B2  F061         	movff	init_uart_recv@uc,_uc_ptr
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  3966  001F72  EE20 F004          	lfsr	2,4
  3967  001F76  5061               	movf	_uc_ptr,w,c
  3968  001F78  26D9               	addwf	fsr2l,f,c
  3969  001F7A  5062               	movf	_uc_ptr+1,w,c
  3970  001F7C  22DA               	addwfc	fsr2h,f,c
  3971  001F7E  0E00               	movlw	0
  3972  001F80  6EDF               	movwf	indf2,c
  3973                           
  3974                           ; BSR set to: 0
  3975  001F82  0012               	return	
  3976  001F84                     __end_of_init_uart_recv:
  3977                           	opt stack 0
  3978                           tblptru	equ	0xFF8
  3979                           tblptrh	equ	0xFF7
  3980                           tblptrl	equ	0xFF6
  3981                           tablat	equ	0xFF5
  3982                           prodh	equ	0xFF4
  3983                           prodl	equ	0xFF3
  3984                           postinc0	equ	0xFEE
  3985                           wreg	equ	0xFE8
  3986                           indf1	equ	0xFE7
  3987                           postdec1	equ	0xFE5
  3988                           fsr1h	equ	0xFE2
  3989                           fsr1l	equ	0xFE1
  3990                           indf2	equ	0xFDF
  3991                           postinc2	equ	0xFDE
  3992                           postdec2	equ	0xFDD
  3993                           fsr2h	equ	0xFDA
  3994                           fsr2l	equ	0xFD9
  3995                           status	equ	0xFD8
  3996                           
  3997 ;; *************** function _init_uart_lthread *****************
  3998 ;; Defined at:
  3999 ;;		line 7 in file "src/uart_thread.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  uptr            2   50[BANK0 ] PTR struct __uart_thread
  4002 ;;		 -> main@uthread_data(10), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;		None               void
  4007 ;; Registers used:
  4008 ;;		None
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4014 ;;      Params:         0       2       0       0       0
  4015 ;;      Locals:         0       0       0       0       0
  4016 ;;      Temps:          0       0       0       0       0
  4017 ;;      Totals:         0       2       0       0       0
  4018 ;;Total ram usage:        2 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:   10
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_main
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text18
  4029  002008                     __ptext18:
  4030                           	opt stack 0
  4031  002008                     _init_uart_lthread:
  4032                           	opt stack 20
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;incstack = 0
  4036  002008  0012               	return	
  4037  00200A                     __end_of_init_uart_lthread:
  4038                           	opt stack 0
  4039                           tblptru	equ	0xFF8
  4040                           tblptrh	equ	0xFF7
  4041                           tblptrl	equ	0xFF6
  4042                           tablat	equ	0xFF5
  4043                           prodh	equ	0xFF4
  4044                           prodl	equ	0xFF3
  4045                           postinc0	equ	0xFEE
  4046                           wreg	equ	0xFE8
  4047                           indf1	equ	0xFE7
  4048                           postdec1	equ	0xFE5
  4049                           fsr1h	equ	0xFE2
  4050                           fsr1l	equ	0xFE1
  4051                           indf2	equ	0xFDF
  4052                           postinc2	equ	0xFDE
  4053                           postdec2	equ	0xFDD
  4054                           fsr2h	equ	0xFDA
  4055                           fsr2l	equ	0xFD9
  4056                           status	equ	0xFD8
  4057                           
  4058 ;; *************** function _init_timer1_lthread *****************
  4059 ;; Defined at:
  4060 ;;		line 6 in file "src/timer1_thread.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  tptr            2   50[BANK0 ] PTR struct __timer1_thre
  4063 ;;		 -> main@t1thread_data(12), 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4075 ;;      Params:         0       2       0       0       0
  4076 ;;      Locals:         0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0
  4078 ;;      Totals:         0       2       0       0       0
  4079 ;;Total ram usage:        2 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:   10
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text19
  4090  001502                     __ptext19:
  4091                           	opt stack 0
  4092  001502                     _init_timer1_lthread:
  4093                           	opt stack 20
  4094                           
  4095                           ;timer1_thread.c: 7: tptr->cmCount = 0;
  4096                           
  4097                           ;incstack = 0
  4098  001502  C0B2  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  4099  001506  C0B3  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  4100  00150A  0E00               	movlw	0
  4101  00150C  6EDE               	movwf	postinc2,c
  4102  00150E  0E00               	movlw	0
  4103  001510  6EDD               	movwf	postdec2,c
  4104                           
  4105                           ;timer1_thread.c: 8: tptr->ctrl[0] = 80;
  4106  001512  0100               	movlb	0	; () banked
  4107  001514  EE20 F002          	lfsr	2,2
  4108  001518  0100               	movlb	0	; () banked
  4109  00151A  51B2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4110  00151C  26D9               	addwf	fsr2l,f,c
  4111  00151E  0100               	movlb	0	; () banked
  4112  001520  51B3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4113  001522  22DA               	addwfc	fsr2h,f,c
  4114  001524  0E50               	movlw	80
  4115  001526  6EDF               	movwf	indf2,c
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;timer1_thread.c: 9: tptr->ctrl[1] = 205;
  4119  001528  0100               	movlb	0	; () banked
  4120  00152A  EE20 F003          	lfsr	2,3
  4121  00152E  0100               	movlb	0	; () banked
  4122  001530  51B2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4123  001532  26D9               	addwf	fsr2l,f,c
  4124  001534  0100               	movlb	0	; () banked
  4125  001536  51B3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4126  001538  22DA               	addwfc	fsr2h,f,c
  4127  00153A  0ECD               	movlw	205
  4128  00153C  6EDF               	movwf	indf2,c
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;timer1_thread.c: 10: tptr->cmDist = 65458;
  4132  00153E  0100               	movlb	0	; () banked
  4133  001540  EE20 F004          	lfsr	2,4
  4134  001544  0100               	movlb	0	; () banked
  4135  001546  51B2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4136  001548  26D9               	addwf	fsr2l,f,c
  4137  00154A  0100               	movlb	0	; () banked
  4138  00154C  51B3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4139  00154E  22DA               	addwfc	fsr2h,f,c
  4140  001550  0EB2               	movlw	178
  4141  001552  6EDE               	movwf	postinc2,c
  4142  001554  0EFF               	movlw	255
  4143  001556  6EDD               	movwf	postdec2,c
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;timer1_thread.c: 11: tptr->curMove = 0;
  4147  001558  0100               	movlb	0	; () banked
  4148  00155A  EE20 F006          	lfsr	2,6
  4149  00155E  0100               	movlb	0	; () banked
  4150  001560  51B2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4151  001562  26D9               	addwf	fsr2l,f,c
  4152  001564  0100               	movlb	0	; () banked
  4153  001566  51B3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4154  001568  22DA               	addwfc	fsr2h,f,c
  4155  00156A  0E00               	movlw	0
  4156  00156C  6EDE               	movwf	postinc2,c
  4157  00156E  0E00               	movlw	0
  4158  001570  6EDD               	movwf	postdec2,c
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;timer1_thread.c: 12: tptr->distLim = false;
  4162  001572  0100               	movlb	0	; () banked
  4163  001574  EE20 F00A          	lfsr	2,10
  4164  001578  0100               	movlb	0	; () banked
  4165  00157A  51B2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4166  00157C  26D9               	addwf	fsr2l,f,c
  4167  00157E  0100               	movlb	0	; () banked
  4168  001580  51B3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4169  001582  22DA               	addwfc	fsr2h,f,c
  4170  001584  0E00               	movlw	0
  4171  001586  6EDF               	movwf	indf2,c
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;timer1_thread.c: 13: tptr->ready = true;
  4175  001588  0100               	movlb	0	; () banked
  4176  00158A  EE20 F00B          	lfsr	2,11
  4177  00158E  0100               	movlb	0	; () banked
  4178  001590  51B2               	movf	init_timer1_lthread@tptr& (0+255),w,b
  4179  001592  26D9               	addwf	fsr2l,f,c
  4180  001594  0100               	movlb	0	; () banked
  4181  001596  51B3               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  4182  001598  22DA               	addwfc	fsr2h,f,c
  4183  00159A  0E01               	movlw	1
  4184  00159C  6EDF               	movwf	indf2,c
  4185                           
  4186                           ; BSR set to: 0
  4187  00159E  0012               	return	
  4188  0015A0                     __end_of_init_timer1_lthread:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           prodh	equ	0xFF4
  4195                           prodl	equ	0xFF3
  4196                           postinc0	equ	0xFEE
  4197                           wreg	equ	0xFE8
  4198                           indf1	equ	0xFE7
  4199                           postdec1	equ	0xFE5
  4200                           fsr1h	equ	0xFE2
  4201                           fsr1l	equ	0xFE1
  4202                           indf2	equ	0xFDF
  4203                           postinc2	equ	0xFDE
  4204                           postdec2	equ	0xFDD
  4205                           fsr2h	equ	0xFDA
  4206                           fsr2l	equ	0xFD9
  4207                           status	equ	0xFD8
  4208                           
  4209 ;; *************** function _init_timer0_lthread *****************
  4210 ;; Defined at:
  4211 ;;		line 7 in file "src/timer0_thread.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  tptr            2   50[BANK0 ] PTR struct __timer0_thre
  4214 ;;		 -> main@t0thread_data(12), 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;		None               void
  4219 ;; Registers used:
  4220 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4226 ;;      Params:         0       2       0       0       0
  4227 ;;      Locals:         0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0
  4229 ;;      Totals:         0       2       0       0       0
  4230 ;;Total ram usage:        2 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:   10
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_main
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text20
  4241  001150                     __ptext20:
  4242                           	opt stack 0
  4243  001150                     _init_timer0_lthread:
  4244                           	opt stack 20
  4245                           
  4246                           ;timer0_thread.c: 8: tptr->cmCount = 0;
  4247                           
  4248                           ; BSR set to: 0
  4249                           ;incstack = 0
  4250  001150  C0B2  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  4251  001154  C0B3  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  4252  001158  0E00               	movlw	0
  4253  00115A  6EDE               	movwf	postinc2,c
  4254  00115C  0E00               	movlw	0
  4255  00115E  6EDD               	movwf	postdec2,c
  4256                           
  4257                           ;timer0_thread.c: 9: tptr->ctrlL[0] = 0x20;
  4258  001160  0100               	movlb	0	; () banked
  4259  001162  EE20 F002          	lfsr	2,2
  4260  001166  0100               	movlb	0	; () banked
  4261  001168  51B2               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4262  00116A  26D9               	addwf	fsr2l,f,c
  4263  00116C  0100               	movlb	0	; () banked
  4264  00116E  51B3               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4265  001170  22DA               	addwfc	fsr2h,f,c
  4266  001172  0E20               	movlw	32
  4267  001174  6EDF               	movwf	indf2,c
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;timer0_thread.c: 10: tptr->ctrlL[1] = 0xE0;
  4271  001176  0100               	movlb	0	; () banked
  4272  001178  EE20 F003          	lfsr	2,3
  4273  00117C  0100               	movlb	0	; () banked
  4274  00117E  51B2               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4275  001180  26D9               	addwf	fsr2l,f,c
  4276  001182  0100               	movlb	0	; () banked
  4277  001184  51B3               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4278  001186  22DA               	addwfc	fsr2h,f,c
  4279  001188  0EE0               	movlw	224
  4280  00118A  6EDF               	movwf	indf2,c
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;timer0_thread.c: 11: tptr->ctrlR[0] = 0xA0;
  4284  00118C  0100               	movlb	0	; () banked
  4285  00118E  EE20 F004          	lfsr	2,4
  4286  001192  0100               	movlb	0	; () banked
  4287  001194  51B2               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4288  001196  26D9               	addwf	fsr2l,f,c
  4289  001198  0100               	movlb	0	; () banked
  4290  00119A  51B3               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4291  00119C  22DA               	addwfc	fsr2h,f,c
  4292  00119E  0EA0               	movlw	160
  4293  0011A0  6EDF               	movwf	indf2,c
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;timer0_thread.c: 12: tptr->ctrlR[1] = 0x5F;
  4297  0011A2  0100               	movlb	0	; () banked
  4298  0011A4  EE20 F005          	lfsr	2,5
  4299  0011A8  0100               	movlb	0	; () banked
  4300  0011AA  51B2               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4301  0011AC  26D9               	addwf	fsr2l,f,c
  4302  0011AE  0100               	movlb	0	; () banked
  4303  0011B0  51B3               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4304  0011B2  22DA               	addwfc	fsr2h,f,c
  4305  0011B4  0E5F               	movlw	95
  4306  0011B6  6EDF               	movwf	indf2,c
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;timer0_thread.c: 13: tptr->cmDist = 65503;
  4310  0011B8  0100               	movlb	0	; () banked
  4311  0011BA  EE20 F006          	lfsr	2,6
  4312  0011BE  0100               	movlb	0	; () banked
  4313  0011C0  51B2               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4314  0011C2  26D9               	addwf	fsr2l,f,c
  4315  0011C4  0100               	movlb	0	; () banked
  4316  0011C6  51B3               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4317  0011C8  22DA               	addwfc	fsr2h,f,c
  4318  0011CA  0EDF               	movlw	223
  4319  0011CC  6EDE               	movwf	postinc2,c
  4320  0011CE  0EFF               	movlw	255
  4321  0011D0  6EDD               	movwf	postdec2,c
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;timer0_thread.c: 14: tptr->curMove = 0;
  4325  0011D2  0100               	movlb	0	; () banked
  4326  0011D4  EE20 F008          	lfsr	2,8
  4327  0011D8  0100               	movlb	0	; () banked
  4328  0011DA  51B2               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4329  0011DC  26D9               	addwf	fsr2l,f,c
  4330  0011DE  0100               	movlb	0	; () banked
  4331  0011E0  51B3               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4332  0011E2  22DA               	addwfc	fsr2h,f,c
  4333  0011E4  0E00               	movlw	0
  4334  0011E6  6EDE               	movwf	postinc2,c
  4335  0011E8  0E00               	movlw	0
  4336  0011EA  6EDD               	movwf	postdec2,c
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;timer0_thread.c: 15: tptr->distLim = false;
  4340  0011EC  0100               	movlb	0	; () banked
  4341  0011EE  EE20 F00A          	lfsr	2,10
  4342  0011F2  0100               	movlb	0	; () banked
  4343  0011F4  51B2               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4344  0011F6  26D9               	addwf	fsr2l,f,c
  4345  0011F8  0100               	movlb	0	; () banked
  4346  0011FA  51B3               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4347  0011FC  22DA               	addwfc	fsr2h,f,c
  4348  0011FE  0E00               	movlw	0
  4349  001200  6EDF               	movwf	indf2,c
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;timer0_thread.c: 16: tptr->ready = true;
  4353  001202  0100               	movlb	0	; () banked
  4354  001204  EE20 F00B          	lfsr	2,11
  4355  001208  0100               	movlb	0	; () banked
  4356  00120A  51B2               	movf	init_timer0_lthread@tptr& (0+255),w,b
  4357  00120C  26D9               	addwf	fsr2l,f,c
  4358  00120E  0100               	movlb	0	; () banked
  4359  001210  51B3               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  4360  001212  22DA               	addwfc	fsr2h,f,c
  4361  001214  0E01               	movlw	1
  4362  001216  6EDF               	movwf	indf2,c
  4363                           
  4364                           ; BSR set to: 0
  4365  001218  0012               	return	
  4366  00121A                     __end_of_init_timer0_lthread:
  4367                           	opt stack 0
  4368                           tblptru	equ	0xFF8
  4369                           tblptrh	equ	0xFF7
  4370                           tblptrl	equ	0xFF6
  4371                           tablat	equ	0xFF5
  4372                           prodh	equ	0xFF4
  4373                           prodl	equ	0xFF3
  4374                           postinc0	equ	0xFEE
  4375                           wreg	equ	0xFE8
  4376                           indf1	equ	0xFE7
  4377                           postdec1	equ	0xFE5
  4378                           fsr1h	equ	0xFE2
  4379                           fsr1l	equ	0xFE1
  4380                           indf2	equ	0xFDF
  4381                           postinc2	equ	0xFDE
  4382                           postdec2	equ	0xFDD
  4383                           fsr2h	equ	0xFDA
  4384                           fsr2l	equ	0xFD9
  4385                           status	equ	0xFD8
  4386                           
  4387 ;; *************** function _init_queues *****************
  4388 ;; Defined at:
  4389 ;;		line 194 in file "src/messages.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;		None
  4392 ;; Auto vars:     Size  Location     Type
  4393 ;;		None
  4394 ;; Return value:  Size  Location     Type
  4395 ;;		None               void
  4396 ;; Registers used:
  4397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4403 ;;      Params:         0       0       0       0       0
  4404 ;;      Locals:         0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0
  4406 ;;      Totals:         0       0       0       0       0
  4407 ;;Total ram usage:        0 bytes
  4408 ;; Hardware stack levels used:    1
  4409 ;; Hardware stack levels required when called:   11
  4410 ;; This function calls:
  4411 ;;		_init_queue
  4412 ;; This function is called by:
  4413 ;;		_main
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text21
  4418  001A52                     __ptext21:
  4419                           	opt stack 0
  4420  001A52                     _init_queues:
  4421                           	opt stack 19
  4422                           
  4423                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;incstack = 0
  4427  001A52  0E00               	movlw	0
  4428  001A54  6E5F               	movwf	_MQ_Main_Willing_to_block,c
  4429                           
  4430                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  4431  001A56  0101               	movlb	1	; () banked
  4432  001A58  0E01               	movlw	high _ToMainLow_MQ
  4433  001A5A  0100               	movlb	0	; () banked
  4434  001A5C  6FB3               	movwf	(init_queue@qptr+1)& (0+255),b
  4435  001A5E  0101               	movlb	1	; () banked
  4436  001A60  0E6C               	movlw	low _ToMainLow_MQ
  4437  001A62  0100               	movlb	0	; () banked
  4438  001A64  6FB2               	movwf	init_queue@qptr& (0+255),b
  4439  001A66  EC11  F00C         	call	_init_queue	;wreg free
  4440                           
  4441                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  4442  001A6A  0101               	movlb	1	; () banked
  4443  001A6C  0E01               	movlw	high _ToMainHigh_MQ
  4444  001A6E  0100               	movlb	0	; () banked
  4445  001A70  6FB3               	movwf	(init_queue@qptr+1)& (0+255),b
  4446  001A72  0101               	movlb	1	; () banked
  4447  001A74  0E36               	movlw	low _ToMainHigh_MQ
  4448  001A76  0100               	movlb	0	; () banked
  4449  001A78  6FB2               	movwf	init_queue@qptr& (0+255),b
  4450  001A7A  EC11  F00C         	call	_init_queue	;wreg free
  4451                           
  4452                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  4453  001A7E  0101               	movlb	1	; () banked
  4454  001A80  0E01               	movlw	high _FromMainLow_MQ
  4455  001A82  0100               	movlb	0	; () banked
  4456  001A84  6FB3               	movwf	(init_queue@qptr+1)& (0+255),b
  4457  001A86  0101               	movlb	1	; () banked
  4458  001A88  0E00               	movlw	low _FromMainLow_MQ
  4459  001A8A  0100               	movlb	0	; () banked
  4460  001A8C  6FB2               	movwf	init_queue@qptr& (0+255),b
  4461  001A8E  EC11  F00C         	call	_init_queue	;wreg free
  4462                           
  4463                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  4464  001A92  0102               	movlb	2	; () banked
  4465  001A94  0E02               	movlw	high _FromMainHigh_MQ
  4466  001A96  0100               	movlb	0	; () banked
  4467  001A98  6FB3               	movwf	(init_queue@qptr+1)& (0+255),b
  4468  001A9A  0102               	movlb	2	; () banked
  4469  001A9C  0E55               	movlw	low _FromMainHigh_MQ
  4470  001A9E  0100               	movlb	0	; () banked
  4471  001AA0  6FB2               	movwf	init_queue@qptr& (0+255),b
  4472  001AA2  EC11  F00C         	call	_init_queue	;wreg free
  4473  001AA6  0012               	return	
  4474  001AA8                     __end_of_init_queues:
  4475                           	opt stack 0
  4476                           tblptru	equ	0xFF8
  4477                           tblptrh	equ	0xFF7
  4478                           tblptrl	equ	0xFF6
  4479                           tablat	equ	0xFF5
  4480                           prodh	equ	0xFF4
  4481                           prodl	equ	0xFF3
  4482                           postinc0	equ	0xFEE
  4483                           wreg	equ	0xFE8
  4484                           indf1	equ	0xFE7
  4485                           postdec1	equ	0xFE5
  4486                           fsr1h	equ	0xFE2
  4487                           fsr1l	equ	0xFE1
  4488                           indf2	equ	0xFDF
  4489                           postinc2	equ	0xFDE
  4490                           postdec2	equ	0xFDD
  4491                           fsr2h	equ	0xFDA
  4492                           fsr2l	equ	0xFD9
  4493                           status	equ	0xFD8
  4494                           
  4495 ;; *************** function _init_queue *****************
  4496 ;; Defined at:
  4497 ;;		line 14 in file "src/messages.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  4500 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;  i               1   52[BANK0 ] unsigned char 
  4503 ;; Return value:  Size  Location     Type
  4504 ;;		None               void
  4505 ;; Registers used:
  4506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4512 ;;      Params:         0       2       0       0       0
  4513 ;;      Locals:         0       1       0       0       0
  4514 ;;      Temps:          0       0       0       0       0
  4515 ;;      Totals:         0       3       0       0       0
  4516 ;;Total ram usage:        3 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:   10
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_init_queues
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text22
  4527  001822                     __ptext22:
  4528                           	opt stack 0
  4529  001822                     _init_queue:
  4530                           	opt stack 19
  4531                           
  4532                           ;messages.c: 15: unsigned char i;
  4533                           ;messages.c: 17: qptr->cur_write_ind = 0;
  4534                           
  4535                           ;incstack = 0
  4536  001822  0100               	movlb	0	; () banked
  4537  001824  EE20 F034          	lfsr	2,52
  4538  001828  0100               	movlb	0	; () banked
  4539  00182A  51B2               	movf	init_queue@qptr& (0+255),w,b
  4540  00182C  26D9               	addwf	fsr2l,f,c
  4541  00182E  0100               	movlb	0	; () banked
  4542  001830  51B3               	movf	(init_queue@qptr+1)& (0+255),w,b
  4543  001832  22DA               	addwfc	fsr2h,f,c
  4544  001834  0E00               	movlw	0
  4545  001836  6EDF               	movwf	indf2,c
  4546                           
  4547                           ;messages.c: 18: qptr->cur_read_ind = 0;
  4548  001838  0100               	movlb	0	; () banked
  4549  00183A  EE20 F035          	lfsr	2,53
  4550  00183E  0100               	movlb	0	; () banked
  4551  001840  51B2               	movf	init_queue@qptr& (0+255),w,b
  4552  001842  26D9               	addwf	fsr2l,f,c
  4553  001844  0100               	movlb	0	; () banked
  4554  001846  51B3               	movf	(init_queue@qptr+1)& (0+255),w,b
  4555  001848  22DA               	addwfc	fsr2h,f,c
  4556  00184A  0E00               	movlw	0
  4557  00184C  6EDF               	movwf	indf2,c
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  4561  00184E  0E00               	movlw	0
  4562  001850  0100               	movlb	0	; () banked
  4563  001852  6FB4               	movwf	init_queue@i& (0+255),b
  4564                           
  4565                           ; BSR set to: 0
  4566  001854  0E03               	movlw	3
  4567  001856  0100               	movlb	0	; () banked
  4568  001858  65B4               	cpfsgt	init_queue@i& (0+255),b
  4569  00185A  D001               	goto	l3454
  4570  00185C  0012               	return	
  4571  00185E                     l3454:
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;messages.c: 20: qptr->queue[i].full = 0;
  4575  00185E  0100               	movlb	0	; () banked
  4576  001860  51B4               	movf	init_queue@i& (0+255),w,b
  4577  001862  0D0D               	mullw	13
  4578  001864  50F3               	movf	prodl,w,c
  4579  001866  0100               	movlb	0	; () banked
  4580  001868  25B2               	addwf	init_queue@qptr& (0+255),w,b
  4581  00186A  6ED9               	movwf	fsr2l,c
  4582  00186C  50F4               	movf	prodh,w,c
  4583  00186E  0100               	movlb	0	; () banked
  4584  001870  21B3               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  4585  001872  6EDA               	movwf	fsr2h,c
  4586  001874  0E00               	movlw	0
  4587  001876  6EDF               	movwf	indf2,c
  4588                           
  4589                           ; BSR set to: 0
  4590  001878  0100               	movlb	0	; () banked
  4591  00187A  2BB4               	incf	init_queue@i& (0+255),f,b
  4592                           
  4593                           ; BSR set to: 0
  4594  00187C  0E03               	movlw	3
  4595  00187E  0100               	movlb	0	; () banked
  4596  001880  65B4               	cpfsgt	init_queue@i& (0+255),b
  4597  001882  D7ED               	goto	l3454
  4598  001884  0012               	return	
  4599  001886                     __end_of_init_queue:
  4600                           	opt stack 0
  4601                           tblptru	equ	0xFF8
  4602                           tblptrh	equ	0xFF7
  4603                           tblptrl	equ	0xFF6
  4604                           tablat	equ	0xFF5
  4605                           prodh	equ	0xFF4
  4606                           prodl	equ	0xFF3
  4607                           postinc0	equ	0xFEE
  4608                           wreg	equ	0xFE8
  4609                           indf1	equ	0xFE7
  4610                           postdec1	equ	0xFE5
  4611                           fsr1h	equ	0xFE2
  4612                           fsr1l	equ	0xFE1
  4613                           indf2	equ	0xFDF
  4614                           postinc2	equ	0xFDE
  4615                           postdec2	equ	0xFDD
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8
  4619                           
  4620 ;; *************** function _init_i2c *****************
  4621 ;; Defined at:
  4622 ;;		line 268 in file "src/my_i2c.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;  ic              2   50[BANK0 ] PTR struct __i2c_comm
  4625 ;;		 -> main@ic(28), 
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;		None               void
  4630 ;; Registers used:
  4631 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4637 ;;      Params:         0       2       0       0       0
  4638 ;;      Locals:         0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0
  4640 ;;      Totals:         0       2       0       0       0
  4641 ;;Total ram usage:        2 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:   10
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_main
  4648 ;; This function uses a non-reentrant model
  4649 ;;
  4650                           
  4651                           	psect	text23
  4652  0017BC                     __ptext23:
  4653                           	opt stack 0
  4654  0017BC                     _init_i2c:
  4655                           	opt stack 20
  4656                           
  4657                           ;my_i2c.c: 269: ic_ptr = ic;
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;incstack = 0
  4661  0017BC  0100               	movlb	0	; () banked
  4662  0017BE  C0B3  F0CD         	movff	init_i2c@ic+1,_ic_ptr+1
  4663  0017C2  0100               	movlb	0	; () banked
  4664  0017C4  C0B2  F0CC         	movff	init_i2c@ic,_ic_ptr
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  4668  0017C8  0100               	movlb	0	; () banked
  4669  0017CA  EE20 F00A          	lfsr	2,10
  4670  0017CE  0100               	movlb	0	; () banked
  4671  0017D0  51CC               	movf	_ic_ptr& (0+255),w,b
  4672  0017D2  26D9               	addwf	fsr2l,f,c
  4673  0017D4  0100               	movlb	0	; () banked
  4674  0017D6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4675  0017D8  22DA               	addwfc	fsr2h,f,c
  4676  0017DA  0E00               	movlw	0
  4677  0017DC  6EDF               	movwf	indf2,c
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  4681  0017DE  0100               	movlb	0	; () banked
  4682  0017E0  EE20 F00B          	lfsr	2,11
  4683  0017E4  0100               	movlb	0	; () banked
  4684  0017E6  51CC               	movf	_ic_ptr& (0+255),w,b
  4685  0017E8  26D9               	addwf	fsr2l,f,c
  4686  0017EA  0100               	movlb	0	; () banked
  4687  0017EC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4688  0017EE  22DA               	addwfc	fsr2h,f,c
  4689  0017F0  0E00               	movlw	0
  4690  0017F2  6EDF               	movwf	indf2,c
  4691                           
  4692                           ; BSR set to: 0
  4693                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  4694  0017F4  0100               	movlb	0	; () banked
  4695  0017F6  EE20 F00C          	lfsr	2,12
  4696  0017FA  0100               	movlb	0	; () banked
  4697  0017FC  51CC               	movf	_ic_ptr& (0+255),w,b
  4698  0017FE  26D9               	addwf	fsr2l,f,c
  4699  001800  0100               	movlb	0	; () banked
  4700  001802  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4701  001804  22DA               	addwfc	fsr2h,f,c
  4702  001806  0E05               	movlw	5
  4703  001808  6EDF               	movwf	indf2,c
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  4707  00180A  0100               	movlb	0	; () banked
  4708  00180C  EE20 F00E          	lfsr	2,14
  4709  001810  0100               	movlb	0	; () banked
  4710  001812  51CC               	movf	_ic_ptr& (0+255),w,b
  4711  001814  26D9               	addwf	fsr2l,f,c
  4712  001816  0100               	movlb	0	; () banked
  4713  001818  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  4714  00181A  22DA               	addwfc	fsr2h,f,c
  4715  00181C  0E00               	movlw	0
  4716  00181E  6EDF               	movwf	indf2,c
  4717                           
  4718                           ; BSR set to: 0
  4719  001820  0012               	return	
  4720  001822                     __end_of_init_i2c:
  4721                           	opt stack 0
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           postinc0	equ	0xFEE
  4729                           wreg	equ	0xFE8
  4730                           indf1	equ	0xFE7
  4731                           postdec1	equ	0xFE5
  4732                           fsr1h	equ	0xFE2
  4733                           fsr1l	equ	0xFE1
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           postdec2	equ	0xFDD
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           status	equ	0xFD8
  4740                           
  4741 ;; *************** function _i2c_configure_slave *****************
  4742 ;; Defined at:
  4743 ;;		line 279 in file "src/my_i2c.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  addr            1    wreg     unsigned char 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  addr            1   50[BANK0 ] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;		None               void
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4757 ;;      Params:         0       0       0       0       0
  4758 ;;      Locals:         0       1       0       0       0
  4759 ;;      Temps:          0       0       0       0       0
  4760 ;;      Totals:         0       1       0       0       0
  4761 ;;Total ram usage:        1 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:   10
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_main
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text24
  4772  001ECE                     __ptext24:
  4773                           	opt stack 0
  4774  001ECE                     _i2c_configure_slave:
  4775                           	opt stack 20
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;incstack = 0
  4779                           ;i2c_configure_slave@addr stored from wreg
  4780  001ECE  0100               	movlb	0	; () banked
  4781  001ED0  6FB2               	movwf	i2c_configure_slave@addr& (0+255),b
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  4785  001ED2  8694               	bsf	3988,3,c	;volatile
  4786                           
  4787                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  4788  001ED4  8894               	bsf	3988,4,c	;volatile
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;my_i2c.c: 297: SSPADD = addr;
  4792  001ED6  C0B2  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  4796  001EDA  0E00               	movlw	0
  4797  001EDC  6EC7               	movwf	4039,c	;volatile
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  4801  001EDE  0E00               	movlw	0
  4802  001EE0  6EC6               	movwf	4038,c	;volatile
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  4806  001EE2  0E00               	movlw	0
  4807  001EE4  6EC5               	movwf	4037,c	;volatile
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  4811  001EE6  0E0E               	movlw	14
  4812  001EE8  12C6               	iorwf	4038,f,c	;volatile
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  4816  001EEA  8EC7               	bsf	4039,7,c	;volatile
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  4820  001EEC  8694               	bsf	3988,3,c	;volatile
  4821                           
  4822                           ; BSR set to: 0
  4823                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  4824  001EEE  8894               	bsf	3988,4,c	;volatile
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  4828  001EF0  80C5               	bsf	4037,0,c	;volatile
  4829                           
  4830                           ; BSR set to: 0
  4831                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  4832  001EF2  8AC6               	bsf	4038,5,c	;volatile
  4833                           
  4834                           ; BSR set to: 0
  4835  001EF4  0012               	return	
  4836  001EF6                     __end_of_i2c_configure_slave:
  4837                           	opt stack 0
  4838                           tblptru	equ	0xFF8
  4839                           tblptrh	equ	0xFF7
  4840                           tblptrl	equ	0xFF6
  4841                           tablat	equ	0xFF5
  4842                           prodh	equ	0xFF4
  4843                           prodl	equ	0xFF3
  4844                           postinc0	equ	0xFEE
  4845                           wreg	equ	0xFE8
  4846                           indf1	equ	0xFE7
  4847                           postdec1	equ	0xFE5
  4848                           fsr1h	equ	0xFE2
  4849                           fsr1l	equ	0xFE1
  4850                           indf2	equ	0xFDF
  4851                           postinc2	equ	0xFDE
  4852                           postdec2	equ	0xFDD
  4853                           fsr2h	equ	0xFDA
  4854                           fsr2l	equ	0xFD9
  4855                           status	equ	0xFD8
  4856                           
  4857 ;; *************** function _enable_interrupts *****************
  4858 ;; Defined at:
  4859 ;;		line 15 in file "src/interrupts.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;		None
  4862 ;; Auto vars:     Size  Location     Type
  4863 ;;		None
  4864 ;; Return value:  Size  Location     Type
  4865 ;;		None               void
  4866 ;; Registers used:
  4867 ;;		None
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4873 ;;      Params:         0       0       0       0       0
  4874 ;;      Locals:         0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0
  4876 ;;      Totals:         0       0       0       0       0
  4877 ;;Total ram usage:        0 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:   10
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_main
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           	psect	text25
  4888  001FFA                     __ptext25:
  4889                           	opt stack 0
  4890  001FFA                     _enable_interrupts:
  4891                           	opt stack 20
  4892                           
  4893                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  4894                           
  4895                           ; BSR set to: 0
  4896                           ;incstack = 0
  4897  001FFA  8ED0               	bsf	4048,7,c	;volatile
  4898                           
  4899                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  4900  001FFC  8EF2               	bsf	intcon,7,c	;volatile
  4901                           
  4902                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  4903  001FFE  8CF2               	bsf	intcon,6,c	;volatile
  4904  002000  0012               	return	
  4905  002002                     __end_of_enable_interrupts:
  4906                           	opt stack 0
  4907                           tblptru	equ	0xFF8
  4908                           tblptrh	equ	0xFF7
  4909                           tblptrl	equ	0xFF6
  4910                           tablat	equ	0xFF5
  4911                           prodh	equ	0xFF4
  4912                           prodl	equ	0xFF3
  4913                           intcon	equ	0xFF2
  4914                           postinc0	equ	0xFEE
  4915                           wreg	equ	0xFE8
  4916                           indf1	equ	0xFE7
  4917                           postdec1	equ	0xFE5
  4918                           fsr1h	equ	0xFE2
  4919                           fsr1l	equ	0xFE1
  4920                           indf2	equ	0xFDF
  4921                           postinc2	equ	0xFDE
  4922                           postdec2	equ	0xFDD
  4923                           fsr2h	equ	0xFDA
  4924                           fsr2l	equ	0xFD9
  4925                           status	equ	0xFD8
  4926                           
  4927 ;; *************** function _block_on_To_msgqueues *****************
  4928 ;; Defined at:
  4929 ;;		line 256 in file "src/messages.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;		None
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;		None               void
  4936 ;; Registers used:
  4937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4943 ;;      Params:         0       0       0       0       0
  4944 ;;      Locals:         0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0
  4946 ;;      Totals:         0       0       0       0       0
  4947 ;;Total ram usage:        0 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; Hardware stack levels required when called:   13
  4950 ;; This function calls:
  4951 ;;		_Delay1KTCYx
  4952 ;;		_check_msg
  4953 ;;		_in_main
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text26
  4960  001944                     __ptext26:
  4961                           	opt stack 0
  4962  001944                     _block_on_To_msgqueues:
  4963                           	opt stack 17
  4964                           
  4965                           ;messages.c: 257: if (!in_main()) {
  4966                           
  4967                           ;incstack = 0
  4968  001944  EC8B  F00E         	call	_in_main	;wreg free
  4969  001948  0100               	movlb	0	; () banked
  4970  00194A  51B7               	movf	(?_in_main+1)& (0+255),w,b
  4971  00194C  0100               	movlb	0	; () banked
  4972  00194E  11B6               	iorwf	?_in_main& (0+255),w,b
  4973  001950  B4D8               	btfsc	status,2,c
  4974  001952  0012               	return	
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;messages.c: 259: }
  4978                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  4979                           
  4980                           ; BSR set to: 0
  4981                           
  4982                           ; BSR set to: 0
  4983                           ;messages.c: 258: return;
  4984  001954  0E01               	movlw	1
  4985  001956  6E5F               	movwf	_MQ_Main_Willing_to_block,c
  4986  001958                     l3982:
  4987                           
  4988                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  4989  001958  0101               	movlb	1	; () banked
  4990  00195A  0E01               	movlw	high _ToMainHigh_MQ
  4991  00195C  0100               	movlb	0	; () banked
  4992  00195E  6FB3               	movwf	(check_msg@qptr+1)& (0+255),b
  4993  001960  0101               	movlb	1	; () banked
  4994  001962  0E36               	movlw	low _ToMainHigh_MQ
  4995  001964  0100               	movlb	0	; () banked
  4996  001966  6FB2               	movwf	check_msg@qptr& (0+255),b
  4997  001968  ECC2  F00E         	call	_check_msg	;wreg free
  4998  00196C  0900               	iorlw	0
  4999  00196E  B4D8               	btfsc	status,2,c
  5000  001970  D003               	goto	l3988
  5001                           
  5002                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  5003  001972  0E00               	movlw	0
  5004  001974  6E5F               	movwf	_MQ_Main_Willing_to_block,c
  5005  001976  0012               	return	
  5006  001978                     l3988:
  5007                           
  5008                           ;messages.c: 271: }
  5009                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  5010  001978  0101               	movlb	1	; () banked
  5011  00197A  0E01               	movlw	high _ToMainLow_MQ
  5012  00197C  0100               	movlb	0	; () banked
  5013  00197E  6FB3               	movwf	(check_msg@qptr+1)& (0+255),b
  5014  001980  0101               	movlb	1	; () banked
  5015  001982  0E6C               	movlw	low _ToMainLow_MQ
  5016  001984  0100               	movlb	0	; () banked
  5017  001986  6FB2               	movwf	check_msg@qptr& (0+255),b
  5018  001988  ECC2  F00E         	call	_check_msg	;wreg free
  5019  00198C  0900               	iorlw	0
  5020  00198E  B4D8               	btfsc	status,2,c
  5021  001990  D003               	goto	l3994
  5022                           
  5023                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  5024  001992  0E00               	movlw	0
  5025  001994  6E5F               	movwf	_MQ_Main_Willing_to_block,c
  5026  001996  0012               	return	
  5027  001998                     l3994:
  5028                           
  5029                           ;messages.c: 278: }
  5030                           ;messages.c: 279: Delay1KTCYx(10);
  5031  001998  0E0A               	movlw	10
  5032  00199A  ECD1  F00F         	call	_Delay1KTCYx
  5033  00199E  D7DC               	goto	l3982
  5034  0019A0                     __end_of_block_on_To_msgqueues:
  5035                           	opt stack 0
  5036                           tblptru	equ	0xFF8
  5037                           tblptrh	equ	0xFF7
  5038                           tblptrl	equ	0xFF6
  5039                           tablat	equ	0xFF5
  5040                           prodh	equ	0xFF4
  5041                           prodl	equ	0xFF3
  5042                           intcon	equ	0xFF2
  5043                           postinc0	equ	0xFEE
  5044                           wreg	equ	0xFE8
  5045                           indf1	equ	0xFE7
  5046                           postdec1	equ	0xFE5
  5047                           fsr1h	equ	0xFE2
  5048                           fsr1l	equ	0xFE1
  5049                           indf2	equ	0xFDF
  5050                           postinc2	equ	0xFDE
  5051                           postdec2	equ	0xFDD
  5052                           fsr2h	equ	0xFDA
  5053                           fsr2l	equ	0xFD9
  5054                           status	equ	0xFD8
  5055                           
  5056 ;; *************** function _in_main *****************
  5057 ;; Defined at:
  5058 ;;		line 41 in file "src/interrupts.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;		None
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;		None
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  2   54[BANK0 ] int 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5072 ;;      Params:         0       2       0       0       0
  5073 ;;      Locals:         0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0
  5075 ;;      Totals:         0       2       0       0       0
  5076 ;;Total ram usage:        2 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:   12
  5079 ;; This function calls:
  5080 ;;		_in_high_int
  5081 ;;		_in_low_int
  5082 ;; This function is called by:
  5083 ;;		_block_on_To_msgqueues
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text27
  5088  001D16                     __ptext27:
  5089                           	opt stack 0
  5090  001D16                     _in_main:
  5091                           	opt stack 17
  5092                           
  5093                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  5094                           
  5095                           ;incstack = 0
  5096  001D16  EC0F  F00E         	call	_in_low_int	;wreg free
  5097  001D1A  0100               	movlb	0	; () banked
  5098  001D1C  51B5               	movf	(?_in_low_int+1)& (0+255),w,b
  5099  001D1E  0100               	movlb	0	; () banked
  5100  001D20  11B4               	iorwf	?_in_low_int& (0+255),w,b
  5101  001D22  A4D8               	btfss	status,2,c
  5102  001D24  D00F               	goto	l3438
  5103                           
  5104                           ; BSR set to: 0
  5105  001D26  ECED  F00F         	call	_in_high_int	;wreg free
  5106  001D2A  0100               	movlb	0	; () banked
  5107  001D2C  51B3               	movf	(?_in_high_int+1)& (0+255),w,b
  5108  001D2E  0100               	movlb	0	; () banked
  5109  001D30  11B2               	iorwf	?_in_high_int& (0+255),w,b
  5110  001D32  A4D8               	btfss	status,2,c
  5111  001D34  D007               	goto	l3438
  5112                           
  5113                           ; BSR set to: 0
  5114                           ;interrupts.c: 43: return (1);
  5115  001D36  0E00               	movlw	0
  5116  001D38  0100               	movlb	0	; () banked
  5117  001D3A  6FB7               	movwf	(?_in_main+1)& (0+255),b
  5118  001D3C  0E01               	movlw	1
  5119  001D3E  0100               	movlb	0	; () banked
  5120  001D40  6FB6               	movwf	?_in_main& (0+255),b
  5121  001D42  0012               	return	
  5122  001D44                     l3438:
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;interrupts.c: 45: return (0);
  5126  001D44  0E00               	movlw	0
  5127  001D46  0100               	movlb	0	; () banked
  5128  001D48  6FB7               	movwf	(?_in_main+1)& (0+255),b
  5129  001D4A  0E00               	movlw	0
  5130  001D4C  0100               	movlb	0	; () banked
  5131  001D4E  6FB6               	movwf	?_in_main& (0+255),b
  5132  001D50  0012               	return	
  5133  001D52                     __end_of_in_main:
  5134                           	opt stack 0
  5135                           tblptru	equ	0xFF8
  5136                           tblptrh	equ	0xFF7
  5137                           tblptrl	equ	0xFF6
  5138                           tablat	equ	0xFF5
  5139                           prodh	equ	0xFF4
  5140                           prodl	equ	0xFF3
  5141                           intcon	equ	0xFF2
  5142                           postinc0	equ	0xFEE
  5143                           wreg	equ	0xFE8
  5144                           indf1	equ	0xFE7
  5145                           postdec1	equ	0xFE5
  5146                           fsr1h	equ	0xFE2
  5147                           fsr1l	equ	0xFE1
  5148                           indf2	equ	0xFDF
  5149                           postinc2	equ	0xFDE
  5150                           postdec2	equ	0xFDD
  5151                           fsr2h	equ	0xFDA
  5152                           fsr2l	equ	0xFD9
  5153                           status	equ	0xFD8
  5154                           
  5155 ;; *************** function _in_low_int *****************
  5156 ;; Defined at:
  5157 ;;		line 31 in file "src/interrupts.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;		None
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  2   52[BANK0 ] int 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5171 ;;      Params:         0       2       0       0       0
  5172 ;;      Locals:         0       0       0       0       0
  5173 ;;      Temps:          0       0       0       0       0
  5174 ;;      Totals:         0       2       0       0       0
  5175 ;;Total ram usage:        2 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:   11
  5178 ;; This function calls:
  5179 ;;		_in_high_int
  5180 ;; This function is called by:
  5181 ;;		_in_main
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text28
  5186  001C1E                     __ptext28:
  5187                           	opt stack 0
  5188  001C1E                     _in_low_int:
  5189                           	opt stack 17
  5190                           
  5191                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  5192                           
  5193                           ; BSR set to: 0
  5194                           ;incstack = 0
  5195  001C1E  ACF2               	btfss	intcon,6,c	;volatile
  5196  001C20  D007               	goto	l3328
  5197                           
  5198                           ;interrupts.c: 33: return (0);
  5199  001C22  0E00               	movlw	0
  5200  001C24  0100               	movlb	0	; () banked
  5201  001C26  6FB5               	movwf	(?_in_low_int+1)& (0+255),b
  5202  001C28  0E00               	movlw	0
  5203  001C2A  0100               	movlb	0	; () banked
  5204  001C2C  6FB4               	movwf	?_in_low_int& (0+255),b
  5205  001C2E  0012               	return	
  5206  001C30                     l3328:
  5207  001C30  ECED  F00F         	call	_in_high_int	;wreg free
  5208  001C34  0100               	movlb	0	; () banked
  5209  001C36  51B3               	movf	(?_in_high_int+1)& (0+255),w,b
  5210  001C38  0100               	movlb	0	; () banked
  5211  001C3A  11B2               	iorwf	?_in_high_int& (0+255),w,b
  5212  001C3C  B4D8               	btfsc	status,2,c
  5213  001C3E  D007               	goto	l3336
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;interrupts.c: 35: return (0);
  5217  001C40  0E00               	movlw	0
  5218  001C42  0100               	movlb	0	; () banked
  5219  001C44  6FB5               	movwf	(?_in_low_int+1)& (0+255),b
  5220  001C46  0E00               	movlw	0
  5221  001C48  0100               	movlb	0	; () banked
  5222  001C4A  6FB4               	movwf	?_in_low_int& (0+255),b
  5223  001C4C  0012               	return	
  5224  001C4E                     l3336:
  5225                           
  5226                           ; BSR set to: 0
  5227                           ;interrupts.c: 37: return (1);
  5228  001C4E  0E00               	movlw	0
  5229  001C50  0100               	movlb	0	; () banked
  5230  001C52  6FB5               	movwf	(?_in_low_int+1)& (0+255),b
  5231  001C54  0E01               	movlw	1
  5232  001C56  0100               	movlb	0	; () banked
  5233  001C58  6FB4               	movwf	?_in_low_int& (0+255),b
  5234  001C5A  0012               	return	
  5235  001C5C                     __end_of_in_low_int:
  5236                           	opt stack 0
  5237                           tblptru	equ	0xFF8
  5238                           tblptrh	equ	0xFF7
  5239                           tblptrl	equ	0xFF6
  5240                           tablat	equ	0xFF5
  5241                           prodh	equ	0xFF4
  5242                           prodl	equ	0xFF3
  5243                           intcon	equ	0xFF2
  5244                           postinc0	equ	0xFEE
  5245                           wreg	equ	0xFE8
  5246                           indf1	equ	0xFE7
  5247                           postdec1	equ	0xFE5
  5248                           fsr1h	equ	0xFE2
  5249                           fsr1l	equ	0xFE1
  5250                           indf2	equ	0xFDF
  5251                           postinc2	equ	0xFDE
  5252                           postdec2	equ	0xFDD
  5253                           fsr2h	equ	0xFDA
  5254                           fsr2l	equ	0xFD9
  5255                           status	equ	0xFD8
  5256                           
  5257 ;; *************** function _in_high_int *****************
  5258 ;; Defined at:
  5259 ;;		line 23 in file "src/interrupts.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;		None
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;		None
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  2   50[BANK0 ] int 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5273 ;;      Params:         0       2       0       0       0
  5274 ;;      Locals:         0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0
  5276 ;;      Totals:         0       2       0       0       0
  5277 ;;Total ram usage:        2 bytes
  5278 ;; Hardware stack levels used:    1
  5279 ;; Hardware stack levels required when called:   10
  5280 ;; This function calls:
  5281 ;;		Nothing
  5282 ;; This function is called by:
  5283 ;;		_in_low_int
  5284 ;;		_in_main
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text29
  5289  001FDA                     __ptext29:
  5290                           	opt stack 0
  5291  001FDA                     _in_high_int:
  5292                           	opt stack 17
  5293                           
  5294                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;incstack = 0
  5298  001FDA  0E00               	movlw	0
  5299  001FDC  AEF2               	btfss	intcon,7,c	;volatile
  5300  001FDE  0E01               	movlw	1
  5301  001FE0  0100               	movlb	0	; () banked
  5302  001FE2  6FB2               	movwf	?_in_high_int& (0+255),b
  5303  001FE4  0100               	movlb	0	; () banked
  5304  001FE6  6BB3               	clrf	(?_in_high_int+1)& (0+255),b
  5305  001FE8  0012               	return	
  5306  001FEA                     __end_of_in_high_int:
  5307                           	opt stack 0
  5308                           tblptru	equ	0xFF8
  5309                           tblptrh	equ	0xFF7
  5310                           tblptrl	equ	0xFF6
  5311                           tablat	equ	0xFF5
  5312                           prodh	equ	0xFF4
  5313                           prodl	equ	0xFF3
  5314                           intcon	equ	0xFF2
  5315                           postinc0	equ	0xFEE
  5316                           wreg	equ	0xFE8
  5317                           indf1	equ	0xFE7
  5318                           postdec1	equ	0xFE5
  5319                           fsr1h	equ	0xFE2
  5320                           fsr1l	equ	0xFE1
  5321                           indf2	equ	0xFDF
  5322                           postinc2	equ	0xFDE
  5323                           postdec2	equ	0xFDD
  5324                           fsr2h	equ	0xFDA
  5325                           fsr2l	equ	0xFD9
  5326                           status	equ	0xFD8
  5327                           
  5328 ;; *************** function _check_msg *****************
  5329 ;; Defined at:
  5330 ;;		line 220 in file "src/messages.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;  qptr            2   50[BANK0 ] PTR struct __msg_queue
  5333 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      unsigned char 
  5338 ;; Registers used:
  5339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5345 ;;      Params:         0       2       0       0       0
  5346 ;;      Locals:         0       0       0       0       0
  5347 ;;      Temps:          0       1       0       0       0
  5348 ;;      Totals:         0       3       0       0       0
  5349 ;;Total ram usage:        3 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:   10
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_block_on_To_msgqueues
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           	psect	text30
  5360  001D84                     __ptext30:
  5361                           	opt stack 0
  5362  001D84                     _check_msg:
  5363                           	opt stack 19
  5364                           
  5365                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;incstack = 0
  5369  001D84  0100               	movlb	0	; () banked
  5370  001D86  EE20 F035          	lfsr	2,53
  5371  001D8A  0100               	movlb	0	; () banked
  5372  001D8C  51B2               	movf	check_msg@qptr& (0+255),w,b
  5373  001D8E  26D9               	addwf	fsr2l,f,c
  5374  001D90  0100               	movlb	0	; () banked
  5375  001D92  51B3               	movf	(check_msg@qptr+1)& (0+255),w,b
  5376  001D94  22DA               	addwfc	fsr2h,f,c
  5377  001D96  50DF               	movf	indf2,w,c
  5378  001D98  0100               	movlb	0	; () banked
  5379  001D9A  6FB4               	movwf	??_check_msg& (0+255),b
  5380  001D9C  0100               	movlb	0	; () banked
  5381  001D9E  51B4               	movf	??_check_msg& (0+255),w,b
  5382  001DA0  0D0D               	mullw	13
  5383  001DA2  50F3               	movf	prodl,w,c
  5384  001DA4  0100               	movlb	0	; () banked
  5385  001DA6  25B2               	addwf	check_msg@qptr& (0+255),w,b
  5386  001DA8  6ED9               	movwf	fsr2l,c
  5387  001DAA  50F4               	movf	prodh,w,c
  5388  001DAC  0100               	movlb	0	; () banked
  5389  001DAE  21B3               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  5390  001DB0  6EDA               	movwf	fsr2h,c
  5391  001DB2  50DF               	movf	indf2,w,c
  5392  001DB4  0012               	return	
  5393  001DB6                     __end_of_check_msg:
  5394                           	opt stack 0
  5395                           tblptru	equ	0xFF8
  5396                           tblptrh	equ	0xFF7
  5397                           tblptrl	equ	0xFF6
  5398                           tablat	equ	0xFF5
  5399                           prodh	equ	0xFF4
  5400                           prodl	equ	0xFF3
  5401                           intcon	equ	0xFF2
  5402                           postinc0	equ	0xFEE
  5403                           wreg	equ	0xFE8
  5404                           indf1	equ	0xFE7
  5405                           postdec1	equ	0xFE5
  5406                           fsr1h	equ	0xFE2
  5407                           fsr1l	equ	0xFE1
  5408                           indf2	equ	0xFDF
  5409                           postinc2	equ	0xFDE
  5410                           postdec2	equ	0xFDD
  5411                           fsr2h	equ	0xFDA
  5412                           fsr2l	equ	0xFD9
  5413                           status	equ	0xFD8
  5414                           
  5415 ;; *************** function _Delay1KTCYx *****************
  5416 ;; Defined at:
  5417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  unit            1    wreg     unsigned char 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;  unit            1   50[BANK0 ] unsigned char 
  5422 ;; Return value:  Size  Location     Type
  5423 ;;		None               void
  5424 ;; Registers used:
  5425 ;;		wreg
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5431 ;;      Params:         0       0       0       0       0
  5432 ;;      Locals:         0       1       0       0       0
  5433 ;;      Temps:          0       0       0       0       0
  5434 ;;      Totals:         0       1       0       0       0
  5435 ;;Total ram usage:        1 bytes
  5436 ;; Hardware stack levels used:    1
  5437 ;; Hardware stack levels required when called:   10
  5438 ;; This function calls:
  5439 ;;		Nothing
  5440 ;; This function is called by:
  5441 ;;		_block_on_To_msgqueues
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           	psect	text31
  5446  001FA2                     __ptext31:
  5447                           	opt stack 0
  5448  001FA2                     _Delay1KTCYx:
  5449                           	opt stack 19
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;incstack = 0
  5453                           ;Delay1KTCYx@unit stored from wreg
  5454  001FA2  0100               	movlb	0	; () banked
  5455  001FA4  6FB2               	movwf	Delay1KTCYx@unit& (0+255),b
  5456  001FA6                     l829:
  5457                           
  5458                           ; BSR set to: 0
  5459                           
  5460                           ; BSR set to: 0
  5461  001FA6  0EFA               	movlw	250
  5462  001FA8                     u3117:
  5463  001FA8  F000               	nop	
  5464  001FAA  2EE8               	decfsz	wreg,f,c
  5465  001FAC  D7FD               	goto	u3117
  5466  001FAE  0100               	movlb	0	; () banked
  5467  001FB0  2FB2               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  5468  001FB2  D7F9               	goto	l829
  5469  001FB4  0012               	return	
  5470  001FB6                     __end_of_Delay1KTCYx:
  5471                           	opt stack 0
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           intcon	equ	0xFF2
  5479                           postinc0	equ	0xFEE
  5480                           wreg	equ	0xFE8
  5481                           indf1	equ	0xFE7
  5482                           postdec1	equ	0xFE5
  5483                           fsr1h	equ	0xFE2
  5484                           fsr1l	equ	0xFE1
  5485                           indf2	equ	0xFDF
  5486                           postinc2	equ	0xFDE
  5487                           postdec2	equ	0xFDD
  5488                           fsr2h	equ	0xFDA
  5489                           fsr2l	equ	0xFD9
  5490                           status	equ	0xFD8
  5491                           
  5492 ;; *************** function _ToMainLow_recvmsg *****************
  5493 ;; Defined at:
  5494 ;;		line 112 in file "src/messages.c"
  5495 ;; Parameters:    Size  Location     Type
  5496 ;;  maxlength       1    wreg     unsigned char 
  5497 ;;  msgtype         2    5[BANK1 ] PTR unsigned char 
  5498 ;;		 -> main@msgtype(1), 
  5499 ;;  data            2    7[BANK1 ] PTR void 
  5500 ;;		 -> main@msgbuffer(11), 
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;  maxlength       1   69[BANK0 ] unsigned char 
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      char 
  5505 ;; Registers used:
  5506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5512 ;;      Params:         0       0       4       0       0
  5513 ;;      Locals:         0       1       0       0       0
  5514 ;;      Temps:          0       0       0       0       0
  5515 ;;      Totals:         0       1       4       0       0
  5516 ;;Total ram usage:        5 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:   12
  5519 ;; This function calls:
  5520 ;;		_recv_msg
  5521 ;; This function is called by:
  5522 ;;		_main
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text32
  5527  001C5C                     __ptext32:
  5528                           	opt stack 0
  5529  001C5C                     _ToMainLow_recvmsg:
  5530                           	opt stack 18
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;incstack = 0
  5534                           ;ToMainLow_recvmsg@maxlength stored from wreg
  5535  001C5C  0100               	movlb	0	; () banked
  5536  001C5E  6FC5               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  5540  001C60  0101               	movlb	1	; () banked
  5541  001C62  0E01               	movlw	high _ToMainLow_MQ
  5542  001C64  0100               	movlb	0	; () banked
  5543  001C66  6FBD               	movwf	(recv_msg@qptr+1)& (0+255),b
  5544  001C68  0101               	movlb	1	; () banked
  5545  001C6A  0E6C               	movlw	low _ToMainLow_MQ
  5546  001C6C  0100               	movlb	0	; () banked
  5547  001C6E  6FBC               	movwf	recv_msg@qptr& (0+255),b
  5548  001C70  C0C5  F0BE         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  5549  001C74  0101               	movlb	1	; () banked
  5550  001C76  0100               	movlb	0	; () banked
  5551  001C78  C1A8  F0C0         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  5552  001C7C  0101               	movlb	1	; () banked
  5553  001C7E  0100               	movlb	0	; () banked
  5554  001C80  C1A7  F0BF         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  5555  001C84  0101               	movlb	1	; () banked
  5556  001C86  0100               	movlb	0	; () banked
  5557  001C88  C1AA  F0C2         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  5558  001C8C  0101               	movlb	1	; () banked
  5559  001C8E  0100               	movlb	0	; () banked
  5560  001C90  C1A9  F0C1         	movff	ToMainLow_recvmsg@data,recv_msg@data
  5561  001C94  ECAF  F004         	call	_recv_msg	;wreg free
  5562  001C98  0012               	return	
  5563  001C9A                     __end_of_ToMainLow_recvmsg:
  5564                           	opt stack 0
  5565                           tblptru	equ	0xFF8
  5566                           tblptrh	equ	0xFF7
  5567                           tblptrl	equ	0xFF6
  5568                           tablat	equ	0xFF5
  5569                           prodh	equ	0xFF4
  5570                           prodl	equ	0xFF3
  5571                           intcon	equ	0xFF2
  5572                           postinc0	equ	0xFEE
  5573                           wreg	equ	0xFE8
  5574                           indf1	equ	0xFE7
  5575                           postdec1	equ	0xFE5
  5576                           fsr1h	equ	0xFE2
  5577                           fsr1l	equ	0xFE1
  5578                           indf2	equ	0xFDF
  5579                           postinc2	equ	0xFDE
  5580                           postdec2	equ	0xFDD
  5581                           fsr2h	equ	0xFDA
  5582                           fsr2l	equ	0xFD9
  5583                           status	equ	0xFD8
  5584                           
  5585 ;; *************** function _ToMainHigh_recvmsg *****************
  5586 ;; Defined at:
  5587 ;;		line 135 in file "src/messages.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  maxlength       1    wreg     unsigned char 
  5590 ;;  msgtype         2    5[BANK1 ] PTR unsigned char 
  5591 ;;		 -> main@msgtype(1), 
  5592 ;;  data            2    7[BANK1 ] PTR void 
  5593 ;;		 -> main@msgbuffer(11), 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  maxlength       1   69[BANK0 ] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      char 
  5598 ;; Registers used:
  5599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5605 ;;      Params:         0       0       4       0       0
  5606 ;;      Locals:         0       1       0       0       0
  5607 ;;      Temps:          0       0       0       0       0
  5608 ;;      Totals:         0       1       4       0       0
  5609 ;;Total ram usage:        5 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:   12
  5612 ;; This function calls:
  5613 ;;		_recv_msg
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text33
  5620  001C9A                     __ptext33:
  5621                           	opt stack 0
  5622  001C9A                     _ToMainHigh_recvmsg:
  5623                           	opt stack 18
  5624                           
  5625                           ;incstack = 0
  5626                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  5627  001C9A  0100               	movlb	0	; () banked
  5628  001C9C  6FC5               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  5632  001C9E  0101               	movlb	1	; () banked
  5633  001CA0  0E01               	movlw	high _ToMainHigh_MQ
  5634  001CA2  0100               	movlb	0	; () banked
  5635  001CA4  6FBD               	movwf	(recv_msg@qptr+1)& (0+255),b
  5636  001CA6  0101               	movlb	1	; () banked
  5637  001CA8  0E36               	movlw	low _ToMainHigh_MQ
  5638  001CAA  0100               	movlb	0	; () banked
  5639  001CAC  6FBC               	movwf	recv_msg@qptr& (0+255),b
  5640  001CAE  C0C5  F0BE         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  5641  001CB2  0101               	movlb	1	; () banked
  5642  001CB4  0100               	movlb	0	; () banked
  5643  001CB6  C1A8  F0C0         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  5644  001CBA  0101               	movlb	1	; () banked
  5645  001CBC  0100               	movlb	0	; () banked
  5646  001CBE  C1A7  F0BF         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  5647  001CC2  0101               	movlb	1	; () banked
  5648  001CC4  0100               	movlb	0	; () banked
  5649  001CC6  C1AA  F0C2         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  5650  001CCA  0101               	movlb	1	; () banked
  5651  001CCC  0100               	movlb	0	; () banked
  5652  001CCE  C1A9  F0C1         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  5653  001CD2  ECAF  F004         	call	_recv_msg	;wreg free
  5654  001CD6  0012               	return	
  5655  001CD8                     __end_of_ToMainHigh_recvmsg:
  5656                           	opt stack 0
  5657                           tblptru	equ	0xFF8
  5658                           tblptrh	equ	0xFF7
  5659                           tblptrl	equ	0xFF6
  5660                           tablat	equ	0xFF5
  5661                           prodh	equ	0xFF4
  5662                           prodl	equ	0xFF3
  5663                           intcon	equ	0xFF2
  5664                           postinc0	equ	0xFEE
  5665                           wreg	equ	0xFE8
  5666                           indf1	equ	0xFE7
  5667                           postdec1	equ	0xFE5
  5668                           fsr1h	equ	0xFE2
  5669                           fsr1l	equ	0xFE1
  5670                           indf2	equ	0xFDF
  5671                           postinc2	equ	0xFDE
  5672                           postdec2	equ	0xFDD
  5673                           fsr2h	equ	0xFDA
  5674                           fsr2l	equ	0xFD9
  5675                           status	equ	0xFD8
  5676                           
  5677 ;; *************** function _recv_msg *****************
  5678 ;; Defined at:
  5679 ;;		line 63 in file "src/messages.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  qptr            2   60[BANK0 ] PTR struct __msg_queue
  5682 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5683 ;;  maxlength       1   62[BANK0 ] unsigned char 
  5684 ;;  msgtype         2   63[BANK0 ] PTR unsigned char 
  5685 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5686 ;;  data            2   65[BANK0 ] PTR void 
  5687 ;;		 -> main@msgbuffer(11), NULL(0), 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  qmsg            2    3[BANK1 ] PTR struct __msg
  5690 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5691 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5692 ;;  tlength         2    1[BANK1 ] unsigned int 
  5693 ;;  slot            1    0[BANK1 ] unsigned char 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;                  1    wreg      char 
  5696 ;; Registers used:
  5697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5703 ;;      Params:         0       7       0       0       0
  5704 ;;      Locals:         0       0       5       0       0
  5705 ;;      Temps:          0       2       0       0       0
  5706 ;;      Totals:         0       9       5       0       0
  5707 ;;Total ram usage:       14 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:   11
  5710 ;; This function calls:
  5711 ;;		_memcpy
  5712 ;; This function is called by:
  5713 ;;		_ToMainLow_recvmsg
  5714 ;;		_ToMainHigh_recvmsg
  5715 ;;		_FromMainHigh_recvmsg
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text34
  5720  00095E                     __ptext34:
  5721                           	opt stack 0
  5722  00095E                     _recv_msg:
  5723                           	opt stack 18
  5724                           
  5725                           ;messages.c: 64: unsigned char slot;
  5726                           ;messages.c: 68: msg *qmsg;
  5727                           ;messages.c: 69: size_t tlength;
  5728                           ;messages.c: 72: slot = qptr->cur_read_ind;
  5729                           
  5730                           ;incstack = 0
  5731  00095E  0100               	movlb	0	; () banked
  5732  000960  EE20 F035          	lfsr	2,53
  5733  000964  0100               	movlb	0	; () banked
  5734  000966  51BC               	movf	recv_msg@qptr& (0+255),w,b
  5735  000968  26D9               	addwf	fsr2l,f,c
  5736  00096A  0100               	movlb	0	; () banked
  5737  00096C  51BD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5738  00096E  22DA               	addwfc	fsr2h,f,c
  5739  000970  50DF               	movf	indf2,w,c
  5740  000972  0101               	movlb	1	; () banked
  5741  000974  6FA2               	movwf	recv_msg@slot& (0+255),b
  5742                           
  5743                           ; BSR set to: 1
  5744                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  5745  000976  0101               	movlb	1	; () banked
  5746  000978  51A2               	movf	recv_msg@slot& (0+255),w,b
  5747  00097A  0D0D               	mullw	13
  5748  00097C  50F3               	movf	prodl,w,c
  5749  00097E  0100               	movlb	0	; () banked
  5750  000980  25BC               	addwf	recv_msg@qptr& (0+255),w,b
  5751  000982  0101               	movlb	1	; () banked
  5752  000984  6FA5               	movwf	recv_msg@qmsg& (0+255),b
  5753  000986  50F4               	movf	prodh,w,c
  5754  000988  0100               	movlb	0	; () banked
  5755  00098A  21BD               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  5756  00098C  0101               	movlb	1	; () banked
  5757  00098E  6FA6               	movwf	(recv_msg@qmsg+1)& (0+255),b
  5758                           
  5759                           ; BSR set to: 1
  5760                           ;messages.c: 74: if (qmsg->full == 1) {
  5761  000990  0E01               	movlw	1
  5762  000992  C1A5  FFD9         	movff	recv_msg@qmsg,fsr2l
  5763  000996  C1A6  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5764  00099A  62DF               	cpfseq	indf2,c
  5765  00099C  D06D               	goto	l3488
  5766                           
  5767                           ; BSR set to: 1
  5768                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5769  00099E  0101               	movlb	1	; () banked
  5770  0009A0  EE20 F001          	lfsr	2,1
  5771  0009A4  0101               	movlb	1	; () banked
  5772  0009A6  51A5               	movf	recv_msg@qmsg& (0+255),w,b
  5773  0009A8  26D9               	addwf	fsr2l,f,c
  5774  0009AA  0101               	movlb	1	; () banked
  5775  0009AC  51A6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5776  0009AE  22DA               	addwfc	fsr2h,f,c
  5777  0009B0  50DF               	movf	indf2,w,c
  5778  0009B2  0100               	movlb	0	; () banked
  5779  0009B4  5DBE               	subwf	recv_msg@maxlength& (0+255),w,b
  5780  0009B6  B0D8               	btfsc	status,0,c
  5781  0009B8  D002               	goto	l3472
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;messages.c: 77: return (-3);
  5785  0009BA  0EFD               	movlw	253
  5786  0009BC  0012               	return	
  5787  0009BE                     l3472:
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;messages.c: 78: }
  5791                           ;messages.c: 80: tlength = qmsg->length;
  5792  0009BE  0101               	movlb	1	; () banked
  5793  0009C0  EE20 F001          	lfsr	2,1
  5794  0009C4  0101               	movlb	1	; () banked
  5795  0009C6  51A5               	movf	recv_msg@qmsg& (0+255),w,b
  5796  0009C8  26D9               	addwf	fsr2l,f,c
  5797  0009CA  0101               	movlb	1	; () banked
  5798  0009CC  51A6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5799  0009CE  22DA               	addwfc	fsr2h,f,c
  5800  0009D0  50DF               	movf	indf2,w,c
  5801  0009D2  0100               	movlb	0	; () banked
  5802  0009D4  6FC3               	movwf	??_recv_msg& (0+255),b
  5803  0009D6  0100               	movlb	0	; () banked
  5804  0009D8  51C3               	movf	??_recv_msg& (0+255),w,b
  5805  0009DA  0101               	movlb	1	; () banked
  5806  0009DC  6FA3               	movwf	recv_msg@tlength& (0+255),b
  5807  0009DE  0101               	movlb	1	; () banked
  5808  0009E0  6BA4               	clrf	(recv_msg@tlength+1)& (0+255),b
  5809                           
  5810                           ; BSR set to: 1
  5811                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5812  0009E2  0100               	movlb	0	; () banked
  5813  0009E4  C0C2  F0B3         	movff	recv_msg@data+1,memcpy@d1+1
  5814  0009E8  0100               	movlb	0	; () banked
  5815  0009EA  C0C1  F0B2         	movff	recv_msg@data,memcpy@d1
  5816  0009EE  0E03               	movlw	3
  5817  0009F0  0101               	movlb	1	; () banked
  5818  0009F2  25A5               	addwf	recv_msg@qmsg& (0+255),w,b
  5819  0009F4  0100               	movlb	0	; () banked
  5820  0009F6  6FC3               	movwf	??_recv_msg& (0+255),b
  5821  0009F8  0E00               	movlw	0
  5822  0009FA  0101               	movlb	1	; () banked
  5823  0009FC  21A6               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  5824  0009FE  0100               	movlb	0	; () banked
  5825  000A00  6FC4               	movwf	(??_recv_msg+1)& (0+255),b
  5826  000A02  C0C3  F0B4         	movff	??_recv_msg,memcpy@s1
  5827  000A06  C0C4  F0B5         	movff	??_recv_msg+1,memcpy@s1+1
  5828  000A0A  C1A3  F0B6         	movff	recv_msg@tlength,memcpy@n
  5829  000A0E  C1A4  F0B7         	movff	recv_msg@tlength+1,memcpy@n+1
  5830  000A12  EC7F  F00D         	call	_memcpy	;wreg free
  5831                           
  5832                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5833  000A16  0100               	movlb	0	; () banked
  5834  000A18  EE20 F035          	lfsr	2,53
  5835  000A1C  0100               	movlb	0	; () banked
  5836  000A1E  51BC               	movf	recv_msg@qptr& (0+255),w,b
  5837  000A20  26D9               	addwf	fsr2l,f,c
  5838  000A22  0100               	movlb	0	; () banked
  5839  000A24  51BD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5840  000A26  22DA               	addwfc	fsr2h,f,c
  5841  000A28  0100               	movlb	0	; () banked
  5842  000A2A  EE10 F035          	lfsr	1,53
  5843  000A2E  0100               	movlb	0	; () banked
  5844  000A30  51BC               	movf	recv_msg@qptr& (0+255),w,b
  5845  000A32  26E1               	addwf	fsr1l,f,c
  5846  000A34  0100               	movlb	0	; () banked
  5847  000A36  51BD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5848  000A38  22E2               	addwfc	fsr1h,f,c
  5849  000A3A  50E7               	movf	indf1,w,c
  5850  000A3C  0100               	movlb	0	; () banked
  5851  000A3E  6FC3               	movwf	??_recv_msg& (0+255),b
  5852  000A40  0100               	movlb	0	; () banked
  5853  000A42  29C3               	incf	??_recv_msg& (0+255),w,b
  5854  000A44  0B03               	andlw	3
  5855  000A46  6EDF               	movwf	indf2,c
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5859  000A48  0101               	movlb	1	; () banked
  5860  000A4A  EE20 F002          	lfsr	2,2
  5861  000A4E  0101               	movlb	1	; () banked
  5862  000A50  51A5               	movf	recv_msg@qmsg& (0+255),w,b
  5863  000A52  26D9               	addwf	fsr2l,f,c
  5864  000A54  0101               	movlb	1	; () banked
  5865  000A56  51A6               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5866  000A58  22DA               	addwfc	fsr2h,f,c
  5867  000A5A  C0BF  FFE1         	movff	recv_msg@msgtype,fsr1l
  5868  000A5E  C0C0  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5869  000A62  CFDF FFE7          	movff	indf2,indf1
  5870                           
  5871                           ; BSR set to: 1
  5872                           ;messages.c: 91: qmsg->full = 0;
  5873  000A66  C1A5  FFD9         	movff	recv_msg@qmsg,fsr2l
  5874  000A6A  C1A6  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5875  000A6E  0E00               	movlw	0
  5876  000A70  6EDF               	movwf	indf2,c
  5877                           
  5878                           ; BSR set to: 1
  5879                           ;messages.c: 92: return (tlength);
  5880  000A72  0101               	movlb	1	; () banked
  5881  000A74  51A3               	movf	recv_msg@tlength& (0+255),w,b
  5882  000A76  0012               	return	
  5883  000A78                     l3488:
  5884                           
  5885                           ; BSR set to: 1
  5886                           ;messages.c: 94: return (-4);
  5887  000A78  0EFC               	movlw	252
  5888  000A7A  0012               	return	
  5889  000A7C                     __end_of_recv_msg:
  5890                           	opt stack 0
  5891                           tblptru	equ	0xFF8
  5892                           tblptrh	equ	0xFF7
  5893                           tblptrl	equ	0xFF6
  5894                           tablat	equ	0xFF5
  5895                           prodh	equ	0xFF4
  5896                           prodl	equ	0xFF3
  5897                           intcon	equ	0xFF2
  5898                           postinc0	equ	0xFEE
  5899                           wreg	equ	0xFE8
  5900                           indf1	equ	0xFE7
  5901                           postdec1	equ	0xFE5
  5902                           fsr1h	equ	0xFE2
  5903                           fsr1l	equ	0xFE1
  5904                           indf2	equ	0xFDF
  5905                           postinc2	equ	0xFDE
  5906                           postdec2	equ	0xFDD
  5907                           fsr2h	equ	0xFDA
  5908                           fsr2l	equ	0xFD9
  5909                           status	equ	0xFD8
  5910                           
  5911 ;; *************** function _memcpy *****************
  5912 ;; Defined at:
  5913 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  d1              2   50[BANK0 ] PTR void 
  5916 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5917 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5918 ;;		 -> main@msgbuffer(11), NULL(0), 
  5919 ;;  s1              2   52[BANK0 ] PTR const void 
  5920 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5921 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5922 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  5923 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  5924 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5925 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  5926 ;;  n               2   54[BANK0 ] unsigned int 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  s               2   58[BANK0 ] PTR const unsigned char 
  5929 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5930 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5931 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  5932 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  5933 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5934 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  5935 ;;  d               2   56[BANK0 ] PTR unsigned char 
  5936 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5937 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5938 ;;		 -> main@msgbuffer(11), NULL(0), 
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  2   50[BANK0 ] PTR void 
  5941 ;; Registers used:
  5942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5948 ;;      Params:         0       6       0       0       0
  5949 ;;      Locals:         0       4       0       0       0
  5950 ;;      Temps:          0       0       0       0       0
  5951 ;;      Totals:         0      10       0       0       0
  5952 ;;Total ram usage:       10 bytes
  5953 ;; Hardware stack levels used:    1
  5954 ;; Hardware stack levels required when called:   10
  5955 ;; This function calls:
  5956 ;;		Nothing
  5957 ;; This function is called by:
  5958 ;;		_send_msg
  5959 ;;		_recv_msg
  5960 ;; This function uses a non-reentrant model
  5961 ;;
  5962                           
  5963                           	psect	text35
  5964  001AFE                     __ptext35:
  5965                           	opt stack 0
  5966  001AFE                     _memcpy:
  5967                           	opt stack 17
  5968                           
  5969                           ;incstack = 0
  5970  001AFE  0100               	movlb	0	; () banked
  5971  001B00  C0B5  F0BB         	movff	memcpy@s1+1,memcpy@s+1
  5972  001B04  0100               	movlb	0	; () banked
  5973  001B06  C0B4  F0BA         	movff	memcpy@s1,memcpy@s
  5974  001B0A  0100               	movlb	0	; () banked
  5975  001B0C  C0B3  F0B9         	movff	memcpy@d1+1,memcpy@d+1
  5976  001B10  0100               	movlb	0	; () banked
  5977  001B12  C0B2  F0B8         	movff	memcpy@d1,memcpy@d
  5978  001B16  D010               	goto	l3270
  5979  001B18                     l3264:
  5980                           
  5981                           ; BSR set to: 0
  5982  001B18  C0BA  FFD9         	movff	memcpy@s,fsr2l
  5983  001B1C  C0BB  FFDA         	movff	memcpy@s+1,fsr2h
  5984  001B20  C0B8  FFE1         	movff	memcpy@d,fsr1l
  5985  001B24  C0B9  FFE2         	movff	memcpy@d+1,fsr1h
  5986  001B28  CFDF FFE7          	movff	indf2,indf1
  5987                           
  5988                           ; BSR set to: 0
  5989  001B2C  0100               	movlb	0	; () banked
  5990  001B2E  4BBA               	infsnz	memcpy@s& (0+255),f,b
  5991  001B30  2BBB               	incf	(memcpy@s+1)& (0+255),f,b
  5992                           
  5993                           ; BSR set to: 0
  5994  001B32  0100               	movlb	0	; () banked
  5995  001B34  4BB8               	infsnz	memcpy@d& (0+255),f,b
  5996  001B36  2BB9               	incf	(memcpy@d+1)& (0+255),f,b
  5997  001B38                     l3270:
  5998                           
  5999                           ; BSR set to: 0
  6000  001B38  0100               	movlb	0	; () banked
  6001  001B3A  07B6               	decf	memcpy@n& (0+255),f,b
  6002  001B3C  A0D8               	btfss	status,0,c
  6003  001B3E  07B7               	decf	(memcpy@n+1)& (0+255),f,b
  6004  001B40  0100               	movlb	0	; () banked
  6005  001B42  29B6               	incf	memcpy@n& (0+255),w,b
  6006  001B44  B4D8               	btfsc	status,2,c
  6007  001B46  29B7               	incf	(memcpy@n+1)& (0+255),w,b
  6008  001B48  B4D8               	btfsc	status,2,c
  6009                           
  6010                           ; BSR set to: 0
  6011                           
  6012                           ; BSR set to: 0
  6013                           ;	Return value of _memcpy is never used
  6014  001B4A  0012               	return	
  6015  001B4C  D7E5               	goto	l3264
  6016  001B4E                     __end_of_memcpy:
  6017                           	opt stack 0
  6018                           tblptru	equ	0xFF8
  6019                           tblptrh	equ	0xFF7
  6020                           tblptrl	equ	0xFF6
  6021                           tablat	equ	0xFF5
  6022                           prodh	equ	0xFF4
  6023                           prodl	equ	0xFF3
  6024                           intcon	equ	0xFF2
  6025                           postinc0	equ	0xFEE
  6026                           wreg	equ	0xFE8
  6027                           indf1	equ	0xFE7
  6028                           postdec1	equ	0xFE5
  6029                           fsr1h	equ	0xFE2
  6030                           fsr1l	equ	0xFE1
  6031                           indf2	equ	0xFDF
  6032                           postinc2	equ	0xFDE
  6033                           postdec2	equ	0xFDD
  6034                           fsr2h	equ	0xFDA
  6035                           fsr2l	equ	0xFD9
  6036                           status	equ	0xFD8
  6037                           
  6038 ;; *************** function _OpenUSART *****************
  6039 ;; Defined at:
  6040 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  config          1    wreg     unsigned char 
  6043 ;;  spbrg           2   50[BANK0 ] unsigned int 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  config          1   55[BANK0 ] unsigned char 
  6046 ;; Return value:  Size  Location     Type
  6047 ;;		None               void
  6048 ;; Registers used:
  6049 ;;		wreg, status,2
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6055 ;;      Params:         0       2       0       0       0
  6056 ;;      Locals:         0       1       0       0       0
  6057 ;;      Temps:          0       3       0       0       0
  6058 ;;      Totals:         0       6       0       0       0
  6059 ;;Total ram usage:        6 bytes
  6060 ;; Hardware stack levels used:    1
  6061 ;; Hardware stack levels required when called:   10
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_main
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text36
  6070  0016C6                     __ptext36:
  6071                           	opt stack 0
  6072  0016C6                     _OpenUSART:
  6073                           	opt stack 20
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;incstack = 0
  6077                           ;OpenUSART@config stored from wreg
  6078  0016C6  0100               	movlb	0	; () banked
  6079  0016C8  6FB7               	movwf	OpenUSART@config& (0+255),b
  6080                           
  6081                           ; BSR set to: 0
  6082  0016CA  0E00               	movlw	0
  6083  0016CC  6EAC               	movwf	4012,c	;volatile
  6084  0016CE  0E00               	movlw	0
  6085  0016D0  6EAB               	movwf	4011,c	;volatile
  6086                           
  6087                           ; BSR set to: 0
  6088  0016D2  0100               	movlb	0	; () banked
  6089  0016D4  B1B7               	btfsc	OpenUSART@config& (0+255),0,b
  6090                           
  6091                           ; BSR set to: 0
  6092  0016D6  88AC               	bsf	4012,4,c	;volatile
  6093                           
  6094                           ; BSR set to: 0
  6095                           
  6096                           ; BSR set to: 0
  6097  0016D8  0100               	movlb	0	; () banked
  6098  0016DA  A3B7               	btfss	OpenUSART@config& (0+255),1,b
  6099  0016DC  D002               	goto	l3896
  6100                           
  6101                           ; BSR set to: 0
  6102  0016DE  8CAC               	bsf	4012,6,c	;volatile
  6103  0016E0  8CAB               	bsf	4011,6,c	;volatile
  6104  0016E2                     l3896:
  6105                           
  6106                           ; BSR set to: 0
  6107  0016E2  0100               	movlb	0	; () banked
  6108  0016E4  B5B7               	btfsc	OpenUSART@config& (0+255),2,b
  6109                           
  6110                           ; BSR set to: 0
  6111  0016E6  8EAC               	bsf	4012,7,c	;volatile
  6112                           
  6113                           ; BSR set to: 0
  6114                           
  6115                           ; BSR set to: 0
  6116  0016E8  0100               	movlb	0	; () banked
  6117  0016EA  A7B7               	btfss	OpenUSART@config& (0+255),3,b
  6118  0016EC  D002               	goto	l577
  6119                           
  6120                           ; BSR set to: 0
  6121  0016EE  88AB               	bsf	4011,4,c	;volatile
  6122  0016F0  D001               	goto	l3904
  6123  0016F2                     l577:
  6124                           
  6125                           ; BSR set to: 0
  6126  0016F2  8AAB               	bsf	4011,5,c	;volatile
  6127  0016F4                     l3904:
  6128                           
  6129                           ; BSR set to: 0
  6130  0016F4  0100               	movlb	0	; () banked
  6131  0016F6  B9B7               	btfsc	OpenUSART@config& (0+255),4,b
  6132                           
  6133                           ; BSR set to: 0
  6134  0016F8  84AC               	bsf	4012,2,c	;volatile
  6135                           
  6136                           ; BSR set to: 0
  6137  0016FA  989E               	bcf	3998,4,c	;volatile
  6138                           
  6139                           ; BSR set to: 0
  6140  0016FC  0100               	movlb	0	; () banked
  6141  0016FE  BBB7               	btfsc	OpenUSART@config& (0+255),5,b
  6142                           
  6143                           ; BSR set to: 0
  6144  001700  86AB               	bsf	4011,3,c	;volatile
  6145                           
  6146                           ; BSR set to: 0
  6147                           
  6148                           ; BSR set to: 0
  6149  001702  0100               	movlb	0	; () banked
  6150  001704  ADB7               	btfss	OpenUSART@config& (0+255),6,b
  6151  001706  D002               	goto	l581
  6152                           
  6153                           ; BSR set to: 0
  6154  001708  8A9D               	bsf	3997,5,c	;volatile
  6155  00170A  D001               	goto	l582
  6156  00170C                     l581:
  6157                           
  6158                           ; BSR set to: 0
  6159  00170C  9A9D               	bcf	3997,5,c	;volatile
  6160  00170E                     l582:
  6161                           
  6162                           ; BSR set to: 0
  6163  00170E  9A9E               	bcf	3998,5,c	;volatile
  6164                           
  6165                           ; BSR set to: 0
  6166  001710  0100               	movlb	0	; () banked
  6167  001712  AFB7               	btfss	OpenUSART@config& (0+255),7,b
  6168  001714  D002               	goto	l583
  6169                           
  6170                           ; BSR set to: 0
  6171  001716  889D               	bsf	3997,4,c	;volatile
  6172  001718  D001               	goto	l584
  6173  00171A                     l583:
  6174                           
  6175                           ; BSR set to: 0
  6176  00171A  989D               	bcf	3997,4,c	;volatile
  6177  00171C                     l584:
  6178                           
  6179                           ; BSR set to: 0
  6180  00171C  C0B2  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  6181                           
  6182                           ; BSR set to: 0
  6183  001720  0100               	movlb	0	; () banked
  6184  001722  C0B3  F0B4         	movff	OpenUSART@spbrg+1,??_OpenUSART
  6185  001726  C0B4  F0B5         	movff	??_OpenUSART,??_OpenUSART+1
  6186  00172A  0100               	movlb	0	; () banked
  6187  00172C  6BB6               	clrf	(??_OpenUSART+2)& (0+255),b
  6188  00172E  0100               	movlb	0	; () banked
  6189  001730  51B5               	movf	(??_OpenUSART+1)& (0+255),w,b
  6190  001732  6EB0               	movwf	4016,c	;volatile
  6191                           
  6192                           ; BSR set to: 0
  6193  001734  8AAC               	bsf	4012,5,c	;volatile
  6194                           
  6195                           ; BSR set to: 0
  6196  001736  8EAB               	bsf	4011,7,c	;volatile
  6197                           
  6198                           ; BSR set to: 0
  6199  001738  9C94               	bcf	3988,6,c	;volatile
  6200                           
  6201                           ; BSR set to: 0
  6202  00173A  8E94               	bsf	3988,7,c	;volatile
  6203                           
  6204                           ; BSR set to: 0
  6205  00173C  A8AC               	btfss	4012,4,c	;volatile
  6206  00173E  0012               	return	
  6207                           
  6208                           ; BSR set to: 0
  6209  001740  BEAC               	btfsc	4012,7,c	;volatile
  6210  001742  0012               	return	
  6211                           
  6212                           ; BSR set to: 0
  6213  001744  8C94               	bsf	3988,6,c	;volatile
  6214  001746  0012               	return	
  6215  001748                     __end_of_OpenUSART:
  6216                           	opt stack 0
  6217                           tblptru	equ	0xFF8
  6218                           tblptrh	equ	0xFF7
  6219                           tblptrl	equ	0xFF6
  6220                           tablat	equ	0xFF5
  6221                           prodh	equ	0xFF4
  6222                           prodl	equ	0xFF3
  6223                           intcon	equ	0xFF2
  6224                           postinc0	equ	0xFEE
  6225                           wreg	equ	0xFE8
  6226                           indf1	equ	0xFE7
  6227                           postdec1	equ	0xFE5
  6228                           fsr1h	equ	0xFE2
  6229                           fsr1l	equ	0xFE1
  6230                           indf2	equ	0xFDF
  6231                           postinc2	equ	0xFDE
  6232                           postdec2	equ	0xFDD
  6233                           fsr2h	equ	0xFDA
  6234                           fsr2l	equ	0xFD9
  6235                           status	equ	0xFD8
  6236                           
  6237 ;; *************** function _OpenTimer1 *****************
  6238 ;; Defined at:
  6239 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  6240 ;; Parameters:    Size  Location     Type
  6241 ;;  config          1    wreg     unsigned char 
  6242 ;; Auto vars:     Size  Location     Type
  6243 ;;  config          1   50[BANK0 ] unsigned char 
  6244 ;; Return value:  Size  Location     Type
  6245 ;;		None               void
  6246 ;; Registers used:
  6247 ;;		wreg, status,2, status,0
  6248 ;; Tracked objects:
  6249 ;;		On entry : 0/0
  6250 ;;		On exit  : 0/0
  6251 ;;		Unchanged: 0/0
  6252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6253 ;;      Params:         0       0       0       0       0
  6254 ;;      Locals:         0       1       0       0       0
  6255 ;;      Temps:          0       0       0       0       0
  6256 ;;      Totals:         0       1       0       0       0
  6257 ;;Total ram usage:        1 bytes
  6258 ;; Hardware stack levels used:    1
  6259 ;; Hardware stack levels required when called:   10
  6260 ;; This function calls:
  6261 ;;		Nothing
  6262 ;; This function is called by:
  6263 ;;		_main
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text37
  6268  001DB6                     __ptext37:
  6269                           	opt stack 0
  6270  001DB6                     _OpenTimer1:
  6271                           	opt stack 20
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;incstack = 0
  6275                           ;OpenTimer1@config stored from wreg
  6276  001DB6  0100               	movlb	0	; () banked
  6277  001DB8  6FB2               	movwf	OpenTimer1@config& (0+255),b
  6278                           
  6279                           ; BSR set to: 0
  6280  001DBA  0100               	movlb	0	; () banked
  6281  001DBC  51B2               	movf	OpenTimer1@config& (0+255),w,b
  6282  001DBE  0B7E               	andlw	126
  6283  001DC0  6ECD               	movwf	4045,c	;volatile
  6284                           
  6285                           ; BSR set to: 0
  6286  001DC2  0100               	movlb	0	; () banked
  6287  001DC4  ADB2               	btfss	OpenTimer1@config& (0+255),6,b
  6288  001DC6  D002               	goto	l540
  6289                           
  6290                           ; BSR set to: 0
  6291  001DC8  8ECD               	bsf	4045,7,c	;volatile
  6292  001DCA  D001               	goto	l3878
  6293  001DCC                     l540:
  6294                           
  6295                           ; BSR set to: 0
  6296  001DCC  9ECD               	bcf	4045,7,c	;volatile
  6297  001DCE                     l3878:
  6298                           
  6299                           ; BSR set to: 0
  6300  001DCE  0E00               	movlw	0
  6301  001DD0  6ECF               	movwf	4047,c	;volatile
  6302  001DD2  0E00               	movlw	0
  6303  001DD4  6ECE               	movwf	4046,c	;volatile
  6304                           
  6305                           ; BSR set to: 0
  6306  001DD6  909E               	bcf	3998,0,c	;volatile
  6307                           
  6308                           ; BSR set to: 0
  6309  001DD8  0100               	movlb	0	; () banked
  6310  001DDA  AFB2               	btfss	OpenTimer1@config& (0+255),7,b
  6311  001DDC  D002               	goto	l542
  6312                           
  6313                           ; BSR set to: 0
  6314  001DDE  809D               	bsf	3997,0,c	;volatile
  6315  001DE0  D001               	goto	l543
  6316  001DE2                     l542:
  6317                           
  6318                           ; BSR set to: 0
  6319  001DE2  909D               	bcf	3997,0,c	;volatile
  6320  001DE4                     l543:
  6321                           
  6322                           ; BSR set to: 0
  6323  001DE4  80CD               	bsf	4045,0,c	;volatile
  6324                           
  6325                           ; BSR set to: 0
  6326  001DE6  0012               	return	
  6327  001DE8                     __end_of_OpenTimer1:
  6328                           	opt stack 0
  6329                           tblptru	equ	0xFF8
  6330                           tblptrh	equ	0xFF7
  6331                           tblptrl	equ	0xFF6
  6332                           tablat	equ	0xFF5
  6333                           prodh	equ	0xFF4
  6334                           prodl	equ	0xFF3
  6335                           intcon	equ	0xFF2
  6336                           postinc0	equ	0xFEE
  6337                           wreg	equ	0xFE8
  6338                           indf1	equ	0xFE7
  6339                           postdec1	equ	0xFE5
  6340                           fsr1h	equ	0xFE2
  6341                           fsr1l	equ	0xFE1
  6342                           indf2	equ	0xFDF
  6343                           postinc2	equ	0xFDE
  6344                           postdec2	equ	0xFDD
  6345                           fsr2h	equ	0xFDA
  6346                           fsr2l	equ	0xFD9
  6347                           status	equ	0xFD8
  6348                           
  6349 ;; *************** function _OpenTimer0 *****************
  6350 ;; Defined at:
  6351 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  config          1    wreg     unsigned char 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;  config          1   50[BANK0 ] unsigned char 
  6356 ;; Return value:  Size  Location     Type
  6357 ;;		None               void
  6358 ;; Registers used:
  6359 ;;		wreg, status,2, status,0
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6365 ;;      Params:         0       0       0       0       0
  6366 ;;      Locals:         0       1       0       0       0
  6367 ;;      Temps:          0       0       0       0       0
  6368 ;;      Totals:         0       1       0       0       0
  6369 ;;Total ram usage:        1 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; Hardware stack levels required when called:   10
  6372 ;; This function calls:
  6373 ;;		Nothing
  6374 ;; This function is called by:
  6375 ;;		_main
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text38
  6380  001EF6                     __ptext38:
  6381                           	opt stack 0
  6382  001EF6                     _OpenTimer0:
  6383                           	opt stack 20
  6384                           
  6385                           ; BSR set to: 0
  6386                           ;incstack = 0
  6387                           ;OpenTimer0@config stored from wreg
  6388  001EF6  0100               	movlb	0	; () banked
  6389  001EF8  6FB2               	movwf	OpenTimer0@config& (0+255),b
  6390                           
  6391                           ; BSR set to: 0
  6392  001EFA  0100               	movlb	0	; () banked
  6393  001EFC  51B2               	movf	OpenTimer0@config& (0+255),w,b
  6394  001EFE  0B7F               	andlw	127
  6395  001F00  6ED5               	movwf	4053,c	;volatile
  6396                           
  6397                           ; BSR set to: 0
  6398  001F02  0E00               	movlw	0
  6399  001F04  6ED7               	movwf	4055,c	;volatile
  6400                           
  6401                           ; BSR set to: 0
  6402  001F06  0E00               	movlw	0
  6403  001F08  6ED6               	movwf	4054,c	;volatile
  6404                           
  6405                           ; BSR set to: 0
  6406  001F0A  94F2               	bcf	intcon,2,c	;volatile
  6407                           
  6408                           ; BSR set to: 0
  6409  001F0C  0100               	movlb	0	; () banked
  6410  001F0E  AFB2               	btfss	OpenTimer0@config& (0+255),7,b
  6411  001F10  D002               	goto	l516
  6412                           
  6413                           ; BSR set to: 0
  6414  001F12  8AF2               	bsf	intcon,5,c	;volatile
  6415  001F14  D001               	goto	l517
  6416  001F16                     l516:
  6417                           
  6418                           ; BSR set to: 0
  6419  001F16  9AF2               	bcf	intcon,5,c	;volatile
  6420  001F18                     l517:
  6421                           
  6422                           ; BSR set to: 0
  6423  001F18  8ED5               	bsf	4053,7,c	;volatile
  6424                           
  6425                           ; BSR set to: 0
  6426  001F1A  0012               	return	
  6427  001F1C                     __end_of_OpenTimer0:
  6428                           	opt stack 0
  6429                           tblptru	equ	0xFF8
  6430                           tblptrh	equ	0xFF7
  6431                           tblptrl	equ	0xFF6
  6432                           tablat	equ	0xFF5
  6433                           prodh	equ	0xFF4
  6434                           prodl	equ	0xFF3
  6435                           intcon	equ	0xFF2
  6436                           postinc0	equ	0xFEE
  6437                           wreg	equ	0xFE8
  6438                           indf1	equ	0xFE7
  6439                           postdec1	equ	0xFE5
  6440                           fsr1h	equ	0xFE2
  6441                           fsr1l	equ	0xFE1
  6442                           indf2	equ	0xFDF
  6443                           postinc2	equ	0xFDE
  6444                           postdec2	equ	0xFDD
  6445                           fsr2h	equ	0xFDA
  6446                           fsr2l	equ	0xFD9
  6447                           status	equ	0xFD8
  6448                           
  6449 ;; *************** function _InterruptHandlerLow *****************
  6450 ;; Defined at:
  6451 ;;		line 116 in file "src/interrupts.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;		None
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;		None
  6456 ;; Return value:  Size  Location     Type
  6457 ;;		None               void
  6458 ;; Registers used:
  6459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6465 ;;      Params:         0       0       0       0       0
  6466 ;;      Locals:         0       0       0       0       0
  6467 ;;      Temps:         17       0       0       0       0
  6468 ;;      Totals:        17       0       0       0       0
  6469 ;;Total ram usage:       17 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    9
  6472 ;; This function calls:
  6473 ;;		_uart_recv_int_handler
  6474 ;;		_uart_trans_int_handler
  6475 ;;		i1_ToMainLow_sendmsg
  6476 ;; This function is called by:
  6477 ;;		Interrupt level 1
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           	psect	intcodelo
  6482  000018                     __pintcodelo:
  6483                           	opt stack 0
  6484  000018                     _InterruptHandlerLow:
  6485                           	opt stack 16
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;incstack = 0
  6489  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  6490  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  6491  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  6492  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  6493  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  6494  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  6495  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  6496  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  6497  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  6498  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  6499  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  6500  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  6501  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  6502  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  6503  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  6504  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  6505  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  6506                           
  6507                           ;interrupts.c: 118: if (PIR1bits.TMR1IF) {
  6508  00005C  A09E               	btfss	3998,0,c	;volatile
  6509  00005E  D00A               	goto	i1l4156
  6510                           
  6511                           ;interrupts.c: 119: PIR1bits.TMR1IF = 0;
  6512  000060  909E               	bcf	3998,0,c	;volatile
  6513                           
  6514                           ;interrupts.c: 120: ToMainLow_sendmsg(0, 11, (void *)0);
  6515  000062  0E0B               	movlw	11
  6516  000064  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6517  000066  0E00               	movlw	0
  6518  000068  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6519  00006A  0E00               	movlw	0
  6520  00006C  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6521  00006E  0E00               	movlw	0
  6522  000070  ECA1  F00F         	call	i1_ToMainLow_sendmsg
  6523  000074                     i1l4156:
  6524                           
  6525                           ;interrupts.c: 121: }
  6526                           ;interrupts.c: 124: if (PIR1bits.RCIF) {
  6527  000074  AA9E               	btfss	3998,5,c	;volatile
  6528  000076  D003               	goto	i1l4162
  6529                           
  6530                           ;interrupts.c: 125: PIR1bits.RCIF = 0;
  6531  000078  9A9E               	bcf	3998,5,c	;volatile
  6532                           
  6533                           ;interrupts.c: 126: uart_recv_int_handler();
  6534  00007A  ECD0  F00A         	call	_uart_recv_int_handler	;wreg free
  6535  00007E                     i1l4162:
  6536                           
  6537                           ;interrupts.c: 127: }
  6538                           ;interrupts.c: 130: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  6539  00007E  B89E               	btfsc	3998,4,c	;volatile
  6540  000080  A89D               	btfss	3997,4,c	;volatile
  6541  000082  D002               	goto	i1l52
  6542                           
  6543                           ;interrupts.c: 131: uart_trans_int_handler();
  6544  000084  EC54  F00D         	call	_uart_trans_int_handler	;wreg free
  6545  000088                     i1l52:
  6546  000088  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  6547  00008C  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  6548  000090  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  6549  000094  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  6550  000098  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  6551  00009C  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  6552  0000A0  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  6553  0000A4  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  6554  0000A8  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  6555  0000AC  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  6556  0000B0  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  6557  0000B4  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  6558  0000B8  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  6559  0000BC  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  6560  0000C0  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  6561  0000C4  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  6562  0000C8  C023  FFD8         	movff	??_InterruptHandlerLow,status
  6563  0000CC  0010               	retfie	
  6564  0000CE                     __end_of_InterruptHandlerLow:
  6565                           	opt stack 0
  6566                           pclatu	equ	0xFFB
  6567                           pclath	equ	0xFFA
  6568                           tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           prodh	equ	0xFF4
  6573                           prodl	equ	0xFF3
  6574                           intcon	equ	0xFF2
  6575                           postinc0	equ	0xFEE
  6576                           fsr0h	equ	0xFEA
  6577                           fsr0l	equ	0xFE9
  6578                           wreg	equ	0xFE8
  6579                           indf1	equ	0xFE7
  6580                           postdec1	equ	0xFE5
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           bsr	equ	0xFE0
  6584                           indf2	equ	0xFDF
  6585                           postinc2	equ	0xFDE
  6586                           postdec2	equ	0xFDD
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _uart_trans_int_handler *****************
  6592 ;; Defined at:
  6593 ;;		line 11 in file "src/my_uart.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  data            2   29[COMRAM] PTR unsigned char 
  6598 ;;		 -> NULL(0), 
  6599 ;;  length          1   33[COMRAM] char 
  6600 ;;  curIndex        1   32[COMRAM] unsigned char 
  6601 ;;  msgtype         1   31[COMRAM] unsigned char 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;		None               void
  6604 ;; Registers used:
  6605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6611 ;;      Params:         0       0       0       0       0
  6612 ;;      Locals:         5       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0
  6614 ;;      Totals:         5       0       0       0       0
  6615 ;;Total ram usage:        5 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:    8
  6618 ;; This function calls:
  6619 ;;		_FromMainLow_recvmsg
  6620 ;; This function is called by:
  6621 ;;		_InterruptHandlerLow
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           	psect	text40
  6626  001AA8                     __ptext40:
  6627                           	opt stack 0
  6628  001AA8                     _uart_trans_int_handler:
  6629                           	opt stack 16
  6630                           
  6631                           ;my_uart.c: 13: unsigned char* data = (0);
  6632                           
  6633                           ;incstack = 0
  6634  001AA8  0E00               	movlw	0
  6635  001AAA  6E1F               	movwf	uart_trans_int_handler@data+1,c
  6636  001AAC  0E00               	movlw	0
  6637  001AAE  6E1E               	movwf	uart_trans_int_handler@data,c
  6638                           
  6639                           ;my_uart.c: 14: unsigned char msgtype;
  6640                           ;my_uart.c: 15: unsigned char curIndex;
  6641                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  6642  001AB0  0E00               	movlw	high uart_trans_int_handler@msgtype
  6643  001AB2  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  6644  001AB4  0E20               	movlw	low uart_trans_int_handler@msgtype
  6645  001AB6  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  6646  001AB8  C01F  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  6647  001ABC  C01E  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  6648  001AC0  0E0A               	movlw	10
  6649  001AC2  EC8E  F00F         	call	_FromMainLow_recvmsg
  6650  001AC6  6E22               	movwf	uart_trans_int_handler@length,c
  6651                           
  6652                           ;my_uart.c: 17: if (length < 0) {
  6653  001AC8  BE22               	btfsc	uart_trans_int_handler@length,7,c
  6654  001ACA  D017               	goto	i1l416
  6655                           
  6656                           ;my_uart.c: 26: curIndex = 0;
  6657                           
  6658                           ;my_uart.c: 24: }
  6659                           ;my_uart.c: 25: } else {
  6660                           
  6661                           ;my_uart.c: 22: else{
  6662                           
  6663                           ;my_uart.c: 21: }
  6664  001ACC  0E00               	movlw	0
  6665  001ACE  6E21               	movwf	uart_trans_int_handler@curIndex,c
  6666                           
  6667                           ;my_uart.c: 27: while(curIndex < length){
  6668  001AD0  D00D               	goto	i1l3802
  6669  001AD2                     i1l419:
  6670  001AD2  A2AC               	btfss	4012,1,c	;volatile
  6671  001AD4  D7FE               	goto	i1l419
  6672                           
  6673                           ;my_uart.c: 33: TXREG = data[curIndex];
  6674  001AD6  5021               	movf	uart_trans_int_handler@curIndex,w,c
  6675  001AD8  0D01               	mullw	1
  6676  001ADA  50F3               	movf	prodl,w,c
  6677  001ADC  241E               	addwf	uart_trans_int_handler@data,w,c
  6678  001ADE  6ED9               	movwf	fsr2l,c
  6679  001AE0  50F4               	movf	prodh,w,c
  6680  001AE2  201F               	addwfc	uart_trans_int_handler@data+1,w,c
  6681  001AE4  6EDA               	movwf	fsr2h,c
  6682  001AE6  50DF               	movf	indf2,w,c
  6683  001AE8  6EAD               	movwf	4013,c	;volatile
  6684                           
  6685                           ;my_uart.c: 35: curIndex++;
  6686  001AEA  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  6687  001AEC                     i1l3802:
  6688  001AEC  5021               	movf	uart_trans_int_handler@curIndex,w,c
  6689  001AEE  BE22               	btfsc	uart_trans_int_handler@length,7,c
  6690  001AF0  D004               	goto	i1l416
  6691  001AF2  0AFF               	xorlw	255
  6692  001AF4  2422               	addwf	uart_trans_int_handler@length,w,c
  6693  001AF6  B0D8               	btfsc	status,0,c
  6694  001AF8  D7EC               	goto	i1l419
  6695  001AFA                     i1l416:
  6696                           
  6697                           ;my_uart.c: 36: }
  6698                           ;my_uart.c: 37: }
  6699                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  6700  001AFA  989D               	bcf	3997,4,c	;volatile
  6701  001AFC  0012               	return	
  6702  001AFE                     __end_of_uart_trans_int_handler:
  6703                           	opt stack 0
  6704                           pclatu	equ	0xFFB
  6705                           pclath	equ	0xFFA
  6706                           tblptru	equ	0xFF8
  6707                           tblptrh	equ	0xFF7
  6708                           tblptrl	equ	0xFF6
  6709                           tablat	equ	0xFF5
  6710                           prodh	equ	0xFF4
  6711                           prodl	equ	0xFF3
  6712                           intcon	equ	0xFF2
  6713                           postinc0	equ	0xFEE
  6714                           fsr0h	equ	0xFEA
  6715                           fsr0l	equ	0xFE9
  6716                           wreg	equ	0xFE8
  6717                           indf1	equ	0xFE7
  6718                           postdec1	equ	0xFE5
  6719                           fsr1h	equ	0xFE2
  6720                           fsr1l	equ	0xFE1
  6721                           bsr	equ	0xFE0
  6722                           indf2	equ	0xFDF
  6723                           postinc2	equ	0xFDE
  6724                           postdec2	equ	0xFDD
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function _FromMainLow_recvmsg *****************
  6730 ;; Defined at:
  6731 ;;		line 159 in file "src/messages.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  maxlength       1    wreg     unsigned char 
  6734 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  6735 ;;		 -> uart_trans_int_handler@msgtype(1), 
  6736 ;;  data            2   26[COMRAM] PTR void 
  6737 ;;		 -> NULL(0), 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  maxlength       1   28[COMRAM] unsigned char 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  1    wreg      char 
  6742 ;; Registers used:
  6743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6749 ;;      Params:         4       0       0       0       0
  6750 ;;      Locals:         1       0       0       0       0
  6751 ;;      Temps:          0       0       0       0       0
  6752 ;;      Totals:         5       0       0       0       0
  6753 ;;Total ram usage:        5 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; Hardware stack levels required when called:    7
  6756 ;; This function calls:
  6757 ;;		i1_recv_msg
  6758 ;; This function is called by:
  6759 ;;		_uart_trans_int_handler
  6760 ;; This function uses a non-reentrant model
  6761 ;;
  6762                           
  6763                           	psect	text41
  6764  001F1C                     __ptext41:
  6765                           	opt stack 0
  6766  001F1C                     _FromMainLow_recvmsg:
  6767                           	opt stack 16
  6768                           
  6769                           ;incstack = 0
  6770                           ;FromMainLow_recvmsg@maxlength stored from wreg
  6771  001F1C  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  6772                           
  6773                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  6774  001F1E  0101               	movlb	1	; () banked
  6775  001F20  0E01               	movlw	high _FromMainLow_MQ
  6776  001F22  6E0C               	movwf	i1recv_msg@qptr+1,c
  6777  001F24  0101               	movlb	1	; () banked
  6778  001F26  0E00               	movlw	low _FromMainLow_MQ
  6779  001F28  6E0B               	movwf	i1recv_msg@qptr,c
  6780  001F2A  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  6781  001F2E  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  6782  001F32  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  6783  001F36  6A11               	clrf	i1recv_msg@data+1,c
  6784  001F38  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  6785  001F3C  EC3F  F008         	call	i1_recv_msg	;wreg free
  6786  001F40  0012               	return	
  6787  001F42                     __end_of_FromMainLow_recvmsg:
  6788                           	opt stack 0
  6789                           pclatu	equ	0xFFB
  6790                           pclath	equ	0xFFA
  6791                           tblptru	equ	0xFF8
  6792                           tblptrh	equ	0xFF7
  6793                           tblptrl	equ	0xFF6
  6794                           tablat	equ	0xFF5
  6795                           prodh	equ	0xFF4
  6796                           prodl	equ	0xFF3
  6797                           intcon	equ	0xFF2
  6798                           postinc0	equ	0xFEE
  6799                           fsr0h	equ	0xFEA
  6800                           fsr0l	equ	0xFE9
  6801                           wreg	equ	0xFE8
  6802                           indf1	equ	0xFE7
  6803                           postdec1	equ	0xFE5
  6804                           fsr1h	equ	0xFE2
  6805                           fsr1l	equ	0xFE1
  6806                           bsr	equ	0xFE0
  6807                           indf2	equ	0xFDF
  6808                           postinc2	equ	0xFDE
  6809                           postdec2	equ	0xFDD
  6810                           fsr2h	equ	0xFDA
  6811                           fsr2l	equ	0xFD9
  6812                           status	equ	0xFD8
  6813                           
  6814 ;; *************** function i1_recv_msg *****************
  6815 ;; Defined at:
  6816 ;;		line 63 in file "src/messages.c"
  6817 ;; Parameters:    Size  Location     Type
  6818 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6819 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6820 ;;  maxlength       1   12[COMRAM] unsigned char 
  6821 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  6822 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6823 ;;  data            2   15[COMRAM] PTR void 
  6824 ;;		 -> main@msgbuffer(11), NULL(0), 
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  6827 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6828 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6829 ;;  recv_msg        2   20[COMRAM] unsigned int 
  6830 ;;  recv_msg        1   19[COMRAM] unsigned char 
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1    wreg      char 
  6833 ;; Registers used:
  6834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6835 ;; Tracked objects:
  6836 ;;		On entry : 0/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6840 ;;      Params:         7       0       0       0       0
  6841 ;;      Locals:         5       0       0       0       0
  6842 ;;      Temps:          2       0       0       0       0
  6843 ;;      Totals:        14       0       0       0       0
  6844 ;;Total ram usage:       14 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    6
  6847 ;; This function calls:
  6848 ;;		i1_memcpy
  6849 ;; This function is called by:
  6850 ;;		_FromMainLow_recvmsg
  6851 ;; This function uses a non-reentrant model
  6852 ;;
  6853                           
  6854                           	psect	text42
  6855  00107E                     __ptext42:
  6856                           	opt stack 0
  6857  00107E                     i1_recv_msg:
  6858                           	opt stack 16
  6859                           
  6860                           ;messages.c: 64: unsigned char slot;
  6861                           ;messages.c: 68: msg *qmsg;
  6862                           ;messages.c: 69: size_t tlength;
  6863                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6864                           
  6865                           ;incstack = 0
  6866  00107E  EE20 F035          	lfsr	2,53
  6867  001082  500B               	movf	i1recv_msg@qptr,w,c
  6868  001084  26D9               	addwf	fsr2l,f,c
  6869  001086  500C               	movf	i1recv_msg@qptr+1,w,c
  6870  001088  22DA               	addwfc	fsr2h,f,c
  6871  00108A  50DF               	movf	indf2,w,c
  6872  00108C  6E14               	movwf	i1recv_msg@slot,c
  6873                           
  6874                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6875  00108E  5014               	movf	i1recv_msg@slot,w,c
  6876  001090  0D0D               	mullw	13
  6877  001092  50F3               	movf	prodl,w,c
  6878  001094  240B               	addwf	i1recv_msg@qptr,w,c
  6879  001096  6E17               	movwf	i1recv_msg@qmsg,c
  6880  001098  50F4               	movf	prodh,w,c
  6881  00109A  200C               	addwfc	i1recv_msg@qptr+1,w,c
  6882  00109C  6E18               	movwf	i1recv_msg@qmsg+1,c
  6883                           
  6884                           ;messages.c: 74: if (qmsg->full == 1) {
  6885  00109E  0E01               	movlw	1
  6886  0010A0  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6887  0010A4  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6888  0010A8  62DF               	cpfseq	indf2,c
  6889  0010AA  D050               	goto	i1l3424
  6890                           
  6891                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6892  0010AC  EE20 F001          	lfsr	2,1
  6893  0010B0  5017               	movf	i1recv_msg@qmsg,w,c
  6894  0010B2  26D9               	addwf	fsr2l,f,c
  6895  0010B4  5018               	movf	i1recv_msg@qmsg+1,w,c
  6896  0010B6  22DA               	addwfc	fsr2h,f,c
  6897  0010B8  50DF               	movf	indf2,w,c
  6898  0010BA  5C0D               	subwf	i1recv_msg@maxlength,w,c
  6899  0010BC  B0D8               	btfsc	status,0,c
  6900  0010BE  D002               	goto	i1l3408
  6901                           
  6902                           ;messages.c: 77: return (-3);
  6903  0010C0  0EFD               	movlw	253
  6904  0010C2  0012               	return	
  6905  0010C4                     i1l3408:
  6906                           
  6907                           ;messages.c: 78: }
  6908                           ;messages.c: 80: tlength = qmsg->length;
  6909  0010C4  EE20 F001          	lfsr	2,1
  6910  0010C8  5017               	movf	i1recv_msg@qmsg,w,c
  6911  0010CA  26D9               	addwf	fsr2l,f,c
  6912  0010CC  5018               	movf	i1recv_msg@qmsg+1,w,c
  6913  0010CE  22DA               	addwfc	fsr2h,f,c
  6914  0010D0  50DF               	movf	indf2,w,c
  6915  0010D2  6E12               	movwf	??i1_recv_msg& (0+255),c
  6916  0010D4  5012               	movf	??i1_recv_msg,w,c
  6917  0010D6  6E15               	movwf	i1recv_msg@tlength,c
  6918  0010D8  6A16               	clrf	i1recv_msg@tlength+1,c
  6919                           
  6920                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6921  0010DA  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  6922  0010DE  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  6923  0010E2  0E03               	movlw	3
  6924  0010E4  2417               	addwf	i1recv_msg@qmsg,w,c
  6925  0010E6  6E12               	movwf	??i1_recv_msg& (0+255),c
  6926  0010E8  0E00               	movlw	0
  6927  0010EA  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  6928  0010EC  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  6929  0010EE  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  6930  0010F2  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  6931  0010F6  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  6932  0010FA  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  6933  0010FE  ECEF  F00D         	call	i1_memcpy	;wreg free
  6934                           
  6935                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6936  001102  EE20 F035          	lfsr	2,53
  6937  001106  500B               	movf	i1recv_msg@qptr,w,c
  6938  001108  26D9               	addwf	fsr2l,f,c
  6939  00110A  500C               	movf	i1recv_msg@qptr+1,w,c
  6940  00110C  22DA               	addwfc	fsr2h,f,c
  6941  00110E  EE10 F035          	lfsr	1,53
  6942  001112  500B               	movf	i1recv_msg@qptr,w,c
  6943  001114  26E1               	addwf	fsr1l,f,c
  6944  001116  500C               	movf	i1recv_msg@qptr+1,w,c
  6945  001118  22E2               	addwfc	fsr1h,f,c
  6946  00111A  50E7               	movf	indf1,w,c
  6947  00111C  6E12               	movwf	??i1_recv_msg& (0+255),c
  6948  00111E  2812               	incf	??i1_recv_msg,w,c
  6949  001120  0B03               	andlw	3
  6950  001122  6EDF               	movwf	indf2,c
  6951                           
  6952                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6953  001124  EE20 F002          	lfsr	2,2
  6954  001128  5017               	movf	i1recv_msg@qmsg,w,c
  6955  00112A  26D9               	addwf	fsr2l,f,c
  6956  00112C  5018               	movf	i1recv_msg@qmsg+1,w,c
  6957  00112E  22DA               	addwfc	fsr2h,f,c
  6958  001130  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  6959  001134  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  6960  001138  CFDF FFE7          	movff	indf2,indf1
  6961                           
  6962                           ;messages.c: 91: qmsg->full = 0;
  6963  00113C  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6964  001140  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6965  001144  0E00               	movlw	0
  6966  001146  6EDF               	movwf	indf2,c
  6967                           
  6968                           ;messages.c: 92: return (tlength);
  6969  001148  5015               	movf	i1recv_msg@tlength,w,c
  6970  00114A  0012               	return	
  6971  00114C                     i1l3424:
  6972                           
  6973                           ;messages.c: 94: return (-4);
  6974  00114C  0EFC               	movlw	252
  6975  00114E  0012               	return	
  6976  001150                     __end_ofi1_recv_msg:
  6977                           	opt stack 0
  6978                           pclatu	equ	0xFFB
  6979                           pclath	equ	0xFFA
  6980                           tblptru	equ	0xFF8
  6981                           tblptrh	equ	0xFF7
  6982                           tblptrl	equ	0xFF6
  6983                           tablat	equ	0xFF5
  6984                           prodh	equ	0xFF4
  6985                           prodl	equ	0xFF3
  6986                           intcon	equ	0xFF2
  6987                           postinc0	equ	0xFEE
  6988                           fsr0h	equ	0xFEA
  6989                           fsr0l	equ	0xFE9
  6990                           wreg	equ	0xFE8
  6991                           indf1	equ	0xFE7
  6992                           postdec1	equ	0xFE5
  6993                           fsr1h	equ	0xFE2
  6994                           fsr1l	equ	0xFE1
  6995                           bsr	equ	0xFE0
  6996                           indf2	equ	0xFDF
  6997                           postinc2	equ	0xFDE
  6998                           postdec2	equ	0xFDD
  6999                           fsr2h	equ	0xFDA
  7000                           fsr2l	equ	0xFD9
  7001                           status	equ	0xFD8
  7002                           
  7003 ;; *************** function _uart_recv_int_handler *****************
  7004 ;; Defined at:
  7005 ;;		line 42 in file "src/my_uart.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;		None
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;		None
  7010 ;; Return value:  Size  Location     Type
  7011 ;;		None               void
  7012 ;; Registers used:
  7013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7014 ;; Tracked objects:
  7015 ;;		On entry : 0/0
  7016 ;;		On exit  : 0/0
  7017 ;;		Unchanged: 0/0
  7018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7019 ;;      Params:         0       0       0       0       0
  7020 ;;      Locals:         0       0       0       0       0
  7021 ;;      Temps:          1       0       0       0       0
  7022 ;;      Totals:         1       0       0       0       0
  7023 ;;Total ram usage:        1 bytes
  7024 ;; Hardware stack levels used:    1
  7025 ;; Hardware stack levels required when called:    8
  7026 ;; This function calls:
  7027 ;;		_ReadUSART
  7028 ;;		i1_ToMainLow_sendmsg
  7029 ;; This function is called by:
  7030 ;;		_InterruptHandlerLow
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text43
  7035  0015A0                     __ptext43:
  7036                           	opt stack 0
  7037  0015A0                     _uart_recv_int_handler:
  7038                           	opt stack 16
  7039                           
  7040                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  7041                           
  7042                           ;incstack = 0
  7043  0015A0  AA9E               	btfss	3998,5,c	;volatile
  7044  0015A2  D03A               	goto	i1l3780
  7045                           
  7046                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  7047  0015A4  EE20 F004          	lfsr	2,4
  7048  0015A8  5061               	movf	_uc_ptr,w,c
  7049  0015AA  26D9               	addwf	fsr2l,f,c
  7050  0015AC  5062               	movf	_uc_ptr+1,w,c
  7051  0015AE  22DA               	addwfc	fsr2h,f,c
  7052  0015B0  50DF               	movf	indf2,w,c
  7053  0015B2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  7054  0015B4  501B               	movf	??_uart_recv_int_handler,w,c
  7055  0015B6  0D01               	mullw	1
  7056  0015B8  50F3               	movf	prodl,w,c
  7057  0015BA  2461               	addwf	_uc_ptr,w,c
  7058  0015BC  6ED9               	movwf	fsr2l,c
  7059  0015BE  50F4               	movf	prodh,w,c
  7060  0015C0  2062               	addwfc	_uc_ptr+1,w,c
  7061  0015C2  6EDA               	movwf	fsr2h,c
  7062  0015C4  ECC2  F00F         	call	_ReadUSART	;wreg free
  7063  0015C8  6EDF               	movwf	indf2,c
  7064                           
  7065                           ;my_uart.c: 56: uc_ptr->buflen++;
  7066  0015CA  EE20 F004          	lfsr	2,4
  7067  0015CE  5061               	movf	_uc_ptr,w,c
  7068  0015D0  26D9               	addwf	fsr2l,f,c
  7069  0015D2  5062               	movf	_uc_ptr+1,w,c
  7070  0015D4  22DA               	addwfc	fsr2h,f,c
  7071  0015D6  2ADF               	incf	indf2,f,c
  7072                           
  7073                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  7074  0015D8  EE20 F004          	lfsr	2,4
  7075  0015DC  5061               	movf	_uc_ptr,w,c
  7076  0015DE  26D9               	addwf	fsr2l,f,c
  7077  0015E0  5062               	movf	_uc_ptr+1,w,c
  7078  0015E2  22DA               	addwfc	fsr2h,f,c
  7079  0015E4  0E04               	movlw	4
  7080  0015E6  62DF               	cpfseq	indf2,c
  7081  0015E8  D017               	goto	i1l3780
  7082                           
  7083                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  7084  0015EA  0E20               	movlw	32
  7085  0015EC  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  7086  0015EE  C062  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  7087  0015F2  C061  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  7088  0015F6  EE20 F004          	lfsr	2,4
  7089  0015FA  5061               	movf	_uc_ptr,w,c
  7090  0015FC  26D9               	addwf	fsr2l,f,c
  7091  0015FE  5062               	movf	_uc_ptr+1,w,c
  7092  001600  22DA               	addwfc	fsr2h,f,c
  7093  001602  50DF               	movf	indf2,w,c
  7094  001604  ECA1  F00F         	call	i1_ToMainLow_sendmsg
  7095                           
  7096                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  7097  001608  EE20 F004          	lfsr	2,4
  7098  00160C  5061               	movf	_uc_ptr,w,c
  7099  00160E  26D9               	addwf	fsr2l,f,c
  7100  001610  5062               	movf	_uc_ptr+1,w,c
  7101  001612  22DA               	addwfc	fsr2h,f,c
  7102  001614  0E00               	movlw	0
  7103  001616  6EDF               	movwf	indf2,c
  7104  001618                     i1l3780:
  7105                           
  7106                           ;my_uart.c: 61: }
  7107                           ;my_uart.c: 62: }
  7108                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  7109  001618  A660               	btfss	_USART_Status,3,c
  7110  00161A  0012               	return	
  7111                           
  7112                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  7113  00161C  98AB               	bcf	4011,4,c	;volatile
  7114                           
  7115                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  7116  00161E  88AB               	bsf	4011,4,c	;volatile
  7117                           
  7118                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  7119  001620  0E1E               	movlw	30
  7120  001622  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  7121  001624  0E00               	movlw	0
  7122  001626  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  7123  001628  0E00               	movlw	0
  7124  00162A  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  7125  00162C  0E00               	movlw	0
  7126  00162E  ECA1  F00F         	call	i1_ToMainLow_sendmsg
  7127  001632  0012               	return	
  7128  001634                     __end_of_uart_recv_int_handler:
  7129                           	opt stack 0
  7130                           pclatu	equ	0xFFB
  7131                           pclath	equ	0xFFA
  7132                           tblptru	equ	0xFF8
  7133                           tblptrh	equ	0xFF7
  7134                           tblptrl	equ	0xFF6
  7135                           tablat	equ	0xFF5
  7136                           prodh	equ	0xFF4
  7137                           prodl	equ	0xFF3
  7138                           intcon	equ	0xFF2
  7139                           postinc0	equ	0xFEE
  7140                           fsr0h	equ	0xFEA
  7141                           fsr0l	equ	0xFE9
  7142                           wreg	equ	0xFE8
  7143                           indf1	equ	0xFE7
  7144                           postdec1	equ	0xFE5
  7145                           fsr1h	equ	0xFE2
  7146                           fsr1l	equ	0xFE1
  7147                           bsr	equ	0xFE0
  7148                           indf2	equ	0xFDF
  7149                           postinc2	equ	0xFDE
  7150                           postdec2	equ	0xFDD
  7151                           fsr2h	equ	0xFDA
  7152                           fsr2l	equ	0xFD9
  7153                           status	equ	0xFD8
  7154                           
  7155 ;; *************** function i1_ToMainLow_sendmsg *****************
  7156 ;; Defined at:
  7157 ;;		line 103 in file "src/messages.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  length          1    wreg     unsigned char 
  7160 ;;  msgtype         1   22[COMRAM] unsigned char 
  7161 ;;  data            2   23[COMRAM] PTR void 
  7162 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  7163 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@uc(5), 
  7164 ;;		 -> NULL(0), 
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  length          1   25[COMRAM] unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  1    wreg      char 
  7169 ;; Registers used:
  7170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7176 ;;      Params:         3       0       0       0       0
  7177 ;;      Locals:         1       0       0       0       0
  7178 ;;      Temps:          0       0       0       0       0
  7179 ;;      Totals:         4       0       0       0       0
  7180 ;;Total ram usage:        4 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    7
  7183 ;; This function calls:
  7184 ;;		i1_send_msg
  7185 ;; This function is called by:
  7186 ;;		_InterruptHandlerLow
  7187 ;;		_uart_recv_int_handler
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text44
  7192  001F42                     __ptext44:
  7193                           	opt stack 0
  7194  001F42                     i1_ToMainLow_sendmsg:
  7195                           	opt stack 17
  7196                           
  7197                           ;incstack = 0
  7198                           ;i1ToMainLow_sendmsg@length stored from wreg
  7199  001F42  6E1A               	movwf	i1ToMainLow_sendmsg@length,c
  7200                           
  7201                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  7202                           ;	Return value of i1_ToMainLow_sendmsg is never used
  7203  001F44  0101               	movlb	1	; () banked
  7204  001F46  0E01               	movlw	high _ToMainLow_MQ
  7205  001F48  6E0C               	movwf	i1send_msg@qptr+1,c
  7206  001F4A  0101               	movlb	1	; () banked
  7207  001F4C  0E6C               	movlw	low _ToMainLow_MQ
  7208  001F4E  6E0B               	movwf	i1send_msg@qptr,c
  7209  001F50  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  7210  001F54  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  7211  001F58  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  7212  001F5C  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  7213  001F60  EC2C  F00A         	call	i1_send_msg	;wreg free
  7214  001F64  0012               	return	
  7215  001F66                     __end_ofi1_ToMainLow_sendmsg:
  7216                           	opt stack 0
  7217                           pclatu	equ	0xFFB
  7218                           pclath	equ	0xFFA
  7219                           tblptru	equ	0xFF8
  7220                           tblptrh	equ	0xFF7
  7221                           tblptrl	equ	0xFF6
  7222                           tablat	equ	0xFF5
  7223                           prodh	equ	0xFF4
  7224                           prodl	equ	0xFF3
  7225                           intcon	equ	0xFF2
  7226                           postinc0	equ	0xFEE
  7227                           fsr0h	equ	0xFEA
  7228                           fsr0l	equ	0xFE9
  7229                           wreg	equ	0xFE8
  7230                           indf1	equ	0xFE7
  7231                           postdec1	equ	0xFE5
  7232                           fsr1h	equ	0xFE2
  7233                           fsr1l	equ	0xFE1
  7234                           bsr	equ	0xFE0
  7235                           indf2	equ	0xFDF
  7236                           postinc2	equ	0xFDE
  7237                           postdec2	equ	0xFDD
  7238                           fsr2h	equ	0xFDA
  7239                           fsr2l	equ	0xFD9
  7240                           status	equ	0xFD8
  7241                           
  7242 ;; *************** function i1_send_msg *****************
  7243 ;; Defined at:
  7244 ;;		line 24 in file "src/messages.c"
  7245 ;; Parameters:    Size  Location     Type
  7246 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  7247 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7248 ;;  length          1   12[COMRAM] unsigned char 
  7249 ;;  msgtype         1   13[COMRAM] unsigned char 
  7250 ;;  data            2   14[COMRAM] PTR void 
  7251 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  7252 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  7253 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  7256 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7257 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7258 ;;  send_msg        2   17[COMRAM] unsigned int 
  7259 ;;  send_msg        1   19[COMRAM] unsigned char 
  7260 ;; Return value:  Size  Location     Type
  7261 ;;                  1    wreg      char 
  7262 ;; Registers used:
  7263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7264 ;; Tracked objects:
  7265 ;;		On entry : 0/0
  7266 ;;		On exit  : 0/0
  7267 ;;		Unchanged: 0/0
  7268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7269 ;;      Params:         6       0       0       0       0
  7270 ;;      Locals:         5       0       0       0       0
  7271 ;;      Temps:          1       0       0       0       0
  7272 ;;      Totals:        12       0       0       0       0
  7273 ;;Total ram usage:       12 bytes
  7274 ;; Hardware stack levels used:    1
  7275 ;; Hardware stack levels required when called:    6
  7276 ;; This function calls:
  7277 ;;		i1_memcpy
  7278 ;; This function is called by:
  7279 ;;		i1_ToMainLow_sendmsg
  7280 ;; This function uses a non-reentrant model
  7281 ;;
  7282                           
  7283                           	psect	text45
  7284  001458                     __ptext45:
  7285                           	opt stack 0
  7286  001458                     i1_send_msg:
  7287                           	opt stack 17
  7288                           
  7289                           ;messages.c: 25: unsigned char slot;
  7290                           ;messages.c: 27: msg *qmsg;
  7291                           ;messages.c: 28: size_t tlength = length;
  7292                           
  7293                           ;incstack = 0
  7294  001458  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  7295  00145C  6A13               	clrf	i1send_msg@tlength+1,c
  7296                           
  7297                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7298  00145E  EE20 F034          	lfsr	2,52
  7299  001462  500B               	movf	i1send_msg@qptr,w,c
  7300  001464  26D9               	addwf	fsr2l,f,c
  7301  001466  500C               	movf	i1send_msg@qptr+1,w,c
  7302  001468  22DA               	addwfc	fsr2h,f,c
  7303  00146A  50DF               	movf	indf2,w,c
  7304  00146C  6E14               	movwf	i1send_msg@slot,c
  7305                           
  7306                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7307  00146E  5014               	movf	i1send_msg@slot,w,c
  7308  001470  0D0D               	mullw	13
  7309  001472  50F3               	movf	prodl,w,c
  7310  001474  240B               	addwf	i1send_msg@qptr,w,c
  7311  001476  6E15               	movwf	i1send_msg@qmsg,c
  7312  001478  50F4               	movf	prodh,w,c
  7313  00147A  200C               	addwfc	i1send_msg@qptr+1,w,c
  7314  00147C  6E16               	movwf	i1send_msg@qmsg+1,c
  7315                           
  7316                           ;messages.c: 41: if (qmsg->full != 0) {
  7317  00147E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  7318  001482  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  7319  001486  50DF               	movf	indf2,w,c
  7320  001488  B4D8               	btfsc	status,2,c
  7321  00148A  D002               	goto	i1l3360
  7322                           
  7323                           ;messages.c: 42: return (-1);
  7324  00148C  0EFF               	movlw	255
  7325  00148E  0012               	return	
  7326  001490                     i1l3360:
  7327                           
  7328                           ;messages.c: 43: }
  7329                           ;messages.c: 46: qmsg->length = length;
  7330  001490  EE20 F001          	lfsr	2,1
  7331  001494  5015               	movf	i1send_msg@qmsg,w,c
  7332  001496  26D9               	addwf	fsr2l,f,c
  7333  001498  5016               	movf	i1send_msg@qmsg+1,w,c
  7334  00149A  22DA               	addwfc	fsr2h,f,c
  7335  00149C  C00D  FFDF         	movff	i1send_msg@length,indf2
  7336                           
  7337                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7338  0014A0  EE20 F002          	lfsr	2,2
  7339  0014A4  5015               	movf	i1send_msg@qmsg,w,c
  7340  0014A6  26D9               	addwf	fsr2l,f,c
  7341  0014A8  5016               	movf	i1send_msg@qmsg+1,w,c
  7342  0014AA  22DA               	addwfc	fsr2h,f,c
  7343  0014AC  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  7344                           
  7345                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7346  0014B0  0E03               	movlw	3
  7347  0014B2  2415               	addwf	i1send_msg@qmsg,w,c
  7348  0014B4  6E01               	movwf	i1memcpy@d1,c
  7349  0014B6  0E00               	movlw	0
  7350  0014B8  2016               	addwfc	i1send_msg@qmsg+1,w,c
  7351  0014BA  6E02               	movwf	i1memcpy@d1+1,c
  7352  0014BC  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  7353  0014C0  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  7354  0014C4  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  7355  0014C8  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  7356  0014CC  ECEF  F00D         	call	i1_memcpy	;wreg free
  7357                           
  7358                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7359  0014D0  EE20 F034          	lfsr	2,52
  7360  0014D4  500B               	movf	i1send_msg@qptr,w,c
  7361  0014D6  26D9               	addwf	fsr2l,f,c
  7362  0014D8  500C               	movf	i1send_msg@qptr+1,w,c
  7363  0014DA  22DA               	addwfc	fsr2h,f,c
  7364  0014DC  EE10 F034          	lfsr	1,52
  7365  0014E0  500B               	movf	i1send_msg@qptr,w,c
  7366  0014E2  26E1               	addwf	fsr1l,f,c
  7367  0014E4  500C               	movf	i1send_msg@qptr+1,w,c
  7368  0014E6  22E2               	addwfc	fsr1h,f,c
  7369  0014E8  50E7               	movf	indf1,w,c
  7370  0014EA  6E11               	movwf	??i1_send_msg& (0+255),c
  7371  0014EC  2811               	incf	??i1_send_msg,w,c
  7372  0014EE  0B03               	andlw	3
  7373  0014F0  6EDF               	movwf	indf2,c
  7374                           
  7375                           ;messages.c: 59: qmsg->full = 1;
  7376  0014F2  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  7377  0014F6  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  7378  0014FA  0E01               	movlw	1
  7379  0014FC  6EDF               	movwf	indf2,c
  7380                           
  7381                           ;messages.c: 60: return (1);
  7382  0014FE  0E01               	movlw	1
  7383  001500  0012               	return	
  7384  001502                     __end_ofi1_send_msg:
  7385                           	opt stack 0
  7386                           pclatu	equ	0xFFB
  7387                           pclath	equ	0xFFA
  7388                           tblptru	equ	0xFF8
  7389                           tblptrh	equ	0xFF7
  7390                           tblptrl	equ	0xFF6
  7391                           tablat	equ	0xFF5
  7392                           prodh	equ	0xFF4
  7393                           prodl	equ	0xFF3
  7394                           intcon	equ	0xFF2
  7395                           postinc0	equ	0xFEE
  7396                           fsr0h	equ	0xFEA
  7397                           fsr0l	equ	0xFE9
  7398                           wreg	equ	0xFE8
  7399                           indf1	equ	0xFE7
  7400                           postdec1	equ	0xFE5
  7401                           fsr1h	equ	0xFE2
  7402                           fsr1l	equ	0xFE1
  7403                           bsr	equ	0xFE0
  7404                           indf2	equ	0xFDF
  7405                           postinc2	equ	0xFDE
  7406                           postdec2	equ	0xFDD
  7407                           fsr2h	equ	0xFDA
  7408                           fsr2l	equ	0xFD9
  7409                           status	equ	0xFD8
  7410                           
  7411 ;; *************** function i1_memcpy *****************
  7412 ;; Defined at:
  7413 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  d1              2    0[COMRAM] PTR void 
  7416 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7417 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7418 ;;		 -> main@msgbuffer(11), NULL(0), 
  7419 ;;  s1              2    2[COMRAM] PTR const void 
  7420 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7421 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7422 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  7423 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  7424 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7425 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  7426 ;;  n               2    4[COMRAM] unsigned int 
  7427 ;; Auto vars:     Size  Location     Type
  7428 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  7429 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7430 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7431 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  7432 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  7433 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7434 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  7435 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  7436 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7437 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7438 ;;		 -> main@msgbuffer(11), NULL(0), 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  2    0[COMRAM] PTR void 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7448 ;;      Params:         6       0       0       0       0
  7449 ;;      Locals:         4       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0
  7451 ;;      Totals:        10       0       0       0       0
  7452 ;;Total ram usage:       10 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    5
  7455 ;; This function calls:
  7456 ;;		Nothing
  7457 ;; This function is called by:
  7458 ;;		i1_send_msg
  7459 ;;		i1_recv_msg
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text46
  7464  001BDE                     __ptext46:
  7465                           	opt stack 0
  7466  001BDE                     i1_memcpy:
  7467                           	opt stack 17
  7468                           
  7469                           ;incstack = 0
  7470  001BDE  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  7471  001BE2  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  7472  001BE6  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  7473  001BEA  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  7474  001BEE  D00E               	goto	i1l3308
  7475  001BF0                     i1l3302:
  7476  001BF0  C009  FFD9         	movff	i1memcpy@s,fsr2l
  7477  001BF4  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  7478  001BF8  C007  FFE1         	movff	i1memcpy@d,fsr1l
  7479  001BFC  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  7480  001C00  CFDF FFE7          	movff	indf2,indf1
  7481  001C04  4A09               	infsnz	i1memcpy@s,f,c
  7482  001C06  2A0A               	incf	i1memcpy@s+1,f,c
  7483  001C08  4A07               	infsnz	i1memcpy@d,f,c
  7484  001C0A  2A08               	incf	i1memcpy@d+1,f,c
  7485  001C0C                     i1l3308:
  7486  001C0C  0605               	decf	i1memcpy@n,f,c
  7487  001C0E  A0D8               	btfss	status,0,c
  7488  001C10  0606               	decf	i1memcpy@n+1,f,c
  7489  001C12  2805               	incf	i1memcpy@n& (0+255),w,c
  7490  001C14  B4D8               	btfsc	status,2,c
  7491  001C16  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  7492  001C18  B4D8               	btfsc	status,2,c
  7493                           
  7494                           ;	Return value of i1_memcpy is never used
  7495  001C1A  0012               	return	
  7496  001C1C  D7E9               	goto	i1l3302
  7497  001C1E                     __end_ofi1_memcpy:
  7498                           	opt stack 0
  7499                           pclatu	equ	0xFFB
  7500                           pclath	equ	0xFFA
  7501                           tblptru	equ	0xFF8
  7502                           tblptrh	equ	0xFF7
  7503                           tblptrl	equ	0xFF6
  7504                           tablat	equ	0xFF5
  7505                           prodh	equ	0xFF4
  7506                           prodl	equ	0xFF3
  7507                           intcon	equ	0xFF2
  7508                           postinc0	equ	0xFEE
  7509                           fsr0h	equ	0xFEA
  7510                           fsr0l	equ	0xFE9
  7511                           wreg	equ	0xFE8
  7512                           indf1	equ	0xFE7
  7513                           postdec1	equ	0xFE5
  7514                           fsr1h	equ	0xFE2
  7515                           fsr1l	equ	0xFE1
  7516                           bsr	equ	0xFE0
  7517                           indf2	equ	0xFDF
  7518                           postinc2	equ	0xFDE
  7519                           postdec2	equ	0xFDD
  7520                           fsr2h	equ	0xFDA
  7521                           fsr2l	equ	0xFD9
  7522                           status	equ	0xFD8
  7523                           
  7524 ;; *************** function _ReadUSART *****************
  7525 ;; Defined at:
  7526 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  7527 ;; Parameters:    Size  Location     Type
  7528 ;;		None
  7529 ;; Auto vars:     Size  Location     Type
  7530 ;;  data            1    0[COMRAM] unsigned char 
  7531 ;; Return value:  Size  Location     Type
  7532 ;;                  1    wreg      unsigned char 
  7533 ;; Registers used:
  7534 ;;		wreg, status,2, status,0
  7535 ;; Tracked objects:
  7536 ;;		On entry : 0/0
  7537 ;;		On exit  : 0/0
  7538 ;;		Unchanged: 0/0
  7539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7540 ;;      Params:         0       0       0       0       0
  7541 ;;      Locals:         1       0       0       0       0
  7542 ;;      Temps:          0       0       0       0       0
  7543 ;;      Totals:         1       0       0       0       0
  7544 ;;Total ram usage:        1 bytes
  7545 ;; Hardware stack levels used:    1
  7546 ;; Hardware stack levels required when called:    5
  7547 ;; This function calls:
  7548 ;;		Nothing
  7549 ;; This function is called by:
  7550 ;;		_uart_recv_int_handler
  7551 ;; This function uses a non-reentrant model
  7552 ;;
  7553                           
  7554                           	psect	text47
  7555  001F84                     __ptext47:
  7556                           	opt stack 0
  7557  001F84                     _ReadUSART:
  7558                           	opt stack 18
  7559                           
  7560                           ;incstack = 0
  7561  001F84  0EF2               	movlw	242
  7562  001F86  1660               	andwf	_USART_Status,f,c
  7563  001F88  ACAB               	btfss	4011,6,c	;volatile
  7564  001F8A  D003               	goto	i1l595
  7565  001F8C  9060               	bcf	_USART_Status,0,c
  7566  001F8E  B0AB               	btfsc	4011,0,c	;volatile
  7567  001F90  8060               	bsf	_USART_Status,0,c
  7568  001F92                     i1l595:
  7569  001F92  B4AB               	btfsc	4011,2,c	;volatile
  7570  001F94  8460               	bsf	_USART_Status,2,c
  7571  001F96  B2AB               	btfsc	4011,1,c	;volatile
  7572  001F98  8660               	bsf	_USART_Status,3,c
  7573  001F9A  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7574  001F9E  5001               	movf	ReadUSART@data,w,c
  7575  001FA0  0012               	return	
  7576  001FA2                     __end_of_ReadUSART:
  7577                           	opt stack 0
  7578                           pclatu	equ	0xFFB
  7579                           pclath	equ	0xFFA
  7580                           tblptru	equ	0xFF8
  7581                           tblptrh	equ	0xFF7
  7582                           tblptrl	equ	0xFF6
  7583                           tablat	equ	0xFF5
  7584                           prodh	equ	0xFF4
  7585                           prodl	equ	0xFF3
  7586                           intcon	equ	0xFF2
  7587                           postinc0	equ	0xFEE
  7588                           fsr0h	equ	0xFEA
  7589                           fsr0l	equ	0xFE9
  7590                           wreg	equ	0xFE8
  7591                           indf1	equ	0xFE7
  7592                           postdec1	equ	0xFE5
  7593                           fsr1h	equ	0xFE2
  7594                           fsr1l	equ	0xFE1
  7595                           bsr	equ	0xFE0
  7596                           indf2	equ	0xFDF
  7597                           postinc2	equ	0xFDE
  7598                           postdec2	equ	0xFDD
  7599                           fsr2h	equ	0xFDA
  7600                           fsr2l	equ	0xFD9
  7601                           status	equ	0xFD8
  7602                           
  7603 ;; *************** function _InterruptHandlerHigh *****************
  7604 ;; Defined at:
  7605 ;;		line 84 in file "src/interrupts.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;		None
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;		None
  7610 ;; Return value:  Size  Location     Type
  7611 ;;		None               void
  7612 ;; Registers used:
  7613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7614 ;; Tracked objects:
  7615 ;;		On entry : 0/0
  7616 ;;		On exit  : 0/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7619 ;;      Params:         0       0       0       0       0
  7620 ;;      Locals:         0       0       0       0       0
  7621 ;;      Temps:          0      14       0       0       0
  7622 ;;      Totals:         0      14       0       0       0
  7623 ;;Total ram usage:       14 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    4
  7626 ;; This function calls:
  7627 ;;		_SleepIfOkay
  7628 ;;		_ToMainHigh_sendmsg
  7629 ;;		_i2c_int_handler
  7630 ;; This function is called by:
  7631 ;;		Interrupt level 2
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           	psect	intcode
  7636  000008                     __pintcode:
  7637                           	opt stack 0
  7638  000008                     _InterruptHandlerHigh:
  7639                           	opt stack 16
  7640                           
  7641                           ;incstack = 0
  7642  000008  CFFA F0A4          	movff	pclath,??_InterruptHandlerHigh
  7643  00000C  CFFB F0A5          	movff	pclatu,??_InterruptHandlerHigh+1
  7644  000010  CFE9 F0A6          	movff	fsr0l,??_InterruptHandlerHigh+2
  7645  000014  EF1A  F00B         	goto	int_func
  7646                           pclatu	equ	0xFFB
  7647                           pclath	equ	0xFFA
  7648                           tblptru	equ	0xFF8
  7649                           tblptrh	equ	0xFF7
  7650                           tblptrl	equ	0xFF6
  7651                           tablat	equ	0xFF5
  7652                           prodh	equ	0xFF4
  7653                           prodl	equ	0xFF3
  7654                           intcon	equ	0xFF2
  7655                           postinc0	equ	0xFEE
  7656                           fsr0h	equ	0xFEA
  7657                           fsr0l	equ	0xFE9
  7658                           wreg	equ	0xFE8
  7659                           indf1	equ	0xFE7
  7660                           postdec1	equ	0xFE5
  7661                           fsr1h	equ	0xFE2
  7662                           fsr1l	equ	0xFE1
  7663                           bsr	equ	0xFE0
  7664                           indf2	equ	0xFDF
  7665                           postinc2	equ	0xFDE
  7666                           postdec2	equ	0xFDD
  7667                           fsr2h	equ	0xFDA
  7668                           fsr2l	equ	0xFD9
  7669                           status	equ	0xFD8
  7670                           
  7671                           	psect	intcode_body
  7672  001634                     __pintcode_body:
  7673                           	opt stack 16
  7674  001634                     int_func:
  7675                           	opt stack 16
  7676  001634  CFEA F0A7          	movff	fsr0h,??_InterruptHandlerHigh+3
  7677  001638  CFE1 F0A8          	movff	fsr1l,??_InterruptHandlerHigh+4
  7678  00163C  CFE2 F0A9          	movff	fsr1h,??_InterruptHandlerHigh+5
  7679  001640  CFD9 F0AA          	movff	fsr2l,??_InterruptHandlerHigh+6
  7680  001644  CFDA F0AB          	movff	fsr2h,??_InterruptHandlerHigh+7
  7681  001648  CFF3 F0AC          	movff	prodl,??_InterruptHandlerHigh+8
  7682  00164C  CFF4 F0AD          	movff	prodh,??_InterruptHandlerHigh+9
  7683  001650  CFF6 F0AE          	movff	tblptrl,??_InterruptHandlerHigh+10
  7684  001654  CFF7 F0AF          	movff	tblptrh,??_InterruptHandlerHigh+11
  7685  001658  CFF8 F0B0          	movff	tblptru,??_InterruptHandlerHigh+12
  7686  00165C  CFF5 F0B1          	movff	tablat,??_InterruptHandlerHigh+13
  7687                           
  7688                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  7689  001660  A69E               	btfss	3998,3,c	;volatile
  7690  001662  D003               	goto	i2l4142
  7691                           
  7692                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  7693  001664  969E               	bcf	3998,3,c	;volatile
  7694                           
  7695                           ;interrupts.c: 93: i2c_int_handler();
  7696  001666  EC69  F000         	call	_i2c_int_handler	;wreg free
  7697  00166A                     i2l4142:
  7698                           
  7699                           ;interrupts.c: 94: }
  7700                           ;interrupts.c: 97: if (INTCONbits.TMR0IF) {
  7701  00166A  A4F2               	btfss	intcon,2,c	;volatile
  7702  00166C  D00D               	goto	i2l4148
  7703                           
  7704                           ;interrupts.c: 98: INTCONbits.TMR0IF = 0;
  7705  00166E  94F2               	bcf	intcon,2,c	;volatile
  7706                           
  7707                           ;interrupts.c: 99: ToMainHigh_sendmsg(0, 10, (void *)0);
  7708  001670  0E0A               	movlw	10
  7709  001672  0100               	movlb	0	; () banked
  7710  001674  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  7711  001676  0E00               	movlw	0
  7712  001678  0100               	movlb	0	; () banked
  7713  00167A  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  7714  00167C  0E00               	movlw	0
  7715  00167E  0100               	movlb	0	; () banked
  7716  001680  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  7717  001682  0E00               	movlw	0
  7718  001684  EC3B  F00F         	call	_ToMainHigh_sendmsg
  7719  001688                     i2l4148:
  7720                           
  7721                           ;interrupts.c: 100: }
  7722                           ;interrupts.c: 103: SleepIfOkay();
  7723  001688  EC73  F00C         	call	_SleepIfOkay	;wreg free
  7724  00168C  C0B1  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7725  001690  C0B0  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7726  001694  C0AF  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7727  001698  C0AE  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7728  00169C  C0AD  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7729  0016A0  C0AC  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7730  0016A4  C0AB  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7731  0016A8  C0AA  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7732  0016AC  C0A9  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7733  0016B0  C0A8  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7734  0016B4  C0A7  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7735  0016B8  C0A6  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7736  0016BC  C0A5  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7737  0016C0  C0A4  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7738  0016C4  0011               	retfie		f
  7739  0016C6                     __end_of_InterruptHandlerHigh:
  7740                           	opt stack 0
  7741                           pclatu	equ	0xFFB
  7742                           pclath	equ	0xFFA
  7743                           tblptru	equ	0xFF8
  7744                           tblptrh	equ	0xFF7
  7745                           tblptrl	equ	0xFF6
  7746                           tablat	equ	0xFF5
  7747                           prodh	equ	0xFF4
  7748                           prodl	equ	0xFF3
  7749                           intcon	equ	0xFF2
  7750                           postinc0	equ	0xFEE
  7751                           fsr0h	equ	0xFEA
  7752                           fsr0l	equ	0xFE9
  7753                           wreg	equ	0xFE8
  7754                           indf1	equ	0xFE7
  7755                           postdec1	equ	0xFE5
  7756                           fsr1h	equ	0xFE2
  7757                           fsr1l	equ	0xFE1
  7758                           bsr	equ	0xFE0
  7759                           indf2	equ	0xFDF
  7760                           postinc2	equ	0xFDE
  7761                           postdec2	equ	0xFDD
  7762                           fsr2h	equ	0xFDA
  7763                           fsr2l	equ	0xFD9
  7764                           status	equ	0xFD8
  7765                           
  7766 ;; *************** function _i2c_int_handler *****************
  7767 ;; Defined at:
  7768 ;;		line 100 in file "src/my_i2c.c"
  7769 ;; Parameters:    Size  Location     Type
  7770 ;;		None
  7771 ;; Auto vars:     Size  Location     Type
  7772 ;;  error_buf       3   27[BANK0 ] unsigned char [3]
  7773 ;;  data_read       1   35[BANK0 ] unsigned char 
  7774 ;;  msg_ready       1   34[BANK0 ] unsigned char 
  7775 ;;  msg_to_send     1   33[BANK0 ] unsigned char 
  7776 ;;  i2c_data        1   32[BANK0 ] unsigned char 
  7777 ;;  overrun_erro    1   31[BANK0 ] unsigned char 
  7778 ;;  data_written    1   30[BANK0 ] unsigned char 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;		None               void
  7781 ;; Registers used:
  7782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7788 ;;      Params:         0       0       0       0       0
  7789 ;;      Locals:         0       9       0       0       0
  7790 ;;      Temps:          0       1       0       0       0
  7791 ;;      Totals:         0      10       0       0       0
  7792 ;;Total ram usage:       10 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    3
  7795 ;; This function calls:
  7796 ;;		_ToMainHigh_sendmsg
  7797 ;;		_handle_start
  7798 ;; This function is called by:
  7799 ;;		_InterruptHandlerHigh
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           	psect	text49
  7804  0000D2                     __ptext49:
  7805                           	opt stack 0
  7806  0000D2                     _i2c_int_handler:
  7807                           	opt stack 16
  7808                           
  7809                           ;my_i2c.c: 101: unsigned char i2c_data;
  7810                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7811                           
  7812                           ;incstack = 0
  7813  0000D2  0E00               	movlw	0
  7814  0000D4  0100               	movlb	0	; () banked
  7815  0000D6  6FA3               	movwf	i2c_int_handler@data_read& (0+255),b
  7816                           
  7817                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7818  0000D8  0E00               	movlw	0
  7819  0000DA  0100               	movlb	0	; () banked
  7820  0000DC  6F9E               	movwf	i2c_int_handler@data_written& (0+255),b
  7821                           
  7822                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7823  0000DE  0E00               	movlw	0
  7824  0000E0  0100               	movlb	0	; () banked
  7825  0000E2  6FA2               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7826                           
  7827                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7828  0000E4  0E00               	movlw	0
  7829  0000E6  0100               	movlb	0	; () banked
  7830  0000E8  6FA1               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7831                           
  7832                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7833  0000EA  0E00               	movlw	0
  7834  0000EC  0100               	movlb	0	; () banked
  7835  0000EE  6F9F               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7839                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7840  0000F0  ACC6               	btfss	4038,6,c	;volatile
  7841  0000F2  D024               	goto	i2l3618
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7845  0000F4  9CC6               	bcf	4038,6,c	;volatile
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7849  0000F6  0100               	movlb	0	; () banked
  7850  0000F8  EE20 F00C          	lfsr	2,12
  7851  0000FC  0100               	movlb	0	; () banked
  7852  0000FE  51CC               	movf	_ic_ptr& (0+255),w,b
  7853  000100  26D9               	addwf	fsr2l,f,c
  7854  000102  0100               	movlb	0	; () banked
  7855  000104  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7856  000106  22DA               	addwfc	fsr2h,f,c
  7857  000108  0E05               	movlw	5
  7858  00010A  6EDF               	movwf	indf2,c
  7859                           
  7860                           ; BSR set to: 0
  7861                           ;my_i2c.c: 116: overrun_error = 1;
  7862  00010C  0E01               	movlw	1
  7863  00010E  0100               	movlb	0	; () banked
  7864  000110  6F9F               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7868  000112  0100               	movlb	0	; () banked
  7869  000114  EE20 F00E          	lfsr	2,14
  7870  000118  0100               	movlb	0	; () banked
  7871  00011A  51CC               	movf	_ic_ptr& (0+255),w,b
  7872  00011C  26D9               	addwf	fsr2l,f,c
  7873  00011E  0100               	movlb	0	; () banked
  7874  000120  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7875  000122  22DA               	addwfc	fsr2h,f,c
  7876  000124  2ADF               	incf	indf2,f,c
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7880  000126  0100               	movlb	0	; () banked
  7881  000128  EE20 F00D          	lfsr	2,13
  7882  00012C  0100               	movlb	0	; () banked
  7883  00012E  51CC               	movf	_ic_ptr& (0+255),w,b
  7884  000130  26D9               	addwf	fsr2l,f,c
  7885  000132  0100               	movlb	0	; () banked
  7886  000134  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7887  000136  22DA               	addwfc	fsr2h,f,c
  7888  000138  0E04               	movlw	4
  7889  00013A  6EDF               	movwf	indf2,c
  7890  00013C                     i2l3618:
  7891                           
  7892                           ; BSR set to: 0
  7893                           ;my_i2c.c: 119: }
  7894                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7895  00013C  A0C7               	btfss	4039,0,c	;volatile
  7896  00013E  D005               	goto	i2l3624
  7897                           
  7898                           ; BSR set to: 0
  7899                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7900  000140  CFC9 F0A0          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;my_i2c.c: 123: data_read = 1;
  7904  000144  0E01               	movlw	1
  7905  000146  0100               	movlb	0	; () banked
  7906  000148  6FA3               	movwf	i2c_int_handler@data_read& (0+255),b
  7907  00014A                     i2l3624:
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;my_i2c.c: 124: }
  7911                           ;my_i2c.c: 126: if (!overrun_error) {
  7912  00014A  0100               	movlb	0	; () banked
  7913  00014C  679F               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7914  00014E  D19F               	goto	i2l343
  7915  000150  D188               	goto	i2l3712
  7916  000152                     i2l345:
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;my_i2c.c: 129: {
  7920                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7921  000152  A6C7               	btfss	4039,3,c	;volatile
  7922  000154  D19C               	goto	i2l343
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;my_i2c.c: 132: handle_start(data_read);
  7926  000156  0100               	movlb	0	; () banked
  7927  000158  51A3               	movf	i2c_int_handler@data_read& (0+255),w,b
  7928  00015A  EC0D  F009         	call	_handle_start
  7929                           
  7930                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7931  00015E  0100               	movlb	0	; () banked
  7932  000160  EE20 F00C          	lfsr	2,12
  7933  000164  0100               	movlb	0	; () banked
  7934  000166  51CC               	movf	_ic_ptr& (0+255),w,b
  7935  000168  26D9               	addwf	fsr2l,f,c
  7936  00016A  0100               	movlb	0	; () banked
  7937  00016C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7938  00016E  22DA               	addwfc	fsr2h,f,c
  7939  000170  0E08               	movlw	8
  7940  000172  62DF               	cpfseq	indf2,c
  7941  000174  D18C               	goto	i2l343
  7942                           
  7943                           ; BSR set to: 0
  7944                           ;my_i2c.c: 135: data_read = 0;
  7945  000176  0E00               	movlw	0
  7946  000178  0100               	movlb	0	; () banked
  7947  00017A  6FA3               	movwf	i2c_int_handler@data_read& (0+255),b
  7948                           
  7949                           ;my_i2c.c: 136: msg_to_send = 1;
  7950  00017C  0E01               	movlw	1
  7951  00017E  0100               	movlb	0	; () banked
  7952  000180  6FA1               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7953  000182  D185               	goto	i2l343
  7954  000184                     i2l349:
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;my_i2c.c: 142: {
  7958                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7959  000184  A8C7               	btfss	4039,4,c	;volatile
  7960  000186  D02A               	goto	i2l3644
  7961                           
  7962                           ; BSR set to: 0
  7963                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7964  000188  0100               	movlb	0	; () banked
  7965  00018A  EE20 F00B          	lfsr	2,11
  7966  00018E  0100               	movlb	0	; () banked
  7967  000190  51CC               	movf	_ic_ptr& (0+255),w,b
  7968  000192  26D9               	addwf	fsr2l,f,c
  7969  000194  0100               	movlb	0	; () banked
  7970  000196  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7971  000198  22DA               	addwfc	fsr2h,f,c
  7972  00019A  2ADF               	incf	indf2,f,c
  7973                           
  7974                           ; BSR set to: 0
  7975                           ;my_i2c.c: 148: if (data_read) {
  7976  00019C  0100               	movlb	0	; () banked
  7977  00019E  51A3               	movf	i2c_int_handler@data_read& (0+255),w,b
  7978  0001A0  B4D8               	btfsc	status,2,c
  7979  0001A2  D154               	goto	L10
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7983  0001A4  BAC7               	btfsc	4039,5,c	;volatile
  7984  0001A6  D004               	goto	i2l3642
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;my_i2c.c: 150: msg_ready = 1;
  7988  0001A8  0E01               	movlw	1
  7989  0001AA  0100               	movlb	0	; () banked
  7990  0001AC  6FA2               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7991                           
  7992                           ;my_i2c.c: 151: } else {
  7993  0001AE  D14E               	goto	L10
  7994  0001B0                     i2l3642:
  7995                           
  7996                           ; BSR set to: 0
  7997                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7998  0001B0  0100               	movlb	0	; () banked
  7999  0001B2  EE20 F00E          	lfsr	2,14
  8000  0001B6  0100               	movlb	0	; () banked
  8001  0001B8  51CC               	movf	_ic_ptr& (0+255),w,b
  8002  0001BA  26D9               	addwf	fsr2l,f,c
  8003  0001BC  0100               	movlb	0	; () banked
  8004  0001BE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8005  0001C0  22DA               	addwfc	fsr2h,f,c
  8006  0001C2  2ADF               	incf	indf2,f,c
  8007                           
  8008                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  8009  0001C4  0100               	movlb	0	; () banked
  8010  0001C6  EE20 F00D          	lfsr	2,13
  8011  0001CA  0100               	movlb	0	; () banked
  8012  0001CC  51CC               	movf	_ic_ptr& (0+255),w,b
  8013  0001CE  26D9               	addwf	fsr2l,f,c
  8014  0001D0  0100               	movlb	0	; () banked
  8015  0001D2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8016  0001D4  22DA               	addwfc	fsr2h,f,c
  8017  0001D6  0E06               	movlw	6
  8018  0001D8  6EDF               	movwf	indf2,c
  8019                           
  8020                           ; BSR set to: 0
  8021  0001DA  D138               	goto	L10
  8022  0001DC                     i2l3644:
  8023                           
  8024                           ; BSR set to: 0
  8025  0001DC  0100               	movlb	0	; () banked
  8026  0001DE  51A3               	movf	i2c_int_handler@data_read& (0+255),w,b
  8027  0001E0  B4D8               	btfsc	status,2,c
  8028  0001E2  D155               	goto	i2l343
  8029                           
  8030                           ; BSR set to: 0
  8031                           ;my_i2c.c: 158: ic_ptr->event_count++;
  8032  0001E4  0100               	movlb	0	; () banked
  8033  0001E6  EE20 F00B          	lfsr	2,11
  8034  0001EA  0100               	movlb	0	; () banked
  8035  0001EC  51CC               	movf	_ic_ptr& (0+255),w,b
  8036  0001EE  26D9               	addwf	fsr2l,f,c
  8037  0001F0  0100               	movlb	0	; () banked
  8038  0001F2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8039  0001F4  22DA               	addwfc	fsr2h,f,c
  8040  0001F6  2ADF               	incf	indf2,f,c
  8041                           
  8042                           ; BSR set to: 0
  8043                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  8044  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  8045  0001FA  D019               	goto	i2l3660
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  8049  0001FC  B4C7               	btfsc	4039,2,c	;volatile
  8050  0001FE  D00B               	goto	i2l3654
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  8054  000200  0100               	movlb	0	; () banked
  8055  000202  EE20 F00C          	lfsr	2,12
  8056  000206  0100               	movlb	0	; () banked
  8057  000208  51CC               	movf	_ic_ptr& (0+255),w,b
  8058  00020A  26D9               	addwf	fsr2l,f,c
  8059  00020C  0100               	movlb	0	; () banked
  8060  00020E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8061  000210  22DA               	addwfc	fsr2h,f,c
  8062  000212  0E07               	movlw	7
  8063  000214  D071               	goto	L8
  8064  000216                     i2l3654:
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  8068  000216  0100               	movlb	0	; () banked
  8069  000218  EE20 F00C          	lfsr	2,12
  8070  00021C  0100               	movlb	0	; () banked
  8071  00021E  51CC               	movf	_ic_ptr& (0+255),w,b
  8072  000220  26D9               	addwf	fsr2l,f,c
  8073  000222  0100               	movlb	0	; () banked
  8074  000224  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8075  000226  22DA               	addwfc	fsr2h,f,c
  8076  000228  0E08               	movlw	8
  8077  00022A  6EDF               	movwf	indf2,c
  8078  00022C  D108               	goto	L7
  8079  00022E                     i2l3660:
  8080                           
  8081                           ; BSR set to: 0
  8082                           ;my_i2c.c: 169: ic_ptr->error_count++;
  8083  00022E  0100               	movlb	0	; () banked
  8084  000230  EE20 F00E          	lfsr	2,14
  8085  000234  0100               	movlb	0	; () banked
  8086  000236  51CC               	movf	_ic_ptr& (0+255),w,b
  8087  000238  26D9               	addwf	fsr2l,f,c
  8088  00023A  0100               	movlb	0	; () banked
  8089  00023C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8090  00023E  22DA               	addwfc	fsr2h,f,c
  8091  000240  2ADF               	incf	indf2,f,c
  8092                           
  8093                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  8094  000242  0100               	movlb	0	; () banked
  8095  000244  EE20 F00C          	lfsr	2,12
  8096  000248  0100               	movlb	0	; () banked
  8097  00024A  51CC               	movf	_ic_ptr& (0+255),w,b
  8098  00024C  26D9               	addwf	fsr2l,f,c
  8099  00024E  0100               	movlb	0	; () banked
  8100  000250  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8101  000252  22DA               	addwfc	fsr2h,f,c
  8102  000254  0E05               	movlw	5
  8103  000256  6EDF               	movwf	indf2,c
  8104                           
  8105                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  8106  000258  0100               	movlb	0	; () banked
  8107  00025A  EE20 F00D          	lfsr	2,13
  8108  00025E  0100               	movlb	0	; () banked
  8109  000260  51CC               	movf	_ic_ptr& (0+255),w,b
  8110  000262  26D9               	addwf	fsr2l,f,c
  8111  000264  0100               	movlb	0	; () banked
  8112  000266  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8113  000268  22DA               	addwfc	fsr2h,f,c
  8114  00026A  0E06               	movlw	6
  8115  00026C  D045               	goto	L8
  8116  00026E                     i2l3662:
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;my_i2c.c: 177: {
  8120                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  8121  00026E  0100               	movlb	0	; () banked
  8122  000270  EE20 F01A          	lfsr	2,26
  8123  000274  0100               	movlb	0	; () banked
  8124  000276  51CC               	movf	_ic_ptr& (0+255),w,b
  8125  000278  26D9               	addwf	fsr2l,f,c
  8126  00027A  0100               	movlb	0	; () banked
  8127  00027C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8128  00027E  22DA               	addwfc	fsr2h,f,c
  8129  000280  50DF               	movf	indf2,w,c
  8130  000282  0100               	movlb	0	; () banked
  8131  000284  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8132  000286  0100               	movlb	0	; () banked
  8133  000288  EE20 F019          	lfsr	2,25
  8134  00028C  0100               	movlb	0	; () banked
  8135  00028E  51CC               	movf	_ic_ptr& (0+255),w,b
  8136  000290  26D9               	addwf	fsr2l,f,c
  8137  000292  0100               	movlb	0	; () banked
  8138  000294  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8139  000296  22DA               	addwfc	fsr2h,f,c
  8140  000298  50DF               	movf	indf2,w,c
  8141  00029A  0100               	movlb	0	; () banked
  8142  00029C  5D9A               	subwf	??_i2c_int_handler& (0+255),w,b
  8143  00029E  B0D8               	btfsc	status,0,c
  8144  0002A0  D0D5               	goto	L10
  8145                           
  8146                           ; BSR set to: 0
  8147                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8148  0002A2  0100               	movlb	0	; () banked
  8149  0002A4  EE20 F01A          	lfsr	2,26
  8150  0002A8  0100               	movlb	0	; () banked
  8151  0002AA  51CC               	movf	_ic_ptr& (0+255),w,b
  8152  0002AC  26D9               	addwf	fsr2l,f,c
  8153  0002AE  0100               	movlb	0	; () banked
  8154  0002B0  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8155  0002B2  22DA               	addwfc	fsr2h,f,c
  8156  0002B4  50DF               	movf	indf2,w,c
  8157  0002B6  0100               	movlb	0	; () banked
  8158  0002B8  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8159  0002BA  0100               	movlb	0	; () banked
  8160  0002BC  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8161  0002BE  0D01               	mullw	1
  8162  0002C0  0E0F               	movlw	15
  8163  0002C2  26F3               	addwf	prodl,f,c
  8164  0002C4  0E00               	movlw	0
  8165  0002C6  22F4               	addwfc	prodh,f,c
  8166  0002C8  50F3               	movf	prodl,w,c
  8167  0002CA  0100               	movlb	0	; () banked
  8168  0002CC  25CC               	addwf	_ic_ptr& (0+255),w,b
  8169  0002CE  6ED9               	movwf	fsr2l,c
  8170  0002D0  50F4               	movf	prodh,w,c
  8171  0002D2  0100               	movlb	0	; () banked
  8172  0002D4  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8173  0002D6  6EDA               	movwf	fsr2h,c
  8174  0002D8  50DF               	movf	indf2,w,c
  8175  0002DA  6EC9               	movwf	4041,c	;volatile
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  8179  0002DC  0100               	movlb	0	; () banked
  8180  0002DE  EE20 F01A          	lfsr	2,26
  8181  0002E2  0100               	movlb	0	; () banked
  8182  0002E4  51CC               	movf	_ic_ptr& (0+255),w,b
  8183  0002E6  26D9               	addwf	fsr2l,f,c
  8184  0002E8  0100               	movlb	0	; () banked
  8185  0002EA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8186  0002EC  22DA               	addwfc	fsr2h,f,c
  8187  0002EE  2ADF               	incf	indf2,f,c
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;my_i2c.c: 181: data_written = 1;
  8191  0002F0  0E01               	movlw	1
  8192  0002F2  0100               	movlb	0	; () banked
  8193  0002F4  6F9E               	movwf	i2c_int_handler@data_written& (0+255),b
  8194                           
  8195                           ;my_i2c.c: 182: } else {
  8196  0002F6  D0CB               	goto	i2l343
  8197  0002F8                     L8:
  8198  0002F8  6EDF               	movwf	indf2,c
  8199  0002FA  D0C9               	goto	i2l343
  8200  0002FC                     i2l363:
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;my_i2c.c: 189: {
  8204                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  8205  0002FC  A8C7               	btfss	4039,4,c	;volatile
  8206  0002FE  D05A               	goto	i2l3690
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;my_i2c.c: 193: ic_ptr->event_count++;
  8210  000300  0100               	movlb	0	; () banked
  8211  000302  EE20 F00B          	lfsr	2,11
  8212  000306  0100               	movlb	0	; () banked
  8213  000308  51CC               	movf	_ic_ptr& (0+255),w,b
  8214  00030A  26D9               	addwf	fsr2l,f,c
  8215  00030C  0100               	movlb	0	; () banked
  8216  00030E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8217  000310  22DA               	addwfc	fsr2h,f,c
  8218  000312  2ADF               	incf	indf2,f,c
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;my_i2c.c: 194: if (data_read) {
  8222  000314  0100               	movlb	0	; () banked
  8223  000316  51A3               	movf	i2c_int_handler@data_read& (0+255),w,b
  8224  000318  B4D8               	btfsc	status,2,c
  8225  00031A  D048               	goto	i2l3686
  8226                           
  8227                           ; BSR set to: 0
  8228                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  8229  00031C  AAC7               	btfss	4039,5,c	;volatile
  8230  00031E  D025               	goto	i2l3684
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  8234  000320  0100               	movlb	0	; () banked
  8235  000322  EE20 F00A          	lfsr	2,10
  8236  000326  0100               	movlb	0	; () banked
  8237  000328  51CC               	movf	_ic_ptr& (0+255),w,b
  8238  00032A  26D9               	addwf	fsr2l,f,c
  8239  00032C  0100               	movlb	0	; () banked
  8240  00032E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8241  000330  22DA               	addwfc	fsr2h,f,c
  8242  000332  50DF               	movf	indf2,w,c
  8243  000334  0100               	movlb	0	; () banked
  8244  000336  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8245  000338  0100               	movlb	0	; () banked
  8246  00033A  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8247  00033C  0D01               	mullw	1
  8248  00033E  50F3               	movf	prodl,w,c
  8249  000340  0100               	movlb	0	; () banked
  8250  000342  25CC               	addwf	_ic_ptr& (0+255),w,b
  8251  000344  6ED9               	movwf	fsr2l,c
  8252  000346  50F4               	movf	prodh,w,c
  8253  000348  0100               	movlb	0	; () banked
  8254  00034A  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8255  00034C  6EDA               	movwf	fsr2h,c
  8256  00034E  0100               	movlb	0	; () banked
  8257  000350  C0A0  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;my_i2c.c: 197: ic_ptr->buflen++;
  8261  000354  0100               	movlb	0	; () banked
  8262  000356  EE20 F00A          	lfsr	2,10
  8263  00035A  0100               	movlb	0	; () banked
  8264  00035C  51CC               	movf	_ic_ptr& (0+255),w,b
  8265  00035E  26D9               	addwf	fsr2l,f,c
  8266  000360  0100               	movlb	0	; () banked
  8267  000362  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8268  000364  22DA               	addwfc	fsr2h,f,c
  8269  000366  2ADF               	incf	indf2,f,c
  8270  000368  D021               	goto	i2l3686
  8271  00036A                     i2l3684:
  8272                           
  8273                           ; BSR set to: 0
  8274                           ;my_i2c.c: 200: ic_ptr->error_count++;
  8275  00036A  0100               	movlb	0	; () banked
  8276  00036C  EE20 F00E          	lfsr	2,14
  8277  000370  0100               	movlb	0	; () banked
  8278  000372  51CC               	movf	_ic_ptr& (0+255),w,b
  8279  000374  26D9               	addwf	fsr2l,f,c
  8280  000376  0100               	movlb	0	; () banked
  8281  000378  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8282  00037A  22DA               	addwfc	fsr2h,f,c
  8283  00037C  2ADF               	incf	indf2,f,c
  8284                           
  8285                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  8286  00037E  0100               	movlb	0	; () banked
  8287  000380  EE20 F00D          	lfsr	2,13
  8288  000384  0100               	movlb	0	; () banked
  8289  000386  51CC               	movf	_ic_ptr& (0+255),w,b
  8290  000388  26D9               	addwf	fsr2l,f,c
  8291  00038A  0100               	movlb	0	; () banked
  8292  00038C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8293  00038E  22DA               	addwfc	fsr2h,f,c
  8294  000390  0E06               	movlw	6
  8295  000392  6EDF               	movwf	indf2,c
  8296                           
  8297                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  8298  000394  0100               	movlb	0	; () banked
  8299  000396  EE20 F00C          	lfsr	2,12
  8300  00039A  0100               	movlb	0	; () banked
  8301  00039C  51CC               	movf	_ic_ptr& (0+255),w,b
  8302  00039E  26D9               	addwf	fsr2l,f,c
  8303  0003A0  0100               	movlb	0	; () banked
  8304  0003A2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8305  0003A4  22DA               	addwfc	fsr2h,f,c
  8306  0003A6  0E05               	movlw	5
  8307  0003A8  6EDF               	movwf	indf2,c
  8308  0003AA  D050               	goto	L10
  8309  0003AC                     i2l3686:
  8310                           
  8311                           ; BSR set to: 0
  8312                           ;my_i2c.c: 205: msg_ready = 1;
  8313  0003AC  0E01               	movlw	1
  8314  0003AE  0100               	movlb	0	; () banked
  8315  0003B0  6FA2               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8316                           
  8317                           ; BSR set to: 0
  8318  0003B2  D04C               	goto	L10
  8319  0003B4                     i2l3690:
  8320                           
  8321                           ; BSR set to: 0
  8322  0003B4  0100               	movlb	0	; () banked
  8323  0003B6  51A3               	movf	i2c_int_handler@data_read& (0+255),w,b
  8324  0003B8  B4D8               	btfsc	status,2,c
  8325  0003BA  D069               	goto	i2l343
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;my_i2c.c: 209: ic_ptr->event_count++;
  8329  0003BC  0100               	movlb	0	; () banked
  8330  0003BE  EE20 F00B          	lfsr	2,11
  8331  0003C2  0100               	movlb	0	; () banked
  8332  0003C4  51CC               	movf	_ic_ptr& (0+255),w,b
  8333  0003C6  26D9               	addwf	fsr2l,f,c
  8334  0003C8  0100               	movlb	0	; () banked
  8335  0003CA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8336  0003CC  22DA               	addwfc	fsr2h,f,c
  8337  0003CE  2ADF               	incf	indf2,f,c
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  8341  0003D0  AAC7               	btfss	4039,5,c	;volatile
  8342  0003D2  D025               	goto	i2l371
  8343                           
  8344                           ; BSR set to: 0
  8345                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  8346  0003D4  0100               	movlb	0	; () banked
  8347  0003D6  EE20 F00A          	lfsr	2,10
  8348  0003DA  0100               	movlb	0	; () banked
  8349  0003DC  51CC               	movf	_ic_ptr& (0+255),w,b
  8350  0003DE  26D9               	addwf	fsr2l,f,c
  8351  0003E0  0100               	movlb	0	; () banked
  8352  0003E2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8353  0003E4  22DA               	addwfc	fsr2h,f,c
  8354  0003E6  50DF               	movf	indf2,w,c
  8355  0003E8  0100               	movlb	0	; () banked
  8356  0003EA  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8357  0003EC  0100               	movlb	0	; () banked
  8358  0003EE  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8359  0003F0  0D01               	mullw	1
  8360  0003F2  50F3               	movf	prodl,w,c
  8361  0003F4  0100               	movlb	0	; () banked
  8362  0003F6  25CC               	addwf	_ic_ptr& (0+255),w,b
  8363  0003F8  6ED9               	movwf	fsr2l,c
  8364  0003FA  50F4               	movf	prodh,w,c
  8365  0003FC  0100               	movlb	0	; () banked
  8366  0003FE  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8367  000400  6EDA               	movwf	fsr2h,c
  8368  000402  0100               	movlb	0	; () banked
  8369  000404  C0A0  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;my_i2c.c: 212: ic_ptr->buflen++;
  8373  000408  0100               	movlb	0	; () banked
  8374  00040A  EE20 F00A          	lfsr	2,10
  8375  00040E  0100               	movlb	0	; () banked
  8376  000410  51CC               	movf	_ic_ptr& (0+255),w,b
  8377  000412  26D9               	addwf	fsr2l,f,c
  8378  000414  0100               	movlb	0	; () banked
  8379  000416  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8380  000418  22DA               	addwfc	fsr2h,f,c
  8381  00041A  2ADF               	incf	indf2,f,c
  8382                           
  8383                           ;my_i2c.c: 213: } else {
  8384  00041C  D038               	goto	i2l343
  8385  00041E                     i2l371:
  8386                           
  8387                           ; BSR set to: 0
  8388                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  8389  00041E  A4C7               	btfss	4039,2,c	;volatile
  8390  000420  D6C7               	goto	i2l3642
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  8394  000422  0100               	movlb	0	; () banked
  8395  000424  EE20 F00C          	lfsr	2,12
  8396  000428  0100               	movlb	0	; () banked
  8397  00042A  51CC               	movf	_ic_ptr& (0+255),w,b
  8398  00042C  26D9               	addwf	fsr2l,f,c
  8399  00042E  0100               	movlb	0	; () banked
  8400  000430  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8401  000432  22DA               	addwfc	fsr2h,f,c
  8402  000434  0E08               	movlw	8
  8403  000436  6EDF               	movwf	indf2,c
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;my_i2c.c: 216: msg_ready = 1;
  8407  000438  0E01               	movlw	1
  8408  00043A  0100               	movlb	0	; () banked
  8409  00043C  6FA2               	movwf	i2c_int_handler@msg_ready& (0+255),b
  8410  00043E                     L7:
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;my_i2c.c: 217: msg_to_send = 1;
  8414  00043E  0E01               	movlw	1
  8415  000440  0100               	movlb	0	; () banked
  8416  000442  6FA1               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;my_i2c.c: 219: data_read = 0;
  8420  000444  0E00               	movlw	0
  8421  000446  0100               	movlb	0	; () banked
  8422  000448  6FA3               	movwf	i2c_int_handler@data_read& (0+255),b
  8423                           
  8424                           ;my_i2c.c: 220: } else {
  8425  00044A  D021               	goto	i2l343
  8426  00044C                     L10:
  8427                           
  8428                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  8429  00044C  0100               	movlb	0	; () banked
  8430  00044E  EE20 F00C          	lfsr	2,12
  8431  000452  0100               	movlb	0	; () banked
  8432  000454  51CC               	movf	_ic_ptr& (0+255),w,b
  8433  000456  26D9               	addwf	fsr2l,f,c
  8434  000458  0100               	movlb	0	; () banked
  8435  00045A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8436  00045C  22DA               	addwfc	fsr2h,f,c
  8437  00045E  0E05               	movlw	5
  8438  000460  D74B               	goto	L8
  8439  000462                     i2l3712:
  8440                           
  8441                           ; BSR set to: 0
  8442  000462  0100               	movlb	0	; () banked
  8443  000464  EE20 F00C          	lfsr	2,12
  8444  000468  0100               	movlb	0	; () banked
  8445  00046A  51CC               	movf	_ic_ptr& (0+255),w,b
  8446  00046C  26D9               	addwf	fsr2l,f,c
  8447  00046E  0100               	movlb	0	; () banked
  8448  000470  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8449  000472  22DA               	addwfc	fsr2h,f,c
  8450  000474  50DF               	movf	indf2,w,c
  8451                           
  8452                           ; Switch size 1, requested type "space"
  8453                           ; Number of cases is 4, Range of values is 5 to 8
  8454                           ; switch strategies available:
  8455                           ; Name         Instructions Cycles
  8456                           ; simple_byte           13     7 (average)
  8457                           ;	Chosen strategy is simple_byte
  8458  000476  0A05               	xorlw	5	; case 5
  8459  000478  B4D8               	btfsc	status,2,c
  8460  00047A  D66B               	goto	i2l345
  8461  00047C  0A03               	xorlw	3	; case 6
  8462  00047E  B4D8               	btfsc	status,2,c
  8463  000480  D681               	goto	i2l349
  8464  000482  0A01               	xorlw	1	; case 7
  8465  000484  B4D8               	btfsc	status,2,c
  8466  000486  D73A               	goto	i2l363
  8467  000488  0A0F               	xorlw	15	; case 8
  8468  00048A  B4D8               	btfsc	status,2,c
  8469  00048C  D6F0               	goto	i2l3662
  8470  00048E                     i2l343:
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;my_i2c.c: 230: }
  8474                           ;my_i2c.c: 233: if (data_read || data_written) {
  8475  00048E  0100               	movlb	0	; () banked
  8476  000490  67A3               	tstfsz	i2c_int_handler@data_read& (0+255),b
  8477  000492  D004               	goto	i2l377
  8478                           
  8479                           ; BSR set to: 0
  8480  000494  0100               	movlb	0	; () banked
  8481  000496  519E               	movf	i2c_int_handler@data_written& (0+255),w,b
  8482  000498  B4D8               	btfsc	status,2,c
  8483  00049A  D002               	goto	i2l3718
  8484  00049C                     i2l377:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  8488  00049C  A8C6               	btfss	4038,4,c	;volatile
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  8492  00049E  88C6               	bsf	4038,4,c	;volatile
  8493  0004A0                     i2l3718:
  8494                           
  8495                           ; BSR set to: 0
  8496                           ;my_i2c.c: 237: }
  8497                           ;my_i2c.c: 238: }
  8498                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  8499  0004A0  0100               	movlb	0	; () banked
  8500  0004A2  EE20 F00A          	lfsr	2,10
  8501  0004A6  0100               	movlb	0	; () banked
  8502  0004A8  51CC               	movf	_ic_ptr& (0+255),w,b
  8503  0004AA  26D9               	addwf	fsr2l,f,c
  8504  0004AC  0100               	movlb	0	; () banked
  8505  0004AE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8506  0004B0  22DA               	addwfc	fsr2h,f,c
  8507  0004B2  0E08               	movlw	8
  8508  0004B4  64DF               	cpfsgt	indf2,c
  8509  0004B6  D023               	goto	i2l3724
  8510                           
  8511                           ; BSR set to: 0
  8512  0004B8  0100               	movlb	0	; () banked
  8513  0004BA  67A2               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  8514  0004BC  D020               	goto	i2l3724
  8515                           
  8516                           ; BSR set to: 0
  8517                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  8518  0004BE  0100               	movlb	0	; () banked
  8519  0004C0  EE20 F00C          	lfsr	2,12
  8520  0004C4  0100               	movlb	0	; () banked
  8521  0004C6  51CC               	movf	_ic_ptr& (0+255),w,b
  8522  0004C8  26D9               	addwf	fsr2l,f,c
  8523  0004CA  0100               	movlb	0	; () banked
  8524  0004CC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8525  0004CE  22DA               	addwfc	fsr2h,f,c
  8526  0004D0  0E05               	movlw	5
  8527  0004D2  6EDF               	movwf	indf2,c
  8528                           
  8529                           ;my_i2c.c: 243: ic_ptr->error_count++;
  8530  0004D4  0100               	movlb	0	; () banked
  8531  0004D6  EE20 F00E          	lfsr	2,14
  8532  0004DA  0100               	movlb	0	; () banked
  8533  0004DC  51CC               	movf	_ic_ptr& (0+255),w,b
  8534  0004DE  26D9               	addwf	fsr2l,f,c
  8535  0004E0  0100               	movlb	0	; () banked
  8536  0004E2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8537  0004E4  22DA               	addwfc	fsr2h,f,c
  8538  0004E6  2ADF               	incf	indf2,f,c
  8539                           
  8540                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  8541  0004E8  0100               	movlb	0	; () banked
  8542  0004EA  EE20 F00D          	lfsr	2,13
  8543  0004EE  0100               	movlb	0	; () banked
  8544  0004F0  51CC               	movf	_ic_ptr& (0+255),w,b
  8545  0004F2  26D9               	addwf	fsr2l,f,c
  8546  0004F4  0100               	movlb	0	; () banked
  8547  0004F6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8548  0004F8  22DA               	addwfc	fsr2h,f,c
  8549  0004FA  0E07               	movlw	7
  8550  0004FC  6EDF               	movwf	indf2,c
  8551  0004FE                     i2l3724:
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;my_i2c.c: 245: }
  8555                           ;my_i2c.c: 247: if (msg_ready) {
  8556  0004FE  0100               	movlb	0	; () banked
  8557  000500  51A2               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  8558  000502  B4D8               	btfsc	status,2,c
  8559  000504  D03F               	goto	i2l3732
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  8563  000506  0100               	movlb	0	; () banked
  8564  000508  EE20 F00B          	lfsr	2,11
  8565  00050C  0100               	movlb	0	; () banked
  8566  00050E  51CC               	movf	_ic_ptr& (0+255),w,b
  8567  000510  26D9               	addwf	fsr2l,f,c
  8568  000512  0100               	movlb	0	; () banked
  8569  000514  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8570  000516  22DA               	addwfc	fsr2h,f,c
  8571  000518  0100               	movlb	0	; () banked
  8572  00051A  EE10 F00A          	lfsr	1,10
  8573  00051E  0100               	movlb	0	; () banked
  8574  000520  51CC               	movf	_ic_ptr& (0+255),w,b
  8575  000522  26E1               	addwf	fsr1l,f,c
  8576  000524  0100               	movlb	0	; () banked
  8577  000526  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8578  000528  22E2               	addwfc	fsr1h,f,c
  8579  00052A  50E7               	movf	indf1,w,c
  8580  00052C  0100               	movlb	0	; () banked
  8581  00052E  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8582  000530  0100               	movlb	0	; () banked
  8583  000532  519A               	movf	??_i2c_int_handler& (0+255),w,b
  8584  000534  0D01               	mullw	1
  8585  000536  50F3               	movf	prodl,w,c
  8586  000538  0100               	movlb	0	; () banked
  8587  00053A  25CC               	addwf	_ic_ptr& (0+255),w,b
  8588  00053C  6EE1               	movwf	fsr1l,c
  8589  00053E  50F4               	movf	prodh,w,c
  8590  000540  0100               	movlb	0	; () banked
  8591  000542  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8592  000544  6EE2               	movwf	fsr1h,c
  8593  000546  CFDF FFE7          	movff	indf2,indf1
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  8597  00054A  0E28               	movlw	40
  8598  00054C  0100               	movlb	0	; () banked
  8599  00054E  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8600  000550  0100               	movlb	0	; () banked
  8601  000552  C0CD  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8602  000556  0100               	movlb	0	; () banked
  8603  000558  C0CC  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8604  00055C  0100               	movlb	0	; () banked
  8605  00055E  EE20 F00A          	lfsr	2,10
  8606  000562  0100               	movlb	0	; () banked
  8607  000564  51CC               	movf	_ic_ptr& (0+255),w,b
  8608  000566  26D9               	addwf	fsr2l,f,c
  8609  000568  0100               	movlb	0	; () banked
  8610  00056A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8611  00056C  22DA               	addwfc	fsr2h,f,c
  8612  00056E  50DF               	movf	indf2,w,c
  8613  000570  0100               	movlb	0	; () banked
  8614  000572  6F9A               	movwf	??_i2c_int_handler& (0+255),b
  8615  000574  0100               	movlb	0	; () banked
  8616  000576  299A               	incf	??_i2c_int_handler& (0+255),w,b
  8617  000578  EC3B  F00F         	call	_ToMainHigh_sendmsg
  8618                           
  8619                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  8620  00057C  0100               	movlb	0	; () banked
  8621  00057E  EE20 F00A          	lfsr	2,10
  8622  000582  D041               	goto	L9
  8623  000584                     i2l3732:
  8624                           
  8625                           ; BSR set to: 0
  8626  000584  0100               	movlb	0	; () banked
  8627  000586  EE20 F00E          	lfsr	2,14
  8628  00058A  0100               	movlb	0	; () banked
  8629  00058C  51CC               	movf	_ic_ptr& (0+255),w,b
  8630  00058E  26D9               	addwf	fsr2l,f,c
  8631  000590  0100               	movlb	0	; () banked
  8632  000592  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8633  000594  22DA               	addwfc	fsr2h,f,c
  8634  000596  50DF               	movf	indf2,w,c
  8635  000598  B4D8               	btfsc	status,2,c
  8636  00059A  D03D               	goto	i2l3740
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  8640  00059C  0100               	movlb	0	; () banked
  8641  00059E  EE20 F00E          	lfsr	2,14
  8642  0005A2  0100               	movlb	0	; () banked
  8643  0005A4  51CC               	movf	_ic_ptr& (0+255),w,b
  8644  0005A6  26D9               	addwf	fsr2l,f,c
  8645  0005A8  0100               	movlb	0	; () banked
  8646  0005AA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8647  0005AC  22DA               	addwfc	fsr2h,f,c
  8648  0005AE  50DF               	movf	indf2,w,c
  8649  0005B0  0100               	movlb	0	; () banked
  8650  0005B2  6F9B               	movwf	i2c_int_handler@error_buf& (0+255),b
  8651                           
  8652                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  8653  0005B4  0100               	movlb	0	; () banked
  8654  0005B6  EE20 F00D          	lfsr	2,13
  8655  0005BA  0100               	movlb	0	; () banked
  8656  0005BC  51CC               	movf	_ic_ptr& (0+255),w,b
  8657  0005BE  26D9               	addwf	fsr2l,f,c
  8658  0005C0  0100               	movlb	0	; () banked
  8659  0005C2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8660  0005C4  22DA               	addwfc	fsr2h,f,c
  8661  0005C6  50DF               	movf	indf2,w,c
  8662  0005C8  0100               	movlb	0	; () banked
  8663  0005CA  6F9C               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  8664                           
  8665                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  8666  0005CC  0100               	movlb	0	; () banked
  8667  0005CE  EE20 F00B          	lfsr	2,11
  8668  0005D2  0100               	movlb	0	; () banked
  8669  0005D4  51CC               	movf	_ic_ptr& (0+255),w,b
  8670  0005D6  26D9               	addwf	fsr2l,f,c
  8671  0005D8  0100               	movlb	0	; () banked
  8672  0005DA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8673  0005DC  22DA               	addwfc	fsr2h,f,c
  8674  0005DE  50DF               	movf	indf2,w,c
  8675  0005E0  0100               	movlb	0	; () banked
  8676  0005E2  6F9D               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8677                           
  8678                           ; BSR set to: 0
  8679                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8680  0005E4  0E29               	movlw	41
  8681  0005E6  0100               	movlb	0	; () banked
  8682  0005E8  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8683  0005EA  0100               	movlb	0	; () banked
  8684  0005EC  0E00               	movlw	high i2c_int_handler@error_buf
  8685  0005EE  0100               	movlb	0	; () banked
  8686  0005F0  6F98               	movwf	(ToMainHigh_sendmsg@data+1)& (0+255),b
  8687  0005F2  0100               	movlb	0	; () banked
  8688  0005F4  0E9B               	movlw	low i2c_int_handler@error_buf
  8689  0005F6  0100               	movlb	0	; () banked
  8690  0005F8  6F97               	movwf	ToMainHigh_sendmsg@data& (0+255),b
  8691  0005FA  0E03               	movlw	3
  8692  0005FC  EC3B  F00F         	call	_ToMainHigh_sendmsg
  8693                           
  8694                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8695  000600  0100               	movlb	0	; () banked
  8696  000602  EE20 F00E          	lfsr	2,14
  8697  000606                     L9:
  8698  000606  0100               	movlb	0	; () banked
  8699  000608  51CC               	movf	_ic_ptr& (0+255),w,b
  8700  00060A  26D9               	addwf	fsr2l,f,c
  8701  00060C  0100               	movlb	0	; () banked
  8702  00060E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8703  000610  22DA               	addwfc	fsr2h,f,c
  8704  000612  0E00               	movlw	0
  8705  000614  6EDF               	movwf	indf2,c
  8706  000616                     i2l3740:
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;my_i2c.c: 257: }
  8710                           ;my_i2c.c: 258: if (msg_to_send) {
  8711  000616  0100               	movlb	0	; () banked
  8712  000618  51A1               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8713  00061A  B4D8               	btfsc	status,2,c
  8714  00061C  0012               	return	
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8718  00061E  0E2A               	movlw	42
  8719  000620  0100               	movlb	0	; () banked
  8720  000622  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  8721  000624  0100               	movlb	0	; () banked
  8722  000626  C0CD  F098         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8723  00062A  0100               	movlb	0	; () banked
  8724  00062C  C0CC  F097         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8725  000630  0E00               	movlw	0
  8726  000632  EC3B  F00F         	call	_ToMainHigh_sendmsg
  8727                           
  8728                           ;my_i2c.c: 261: msg_to_send = 0;
  8729  000636  0E00               	movlw	0
  8730  000638  0100               	movlb	0	; () banked
  8731  00063A  6FA1               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8732  00063C  0012               	return	
  8733  00063E                     __end_of_i2c_int_handler:
  8734                           	opt stack 0
  8735                           pclatu	equ	0xFFB
  8736                           pclath	equ	0xFFA
  8737                           tblptru	equ	0xFF8
  8738                           tblptrh	equ	0xFF7
  8739                           tblptrl	equ	0xFF6
  8740                           tablat	equ	0xFF5
  8741                           prodh	equ	0xFF4
  8742                           prodl	equ	0xFF3
  8743                           intcon	equ	0xFF2
  8744                           postinc0	equ	0xFEE
  8745                           fsr0h	equ	0xFEA
  8746                           fsr0l	equ	0xFE9
  8747                           wreg	equ	0xFE8
  8748                           indf1	equ	0xFE7
  8749                           postdec1	equ	0xFE5
  8750                           fsr1h	equ	0xFE2
  8751                           fsr1l	equ	0xFE1
  8752                           bsr	equ	0xFE0
  8753                           indf2	equ	0xFDF
  8754                           postinc2	equ	0xFDE
  8755                           postdec2	equ	0xFDD
  8756                           fsr2h	equ	0xFDA
  8757                           fsr2l	equ	0xFD9
  8758                           status	equ	0xFD8
  8759                           
  8760 ;; *************** function _handle_start *****************
  8761 ;; Defined at:
  8762 ;;		line 71 in file "src/my_i2c.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;  data_read       1    wreg     unsigned char 
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;  data_read       1    0[BANK0 ] unsigned char 
  8767 ;; Return value:  Size  Location     Type
  8768 ;;		None               void
  8769 ;; Registers used:
  8770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8776 ;;      Params:         0       0       0       0       0
  8777 ;;      Locals:         0       1       0       0       0
  8778 ;;      Temps:          0       0       0       0       0
  8779 ;;      Totals:         0       1       0       0       0
  8780 ;;Total ram usage:        1 bytes
  8781 ;; Hardware stack levels used:    1
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_i2c_int_handler
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789                           	psect	text50
  8790  00121A                     __ptext50:
  8791                           	opt stack 0
  8792  00121A                     _handle_start:
  8793                           	opt stack 18
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;incstack = 0
  8797                           ;handle_start@data_read stored from wreg
  8798  00121A  0100               	movlb	0	; () banked
  8799  00121C  6F80               	movwf	handle_start@data_read& (0+255),b
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8803  00121E  0100               	movlb	0	; () banked
  8804  001220  EE20 F00B          	lfsr	2,11
  8805  001224  0100               	movlb	0	; () banked
  8806  001226  51CC               	movf	_ic_ptr& (0+255),w,b
  8807  001228  26D9               	addwf	fsr2l,f,c
  8808  00122A  0100               	movlb	0	; () banked
  8809  00122C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8810  00122E  22DA               	addwfc	fsr2h,f,c
  8811  001230  0E01               	movlw	1
  8812  001232  6EDF               	movwf	indf2,c
  8813                           
  8814                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8815  001234  0100               	movlb	0	; () banked
  8816  001236  EE20 F00A          	lfsr	2,10
  8817  00123A  0100               	movlb	0	; () banked
  8818  00123C  51CC               	movf	_ic_ptr& (0+255),w,b
  8819  00123E  26D9               	addwf	fsr2l,f,c
  8820  001240  0100               	movlb	0	; () banked
  8821  001242  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8822  001244  22DA               	addwfc	fsr2h,f,c
  8823  001246  0E00               	movlw	0
  8824  001248  6EDF               	movwf	indf2,c
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;my_i2c.c: 75: if (data_read) {
  8828  00124A  0100               	movlb	0	; () banked
  8829  00124C  5180               	movf	handle_start@data_read& (0+255),w,b
  8830  00124E  B4D8               	btfsc	status,2,c
  8831  001250  D03D               	goto	i2l3540
  8832                           
  8833                           ; BSR set to: 0
  8834                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8835  001252  AAC7               	btfss	4039,5,c	;volatile
  8836  001254  D021               	goto	i2l333
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8840  001256  0100               	movlb	0	; () banked
  8841  001258  EE20 F00C          	lfsr	2,12
  8842  00125C  0100               	movlb	0	; () banked
  8843  00125E  51CC               	movf	_ic_ptr& (0+255),w,b
  8844  001260  26D9               	addwf	fsr2l,f,c
  8845  001262  0100               	movlb	0	; () banked
  8846  001264  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8847  001266  22DA               	addwfc	fsr2h,f,c
  8848  001268  0E05               	movlw	5
  8849  00126A  6EDF               	movwf	indf2,c
  8850                           
  8851                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8852  00126C  0100               	movlb	0	; () banked
  8853  00126E  EE20 F00E          	lfsr	2,14
  8854  001272  0100               	movlb	0	; () banked
  8855  001274  51CC               	movf	_ic_ptr& (0+255),w,b
  8856  001276  26D9               	addwf	fsr2l,f,c
  8857  001278  0100               	movlb	0	; () banked
  8858  00127A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8859  00127C  22DA               	addwfc	fsr2h,f,c
  8860  00127E  2ADF               	incf	indf2,f,c
  8861                           
  8862                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8863  001280  0100               	movlb	0	; () banked
  8864  001282  EE20 F00D          	lfsr	2,13
  8865  001286  0100               	movlb	0	; () banked
  8866  001288  51CC               	movf	_ic_ptr& (0+255),w,b
  8867  00128A  26D9               	addwf	fsr2l,f,c
  8868  00128C  0100               	movlb	0	; () banked
  8869  00128E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8870  001290  22DA               	addwfc	fsr2h,f,c
  8871  001292  0E05               	movlw	5
  8872  001294  6EDF               	movwf	indf2,c
  8873                           
  8874                           ;my_i2c.c: 82: } else {
  8875  001296  0012               	return	
  8876  001298                     i2l333:
  8877                           
  8878                           ; BSR set to: 0
  8879                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8880  001298  A4C7               	btfss	4039,2,c	;volatile
  8881  00129A  D00C               	goto	i2l3538
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8885  00129C  0100               	movlb	0	; () banked
  8886  00129E  EE20 F00C          	lfsr	2,12
  8887  0012A2  0100               	movlb	0	; () banked
  8888  0012A4  51CC               	movf	_ic_ptr& (0+255),w,b
  8889  0012A6  26D9               	addwf	fsr2l,f,c
  8890  0012A8  0100               	movlb	0	; () banked
  8891  0012AA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8892  0012AC  22DA               	addwfc	fsr2h,f,c
  8893  0012AE  0E08               	movlw	8
  8894  0012B0  6EDF               	movwf	indf2,c
  8895                           
  8896                           ;my_i2c.c: 85: } else {
  8897  0012B2  0012               	return	
  8898  0012B4                     i2l3538:
  8899                           
  8900                           ; BSR set to: 0
  8901                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8902  0012B4  0100               	movlb	0	; () banked
  8903  0012B6  EE20 F00C          	lfsr	2,12
  8904  0012BA  0100               	movlb	0	; () banked
  8905  0012BC  51CC               	movf	_ic_ptr& (0+255),w,b
  8906  0012BE  26D9               	addwf	fsr2l,f,c
  8907  0012C0  0100               	movlb	0	; () banked
  8908  0012C2  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8909  0012C4  22DA               	addwfc	fsr2h,f,c
  8910  0012C6  0E07               	movlw	7
  8911  0012C8  6EDF               	movwf	indf2,c
  8912  0012CA  0012               	return	
  8913  0012CC                     i2l3540:
  8914                           
  8915                           ; BSR set to: 0
  8916                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8917  0012CC  0100               	movlb	0	; () banked
  8918  0012CE  EE20 F00C          	lfsr	2,12
  8919  0012D2  0100               	movlb	0	; () banked
  8920  0012D4  51CC               	movf	_ic_ptr& (0+255),w,b
  8921  0012D6  26D9               	addwf	fsr2l,f,c
  8922  0012D8  0100               	movlb	0	; () banked
  8923  0012DA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8924  0012DC  22DA               	addwfc	fsr2h,f,c
  8925  0012DE  0E06               	movlw	6
  8926  0012E0  6EDF               	movwf	indf2,c
  8927  0012E2  0012               	return	
  8928  0012E4                     __end_of_handle_start:
  8929                           	opt stack 0
  8930                           pclatu	equ	0xFFB
  8931                           pclath	equ	0xFFA
  8932                           tblptru	equ	0xFF8
  8933                           tblptrh	equ	0xFF7
  8934                           tblptrl	equ	0xFF6
  8935                           tablat	equ	0xFF5
  8936                           prodh	equ	0xFF4
  8937                           prodl	equ	0xFF3
  8938                           intcon	equ	0xFF2
  8939                           postinc0	equ	0xFEE
  8940                           fsr0h	equ	0xFEA
  8941                           fsr0l	equ	0xFE9
  8942                           wreg	equ	0xFE8
  8943                           indf1	equ	0xFE7
  8944                           postdec1	equ	0xFE5
  8945                           fsr1h	equ	0xFE2
  8946                           fsr1l	equ	0xFE1
  8947                           bsr	equ	0xFE0
  8948                           indf2	equ	0xFDF
  8949                           postinc2	equ	0xFDE
  8950                           postdec2	equ	0xFDD
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955 ;; *************** function _ToMainHigh_sendmsg *****************
  8956 ;; Defined at:
  8957 ;;		line 126 in file "src/messages.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  length          1    wreg     unsigned char 
  8960 ;;  msgtype         1   22[BANK0 ] unsigned char 
  8961 ;;  data            2   23[BANK0 ] PTR void 
  8962 ;;		 -> i2c_int_handler@error_buf(3), main@ic(28), NULL(0), 
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;  length          1   25[BANK0 ] unsigned char 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1    wreg      char 
  8967 ;; Registers used:
  8968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8974 ;;      Params:         0       3       0       0       0
  8975 ;;      Locals:         0       1       0       0       0
  8976 ;;      Temps:          0       0       0       0       0
  8977 ;;      Totals:         0       4       0       0       0
  8978 ;;Total ram usage:        4 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    2
  8981 ;; This function calls:
  8982 ;;		i2_send_msg
  8983 ;; This function is called by:
  8984 ;;		_InterruptHandlerHigh
  8985 ;;		_i2c_int_handler
  8986 ;; This function uses a non-reentrant model
  8987 ;;
  8988                           
  8989                           	psect	text51
  8990  001E76                     __ptext51:
  8991                           	opt stack 0
  8992  001E76                     _ToMainHigh_sendmsg:
  8993                           	opt stack 16
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;incstack = 0
  8997                           ;ToMainHigh_sendmsg@length stored from wreg
  8998  001E76  0100               	movlb	0	; () banked
  8999  001E78  6F99               	movwf	ToMainHigh_sendmsg@length& (0+255),b
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  9003                           ;	Return value of _ToMainHigh_sendmsg is never used
  9004  001E7A  0101               	movlb	1	; () banked
  9005  001E7C  0E01               	movlw	high _ToMainHigh_MQ
  9006  001E7E  0100               	movlb	0	; () banked
  9007  001E80  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  9008  001E82  0101               	movlb	1	; () banked
  9009  001E84  0E36               	movlw	low _ToMainHigh_MQ
  9010  001E86  0100               	movlb	0	; () banked
  9011  001E88  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  9012  001E8A  C099  F08C         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  9013  001E8E  C096  F08D         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  9014  001E92  0100               	movlb	0	; () banked
  9015  001E94  C098  F08F         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  9016  001E98  0100               	movlb	0	; () banked
  9017  001E9A  C097  F08E         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  9018  001E9E  ECC9  F007         	call	i2_send_msg	;wreg free
  9019  001EA2  0012               	return	
  9020  001EA4                     __end_of_ToMainHigh_sendmsg:
  9021                           	opt stack 0
  9022                           pclatu	equ	0xFFB
  9023                           pclath	equ	0xFFA
  9024                           tblptru	equ	0xFF8
  9025                           tblptrh	equ	0xFF7
  9026                           tblptrl	equ	0xFF6
  9027                           tablat	equ	0xFF5
  9028                           prodh	equ	0xFF4
  9029                           prodl	equ	0xFF3
  9030                           intcon	equ	0xFF2
  9031                           postinc0	equ	0xFEE
  9032                           fsr0h	equ	0xFEA
  9033                           fsr0l	equ	0xFE9
  9034                           wreg	equ	0xFE8
  9035                           indf1	equ	0xFE7
  9036                           postdec1	equ	0xFE5
  9037                           fsr1h	equ	0xFE2
  9038                           fsr1l	equ	0xFE1
  9039                           bsr	equ	0xFE0
  9040                           indf2	equ	0xFDF
  9041                           postinc2	equ	0xFDE
  9042                           postdec2	equ	0xFDD
  9043                           fsr2h	equ	0xFDA
  9044                           fsr2l	equ	0xFD9
  9045                           status	equ	0xFD8
  9046                           
  9047 ;; *************** function i2_send_msg *****************
  9048 ;; Defined at:
  9049 ;;		line 24 in file "src/messages.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  9052 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9053 ;;  length          1   12[BANK0 ] unsigned char 
  9054 ;;  msgtype         1   13[BANK0 ] unsigned char 
  9055 ;;  data            2   14[BANK0 ] PTR void 
  9056 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  9057 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  9058 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  9061 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9062 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9063 ;;  send_msg        2   17[BANK0 ] unsigned int 
  9064 ;;  send_msg        1   19[BANK0 ] unsigned char 
  9065 ;; Return value:  Size  Location     Type
  9066 ;;                  1    wreg      char 
  9067 ;; Registers used:
  9068 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9069 ;; Tracked objects:
  9070 ;;		On entry : 0/0
  9071 ;;		On exit  : 0/0
  9072 ;;		Unchanged: 0/0
  9073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9074 ;;      Params:         0       6       0       0       0
  9075 ;;      Locals:         0       5       0       0       0
  9076 ;;      Temps:          0       1       0       0       0
  9077 ;;      Totals:         0      12       0       0       0
  9078 ;;Total ram usage:       12 bytes
  9079 ;; Hardware stack levels used:    1
  9080 ;; Hardware stack levels required when called:    1
  9081 ;; This function calls:
  9082 ;;		i2_memcpy
  9083 ;; This function is called by:
  9084 ;;		_ToMainHigh_sendmsg
  9085 ;; This function uses a non-reentrant model
  9086 ;;
  9087                           
  9088                           	psect	text52
  9089  000F92                     __ptext52:
  9090                           	opt stack 0
  9091  000F92                     i2_send_msg:
  9092                           	opt stack 16
  9093                           
  9094                           ;messages.c: 25: unsigned char slot;
  9095                           ;messages.c: 27: msg *qmsg;
  9096                           ;messages.c: 28: size_t tlength = length;
  9097                           
  9098                           ;incstack = 0
  9099  000F92  0100               	movlb	0	; () banked
  9100  000F94  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  9101  000F98  0100               	movlb	0	; () banked
  9102  000F9A  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  9103                           
  9104                           ; BSR set to: 0
  9105                           ;messages.c: 38: slot = qptr->cur_write_ind;
  9106  000F9C  0100               	movlb	0	; () banked
  9107  000F9E  EE20 F034          	lfsr	2,52
  9108  000FA2  0100               	movlb	0	; () banked
  9109  000FA4  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9110  000FA6  26D9               	addwf	fsr2l,f,c
  9111  000FA8  0100               	movlb	0	; () banked
  9112  000FAA  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9113  000FAC  22DA               	addwfc	fsr2h,f,c
  9114  000FAE  50DF               	movf	indf2,w,c
  9115  000FB0  0100               	movlb	0	; () banked
  9116  000FB2  6F93               	movwf	i2send_msg@slot& (0+255),b
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  9120  000FB4  0100               	movlb	0	; () banked
  9121  000FB6  5193               	movf	i2send_msg@slot& (0+255),w,b
  9122  000FB8  0D0D               	mullw	13
  9123  000FBA  50F3               	movf	prodl,w,c
  9124  000FBC  0100               	movlb	0	; () banked
  9125  000FBE  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  9126  000FC0  0100               	movlb	0	; () banked
  9127  000FC2  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  9128  000FC4  50F4               	movf	prodh,w,c
  9129  000FC6  0100               	movlb	0	; () banked
  9130  000FC8  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  9131  000FCA  0100               	movlb	0	; () banked
  9132  000FCC  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;messages.c: 41: if (qmsg->full != 0) {
  9136  000FCE  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9137  000FD2  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9138  000FD6  50DF               	movf	indf2,w,c
  9139  000FD8  B4D8               	btfsc	status,2,c
  9140  000FDA  D002               	goto	i2l3384
  9141                           
  9142                           ; BSR set to: 0
  9143                           ;messages.c: 42: return (-1);
  9144  000FDC  0EFF               	movlw	255
  9145  000FDE  0012               	return	
  9146  000FE0                     i2l3384:
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;messages.c: 43: }
  9150                           ;messages.c: 46: qmsg->length = length;
  9151  000FE0  0100               	movlb	0	; () banked
  9152  000FE2  EE20 F001          	lfsr	2,1
  9153  000FE6  0100               	movlb	0	; () banked
  9154  000FE8  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9155  000FEA  26D9               	addwf	fsr2l,f,c
  9156  000FEC  0100               	movlb	0	; () banked
  9157  000FEE  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9158  000FF0  22DA               	addwfc	fsr2h,f,c
  9159  000FF2  0100               	movlb	0	; () banked
  9160  000FF4  C08C  FFDF         	movff	i2send_msg@length,indf2
  9161                           
  9162                           ;messages.c: 47: qmsg->msgtype = msgtype;
  9163  000FF8  0100               	movlb	0	; () banked
  9164  000FFA  EE20 F002          	lfsr	2,2
  9165  000FFE  0100               	movlb	0	; () banked
  9166  001000  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  9167  001002  26D9               	addwf	fsr2l,f,c
  9168  001004  0100               	movlb	0	; () banked
  9169  001006  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  9170  001008  22DA               	addwfc	fsr2h,f,c
  9171  00100A  0100               	movlb	0	; () banked
  9172  00100C  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  9176  001010  0E03               	movlw	3
  9177  001012  0100               	movlb	0	; () banked
  9178  001014  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  9179  001016  0100               	movlb	0	; () banked
  9180  001018  6F80               	movwf	i2memcpy@d1& (0+255),b
  9181  00101A  0E00               	movlw	0
  9182  00101C  0100               	movlb	0	; () banked
  9183  00101E  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  9184  001020  0100               	movlb	0	; () banked
  9185  001022  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  9186  001024  0100               	movlb	0	; () banked
  9187  001026  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  9188  00102A  0100               	movlb	0	; () banked
  9189  00102C  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  9190  001030  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  9191  001034  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  9192  001038  ECA7  F00D         	call	i2_memcpy	;wreg free
  9193                           
  9194                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  9195  00103C  0100               	movlb	0	; () banked
  9196  00103E  EE20 F034          	lfsr	2,52
  9197  001042  0100               	movlb	0	; () banked
  9198  001044  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9199  001046  26D9               	addwf	fsr2l,f,c
  9200  001048  0100               	movlb	0	; () banked
  9201  00104A  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9202  00104C  22DA               	addwfc	fsr2h,f,c
  9203  00104E  0100               	movlb	0	; () banked
  9204  001050  EE10 F034          	lfsr	1,52
  9205  001054  0100               	movlb	0	; () banked
  9206  001056  518A               	movf	i2send_msg@qptr& (0+255),w,b
  9207  001058  26E1               	addwf	fsr1l,f,c
  9208  00105A  0100               	movlb	0	; () banked
  9209  00105C  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  9210  00105E  22E2               	addwfc	fsr1h,f,c
  9211  001060  50E7               	movf	indf1,w,c
  9212  001062  0100               	movlb	0	; () banked
  9213  001064  6F90               	movwf	??i2_send_msg& (0+255),b
  9214  001066  0100               	movlb	0	; () banked
  9215  001068  2990               	incf	??i2_send_msg& (0+255),w,b
  9216  00106A  0B03               	andlw	3
  9217  00106C  6EDF               	movwf	indf2,c
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;messages.c: 59: qmsg->full = 1;
  9221  00106E  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  9222  001072  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  9223  001076  0E01               	movlw	1
  9224  001078  6EDF               	movwf	indf2,c
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;messages.c: 60: return (1);
  9228  00107A  0E01               	movlw	1
  9229  00107C  0012               	return	
  9230  00107E                     __end_ofi2_send_msg:
  9231                           	opt stack 0
  9232                           pclatu	equ	0xFFB
  9233                           pclath	equ	0xFFA
  9234                           tblptru	equ	0xFF8
  9235                           tblptrh	equ	0xFF7
  9236                           tblptrl	equ	0xFF6
  9237                           tablat	equ	0xFF5
  9238                           prodh	equ	0xFF4
  9239                           prodl	equ	0xFF3
  9240                           intcon	equ	0xFF2
  9241                           postinc0	equ	0xFEE
  9242                           fsr0h	equ	0xFEA
  9243                           fsr0l	equ	0xFE9
  9244                           wreg	equ	0xFE8
  9245                           indf1	equ	0xFE7
  9246                           postdec1	equ	0xFE5
  9247                           fsr1h	equ	0xFE2
  9248                           fsr1l	equ	0xFE1
  9249                           bsr	equ	0xFE0
  9250                           indf2	equ	0xFDF
  9251                           postinc2	equ	0xFDE
  9252                           postdec2	equ	0xFDD
  9253                           fsr2h	equ	0xFDA
  9254                           fsr2l	equ	0xFD9
  9255                           status	equ	0xFD8
  9256                           
  9257 ;; *************** function i2_memcpy *****************
  9258 ;; Defined at:
  9259 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;  d1              2    0[BANK0 ] PTR void 
  9262 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9263 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9264 ;;		 -> main@msgbuffer(11), NULL(0), 
  9265 ;;  s1              2    2[BANK0 ] PTR const void 
  9266 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9267 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9268 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  9269 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  9270 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9271 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  9272 ;;  n               2    4[BANK0 ] unsigned int 
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  9275 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  9276 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  9277 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  9278 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  9279 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9280 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  9281 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  9282 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  9283 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9284 ;;		 -> main@msgbuffer(11), NULL(0), 
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  2    0[BANK0 ] PTR void 
  9287 ;; Registers used:
  9288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9289 ;; Tracked objects:
  9290 ;;		On entry : 0/0
  9291 ;;		On exit  : 0/0
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9294 ;;      Params:         0       6       0       0       0
  9295 ;;      Locals:         0       4       0       0       0
  9296 ;;      Temps:          0       0       0       0       0
  9297 ;;      Totals:         0      10       0       0       0
  9298 ;;Total ram usage:       10 bytes
  9299 ;; Hardware stack levels used:    1
  9300 ;; This function calls:
  9301 ;;		Nothing
  9302 ;; This function is called by:
  9303 ;;		i2_send_msg
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text53
  9308  001B4E                     __ptext53:
  9309                           	opt stack 0
  9310  001B4E                     i2_memcpy:
  9311                           	opt stack 16
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;incstack = 0
  9315  001B4E  0100               	movlb	0	; () banked
  9316  001B50  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  9317  001B54  0100               	movlb	0	; () banked
  9318  001B56  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  9319  001B5A  0100               	movlb	0	; () banked
  9320  001B5C  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  9321  001B60  0100               	movlb	0	; () banked
  9322  001B62  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  9323  001B66  D010               	goto	i2l3318
  9324  001B68                     i2l3312:
  9325                           
  9326                           ; BSR set to: 0
  9327  001B68  C088  FFD9         	movff	i2memcpy@s,fsr2l
  9328  001B6C  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  9329  001B70  C086  FFE1         	movff	i2memcpy@d,fsr1l
  9330  001B74  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  9331  001B78  CFDF FFE7          	movff	indf2,indf1
  9332                           
  9333                           ; BSR set to: 0
  9334  001B7C  0100               	movlb	0	; () banked
  9335  001B7E  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  9336  001B80  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  9337                           
  9338                           ; BSR set to: 0
  9339  001B82  0100               	movlb	0	; () banked
  9340  001B84  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  9341  001B86  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  9342  001B88                     i2l3318:
  9343                           
  9344                           ; BSR set to: 0
  9345  001B88  0100               	movlb	0	; () banked
  9346  001B8A  0784               	decf	i2memcpy@n& (0+255),f,b
  9347  001B8C  A0D8               	btfss	status,0,c
  9348  001B8E  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  9349  001B90  0100               	movlb	0	; () banked
  9350  001B92  2984               	incf	i2memcpy@n& (0+255),w,b
  9351  001B94  B4D8               	btfsc	status,2,c
  9352  001B96  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  9353  001B98  B4D8               	btfsc	status,2,c
  9354                           
  9355                           ; BSR set to: 0
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;	Return value of i2_memcpy is never used
  9359  001B9A  0012               	return	
  9360  001B9C  D7E5               	goto	i2l3312
  9361  001B9E                     __end_ofi2_memcpy:
  9362                           	opt stack 0
  9363                           pclatu	equ	0xFFB
  9364                           pclath	equ	0xFFA
  9365                           tblptru	equ	0xFF8
  9366                           tblptrh	equ	0xFF7
  9367                           tblptrl	equ	0xFF6
  9368                           tablat	equ	0xFF5
  9369                           prodh	equ	0xFF4
  9370                           prodl	equ	0xFF3
  9371                           intcon	equ	0xFF2
  9372                           postinc0	equ	0xFEE
  9373                           fsr0h	equ	0xFEA
  9374                           fsr0l	equ	0xFE9
  9375                           wreg	equ	0xFE8
  9376                           indf1	equ	0xFE7
  9377                           postdec1	equ	0xFE5
  9378                           fsr1h	equ	0xFE2
  9379                           fsr1l	equ	0xFE1
  9380                           bsr	equ	0xFE0
  9381                           indf2	equ	0xFDF
  9382                           postinc2	equ	0xFDE
  9383                           postdec2	equ	0xFDD
  9384                           fsr2h	equ	0xFDA
  9385                           fsr2l	equ	0xFD9
  9386                           status	equ	0xFD8
  9387                           
  9388 ;; *************** function _SleepIfOkay *****************
  9389 ;; Defined at:
  9390 ;;		line 226 in file "src/messages.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;		None
  9393 ;; Auto vars:     Size  Location     Type
  9394 ;;		None
  9395 ;; Return value:  Size  Location     Type
  9396 ;;		None               void
  9397 ;; Registers used:
  9398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9404 ;;      Params:         0       0       0       0       0
  9405 ;;      Locals:         0       0       0       0       0
  9406 ;;      Temps:          0       0       0       0       0
  9407 ;;      Totals:         0       0       0       0       0
  9408 ;;Total ram usage:        0 bytes
  9409 ;; Hardware stack levels used:    1
  9410 ;; Hardware stack levels required when called:    2
  9411 ;; This function calls:
  9412 ;;		_enter_sleep_mode
  9413 ;;		i2_check_msg
  9414 ;;		i2_in_high_int
  9415 ;;		i2_in_low_int
  9416 ;; This function is called by:
  9417 ;;		_InterruptHandlerHigh
  9418 ;; This function uses a non-reentrant model
  9419 ;;
  9420                           
  9421                           	psect	text54
  9422  0018E6                     __ptext54:
  9423                           	opt stack 0
  9424  0018E6                     _SleepIfOkay:
  9425                           	opt stack 17
  9426                           
  9427                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  9428                           
  9429                           ; BSR set to: 0
  9430                           ;incstack = 0
  9431  0018E6  665F               	tstfsz	_MQ_Main_Willing_to_block,c
  9432  0018E8  D001               	goto	i2l3750
  9433  0018EA  0012               	return	
  9434  0018EC                     i2l3750:
  9435                           
  9436                           ;messages.c: 230: }
  9437                           ;messages.c: 233: if (in_low_int()) {
  9438  0018EC  EC6C  F00E         	call	i2_in_low_int	;wreg free
  9439  0018F0  0100               	movlb	0	; () banked
  9440  0018F2  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9441  0018F4  0100               	movlb	0	; () banked
  9442  0018F6  1182               	iorwf	?i2_in_low_int& (0+255),w,b
  9443  0018F8  A4D8               	btfss	status,2,c
  9444  0018FA  0012               	return	
  9445                           
  9446                           ; BSR set to: 0
  9447                           ;messages.c: 235: }
  9448                           ;messages.c: 238: if (!in_high_int()) {
  9449                           
  9450                           ; BSR set to: 0
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;messages.c: 234: return;
  9454  0018FC  ECF5  F00F         	call	i2_in_high_int	;wreg free
  9455  001900  0100               	movlb	0	; () banked
  9456  001902  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9457  001904  0100               	movlb	0	; () banked
  9458  001906  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  9459  001908  B4D8               	btfsc	status,2,c
  9460  00190A  0012               	return	
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;messages.c: 240: }
  9464                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  9465                           
  9466                           ; BSR set to: 0
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;messages.c: 239: return;
  9470  00190C  0101               	movlb	1	; () banked
  9471  00190E  0E01               	movlw	high _ToMainHigh_MQ
  9472  001910  0100               	movlb	0	; () banked
  9473  001912  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9474  001914  0101               	movlb	1	; () banked
  9475  001916  0E36               	movlw	low _ToMainHigh_MQ
  9476  001918  0100               	movlb	0	; () banked
  9477  00191A  6F80               	movwf	i2check_msg@qptr& (0+255),b
  9478  00191C  ECF4  F00E         	call	i2_check_msg	;wreg free
  9479  001920  0900               	iorlw	0
  9480  001922  A4D8               	btfss	status,2,c
  9481  001924  0012               	return	
  9482                           
  9483                           ;messages.c: 247: }
  9484                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  9485                           
  9486                           ;messages.c: 246: return;
  9487  001926  0101               	movlb	1	; () banked
  9488  001928  0E01               	movlw	high _ToMainLow_MQ
  9489  00192A  0100               	movlb	0	; () banked
  9490  00192C  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9491  00192E  0101               	movlb	1	; () banked
  9492  001930  0E6C               	movlw	low _ToMainLow_MQ
  9493  001932  0100               	movlb	0	; () banked
  9494  001934  6F80               	movwf	i2check_msg@qptr& (0+255),b
  9495  001936  ECF4  F00E         	call	i2_check_msg	;wreg free
  9496  00193A  0900               	iorlw	0
  9497  00193C  B4D8               	btfsc	status,2,c
  9498                           
  9499                           ;messages.c: 250: }
  9500                           ;messages.c: 251: enter_sleep_mode();
  9501                           
  9502                           ;messages.c: 249: return;
  9503  00193E  EC01  F010         	call	_enter_sleep_mode	;wreg free
  9504  001942  0012               	return	
  9505  001944                     __end_of_SleepIfOkay:
  9506                           	opt stack 0
  9507                           pclatu	equ	0xFFB
  9508                           pclath	equ	0xFFA
  9509                           tblptru	equ	0xFF8
  9510                           tblptrh	equ	0xFF7
  9511                           tblptrl	equ	0xFF6
  9512                           tablat	equ	0xFF5
  9513                           prodh	equ	0xFF4
  9514                           prodl	equ	0xFF3
  9515                           intcon	equ	0xFF2
  9516                           postinc0	equ	0xFEE
  9517                           fsr0h	equ	0xFEA
  9518                           fsr0l	equ	0xFE9
  9519                           wreg	equ	0xFE8
  9520                           indf1	equ	0xFE7
  9521                           postdec1	equ	0xFE5
  9522                           fsr1h	equ	0xFE2
  9523                           fsr1l	equ	0xFE1
  9524                           bsr	equ	0xFE0
  9525                           indf2	equ	0xFDF
  9526                           postinc2	equ	0xFDE
  9527                           postdec2	equ	0xFDD
  9528                           fsr2h	equ	0xFDA
  9529                           fsr2l	equ	0xFD9
  9530                           status	equ	0xFD8
  9531                           
  9532 ;; *************** function i2_in_low_int *****************
  9533 ;; Defined at:
  9534 ;;		line 31 in file "src/interrupts.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;		None
  9537 ;; Auto vars:     Size  Location     Type
  9538 ;;		None
  9539 ;; Return value:  Size  Location     Type
  9540 ;;                  2    2[BANK0 ] int 
  9541 ;; Registers used:
  9542 ;;		wreg, status,2, status,0, cstack
  9543 ;; Tracked objects:
  9544 ;;		On entry : 0/0
  9545 ;;		On exit  : 0/0
  9546 ;;		Unchanged: 0/0
  9547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9548 ;;      Params:         0       2       0       0       0
  9549 ;;      Locals:         0       0       0       0       0
  9550 ;;      Temps:          0       0       0       0       0
  9551 ;;      Totals:         0       2       0       0       0
  9552 ;;Total ram usage:        2 bytes
  9553 ;; Hardware stack levels used:    1
  9554 ;; Hardware stack levels required when called:    1
  9555 ;; This function calls:
  9556 ;;		i2_in_high_int
  9557 ;; This function is called by:
  9558 ;;		_SleepIfOkay
  9559 ;; This function uses a non-reentrant model
  9560 ;;
  9561                           
  9562                           	psect	text55
  9563  001CD8                     __ptext55:
  9564                           	opt stack 0
  9565  001CD8                     i2_in_low_int:
  9566                           	opt stack 17
  9567                           
  9568                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  9569                           
  9570                           ;incstack = 0
  9571  001CD8  ACF2               	btfss	intcon,6,c	;volatile
  9572  001CDA  D007               	goto	i2l3582
  9573                           
  9574                           ;interrupts.c: 33: return (0);
  9575  001CDC  0E00               	movlw	0
  9576  001CDE  0100               	movlb	0	; () banked
  9577  001CE0  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  9578  001CE2  0E00               	movlw	0
  9579  001CE4  0100               	movlb	0	; () banked
  9580  001CE6  6F82               	movwf	?i2_in_low_int& (0+255),b
  9581  001CE8  0012               	return	
  9582  001CEA                     i2l3582:
  9583  001CEA  ECF5  F00F         	call	i2_in_high_int	;wreg free
  9584  001CEE  0100               	movlb	0	; () banked
  9585  001CF0  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9586  001CF2  0100               	movlb	0	; () banked
  9587  001CF4  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  9588  001CF6  B4D8               	btfsc	status,2,c
  9589  001CF8  D007               	goto	i2l3590
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;interrupts.c: 35: return (0);
  9593  001CFA  0E00               	movlw	0
  9594  001CFC  0100               	movlb	0	; () banked
  9595  001CFE  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  9596  001D00  0E00               	movlw	0
  9597  001D02  0100               	movlb	0	; () banked
  9598  001D04  6F82               	movwf	?i2_in_low_int& (0+255),b
  9599  001D06  0012               	return	
  9600  001D08                     i2l3590:
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;interrupts.c: 37: return (1);
  9604  001D08  0E00               	movlw	0
  9605  001D0A  0100               	movlb	0	; () banked
  9606  001D0C  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  9607  001D0E  0E01               	movlw	1
  9608  001D10  0100               	movlb	0	; () banked
  9609  001D12  6F82               	movwf	?i2_in_low_int& (0+255),b
  9610  001D14  0012               	return	
  9611  001D16                     __end_ofi2_in_low_int:
  9612                           	opt stack 0
  9613                           pclatu	equ	0xFFB
  9614                           pclath	equ	0xFFA
  9615                           tblptru	equ	0xFF8
  9616                           tblptrh	equ	0xFF7
  9617                           tblptrl	equ	0xFF6
  9618                           tablat	equ	0xFF5
  9619                           prodh	equ	0xFF4
  9620                           prodl	equ	0xFF3
  9621                           intcon	equ	0xFF2
  9622                           postinc0	equ	0xFEE
  9623                           fsr0h	equ	0xFEA
  9624                           fsr0l	equ	0xFE9
  9625                           wreg	equ	0xFE8
  9626                           indf1	equ	0xFE7
  9627                           postdec1	equ	0xFE5
  9628                           fsr1h	equ	0xFE2
  9629                           fsr1l	equ	0xFE1
  9630                           bsr	equ	0xFE0
  9631                           indf2	equ	0xFDF
  9632                           postinc2	equ	0xFDE
  9633                           postdec2	equ	0xFDD
  9634                           fsr2h	equ	0xFDA
  9635                           fsr2l	equ	0xFD9
  9636                           status	equ	0xFD8
  9637                           
  9638 ;; *************** function i2_in_high_int *****************
  9639 ;; Defined at:
  9640 ;;		line 23 in file "src/interrupts.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;		None
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  2    0[BANK0 ] int 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9654 ;;      Params:         0       2       0       0       0
  9655 ;;      Locals:         0       0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0
  9657 ;;      Totals:         0       2       0       0       0
  9658 ;;Total ram usage:        2 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; This function calls:
  9661 ;;		Nothing
  9662 ;; This function is called by:
  9663 ;;		_SleepIfOkay
  9664 ;;		i2_in_low_int
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           	psect	text56
  9669  001FEA                     __ptext56:
  9670                           	opt stack 0
  9671  001FEA                     i2_in_high_int:
  9672                           	opt stack 17
  9673                           
  9674                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  9675                           
  9676                           ; BSR set to: 0
  9677                           ;incstack = 0
  9678  001FEA  0E00               	movlw	0
  9679  001FEC  AEF2               	btfss	intcon,7,c	;volatile
  9680  001FEE  0E01               	movlw	1
  9681  001FF0  0100               	movlb	0	; () banked
  9682  001FF2  6F80               	movwf	?i2_in_high_int& (0+255),b
  9683  001FF4  0100               	movlb	0	; () banked
  9684  001FF6  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
  9685  001FF8  0012               	return	
  9686  001FFA                     __end_ofi2_in_high_int:
  9687                           	opt stack 0
  9688                           pclatu	equ	0xFFB
  9689                           pclath	equ	0xFFA
  9690                           tblptru	equ	0xFF8
  9691                           tblptrh	equ	0xFF7
  9692                           tblptrl	equ	0xFF6
  9693                           tablat	equ	0xFF5
  9694                           prodh	equ	0xFF4
  9695                           prodl	equ	0xFF3
  9696                           intcon	equ	0xFF2
  9697                           postinc0	equ	0xFEE
  9698                           fsr0h	equ	0xFEA
  9699                           fsr0l	equ	0xFE9
  9700                           wreg	equ	0xFE8
  9701                           indf1	equ	0xFE7
  9702                           postdec1	equ	0xFE5
  9703                           fsr1h	equ	0xFE2
  9704                           fsr1l	equ	0xFE1
  9705                           bsr	equ	0xFE0
  9706                           indf2	equ	0xFDF
  9707                           postinc2	equ	0xFDE
  9708                           postdec2	equ	0xFDD
  9709                           fsr2h	equ	0xFDA
  9710                           fsr2l	equ	0xFD9
  9711                           status	equ	0xFD8
  9712                           
  9713 ;; *************** function i2_check_msg *****************
  9714 ;; Defined at:
  9715 ;;		line 220 in file "src/messages.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9718 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9719 ;; Auto vars:     Size  Location     Type
  9720 ;;		None
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  1    wreg      unsigned char 
  9723 ;; Registers used:
  9724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9725 ;; Tracked objects:
  9726 ;;		On entry : 0/0
  9727 ;;		On exit  : 0/0
  9728 ;;		Unchanged: 0/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9730 ;;      Params:         0       2       0       0       0
  9731 ;;      Locals:         0       0       0       0       0
  9732 ;;      Temps:          0       1       0       0       0
  9733 ;;      Totals:         0       3       0       0       0
  9734 ;;Total ram usage:        3 bytes
  9735 ;; Hardware stack levels used:    1
  9736 ;; This function calls:
  9737 ;;		Nothing
  9738 ;; This function is called by:
  9739 ;;		_SleepIfOkay
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           	psect	text57
  9744  001DE8                     __ptext57:
  9745                           	opt stack 0
  9746  001DE8                     i2_check_msg:
  9747                           	opt stack 18
  9748                           
  9749                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  9750                           
  9751                           ; BSR set to: 0
  9752                           ;incstack = 0
  9753  001DE8  0100               	movlb	0	; () banked
  9754  001DEA  EE20 F035          	lfsr	2,53
  9755  001DEE  0100               	movlb	0	; () banked
  9756  001DF0  5180               	movf	i2check_msg@qptr& (0+255),w,b
  9757  001DF2  26D9               	addwf	fsr2l,f,c
  9758  001DF4  0100               	movlb	0	; () banked
  9759  001DF6  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9760  001DF8  22DA               	addwfc	fsr2h,f,c
  9761  001DFA  50DF               	movf	indf2,w,c
  9762  001DFC  0100               	movlb	0	; () banked
  9763  001DFE  6F82               	movwf	??i2_check_msg& (0+255),b
  9764  001E00  0100               	movlb	0	; () banked
  9765  001E02  5182               	movf	??i2_check_msg& (0+255),w,b
  9766  001E04  0D0D               	mullw	13
  9767  001E06  50F3               	movf	prodl,w,c
  9768  001E08  0100               	movlb	0	; () banked
  9769  001E0A  2580               	addwf	i2check_msg@qptr& (0+255),w,b
  9770  001E0C  6ED9               	movwf	fsr2l,c
  9771  001E0E  50F4               	movf	prodh,w,c
  9772  001E10  0100               	movlb	0	; () banked
  9773  001E12  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9774  001E14  6EDA               	movwf	fsr2h,c
  9775  001E16  50DF               	movf	indf2,w,c
  9776  001E18  0012               	return	
  9777  001E1A                     __end_ofi2_check_msg:
  9778                           	opt stack 0
  9779                           pclatu	equ	0xFFB
  9780                           pclath	equ	0xFFA
  9781                           tblptru	equ	0xFF8
  9782                           tblptrh	equ	0xFF7
  9783                           tblptrl	equ	0xFF6
  9784                           tablat	equ	0xFF5
  9785                           prodh	equ	0xFF4
  9786                           prodl	equ	0xFF3
  9787                           intcon	equ	0xFF2
  9788                           postinc0	equ	0xFEE
  9789                           fsr0h	equ	0xFEA
  9790                           fsr0l	equ	0xFE9
  9791                           wreg	equ	0xFE8
  9792                           indf1	equ	0xFE7
  9793                           postdec1	equ	0xFE5
  9794                           fsr1h	equ	0xFE2
  9795                           fsr1l	equ	0xFE1
  9796                           bsr	equ	0xFE0
  9797                           indf2	equ	0xFDF
  9798                           postinc2	equ	0xFDE
  9799                           postdec2	equ	0xFDD
  9800                           fsr2h	equ	0xFDA
  9801                           fsr2l	equ	0xFD9
  9802                           status	equ	0xFD8
  9803                           
  9804 ;; *************** function _enter_sleep_mode *****************
  9805 ;; Defined at:
  9806 ;;		line 202 in file "src/messages.c"
  9807 ;; Parameters:    Size  Location     Type
  9808 ;;		None
  9809 ;; Auto vars:     Size  Location     Type
  9810 ;;		None
  9811 ;; Return value:  Size  Location     Type
  9812 ;;		None               void
  9813 ;; Registers used:
  9814 ;;		None
  9815 ;; Tracked objects:
  9816 ;;		On entry : 0/0
  9817 ;;		On exit  : 0/0
  9818 ;;		Unchanged: 0/0
  9819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9820 ;;      Params:         0       0       0       0       0
  9821 ;;      Locals:         0       0       0       0       0
  9822 ;;      Temps:          0       0       0       0       0
  9823 ;;      Totals:         0       0       0       0       0
  9824 ;;Total ram usage:        0 bytes
  9825 ;; Hardware stack levels used:    1
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_SleepIfOkay
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text58
  9834  002002                     __ptext58:
  9835                           	opt stack 0
  9836  002002                     _enter_sleep_mode:
  9837                           	opt stack 18
  9838                           
  9839                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;incstack = 0
  9843  002002  8ED3               	bsf	4051,7,c	;volatile
  9844  002004  0003               	sleep		;# 
  9845  002006  0012               	return	
  9846  002008                     __end_of_enter_sleep_mode:
  9847                           	opt stack 0
  9848  0000                     pclatu	equ	0xFFB
  9849                           pclath	equ	0xFFA
  9850                           tblptru	equ	0xFF8
  9851                           tblptrh	equ	0xFF7
  9852                           tblptrl	equ	0xFF6
  9853                           tablat	equ	0xFF5
  9854                           prodh	equ	0xFF4
  9855                           prodl	equ	0xFF3
  9856                           intcon	equ	0xFF2
  9857                           postinc0	equ	0xFEE
  9858                           fsr0h	equ	0xFEA
  9859                           fsr0l	equ	0xFE9
  9860                           wreg	equ	0xFE8
  9861                           indf1	equ	0xFE7
  9862                           postdec1	equ	0xFE5
  9863                           fsr1h	equ	0xFE2
  9864                           fsr1l	equ	0xFE1
  9865                           bsr	equ	0xFE0
  9866                           indf2	equ	0xFDF
  9867                           postinc2	equ	0xFDE
  9868                           postdec2	equ	0xFDD
  9869                           fsr2h	equ	0xFDA
  9870                           fsr2l	equ	0xFD9
  9871                           status	equ	0xFD8
  9872                           pclatu	equ	0xFFB
  9873                           pclath	equ	0xFFA
  9874                           tblptru	equ	0xFF8
  9875                           tblptrh	equ	0xFF7
  9876                           tblptrl	equ	0xFF6
  9877                           tablat	equ	0xFF5
  9878                           prodh	equ	0xFF4
  9879                           prodl	equ	0xFF3
  9880                           intcon	equ	0xFF2
  9881                           postinc0	equ	0xFEE
  9882                           fsr0h	equ	0xFEA
  9883                           fsr0l	equ	0xFE9
  9884                           wreg	equ	0xFE8
  9885                           indf1	equ	0xFE7
  9886                           postdec1	equ	0xFE5
  9887                           fsr1h	equ	0xFE2
  9888                           fsr1l	equ	0xFE1
  9889                           bsr	equ	0xFE0
  9890                           indf2	equ	0xFDF
  9891                           postinc2	equ	0xFDE
  9892                           postdec2	equ	0xFDD
  9893                           fsr2h	equ	0xFDA
  9894                           fsr2l	equ	0xFD9
  9895                           status	equ	0xFD8
  9896                           
  9897                           	psect	param0
  9898  0000                     pclatu	equ	0xFFB
  9899                           pclath	equ	0xFFA
  9900                           tblptru	equ	0xFF8
  9901                           tblptrh	equ	0xFF7
  9902                           tblptrl	equ	0xFF6
  9903                           tablat	equ	0xFF5
  9904                           prodh	equ	0xFF4
  9905                           prodl	equ	0xFF3
  9906                           intcon	equ	0xFF2
  9907                           postinc0	equ	0xFEE
  9908                           fsr0h	equ	0xFEA
  9909                           fsr0l	equ	0xFE9
  9910                           wreg	equ	0xFE8
  9911                           indf1	equ	0xFE7
  9912                           postdec1	equ	0xFE5
  9913                           fsr1h	equ	0xFE2
  9914                           fsr1l	equ	0xFE1
  9915                           bsr	equ	0xFE0
  9916                           indf2	equ	0xFDF
  9917                           postinc2	equ	0xFDE
  9918                           postdec2	equ	0xFDD
  9919                           fsr2h	equ	0xFDA
  9920                           fsr2l	equ	0xFD9
  9921                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        41
    BSS         226
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51      98
    BANK0           128     70      78
    BANK1           256     23     185
    BANK2           256     85     139
    BANK3           256      0       0

Pointer List with Targets:

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK1[2]), turn@test(BANK1[2]), moveDist@test(BANK1[2]), move@test(BANK1[2]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@uthread_data(BANK2[10]), main@ic(BANK2[28]), main@uc(BANK2[5]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK1[2]), turn@test(BANK1[2]), moveDist@test(BANK1[2]), move@test(BANK1[2]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@uthread_data(BANK2[10]), main@ic(BANK2[28]), main@uc(BANK2[5]), NULL(NULL[0]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK2[12]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK2[12]), 

    sendUARTarr@data	PTR unsigned char  size(2) Largest target is 2
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), stop@test(BANK1[2]), turn@test(BANK1[2]), 
		 -> moveDist@test(BANK1[2]), move@test(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), NULL(NULL[0]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), NULL(NULL[0]), 

    stop@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    turn@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 12
		 -> main@t0thread_data(BANK2[12]), 

    moveDist@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    move@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 12
		 -> main@t1thread_data(BANK2[12]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), NULL(NULL[0]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), sendUARTbyte@temp(COMRAM[1]), stop@test(BANK1[2]), 
		 -> turn@test(BANK1[2]), moveDist@test(BANK1[2]), move@test(BANK1[2]), main@uc(BANK2[5]), 
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), NULL(NULL[0]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK2[11]), NULL(NULL[0]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK1[2]), turn@test(BANK1[2]), moveDist@test(BANK1[2]), move@test(BANK1[2]), 
		 -> main@uthread_data(BANK2[10]), main@ic(BANK2[28]), main@uc(BANK2[5]), NULL(NULL[0]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_ToMainHigh_recvmsg
    _main->_ToMainLow_recvmsg
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_turn
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _turn->_sendUARTarr
    _timer1_lthread->_sendUARTarr
    _timer0_lthread->_sendUARTarr
    _stop->_sendUARTarr
    _moveDist->_sendUARTarr
    _move->_sendUARTarr
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                87    87      0   38212
                                             21 BANK1      2     2      0
                                              0 BANK2     85    85      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                               _move
                           _moveDist
              _start_i2c_slave_reply
                               _stop
                     _timer0_lthread
                     _timer1_lthread
                               _turn
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                              6 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             67 BANK0      3     0      3
                                              5 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _turn                                                11     7      4    4670
                                             10 BANK1     11     7      4
                        _WriteTimer0
                                _abs
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     170
                                             50 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       8     6      2    4514
                                             10 BANK1      8     6      2
                        _WriteTimer1
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                       8     6      2    4437
                                             10 BANK1      8     6      2
                        _WriteTimer0
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     372
                                             50 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     253
                                             50 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _stop                                                 4     2      2    3956
                                             10 BANK1      4     2      2
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             50 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _moveDist                                             6     2      4    4225
                                             10 BANK1      6     2      4
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     330
                                             50 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _move                                                 4     2      2    3725
                                             10 BANK1      4     2      2
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _sendUARTarr                                          4     2      2    3444
                                              6 BANK1      4     2      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2855
                                             67 BANK0      3     0      3
                                              5 BANK1      1     1      0
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                             60 BANK0      7     1      6
                                              0 BANK1      5     5      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             50 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                             50 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     294
                                             50 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2     356
                                             50 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     500
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     500
                                             50 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             50 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             50 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     331
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             54 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             52 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             50 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             50 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             50 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             69 BANK0      1     1      0
                                              5 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             69 BANK0      1     1      0
                                              5 BANK1      4     0      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                             60 BANK0      9     2      7
                                              0 BANK1      5     5      0
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             50 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             50 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             50 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             50 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    4184
                                             34 COMRAM    17    17      0
              _uart_recv_int_handler
             _uart_trans_int_handler
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               5     5      0    1548
                                             29 COMRAM     5     5      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1276
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1029
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0    1335
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    1301
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     998
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     384
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    3947
                                             36 BANK0     14    14      0
                        _SleepIfOkay
                 _ToMainHigh_sendmsg
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    10    10      0    2213
                                             26 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1602
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     893
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     279
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     132
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     132
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _move
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _moveDist
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _start_i2c_slave_reply
   _stop
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer0_lthread
     _WriteTimer0
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer1_lthread
     _WriteTimer1
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _turn
     _WriteTimer0
     _abs
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
   i1_ToMainLow_sendmsg
     i1_send_msg
       i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _ToMainHigh_sendmsg
     i2_send_msg
       i2_memcpy
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     55      8B       8       54.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100     17      B9       6       72.3%
BITBANK0            80      0       0       3        0.0%
BANK0               80     46      4E       4       60.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      62       1       77.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F4      11        0.0%
DATA                 0      0     1F4      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Apr 22 11:58:02 2015

               main@uthread_data 020F         _MQ_Main_Willing_to_block 005F  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1C9A  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1E76  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l142 077A                              l149 0836  
                            l516 1F16                              l540 1DCC  
                            l517 1F18                              l542 1DE2  
                            l543 1DE4                              l581 170C  
                            l582 170E                              l583 171A  
                            l584 171C                              l577 16F2  
                            l649 1BD4                              l829 1FA6  
           ?_FromMainLow_sendmsg 00C3  __size_of_uart_trans_int_handler 0056  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                            _abs 1B9E                   _FromMainLow_MQ 0100  
                            wreg 000FE8                     __CFG_IESO$ON 000000  
                   ?_in_high_int 00B2                 ??_init_uart_recv 00B4  
                    main@command 020D                             ?_abs 00B2  
                           l1135 18DC                             l4016 0C80  
                           l4108 0B6C                             l4132 137E  
                           l3270 1B38                             l4230 07C4  
                           l4222 0764                             l3264 1B18  
                           l3336 1C4E                             l3328 1C30  
                           l4128 135A                             l4240 0850  
                           l4232 07F6                             l4216 072E  
                           l3514 1D60                             l4082 0D3C  
                           l4066 0E32                             l4058 0DFC  
                           l4242 085A                             l4226 0798  
                           l4260 08E6                             l4228 07AE  
                           l4236 0818                             l4252 0898  
                           l3438 1D44                             l3454 185E  
                           l4078 0CC0                             l4262 08FC  
                           l4238 083C                             l4246 0868  
                           l4254 08B4                             l3472 09BE  
                           l3288 0EF4                             l4248 087E  
                           l3570 18CE                             l3562 1898  
                           l4266 0940                             l3564 18A4  
                           l3566 18AA                             l3904 16F4  
                           l3488 0A78                             l3878 1DCE  
                           l3982 1958                             l3896 16E2  
                           l3994 1998                             l3988 1978  
                           _LATA 000F89                             _LATB 000F8A  
                           u3117 1FA8                             u2925 0C32  
                           i1l52 0088                             u2975 0B1E  
                _FromMainHigh_MQ 0255                    __CFG_FCMEN$ON 000000  
                           abs@a 00B2                             _cmds 0048  
                           _args 0034           ?_block_on_To_msgqueues 0001  
                     i1_recv_msg 107E                             _main 063E  
                           _move 1748                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                             _stop 19A0  
                           _turn 0DA8                      main@msgtype 021F  
                     i1_send_msg 1458                             pclat 000FFA  
                    i2_check_msg 1DE8                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0080  
                           start 00CE                    __CFG_FOSC2$ON 000000  
                     i2_send_msg 0F92        ToMainHigh_recvmsg@msgtype 01A7  
                 send_msg@length 00BE                            ??_abs 00B4  
                    _Delay1KTCYx 1FA2            ??_FromMainLow_recvmsg 001D  
          ??_FromMainLow_sendmsg 00C6                            ?_main 0001  
                          ?_move 01AC     __size_ofi1_ToMainLow_sendmsg 0024  
                          _CMCON 000FB4                            ?_stop 01AC  
                          ?_turn 01AC                            _T0CON 000FD5  
                          _T1CON 000FCD            init_uart_lthread@uptr 00B2  
                          i1l416 1AFA                  __end_of___lwmod 18E6  
                     i1memcpy@d1 0001                            i1l419 1AD2  
                          i2l333 1298                            i2l343 048E  
                          i2l345 0152                            i2l371 041E  
                          i2l363 02FC                            i1l595 1F92  
                          i2l349 0184                            i2l377 049C  
                     i1memcpy@s1 0003                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _PORTA 000F80                            _PORTB 000F81  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
              sendUARTarr@length 01AB                       i2memcpy@d1 0080  
                     i2memcpy@s1 0082                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                sendUARTarr@retval 01AA  
                __end_of_in_main 1D52                            _ready 005C  
     ToMainLow_recvmsg@maxlength 00C5          i2c_configure_slave@addr 00B2  
                          tablat 000FF5                            status 000FD8  
         _uart_trans_int_handler 1AA8                 __end_ofi1_memcpy 1C1E  
               __end_ofi2_memcpy 1B9E                     ?_sendUARTarr 01A8  
                __initialization 19FA       uart_trans_int_handler@data 001E  
                   __end_of_main 095E     uart_trans_int_handler@length 0022  
                   __end_of_move 17BC                     __end_of_stop 19FA  
                   __end_of_turn 0EA4       __size_of_ToMainLow_recvmsg 003E  
     __size_of_ToMainLow_sendmsg 002E            __size_ofi2_in_low_int 003E  
                         ??_main 01B7                           ??_move 00C6  
                         ??_stop 00C6                           ??_turn 01B0  
                send_msg@msgtype 00BF                    __activetblptr 000002  
                send_msg@tlength 01A2       FromMainLow_sendmsg@msgtype 00C3  
           __end_of_handle_start 12E4                           _ADCON1 000FC1  
        ??_uart_recv_int_handler 001B                           i1l3302 1BF0  
                         i1l3308 1C0C                           i1l3360 1490  
                         i1l3408 10C4                           i1l3424 114C  
                         i1l4162 007E                           i1l4156 0074  
                         i1l3802 1AEC                           i1l3780 1618  
                         i2l3312 1B68                       _OpenTimer0 1EF6  
                     _OpenTimer1 1DB6                           i2l3318 1B88  
                         i2l4142 166A                   __CFG_WDTEN$OFF 000000  
                         i2l3540 12CC                           i2l4148 1688  
                         i2l3384 0FE0                           i2l3712 0462  
                         i2l3624 014A                           i2l3538 12B4  
                         i2l3642 01B0                           i2l3618 013C  
                         i2l3740 0616                           i2l3732 0584  
                         i2l3724 04FE                           i2l3660 022E  
                         i2l3644 01DC                           i2l3590 1D08  
                         i2l3582 1CEA                           i2l3750 18EC  
                         i2l3718 04A0                           i2l3662 026E  
                         i2l3654 0216                           i2l3690 03B4  
                         i2l3684 036A                           i2l3686 03AC  
    __end_of_i2c_configure_slave 1EF6                    ??_SleepIfOkay 0084  
             __size_of_ReadUSART 001E                           _OSCCON 000FD3  
                         _SPBRGH 000FB0                      ?i1_recv_msg 000B  
                         _SSPADD 000FC8                           _SSPBUF 000FC9  
 __size_of_start_i2c_slave_reply 0104                      ?i1_send_msg 000B  
  __end_of_start_i2c_slave_reply 0DA8               timer0_lthread@temp 01B2  
             timer0_lthread@tptr 01AC          FromMainLow_recvmsg@data 001B  
                   i2_in_low_int 1CD8                      ?i2_send_msg 008A  
                 __CFG_XINST$OFF 000000               __size_of_OpenUSART 0082  
                _i2c_int_handler 00D2                 OpenTimer0@config 00B2  
                         _ic_ptr 00CC                        ??___lwmod 00B6  
                         _curCmd 005D                    main@msgbuffer 0200  
               __end_of_init_i2c 1822                 OpenTimer1@config 00B2  
                         _memcpy 1AFE                           clear_0 1A00  
                         clear_1 1A0C                           _uc_ptr 0061  
                         main@ic 0239                           main@uc 021A  
               __end_of_recv_msg 0A7C      start_i2c_slave_reply@length 00B6  
               __end_of_moveDist 1458                        ??_in_main 00B8  
               __end_of_send_msg 0F92                     __pdataCOMRAM 0034  
        i2c_int_handler@i2c_data 00A0                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00B4         ToMainLow_recvmsg@msgtype 01A7  
           __size_of_in_high_int 0010          FromMainLow_sendmsg@data 00C4  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 2008  
                     __accesstop 0080          __end_of__initialization 1A48  
     __end_of_ToMainHigh_recvmsg 1CD8       __end_of_ToMainHigh_sendmsg 1EA4  
             ?_init_uart_lthread 00B2      __end_of_init_timer0_lthread 121A  
    __end_of_init_timer1_lthread 15A0              __end_of_SleepIfOkay 1944  
                 __pcstackCOMRAM 0001           __size_ofi2_in_high_int 0010  
            ??_init_uart_lthread 00B4               __size_of_check_msg 0032  
              __end_of_ReadUSART 1FA2              __size_ofi1_recv_msg 00D2  
            __size_ofi1_send_msg 00AA                        ?i1_memcpy 0001  
  __size_of_InterruptHandlerHigh 16BE      __end_of_InterruptHandlerLow 00CE  
                      ?i2_memcpy 0080                    _ToMainHigh_MQ 0136  
               _enter_sleep_mode 2002              __size_ofi2_send_msg 00EC  
                  ReadUSART@data 0001                __end_of_OpenUSART 1748  
                  check_msg@qptr 00B2        __end_of_init_uart_lthread 200A  
        ??_block_on_To_msgqueues 00B8             __size_of_init_queues 0056  
                     __pbssBANK0 00C6                       __pbssBANK1 0100  
                     __pbssBANK2 0255                      ?_OpenTimer0 0001  
                    ?_OpenTimer1 0001   uart_trans_int_handler@curIndex 0021  
                     __pnvCOMRAM 0061              i1_ToMainLow_sendmsg 1F42  
        __end_of_i2c_int_handler 063E                     ?i2_check_msg 0080  
             timer1_lthread@temp 01B2               timer1_lthread@tptr 01AC  
           __size_of_sendUARTarr 0032                recv_msg@maxlength 00BE  
                recv_msg@msgtype 00BF                  recv_msg@tlength 01A3  
          __size_of_handle_start 00CA                     ?_Delay1KTCYx 0001  
               WriteTimer0@timer 00B4                          ?_memcpy 00B2  
               WriteTimer1@timer 00B4                    ??_WriteTimer0 00B4  
                  ??_WriteTimer1 00B4          __size_of_timer0_lthread 0114  
           ?i1_ToMainLow_sendmsg 0017          __size_of_timer1_lthread 0114  
            timer0_lthread@F5147 00C8                       ??i1_memcpy 0007  
                     ??i2_memcpy 0086                 i1send_msg@length 000D  
                  i2_in_high_int 1FEA                          _SSPCON1 000FC6  
                        _SSPCON2 000FC5                          _SSPSTAT 000FC7  
        ?_uart_trans_int_handler 0001                __end_of_check_msg 1DB6  
                      ?_init_i2c 00B2                      _SleepIfOkay 18E6  
                      ?_recv_msg 00BC                       _in_low_int 1C1E  
                   _handle_start 121A                        ?_moveDist 01AC  
                        __Hparam 0000                        ?_send_msg 00BC  
                        __Lparam 0000      __end_of_FromMainLow_recvmsg 1F42  
    __end_of_FromMainLow_sendmsg 1E48                 init_uart_recv@uc 00B2  
                        ___lwmod 1886                  __CFG_STVREN$OFF 000000  
                        __pcinit 19FA                  __size_of_memcpy 0050  
                     _init_queue 1822                          __ramtop 0400  
          ??i1_ToMainLow_sendmsg 001A              __size_of_OpenTimer0 0026  
            __size_of_OpenTimer1 0032                          __ptext0 063E  
                        __ptext1 12E4                          __ptext2 1E1A  
                        __ptext3 0DA8                          __ptext4 1B9E  
                        __ptext5 0A7C                          __ptext6 0B90  
                        __ptext7 1886                          __ptext8 1FB6  
                        __ptext9 19A0                uart_lthread@index 01B1  
                      _T0CONbits 000FD5                          _in_main 1D16  
                      _T1CONbits 000FCD                     __size_of_abs 0040  
            __end_of_WriteTimer0 1FC8              __end_of_WriteTimer1 1FDA  
                 ?i2_in_high_int 0080   __end_of_uart_trans_int_handler 1AFE  
     __size_of_init_uart_lthread 0002                   __pintcode_body 1634  
           end_of_initialization 1A48   __size_of_uart_recv_int_handler 0094  
                        memcpy@d 00B8                          memcpy@n 00B6  
                        memcpy@s 00BA    __end_of_uart_recv_int_handler 1634  
                     ??_init_i2c 00B4                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 009E                    __Lmediumconst 0000  
                        int_func 1634                     ??i1_send_msg 0011  
                  ?_uart_lthread 01A8          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                       ??_recv_msg 00C3  
                     ??_moveDist 00C6                     ??i2_send_msg 0090  
                     ??_send_msg 00C2                        _RCSTAbits 000FAB  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc2 000FDE  
      ToMainHigh_sendmsg@msgtype 0096               __end_ofi1_recv_msg 1150  
             __end_ofi1_send_msg 1502                        _TRISCbits 000F94  
             __end_ofi2_send_msg 107E                   ??_uart_lthread 00C6  
                      _TXSTAbits 000FAC                       main@length 0220  
                    ?_in_low_int 00B4                       main@valuec 020E  
          _start_i2c_slave_reply 0CA4     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0032         __end_of_enter_sleep_mode 2008  
             _ToMainHigh_recvmsg 1C9A                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1E76                        i1memcpy@n 0005  
                      i1memcpy@s 0009                    __pidataCOMRAM 1EA4  
                 _timer0_lthread 0B90                      ?_init_queue 00B2  
                      i2memcpy@d 0086                      _WriteTimer0 1FB6  
                    _WriteTimer1 1FC8                        i2memcpy@n 0084  
                      i2memcpy@s 0088                   _timer1_lthread 0A7C  
                 __end_of_memcpy 1B4E                _enable_interrupts 1FFA  
           __size_of_Delay1KTCYx 0014              ?_ToMainHigh_recvmsg 01A7  
                ??i2_in_high_int 0082         i2c_int_handler@data_read 00A3  
            ?_ToMainHigh_sendmsg 0096          i1ToMainLow_sendmsg@data 0018  
             ?_enable_interrupts 0001              start_initialization 19FA  
                  ??_in_high_int 00B4                        _ReadUSART 1F84  
                    __end_of_abs 1BDE                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0050        FromMainLow_sendmsg@length 01A7  
            ??_enable_interrupts 00B2                     ??_OpenTimer0 00B2  
                   ??_OpenTimer1 00B2   __size_of_block_on_To_msgqueues 005C  
  __end_of_block_on_To_msgqueues 19A0                        _OpenUSART 16C6  
   __end_of_InterruptHandlerHigh 16C6                       init_i2c@ic 00B2  
           ??_ToMainHigh_recvmsg 00C5             ??_ToMainHigh_sendmsg 0099  
         __end_of_timer0_lthread 0CA4         i2c_int_handler@error_buf 009B  
         __end_of_timer1_lthread 0B90        __end_of_enable_interrupts 2002  
                       ??_memcpy 00B8     __size_of_init_timer0_lthread 00CA  
   __size_of_init_timer1_lthread 009E               __end_of_OpenTimer0 1F1C  
             __end_of_OpenTimer1 1DE8         i2c_int_handler@msg_ready 00A2  
            timer1_lthread@F5087 00CA                      __pbssCOMRAM 005D  
                     ?_ReadUSART 0001                    ??_init_queues 00B5  
                  __pcstackBANK0 0080                    __pcstackBANK1 01A2  
                  __pcstackBANK2 0200              __size_of_in_low_int 003E  
       start_i2c_slave_reply@msg 00B2              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 00B2         ToMainLow_sendmsg@msgtype 00C3  
   __size_of_InterruptHandlerLow 00B6              __end_of_in_high_int 1FEA  
                     ?_OpenUSART 00B2                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 01A9                     _ToMainLow_MQ 016C  
            __size_of_init_queue 0064                   _init_uart_recv 1F66  
                      _check_msg 1D84                        __pnvBANK0 00CC  
         ?_start_i2c_slave_reply 00B2                __size_of_init_i2c 0066  
                  ??_sendUARTarr 00C6                     recv_msg@data 00C1  
                   recv_msg@qmsg 01A5                     recv_msg@slot 01A2  
                   recv_msg@qptr 00BC                __size_of_recv_msg 011E  
                      __pintcode 0008                __size_of_moveDist 00B4  
              __size_of_send_msg 00EE                  ?_timer0_lthread 01AC  
                       ?___lwmod 00B2                  ?_timer1_lthread 01AC  
                    __pintcodelo 0018           ToMainHigh_recvmsg@data 01A9  
           __end_of_uart_lthread 13A4       i2c_int_handler@msg_to_send 00A1  
                       ?_in_main 00B6                WriteTimer0@timer0 00B2  
              WriteTimer1@timer1 00B2       i1ToMainLow_sendmsg@msgtype 0017  
            uart_lthread@msgtype 01AA          init_timer0_lthread@tptr 00B2  
          ToMainLow_sendmsg@data 00C4              i1recv_msg@maxlength 000D  
               uart_lthread@uptr 01A8           __end_of_init_uart_recv 1F84  
            __end_of_init_queues 1AA8                  i2check_msg@qptr 0080  
                     ?_check_msg 00B2                         _IPR1bits 000F9F  
                       _PIE1bits 000F9D                     moveDist@dist 01AE  
                  ?i2_in_low_int 0082                     moveDist@test 01B0  
                   moveDist@tptr 01AC                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0097      __end_ofi1_ToMainLow_sendmsg 1F66  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E              __end_of_sendUARTarr 1D84  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0026     __size_of_FromMainLow_sendmsg 002E  
                       i1_memcpy 1BDE             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 1B4E  
                    _in_high_int 1FDA                     send_msg@data 00C0  
            _i2c_configure_slave 1ECE                     send_msg@qmsg 01A5  
                   send_msg@slot 01A4                     send_msg@qptr 00BC  
                sendUARTarr@data 01A8            uart_lthread@msgbuffer 01AE  
                      copy_data0 1A3C                  ?_init_uart_recv 00B2  
                    ??_OpenUSART 00B4                  OpenUSART@config 00B7  
                 ??i2_in_low_int 0084                         __Hparam0 0000  
          _uart_recv_int_handler 15A0                     ??_in_low_int 00B6  
                       __Lparam0 0000             ?_i2c_configure_slave 0001  
              ?_enter_sleep_mode 0001         __size_of_i2c_int_handler 056C  
             ??_enter_sleep_mode 0080                 __size_of___lwmod 0060  
                   ??_init_queue 00B4                     ?_WriteTimer0 00B2  
                   ?_WriteTimer1 00B2          ToMainLow_sendmsg@length 01A7  
              main@t0thread_data 0221            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 003C                i2send_msg@msgtype 008D  
    ToMainHigh_recvmsg@maxlength 00C5                i2send_msg@tlength 0091  
        init_timer1_lthread@tptr 00B2                      _init_queues 1A52  
             __end_of_in_low_int 1C5C                         __ptext10 0CA4  
                       __ptext11 13A4                         __ptext20 1150  
                       __ptext12 1FC8                         __ptext21 1A52  
                       __ptext13 1748                         __ptext30 1D84  
                       __ptext22 1822                         __ptext14 1D52  
                       __ptext31 1FA2                         __ptext23 17BC  
                       __ptext15 1E48                         __ptext40 1AA8  
                       __ptext32 1C5C                         __ptext24 1ECE  
                       __ptext16 0EA4                         __ptext41 1F1C  
                       __ptext33 1C9A                         __ptext25 1FFA  
                       __ptext17 1F66                         __ptext50 121A  
                       __ptext42 107E                         __ptext34 095E  
                       __ptext26 1944                         __ptext18 2008  
                       __ptext51 1E76                         __ptext43 15A0  
                       __ptext35 1AFE                         __ptext27 1D16  
                       __ptext19 1502                         __ptext52 0F92  
                       __ptext44 1F42                         __ptext36 16C6  
                       __ptext28 1C1E                         __ptext53 1B4E  
                       __ptext45 1458                         __ptext37 1DB6  
                       __ptext29 1FDA                         __ptext54 18E6  
                       __ptext46 1BDE                         __ptext38 1EF6  
                       __ptext55 1CD8                         __ptext47 1F84  
                       __ptext56 1FEA                         __ptext57 1DE8  
                       __ptext49 00D2                         __ptext58 2002  
                 i1send_msg@data 000F        i1ToMainLow_sendmsg@length 001A  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 01AC  
            _init_timer0_lthread 1150               uart_lthread@status 01B0  
                       _init_i2c 17BC              _init_timer1_lthread 1502  
                  __size_of_main 0320                    __size_of_move 0074  
                  __size_of_stop 005A                    ??i2_check_msg 0082  
                  __size_of_turn 00FC                main@t1thread_data 022D  
                    ??_check_msg 00B4               __end_of_init_queue 1886  
           __size_of_SleepIfOkay 005E                         _recv_msg 095E  
                       _moveDist 13A4            ??_i2c_configure_slave 00B2  
                       _send_msg 0EA4                      _sendUARTarr 1D52  
                 init_queue@qptr 00B2                         _turn$995 01B1  
                       _turn$996 01B3            __size_of_uart_lthread 00C0  
  uart_trans_int_handler@msgtype 0020                    ??_Delay1KTCYx 00B2  
                       main@baud 020B             ?_init_timer0_lthread 00B2  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 00B2  
                      stop@F5239 00C6         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00B2                         memcpy@d1 00B2  
                       memcpy@s1 00B4            __end_ofi2_in_high_int 1FFA  
   i2c_int_handler@overrun_error 009F                 i2send_msg@length 008C  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00B4  
               ___lwmod@dividend 00B2           ?_uart_recv_int_handler 0001  
                       move@test 01AE                         move@tptr 01AC  
                      turn@angle 01AE                     _uart_lthread 12E4  
                 main@UARTConfig 020C            _block_on_To_msgqueues 1944  
                  ?_handle_start 0001                 ??_timer0_lthread 01AE  
    __size_of_ToMainHigh_recvmsg 003E      __size_of_ToMainHigh_sendmsg 002E  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 01AE  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 0099              __end_ofi2_check_msg 1E1A  
          ??_init_timer0_lthread 00B4            ??_init_timer1_lthread 00B4  
         ??_InterruptHandlerHigh 00A4                _ToMainLow_recvmsg 1C5C  
                       stop@test 01AE                _ToMainLow_sendmsg 1E48  
                       stop@tptr 01AC               main@last_reg_recvd 0219  
                ___lwmod@divisor 00B4             __end_ofi2_in_low_int 1D16  
             ?_ToMainLow_recvmsg 01A7              __end_of_Delay1KTCYx 1FB6  
              ??_i2c_int_handler 009A                  ___lwmod@counter 00B6  
             ?_ToMainLow_sendmsg 00C3                         turn@test 01B5  
                       turn@tptr 01AC                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 008E  
          ??_InterruptHandlerLow 0023              ??_ToMainLow_recvmsg 00C5  
                 i2send_msg@qmsg 0094                   i2send_msg@slot 0093  
                 i2send_msg@qptr 008A              ??_ToMainLow_sendmsg 00C6  
            _FromMainLow_recvmsg 1F1C                   ??_handle_start 0080  
            _FromMainLow_sendmsg 1E1A                     _USART_Status 0060  
