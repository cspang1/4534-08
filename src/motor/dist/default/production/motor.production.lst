

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Mar 24 10:48:47 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    73  0000                     _ADCON1	set	4033
    74  0000                     _CMCON	set	4020
    75  0000                     _INTCONbits	set	4082
    76  0000                     _IPR1bits	set	3999
    77  0000                     _LATA	set	3977
    78  0000                     _LATB	set	3978
    79  0000                     _OSCCON	set	4051
    80  0000                     _OSCCONbits	set	4051
    81  0000                     _OSCTUNEbits	set	3995
    82  0000                     _PIE1bits	set	3997
    83  0000                     _PIR1bits	set	3998
    84  0000                     _PORTA	set	3968
    85  0000                     _PORTB	set	3969
    86  0000                     _RCONbits	set	4048
    87  0000                     _RCREG	set	4014
    88  0000                     _RCSTA	set	4011
    89  0000                     _RCSTAbits	set	4011
    90  0000                     _SPBRG	set	4015
    91  0000                     _SPBRGH	set	4016
    92  0000                     _SSPADD	set	4040
    93  0000                     _SSPBUF	set	4041
    94  0000                     _SSPCON1	set	4038
    95  0000                     _SSPCON1bits	set	4038
    96  0000                     _SSPCON2	set	4037
    97  0000                     _SSPCON2bits	set	4037
    98  0000                     _SSPSTAT	set	4039
    99  0000                     _SSPSTATbits	set	4039
   100  0000                     _T0CON	set	4053
   101  0000                     _T0CONbits	set	4053
   102  0000                     _T1CON	set	4045
   103  0000                     _T1CONbits	set	4045
   104  0000                     _TMR0H	set	4055
   105  0000                     _TMR0L	set	4054
   106  0000                     _TMR1H	set	4047
   107  0000                     _TMR1L	set	4046
   108  0000                     _TRISA	set	3986
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISCbits	set	3988
   111  0000                     _TXREG	set	4013
   112  0000                     _TXSTA	set	4012
   113  0000                     _TXSTAbits	set	4012
   114                           
   115                           	psect	nvCOMRAM
   116  000049                     __pnvCOMRAM:
   117                           	opt stack 0
   118  000049                     _uc_ptr:
   119                           	opt stack 0
   120  000049                     	ds	2
   121                           
   122                           	psect	nvBANK0
   123  0000D1                     __pnvBANK0:
   124                           	opt stack 0
   125  0000D1                     _ic_ptr:
   126                           	opt stack 0
   127  0000D1                     	ds	2
   128                           
   129                           ; #config settings
   130  0000                     
   131                           	psect	cinit
   132  001D86                     __pcinit:
   133                           	opt stack 0
   134  001D86                     start_initialization:
   135                           	opt stack 0
   136  001D86                     __initialization:
   137                           	opt stack 0
   138                           
   139                           ; Clear objects allocated to BANK2 (54 bytes)
   140  001D86  EE02  F000         	lfsr	0,__pbssBANK2
   141  001D8A  0E36               	movlw	54
   142  001D8C                     clear_0:
   143  001D8C  6AEE               	clrf	postinc0,c
   144  001D8E  06E8               	decf	wreg,f,c
   145  001D90  E1FD               	bnz	clear_0
   146                           
   147                           ; Clear objects allocated to BANK1 (162 bytes)
   148  001D92  EE01  F000         	lfsr	0,__pbssBANK1
   149  001D96  0EA2               	movlw	162
   150  001D98                     clear_1:
   151  001D98  6AEE               	clrf	postinc0,c
   152  001D9A  06E8               	decf	wreg,f,c
   153  001D9C  E1FD               	bnz	clear_1
   154                           
   155                           ; Clear objects allocated to BANK0 (4 bytes)
   156  001D9E  0100               	movlb	0
   157  001DA0  6BD0               	clrf	(__pbssBANK0+3)& (0+255),b
   158  001DA2  6BCF               	clrf	(__pbssBANK0+2)& (0+255),b
   159  001DA4  6BCE               	clrf	(__pbssBANK0+1)& (0+255),b
   160  001DA6  6BCD               	clrf	__pbssBANK0& (0+255),b
   161                           
   162                           ; Clear objects allocated to COMRAM (4 bytes)
   163  001DA8  6A48               	clrf	(__pbssCOMRAM+3)& (0+255),c
   164  001DAA  6A47               	clrf	(__pbssCOMRAM+2)& (0+255),c
   165  001DAC  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
   166  001DAE  6A45               	clrf	__pbssCOMRAM& (0+255),c
   167  001DB0                     end_of_initialization:
   168                           	opt stack 0
   169  001DB0                     __end_of__initialization:
   170                           	opt stack 0
   171  001DB0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   172  001DB2  6EF8               	movwf	tblptru,c
   173  001DB4  0100               	movlb	0
   174  001DB6  EF8A  F003         	goto	_main	;jump to C main() function
   175                           tblptru	equ	0xFF8
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           
   179                           	psect	bssCOMRAM
   180  000045                     __pbssCOMRAM:
   181                           	opt stack 0
   182  000045                     stop@F5114:
   183                           	opt stack 0
   184  000045                     	ds	2
   185  000047                     _MQ_Main_Willing_to_block:
   186                           	opt stack 0
   187  000047                     	ds	1
   188  000048                     _USART_Status:
   189                           	opt stack 0
   190  000048                     	ds	1
   191                           tblptru	equ	0xFF8
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           
   195                           	psect	bssBANK0
   196  0000CD                     __pbssBANK0:
   197                           	opt stack 0
   198  0000CD                     timer0_lthread@F5144:
   199                           	opt stack 0
   200  0000CD                     	ds	2
   201  0000CF                     timer1_lthread@F5145:
   202                           	opt stack 0
   203  0000CF                     	ds	2
   204                           tblptru	equ	0xFF8
   205                           postinc0	equ	0xFEE
   206                           wreg	equ	0xFE8
   207                           
   208                           	psect	bssBANK1
   209  000100                     __pbssBANK1:
   210                           	opt stack 0
   211  000100                     _FromMainLow_MQ:
   212                           	opt stack 0
   213  000100                     	ds	54
   214  000136                     _ToMainHigh_MQ:
   215                           	opt stack 0
   216  000136                     	ds	54
   217  00016C                     _ToMainLow_MQ:
   218                           	opt stack 0
   219  00016C                     	ds	54
   220                           tblptru	equ	0xFF8
   221                           postinc0	equ	0xFEE
   222                           wreg	equ	0xFE8
   223                           
   224                           	psect	bssBANK2
   225  000200                     __pbssBANK2:
   226                           	opt stack 0
   227  000200                     _FromMainHigh_MQ:
   228                           	opt stack 0
   229  000200                     	ds	54
   230                           tblptru	equ	0xFF8
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	cstackBANK1
   235  0001A2                     __pcstackBANK1:
   236                           	opt stack 0
   237  0001A2                     main@msgbuffer:
   238                           	opt stack 0
   239                           
   240                           ; 11 bytes @ 0x0
   241  0001A2                     	ds	11
   242  0001AD                     main@baud:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0xB
   246  0001AD                     	ds	1
   247  0001AE                     main@UARTConfig:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0xC
   251  0001AE                     	ds	1
   252  0001AF                     main@last_reg_recvd:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0xD
   256  0001AF                     	ds	1
   257  0001B0                     main@uthread_data:
   258                           	opt stack 0
   259                           
   260                           ; 10 bytes @ 0xE
   261  0001B0                     	ds	10
   262  0001BA                     main@ctrl:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x18
   266  0001BA                     	ds	2
   267  0001BC                     main@uc:
   268                           	opt stack 0
   269                           
   270                           ; 5 bytes @ 0x1A
   271  0001BC                     	ds	5
   272  0001C1                     main@t0thread_data:
   273                           	opt stack 0
   274                           
   275                           ; 9 bytes @ 0x1F
   276  0001C1                     	ds	9
   277  0001CA                     main@msgtype:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x28
   281  0001CA                     	ds	1
   282  0001CB                     main@length:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x29
   286  0001CB                     	ds	1
   287  0001CC                     main@t1thread_data:
   288                           	opt stack 0
   289                           
   290                           ; 11 bytes @ 0x2A
   291  0001CC                     	ds	11
   292  0001D7                     main@ic:
   293                           	opt stack 0
   294                           
   295                           ; 28 bytes @ 0x35
   296  0001D7                     	ds	28
   297                           tblptru	equ	0xFF8
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           
   301                           	psect	cstackBANK0
   302  000080                     __pcstackBANK0:
   303                           	opt stack 0
   304  000080                     i2send_msg@qptr:
   305                           	opt stack 0
   306                           
   307                           ; 2 bytes @ 0x0
   308  000080                     	ds	2
   309  000082                     i2send_msg@length:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x2
   313  000082                     	ds	1
   314  000083                     i2send_msg@msgtype:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x3
   318  000083                     	ds	1
   319  000084                     i2send_msg@data:
   320                           	opt stack 0
   321                           
   322                           ; 2 bytes @ 0x4
   323  000084                     	ds	2
   324  000086                     i2send_msg@tlength:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x6
   328  000086                     	ds	2
   329  000088                     i2send_msg@slot:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x8
   333  000088                     	ds	1
   334  000089                     i2send_msg@qmsg:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x9
   338  000089                     	ds	2
   339  00008B                     ??_i2c_int_handler:
   340                           
   341                           ; 0 bytes @ 0xB
   342  00008B                     	ds	2
   343  00008D                     i2c_int_handler@error_buf:
   344                           	opt stack 0
   345                           
   346                           ; 3 bytes @ 0xD
   347  00008D                     	ds	3
   348  000090                     i2c_int_handler@data_written:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x10
   352  000090                     	ds	1
   353  000091                     i2c_int_handler@overrun_error:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x11
   357  000091                     	ds	1
   358  000092                     i2c_int_handler@i2c_data:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x12
   362  000092                     	ds	1
   363  000093                     i2c_int_handler@msg_to_send:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x13
   367  000093                     	ds	1
   368  000094                     i2c_int_handler@msg_ready:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x14
   372  000094                     	ds	1
   373  000095                     i2c_int_handler@data_read:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x15
   377  000095                     	ds	1
   378  000096                     ??_InterruptHandlerHigh:
   379                           
   380                           ; 0 bytes @ 0x16
   381  000096                     	ds	15
   382  0000A5                     ?_in_high_int:
   383                           	opt stack 0
   384  0000A5                     ?___lwmod:
   385                           	opt stack 0
   386  0000A5                     i2c_configure_slave@addr:
   387                           	opt stack 0
   388  0000A5                     OpenTimer0@config:
   389                           	opt stack 0
   390  0000A5                     OpenTimer1@config:
   391                           	opt stack 0
   392  0000A5                     Delay1KTCYx@unit:
   393                           	opt stack 0
   394  0000A5                     init_queue@qptr:
   395                           	opt stack 0
   396  0000A5                     check_msg@qptr:
   397                           	opt stack 0
   398  0000A5                     start_i2c_slave_reply@msg:
   399                           	opt stack 0
   400  0000A5                     init_i2c@ic:
   401                           	opt stack 0
   402  0000A5                     init_uart_recv@uc:
   403                           	opt stack 0
   404  0000A5                     init_timer0_lthread@tptr:
   405                           	opt stack 0
   406  0000A5                     init_timer1_lthread@tptr:
   407                           	opt stack 0
   408  0000A5                     init_uart_lthread@uptr:
   409                           	opt stack 0
   410  0000A5                     WriteTimer0@timer0:
   411                           	opt stack 0
   412  0000A5                     WriteTimer1@timer1:
   413                           	opt stack 0
   414  0000A5                     OpenUSART@spbrg:
   415                           	opt stack 0
   416  0000A5                     ___lwmod@dividend:
   417                           	opt stack 0
   418  0000A5                     memcpy@d1:
   419                           	opt stack 0
   420                           
   421                           ; 2 bytes @ 0x25
   422  0000A5                     	ds	2
   423  0000A7                     ??_OpenUSART:
   424  0000A7                     ??_start_i2c_slave_reply:
   425  0000A7                     ??_init_queue:
   426  0000A7                     ??_check_msg:
   427  0000A7                     ?_in_low_int:
   428                           	opt stack 0
   429  0000A7                     WriteTimer0@timer:
   430                           	opt stack 0
   431  0000A7                     WriteTimer1@timer:
   432                           	opt stack 0
   433  0000A7                     ___lwmod@divisor:
   434                           	opt stack 0
   435  0000A7                     memcpy@s1:
   436                           	opt stack 0
   437                           
   438                           ; 2 bytes @ 0x27
   439  0000A7                     	ds	1
   440  0000A8                     init_queue@i:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x28
   444  0000A8                     	ds	1
   445  0000A9                     ??_init_queues:
   446  0000A9                     ??___lwmod:
   447  0000A9                     ?_in_main:
   448                           	opt stack 0
   449  0000A9                     start_i2c_slave_reply@length:
   450                           	opt stack 0
   451  0000A9                     memcpy@n:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x29
   455  0000A9                     	ds	1
   456  0000AA                     OpenUSART@config:
   457                           	opt stack 0
   458  0000AA                     ___lwmod@counter:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x2A
   462  0000AA                     	ds	1
   463  0000AB                     ??_block_on_To_msgqueues:
   464  0000AB                     memcpy@d:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x2B
   468  0000AB                     	ds	2
   469  0000AD                     memcpy@s:
   470                           	opt stack 0
   471                           
   472                           ; 2 bytes @ 0x2D
   473  0000AD                     	ds	2
   474  0000AF                     send_msg@qptr:
   475                           	opt stack 0
   476  0000AF                     recv_msg@qptr:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x2F
   480  0000AF                     	ds	2
   481  0000B1                     send_msg@length:
   482                           	opt stack 0
   483  0000B1                     recv_msg@maxlength:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x31
   487  0000B1                     	ds	1
   488  0000B2                     send_msg@msgtype:
   489                           	opt stack 0
   490  0000B2                     recv_msg@msgtype:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x32
   494  0000B2                     	ds	1
   495  0000B3                     send_msg@data:
   496                           	opt stack 0
   497                           
   498                           ; 2 bytes @ 0x33
   499  0000B3                     	ds	1
   500  0000B4                     recv_msg@data:
   501                           	opt stack 0
   502                           
   503                           ; 2 bytes @ 0x34
   504  0000B4                     	ds	1
   505  0000B5                     ??_send_msg:
   506                           
   507                           ; 0 bytes @ 0x35
   508  0000B5                     	ds	1
   509  0000B6                     ??_recv_msg:
   510  0000B6                     send_msg@tlength:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x36
   514  0000B6                     	ds	2
   515  0000B8                     send_msg@slot:
   516                           	opt stack 0
   517  0000B8                     recv_msg@slot:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x38
   521  0000B8                     	ds	1
   522  0000B9                     send_msg@qmsg:
   523                           	opt stack 0
   524  0000B9                     recv_msg@tlength:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x39
   528  0000B9                     	ds	2
   529  0000BB                     ToMainLow_sendmsg@msgtype:
   530                           	opt stack 0
   531  0000BB                     FromMainLow_sendmsg@msgtype:
   532                           	opt stack 0
   533  0000BB                     recv_msg@qmsg:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x3B
   537  0000BB                     	ds	1
   538  0000BC                     ToMainLow_sendmsg@data:
   539                           	opt stack 0
   540  0000BC                     FromMainLow_sendmsg@data:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x3C
   544  0000BC                     	ds	1
   545  0000BD                     ToMainLow_recvmsg@msgtype:
   546                           	opt stack 0
   547  0000BD                     ToMainHigh_recvmsg@msgtype:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x3D
   551  0000BD                     	ds	1
   552  0000BE                     ToMainLow_sendmsg@length:
   553                           	opt stack 0
   554  0000BE                     FromMainLow_sendmsg@length:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x3E
   558  0000BE                     	ds	1
   559  0000BF                     ToMainLow_recvmsg@data:
   560                           	opt stack 0
   561  0000BF                     ToMainHigh_recvmsg@data:
   562                           	opt stack 0
   563  0000BF                     sendUARTarr@data:
   564                           	opt stack 0
   565  0000BF                     uart_lthread@uptr:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x3F
   569  0000BF                     	ds	2
   570  0000C1                     ??_sendUARTarr:
   571  0000C1                     ToMainLow_recvmsg@maxlength:
   572                           	opt stack 0
   573  0000C1                     ToMainHigh_recvmsg@maxlength:
   574                           	opt stack 0
   575  0000C1                     uart_lthread@msgtype:
   576                           	opt stack 0
   577                           
   578                           ; 2 bytes @ 0x41
   579  0000C1                     	ds	1
   580  0000C2                     sendUARTarr@retval:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x42
   584  0000C2                     	ds	1
   585  0000C3                     sendUARTarr@length:
   586                           	opt stack 0
   587  0000C3                     uart_lthread@length:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x43
   591  0000C3                     	ds	1
   592  0000C4                     moveDist@tptr:
   593                           	opt stack 0
   594  0000C4                     timer0_lthread@tptr:
   595                           	opt stack 0
   596  0000C4                     timer1_lthread@tptr:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x44
   600  0000C4                     	ds	1
   601  0000C5                     uart_lthread@msgbuffer:
   602                           	opt stack 0
   603                           
   604                           ; 2 bytes @ 0x45
   605  0000C5                     	ds	1
   606  0000C6                     ??_timer0_lthread:
   607  0000C6                     ??_timer1_lthread:
   608  0000C6                     moveDist@dist:
   609                           	opt stack 0
   610                           
   611                           ; 2 bytes @ 0x46
   612  0000C6                     	ds	1
   613  0000C7                     uart_lthread@status:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x47
   617  0000C7                     	ds	1
   618  0000C8                     moveDist@test:
   619                           	opt stack 0
   620  0000C8                     uart_lthread@index:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x48
   624  0000C8                     	ds	2
   625  0000CA                     timer0_lthread@temp:
   626                           	opt stack 0
   627  0000CA                     timer1_lthread@temp:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x4A
   631  0000CA                     	ds	2
   632  0000CC                     ??_main:
   633                           
   634                           ; 0 bytes @ 0x4C
   635  0000CC                     	ds	1
   636                           tblptru	equ	0xFF8
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           
   640                           	psect	cstackCOMRAM
   641  000001                     __pcstackCOMRAM:
   642                           	opt stack 0
   643  000001                     ReadUSART@data:
   644                           	opt stack 0
   645  000001                     i1memcpy@d1:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x0
   649  000001                     	ds	2
   650  000003                     i1memcpy@s1:
   651                           	opt stack 0
   652                           
   653                           ; 2 bytes @ 0x2
   654  000003                     	ds	2
   655  000005                     i1memcpy@n:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x4
   659  000005                     	ds	2
   660  000007                     i1memcpy@d:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x6
   664  000007                     	ds	2
   665  000009                     i1memcpy@s:
   666                           	opt stack 0
   667                           
   668                           ; 2 bytes @ 0x8
   669  000009                     	ds	2
   670  00000B                     i1send_msg@qptr:
   671                           	opt stack 0
   672  00000B                     i1recv_msg@qptr:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0xA
   676  00000B                     	ds	2
   677  00000D                     i1send_msg@length:
   678                           	opt stack 0
   679  00000D                     i1recv_msg@maxlength:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0xC
   683  00000D                     	ds	1
   684  00000E                     i1send_msg@msgtype:
   685                           	opt stack 0
   686  00000E                     i1recv_msg@msgtype:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0xD
   690  00000E                     	ds	1
   691  00000F                     i1send_msg@data:
   692                           	opt stack 0
   693                           
   694                           ; 2 bytes @ 0xE
   695  00000F                     	ds	1
   696  000010                     i1recv_msg@data:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0xF
   700  000010                     	ds	1
   701  000011                     ??i1_send_msg:
   702                           
   703                           ; 0 bytes @ 0x10
   704  000011                     	ds	1
   705  000012                     ??i1_recv_msg:
   706  000012                     i1send_msg@tlength:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x11
   710  000012                     	ds	2
   711  000014                     i1send_msg@slot:
   712                           	opt stack 0
   713  000014                     i1recv_msg@slot:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x13
   717  000014                     	ds	1
   718  000015                     i1send_msg@qmsg:
   719                           	opt stack 0
   720  000015                     i1recv_msg@tlength:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x14
   724  000015                     	ds	2
   725  000017                     i1ToMainLow_sendmsg@msgtype:
   726                           	opt stack 0
   727  000017                     i1recv_msg@qmsg:
   728                           	opt stack 0
   729                           
   730                           ; 2 bytes @ 0x16
   731  000017                     	ds	1
   732  000018                     i1ToMainLow_sendmsg@data:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x17
   736  000018                     	ds	1
   737  000019                     FromMainLow_recvmsg@msgtype:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x18
   741  000019                     	ds	1
   742  00001A                     i1ToMainLow_sendmsg@length:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x19
   746  00001A                     	ds	1
   747  00001B                     ??_uart_recv_int_handler:
   748  00001B                     FromMainLow_recvmsg@data:
   749                           	opt stack 0
   750                           
   751                           ; 2 bytes @ 0x1A
   752  00001B                     	ds	2
   753  00001D                     FromMainLow_recvmsg@maxlength:
   754                           	opt stack 0
   755                           
   756                           ; 1 bytes @ 0x1C
   757  00001D                     	ds	1
   758  00001E                     ??_uart_trans_int_handler:
   759                           
   760                           ; 0 bytes @ 0x1D
   761  00001E                     	ds	1
   762  00001F                     uart_trans_int_handler@data:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x1E
   766  00001F                     	ds	2
   767  000021                     uart_trans_int_handler@msgtype:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x20
   771  000021                     	ds	1
   772  000022                     uart_trans_int_handler@curIndex:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x21
   776  000022                     	ds	1
   777  000023                     uart_trans_int_handler@length:
   778                           	opt stack 0
   779                           
   780                           ; 1 bytes @ 0x22
   781  000023                     	ds	1
   782  000024                     ??_InterruptHandlerLow:
   783                           
   784                           ; 0 bytes @ 0x23
   785  000024                     	ds	18
   786  000036                     ?i2_in_high_int:
   787                           	opt stack 0
   788  000036                     handle_start@data_read:
   789                           	opt stack 0
   790  000036                     i2check_msg@qptr:
   791                           	opt stack 0
   792  000036                     i2memcpy@d1:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0x35
   796  000036                     	ds	2
   797  000038                     ??i2_check_msg:
   798  000038                     ?i2_in_low_int:
   799                           	opt stack 0
   800  000038                     i2memcpy@s1:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x37
   804  000038                     	ds	2
   805  00003A                     i2memcpy@n:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x39
   809  00003A                     	ds	2
   810  00003C                     i2memcpy@d:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x3B
   814  00003C                     	ds	2
   815  00003E                     i2memcpy@s:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x3D
   819  00003E                     	ds	2
   820  000040                     ??i2_send_msg:
   821                           
   822                           ; 0 bytes @ 0x3F
   823  000040                     	ds	1
   824  000041                     ToMainHigh_sendmsg@msgtype:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x40
   828  000041                     	ds	1
   829  000042                     ToMainHigh_sendmsg@data:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x41
   833  000042                     	ds	2
   834  000044                     ToMainHigh_sendmsg@length:
   835                           	opt stack 0
   836                           
   837                           ; 1 bytes @ 0x43
   838  000044                     	ds	1
   839                           tblptru	equ	0xFF8
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           
   843 ;;
   844 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   845 ;;
   846 ;; *************** function _main *****************
   847 ;; Defined at:
   848 ;;		line 28 in file "src/main.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  ctrl            2   24[BANK1 ] unsigned char [2]
   853 ;;  ic             28   53[BANK1 ] struct __i2c_comm
   854 ;;  msgbuffer      11    0[BANK1 ] unsigned char [11]
   855 ;;  t1thread_dat   11   42[BANK1 ] struct __timer1_thread_s
   856 ;;  uthread_data   10   14[BANK1 ] struct __uart_thread_str
   857 ;;  t0thread_dat    9   31[BANK1 ] struct __timer0_thread_s
   858 ;;  uc              5   26[BANK1 ] struct __uart_comm
   859 ;;  length          1   41[BANK1 ] char 
   860 ;;  msgtype         1   40[BANK1 ] unsigned char 
   861 ;;  last_reg_rec    1   13[BANK1 ] unsigned char 
   862 ;;  UARTConfig      1   12[BANK1 ] unsigned char 
   863 ;;  baud            1   11[BANK1 ] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;		None               void
   866 ;; Registers used:
   867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0      81       0       0
   875 ;;      Temps:          0       1       0       0       0
   876 ;;      Totals:         0       1      81       0       0
   877 ;;Total ram usage:       82 bytes
   878 ;; Hardware stack levels required when called:   15
   879 ;; This function calls:
   880 ;;		_OpenTimer0
   881 ;;		_OpenTimer1
   882 ;;		_OpenUSART
   883 ;;		_ToMainHigh_recvmsg
   884 ;;		_ToMainLow_recvmsg
   885 ;;		_block_on_To_msgqueues
   886 ;;		_enable_interrupts
   887 ;;		_i2c_configure_slave
   888 ;;		_init_i2c
   889 ;;		_init_queues
   890 ;;		_init_timer0_lthread
   891 ;;		_init_timer1_lthread
   892 ;;		_init_uart_lthread
   893 ;;		_init_uart_recv
   894 ;;		_moveDist
   895 ;;		_sendUARTarr
   896 ;;		_start_i2c_slave_reply
   897 ;;		_timer0_lthread
   898 ;;		_timer1_lthread
   899 ;;		_uart_lthread
   900 ;; This function is called by:
   901 ;;		Startup code after reset
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           	psect	text0
   906  000714                     __ptext0:
   907                           	opt stack 0
   908  000714                     _main:
   909                           	opt stack 16
   910                           
   911                           ;main.c: 29: signed char length;
   912                           ;main.c: 30: unsigned char msgtype;
   913                           ;main.c: 31: unsigned char last_reg_recvd;
   914                           ;main.c: 32: unsigned char baud, UARTConfig;
   915                           ;main.c: 33: uart_comm uc;
   916                           ;main.c: 34: i2c_comm ic;
   917                           ;main.c: 35: unsigned char msgbuffer[10 + 1];
   918                           ;main.c: 36: uart_thread_struct uthread_data;
   919                           ;main.c: 37: timer1_thread_struct t1thread_data;
   920                           ;main.c: 38: timer0_thread_struct t0thread_data;
   921                           ;main.c: 41: PORTA = 0x0;
   922                           
   923                           ;incstack = 0
   924  000714  0E00               	movlw	0
   925  000716  6E80               	movwf	3968,c	;volatile
   926                           
   927                           ;main.c: 42: LATA = 0x0;
   928  000718  0E00               	movlw	0
   929  00071A  6E89               	movwf	3977,c	;volatile
   930                           
   931                           ;main.c: 43: ADCON1 = 0x0F;
   932  00071C  0E0F               	movlw	15
   933  00071E  6EC1               	movwf	4033,c	;volatile
   934                           
   935                           ;main.c: 44: CMCON = 0x07;
   936  000720  0E07               	movlw	7
   937  000722  6EB4               	movwf	4020,c	;volatile
   938                           
   939                           ;main.c: 45: TRISA = 0x00;
   940  000724  0E00               	movlw	0
   941  000726  6E92               	movwf	3986,c	;volatile
   942                           
   943                           ;main.c: 48: PORTB = 0x0;
   944  000728  0E00               	movlw	0
   945  00072A  6E81               	movwf	3969,c	;volatile
   946                           
   947                           ;main.c: 49: LATB = 0x0;
   948  00072C  0E00               	movlw	0
   949  00072E  6E8A               	movwf	3978,c	;volatile
   950                           
   951                           ;main.c: 50: TRISB = 0xFF;
   952  000730  6893               	setf	3987,c	;volatile
   953                           
   954                           ;main.c: 52: OSCCON = 0x82;
   955  000732  0E82               	movlw	130
   956  000734  6ED3               	movwf	4051,c	;volatile
   957                           
   958                           ;main.c: 53: OSCTUNEbits.PLLEN = 1;
   959  000736  8C9B               	bsf	3995,6,c	;volatile
   960                           
   961                           ;main.c: 56: init_uart_recv(&uc);
   962  000738  0101               	movlb	1	; () banked
   963  00073A  0E01               	movlw	high main@uc
   964  00073C  0100               	movlb	0	; () banked
   965  00073E  0100               	movlb	0	; () banked
   966  000740  6FA6               	movwf	(init_uart_recv@uc+1)& (0+255),b
   967  000742  0101               	movlb	1	; () banked
   968  000744  0EBC               	movlw	low main@uc
   969  000746  0100               	movlb	0	; () banked
   970  000748  0100               	movlb	0	; () banked
   971  00074A  6FA5               	movwf	init_uart_recv@uc& (0+255),b
   972  00074C  EC6F  F00F         	call	_init_uart_recv	;wreg free
   973                           
   974                           ;main.c: 59: init_i2c(&ic);
   975  000750  0101               	movlb	1	; () banked
   976  000752  0E01               	movlw	high main@ic
   977  000754  0100               	movlb	0	; () banked
   978  000756  0100               	movlb	0	; () banked
   979  000758  6FA6               	movwf	(init_i2c@ic+1)& (0+255),b
   980  00075A  0101               	movlb	1	; () banked
   981  00075C  0ED7               	movlw	low main@ic
   982  00075E  0100               	movlb	0	; () banked
   983  000760  0100               	movlb	0	; () banked
   984  000762  6FA5               	movwf	init_i2c@ic& (0+255),b
   985  000764  ECB6  F00C         	call	_init_i2c	;wreg free
   986                           
   987                           ;main.c: 62: init_timer1_lthread(&t1thread_data);
   988  000768  0101               	movlb	1	; () banked
   989  00076A  0E01               	movlw	high main@t1thread_data
   990  00076C  0100               	movlb	0	; () banked
   991  00076E  0100               	movlb	0	; () banked
   992  000770  6FA6               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   993  000772  0101               	movlb	1	; () banked
   994  000774  0ECC               	movlw	low main@t1thread_data
   995  000776  0100               	movlb	0	; () banked
   996  000778  0100               	movlb	0	; () banked
   997  00077A  6FA5               	movwf	init_timer1_lthread@tptr& (0+255),b
   998  00077C  EC7B  F00B         	call	_init_timer1_lthread	;wreg free
   999                           
  1000                           ;main.c: 65: init_timer0_lthread(&t0thread_data);
  1001  000780  0101               	movlb	1	; () banked
  1002  000782  0E01               	movlw	high main@t0thread_data
  1003  000784  0100               	movlb	0	; () banked
  1004  000786  0100               	movlb	0	; () banked
  1005  000788  6FA6               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
  1006  00078A  0101               	movlb	1	; () banked
  1007  00078C  0EC1               	movlw	low main@t0thread_data
  1008  00078E  0100               	movlb	0	; () banked
  1009  000790  0100               	movlb	0	; () banked
  1010  000792  6FA5               	movwf	init_timer0_lthread@tptr& (0+255),b
  1011  000794  ECBF  F00B         	call	_init_timer0_lthread	;wreg free
  1012                           
  1013                           ;main.c: 68: init_uart_lthread(&uthread_data);
  1014  000798  0101               	movlb	1	; () banked
  1015  00079A  0E01               	movlw	high main@uthread_data
  1016  00079C  0100               	movlb	0	; () banked
  1017  00079E  0100               	movlb	0	; () banked
  1018  0007A0  6FA6               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
  1019  0007A2  0101               	movlb	1	; () banked
  1020  0007A4  0EB0               	movlw	low main@uthread_data
  1021  0007A6  0100               	movlb	0	; () banked
  1022  0007A8  0100               	movlb	0	; () banked
  1023  0007AA  6FA5               	movwf	init_uart_lthread@uptr& (0+255),b
  1024  0007AC  ECC0  F00F         	call	_init_uart_lthread	;wreg free
  1025                           
  1026                           ;main.c: 71: init_queues();
  1027  0007B0  EC7F  F00C         	call	_init_queues	;wreg free
  1028                           
  1029                           ;main.c: 75: OpenTimer0(0b11111111 & 0b10111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1030  0007B4  0EAF               	movlw	175
  1031  0007B6  EC0D  F00F         	call	_OpenTimer0
  1032                           
  1033                           ;main.c: 76: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111);
  1034  0007BA  0EC7               	movlw	199
  1035  0007BC  EC56  F00E         	call	_OpenTimer1
  1036                           
  1037                           ;main.c: 77: T0CONbits.TMR0ON = 0;;
  1038  0007C0  9ED5               	bcf	4053,7,c	;volatile
  1039                           
  1040                           ;main.c: 78: T1CONbits.TMR1ON = 0;;
  1041  0007C2  90CD               	bcf	4045,0,c	;volatile
  1042                           
  1043                           ;main.c: 81: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11101111;
  1044  0007C4  0100               	movlb	0	; () banked
  1045  0007C6  6FCC               	movwf	??_main& (0+255),b
  1046  0007C8  0EEC               	movlw	236
  1047  0007CA  0101               	movlb	1	; () banked
  1048  0007CC  0101               	movlb	1	; () banked
  1049  0007CE  6FAE               	movwf	main@UARTConfig& (0+255),b
  1050  0007D0  0100               	movlb	0	; () banked
  1051  0007D2  51CC               	movf	??_main& (0+255),w,b
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;main.c: 82: baud = 77;
  1055  0007D4  0100               	movlb	0	; () banked
  1056  0007D6  6FCC               	movwf	??_main& (0+255),b
  1057  0007D8  0E4D               	movlw	77
  1058  0007DA  0101               	movlb	1	; () banked
  1059  0007DC  0101               	movlb	1	; () banked
  1060  0007DE  6FAD               	movwf	main@baud& (0+255),b
  1061  0007E0  0100               	movlb	0	; () banked
  1062  0007E2  51CC               	movf	??_main& (0+255),w,b
  1063                           
  1064                           ; BSR set to: 0
  1065                           ;main.c: 83: OpenUSART(UARTConfig,baud);
  1066  0007E4  0101               	movlb	1	; () banked
  1067  0007E6  0100               	movlb	0	; () banked
  1068  0007E8  C1AD  F0A5         	movff	main@baud,OpenUSART@spbrg
  1069  0007EC  0100               	movlb	0	; () banked
  1070  0007EE  0100               	movlb	0	; () banked
  1071  0007F0  6BA6               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1072  0007F2  0101               	movlb	1	; () banked
  1073  0007F4  0101               	movlb	1	; () banked
  1074  0007F6  51AE               	movf	main@UARTConfig& (0+255),w,b
  1075  0007F8  ECED  F00A         	call	_OpenUSART
  1076                           
  1077                           ;main.c: 88: IPR1bits.TMR1IP = 0;
  1078  0007FC  909F               	bcf	3999,0,c	;volatile
  1079                           
  1080                           ;main.c: 90: IPR1bits.RCIP = 0;
  1081  0007FE  9A9F               	bcf	3999,5,c	;volatile
  1082                           
  1083                           ;main.c: 92: IPR1bits.TXIP = 0;
  1084  000800  989F               	bcf	3999,4,c	;volatile
  1085                           
  1086                           ;main.c: 94: IPR1bits.SSPIP = 1;
  1087  000802  869F               	bsf	3999,3,c	;volatile
  1088                           
  1089                           ;main.c: 97: i2c_configure_slave(0x9A);
  1090  000804  0E9A               	movlw	154
  1091  000806  EC22  F00F         	call	_i2c_configure_slave
  1092                           
  1093                           ;main.c: 100: PIE1bits.SSPIE = 1;
  1094  00080A  869D               	bsf	3997,3,c	;volatile
  1095                           
  1096                           ;main.c: 104: enable_interrupts();
  1097  00080C  ECB9  F00F         	call	_enable_interrupts	;wreg free
  1098                           
  1099                           ;main.c: 107: moveDist(&t1thread_data, 30);
  1100  000810  0101               	movlb	1	; () banked
  1101  000812  0E01               	movlw	high main@t1thread_data
  1102  000814  0100               	movlb	0	; () banked
  1103  000816  0100               	movlb	0	; () banked
  1104  000818  6FC5               	movwf	(moveDist@tptr+1)& (0+255),b
  1105  00081A  0101               	movlb	1	; () banked
  1106  00081C  0ECC               	movlw	low main@t1thread_data
  1107  00081E  0100               	movlb	0	; () banked
  1108  000820  0100               	movlb	0	; () banked
  1109  000822  6FC4               	movwf	moveDist@tptr& (0+255),b
  1110  000824  0E00               	movlw	0
  1111  000826  0100               	movlb	0	; () banked
  1112  000828  0100               	movlb	0	; () banked
  1113  00082A  6FC7               	movwf	(moveDist@dist+1)& (0+255),b
  1114  00082C  0E1E               	movlw	30
  1115  00082E  0100               	movlb	0	; () banked
  1116  000830  6FC6               	movwf	moveDist@dist& (0+255),b
  1117  000832  ECFF  F009         	call	_moveDist	;wreg free
  1118  000836                     l123:
  1119                           
  1120                           ;main.c: 112: block_on_To_msgqueues();
  1121  000836  EC03  F00C         	call	_block_on_To_msgqueues	;wreg free
  1122                           
  1123                           ;main.c: 115: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1124  00083A  0101               	movlb	1	; () banked
  1125  00083C  0E01               	movlw	high main@msgtype
  1126  00083E  0100               	movlb	0	; () banked
  1127  000840  0100               	movlb	0	; () banked
  1128  000842  6FBE               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1129  000844  0101               	movlb	1	; () banked
  1130  000846  0ECA               	movlw	low main@msgtype
  1131  000848  0100               	movlb	0	; () banked
  1132  00084A  0100               	movlb	0	; () banked
  1133  00084C  6FBD               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1134  00084E  0101               	movlb	1	; () banked
  1135  000850  0E01               	movlw	high main@msgbuffer
  1136  000852  0100               	movlb	0	; () banked
  1137  000854  0100               	movlb	0	; () banked
  1138  000856  6FC0               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1139  000858  0101               	movlb	1	; () banked
  1140  00085A  0EA2               	movlw	low main@msgbuffer
  1141  00085C  0100               	movlb	0	; () banked
  1142  00085E  0100               	movlb	0	; () banked
  1143  000860  6FBF               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1144  000862  0E0A               	movlw	10
  1145  000864  ECF5  F00D         	call	_ToMainHigh_recvmsg
  1146  000868  0101               	movlb	1	; () banked
  1147  00086A  0101               	movlb	1	; () banked
  1148  00086C  6FCB               	movwf	main@length& (0+255),b
  1149                           
  1150                           ; BSR set to: 1
  1151                           ;main.c: 116: if (length < 0) {
  1152  00086E  0101               	movlb	1	; () banked
  1153  000870  0101               	movlb	1	; () banked
  1154  000872  BFCB               	btfsc	main@length& (0+255),7,b
  1155  000874  D0B7               	goto	l2599
  1156  000876  D0A7               	goto	l2597
  1157  000878                     l2569:
  1158                           
  1159                           ; BSR set to: 1
  1160                           ;main.c: 124: {
  1161                           ;main.c: 125: timer0_lthread(&t0thread_data);
  1162  000878  0101               	movlb	1	; () banked
  1163  00087A  0E01               	movlw	high main@t0thread_data
  1164  00087C  0100               	movlb	0	; () banked
  1165  00087E  0100               	movlb	0	; () banked
  1166  000880  6FC5               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1167  000882  0101               	movlb	1	; () banked
  1168  000884  0EC1               	movlw	low main@t0thread_data
  1169  000886  0100               	movlb	0	; () banked
  1170  000888  0100               	movlb	0	; () banked
  1171  00088A  6FC4               	movwf	timer0_lthread@tptr& (0+255),b
  1172  00088C  ECEF  F007         	call	_timer0_lthread	;wreg free
  1173                           
  1174                           ;main.c: 126: break;
  1175  000890  D0A9               	goto	l2599
  1176  000892                     l130:
  1177                           
  1178                           ; BSR set to: 1
  1179                           ;main.c: 129: {
  1180                           ;main.c: 130: last_reg_recvd = msgbuffer[0];
  1181  000892  C1A2  F1AF         	movff	main@msgbuffer,main@last_reg_recvd
  1182                           
  1183                           ;main.c: 131: unsigned char ctrl[2];
  1184                           ;main.c: 132: switch(last_reg_recvd){
  1185  000896  D029               	goto	l2579
  1186  000898                     l2571:
  1187                           
  1188                           ; BSR set to: 1
  1189                           ;main.c: 134: {
  1190                           ;main.c: 135: ctrl[0] = 0;
  1191  000898  0100               	movlb	0	; () banked
  1192  00089A  6FCC               	movwf	??_main& (0+255),b
  1193  00089C  0E00               	movlw	0
  1194  00089E  0101               	movlb	1	; () banked
  1195  0008A0  0101               	movlb	1	; () banked
  1196  0008A2  6FBA               	movwf	main@ctrl& (0+255),b
  1197  0008A4  0100               	movlb	0	; () banked
  1198  0008A6  51CC               	movf	??_main& (0+255),w,b
  1199                           
  1200                           ;main.c: 136: ctrl[1] = 0;
  1201  0008A8  0100               	movlb	0	; () banked
  1202  0008AA  6FCC               	movwf	??_main& (0+255),b
  1203  0008AC  0E00               	movlw	0
  1204  0008AE  D017               	goto	L2
  1205  0008B0                     l2573:
  1206                           
  1207                           ;main.c: 140: {
  1208                           ;main.c: 141: ctrl[0] = 199;
  1209  0008B0  0100               	movlb	0	; () banked
  1210  0008B2  6FCC               	movwf	??_main& (0+255),b
  1211  0008B4  0EC7               	movlw	199
  1212  0008B6  0101               	movlb	1	; () banked
  1213  0008B8  0101               	movlb	1	; () banked
  1214  0008BA  6FBA               	movwf	main@ctrl& (0+255),b
  1215  0008BC  0100               	movlb	0	; () banked
  1216  0008BE  51CC               	movf	??_main& (0+255),w,b
  1217                           
  1218                           ;main.c: 142: ctrl[1] = 73;
  1219  0008C0  0100               	movlb	0	; () banked
  1220  0008C2  6FCC               	movwf	??_main& (0+255),b
  1221  0008C4  0E49               	movlw	73
  1222  0008C6  D00B               	goto	L2
  1223  0008C8                     l2575:
  1224                           
  1225                           ;main.c: 146: {
  1226                           ;main.c: 147: ctrl[0] = 182;
  1227  0008C8  0100               	movlb	0	; () banked
  1228  0008CA  6FCC               	movwf	??_main& (0+255),b
  1229  0008CC  0EB6               	movlw	182
  1230  0008CE  0101               	movlb	1	; () banked
  1231  0008D0  0101               	movlb	1	; () banked
  1232  0008D2  6FBA               	movwf	main@ctrl& (0+255),b
  1233  0008D4  0100               	movlb	0	; () banked
  1234  0008D6  51CC               	movf	??_main& (0+255),w,b
  1235                           
  1236                           ;main.c: 148: ctrl[1] = 54;
  1237  0008D8  0100               	movlb	0	; () banked
  1238  0008DA  6FCC               	movwf	??_main& (0+255),b
  1239  0008DC  0E36               	movlw	54
  1240  0008DE                     L2:
  1241  0008DE  0101               	movlb	1	; () banked
  1242  0008E0  0101               	movlb	1	; () banked
  1243  0008E2  6FBB               	movwf	(main@ctrl+1)& (0+255),b
  1244  0008E4  0100               	movlb	0	; () banked
  1245  0008E6  51CC               	movf	??_main& (0+255),w,b
  1246                           
  1247                           ;main.c: 149: break;
  1248  0008E8  D00C               	goto	l2581
  1249  0008EA                     l2579:
  1250  0008EA  0101               	movlb	1	; () banked
  1251  0008EC  0101               	movlb	1	; () banked
  1252  0008EE  51AF               	movf	main@last_reg_recvd& (0+255),w,b
  1253                           
  1254                           ; Switch size 1, requested type "space"
  1255                           ; Number of cases is 3, Range of values is 0 to 2
  1256                           ; switch strategies available:
  1257                           ; Name         Instructions Cycles
  1258                           ; simple_byte           10     6 (average)
  1259                           ;	Chosen strategy is simple_byte
  1260  0008F0  0A00               	xorlw	0	; case 0
  1261  0008F2  B4D8               	btfsc	status,2,c
  1262  0008F4  D7D1               	goto	l2571
  1263  0008F6  0A01               	xorlw	1	; case 1
  1264  0008F8  B4D8               	btfsc	status,2,c
  1265  0008FA  D7DA               	goto	l2573
  1266  0008FC  0A03               	xorlw	3	; case 2
  1267  0008FE  B4D8               	btfsc	status,2,c
  1268  000900  D7E3               	goto	l2575
  1269  000902                     l2581:
  1270                           
  1271                           ;main.c: 152: sendUARTarr(2,ctrl);
  1272  000902  0101               	movlb	1	; () banked
  1273  000904  0E01               	movlw	high main@ctrl
  1274  000906  0100               	movlb	0	; () banked
  1275  000908  0100               	movlb	0	; () banked
  1276  00090A  6FC0               	movwf	(sendUARTarr@data+1)& (0+255),b
  1277  00090C  0101               	movlb	1	; () banked
  1278  00090E  0EBA               	movlw	low main@ctrl
  1279  000910  0100               	movlb	0	; () banked
  1280  000912  0100               	movlb	0	; () banked
  1281  000914  6FBF               	movwf	sendUARTarr@data& (0+255),b
  1282  000916  0E02               	movlw	2
  1283  000918  ECB3  F00D         	call	_sendUARTarr
  1284                           
  1285                           ;main.c: 153: break;
  1286  00091C  D063               	goto	l2599
  1287  00091E                     l136:
  1288                           
  1289                           ; BSR set to: 1
  1290                           ;main.c: 156: {
  1291                           ;main.c: 159: last_reg_recvd = msgbuffer[0];
  1292  00091E  C1A2  F1AF         	movff	main@msgbuffer,main@last_reg_recvd
  1293                           
  1294                           ;main.c: 160: break;
  1295  000922  D060               	goto	l2599
  1296  000924                     l2583:
  1297                           
  1298                           ; BSR set to: 1
  1299                           ;main.c: 173: {
  1300                           ;main.c: 174: length = 2;
  1301  000924  0100               	movlb	0	; () banked
  1302  000926  6FCC               	movwf	??_main& (0+255),b
  1303  000928  0E02               	movlw	2
  1304  00092A  0101               	movlb	1	; () banked
  1305  00092C  0101               	movlb	1	; () banked
  1306  00092E  6FCB               	movwf	main@length& (0+255),b
  1307  000930  0100               	movlb	0	; () banked
  1308  000932  51CC               	movf	??_main& (0+255),w,b
  1309                           
  1310                           ;main.c: 175: msgbuffer[0] = 0x55;
  1311  000934  0100               	movlb	0	; () banked
  1312  000936  6FCC               	movwf	??_main& (0+255),b
  1313  000938  0E55               	movlw	85
  1314  00093A  0101               	movlb	1	; () banked
  1315  00093C  0101               	movlb	1	; () banked
  1316  00093E  6FA2               	movwf	main@msgbuffer& (0+255),b
  1317  000940  0100               	movlb	0	; () banked
  1318  000942  51CC               	movf	??_main& (0+255),w,b
  1319                           
  1320                           ;main.c: 176: msgbuffer[1] = 0xAA;
  1321  000944  0100               	movlb	0	; () banked
  1322  000946  6FCC               	movwf	??_main& (0+255),b
  1323  000948  0EAA               	movlw	170
  1324  00094A  0101               	movlb	1	; () banked
  1325  00094C  0101               	movlb	1	; () banked
  1326  00094E  6FA3               	movwf	(main@msgbuffer+1)& (0+255),b
  1327  000950  D00C               	goto	L3
  1328  000952                     l2585:
  1329                           
  1330                           ;main.c: 180: {
  1331                           ;main.c: 181: length = 1;
  1332  000952  0100               	movlb	0	; () banked
  1333  000954  6FCC               	movwf	??_main& (0+255),b
  1334  000956  0E01               	movlw	1
  1335  000958  0101               	movlb	1	; () banked
  1336  00095A  0101               	movlb	1	; () banked
  1337  00095C  6FCB               	movwf	main@length& (0+255),b
  1338  00095E  0100               	movlb	0	; () banked
  1339  000960  51CC               	movf	??_main& (0+255),w,b
  1340                           
  1341                           ;main.c: 182: msgbuffer[0] = 0x3A;
  1342  000962  0100               	movlb	0	; () banked
  1343  000964  6FCC               	movwf	??_main& (0+255),b
  1344  000966  0E3A               	movlw	58
  1345  000968  D00E               	goto	L4
  1346  00096A                     L3:
  1347  00096A  0100               	movlb	0	; () banked
  1348  00096C  51CC               	movf	??_main& (0+255),w,b
  1349                           
  1350                           ;main.c: 183: break;
  1351  00096E  D01B               	goto	l2593
  1352  000970                     l2587:
  1353                           
  1354                           ;main.c: 186: {
  1355                           ;main.c: 187: length = 1;
  1356  000970  0100               	movlb	0	; () banked
  1357  000972  6FCC               	movwf	??_main& (0+255),b
  1358  000974  0E01               	movlw	1
  1359  000976  0101               	movlb	1	; () banked
  1360  000978  0101               	movlb	1	; () banked
  1361  00097A  6FCB               	movwf	main@length& (0+255),b
  1362  00097C  0100               	movlb	0	; () banked
  1363  00097E  51CC               	movf	??_main& (0+255),w,b
  1364                           
  1365                           ;main.c: 188: msgbuffer[0] = 0xA3;
  1366  000980  0100               	movlb	0	; () banked
  1367  000982  6FCC               	movwf	??_main& (0+255),b
  1368  000984  0EA3               	movlw	163
  1369  000986                     L4:
  1370  000986  0101               	movlb	1	; () banked
  1371  000988  0101               	movlb	1	; () banked
  1372  00098A  6FA2               	movwf	main@msgbuffer& (0+255),b
  1373  00098C  D7EE               	goto	L3
  1374  00098E                     l2591:
  1375  00098E  0101               	movlb	1	; () banked
  1376  000990  0101               	movlb	1	; () banked
  1377  000992  51AF               	movf	main@last_reg_recvd& (0+255),w,b
  1378                           
  1379                           ; Switch size 1, requested type "space"
  1380                           ; Number of cases is 3, Range of values is 168 to 170
  1381                           ; switch strategies available:
  1382                           ; Name         Instructions Cycles
  1383                           ; simple_byte           10     6 (average)
  1384                           ;	Chosen strategy is simple_byte
  1385  000994  0AA8               	xorlw	168	; case 168
  1386  000996  B4D8               	btfsc	status,2,c
  1387  000998  D7DC               	goto	l2585
  1388  00099A  0A01               	xorlw	1	; case 169
  1389  00099C  B4D8               	btfsc	status,2,c
  1390  00099E  D7E8               	goto	l2587
  1391  0009A0  0A03               	xorlw	3	; case 170
  1392  0009A2  B4D8               	btfsc	status,2,c
  1393  0009A4  D7BF               	goto	l2583
  1394  0009A6                     l2593:
  1395                           
  1396                           ;main.c: 192: start_i2c_slave_reply(length, msgbuffer);
  1397  0009A6  0101               	movlb	1	; () banked
  1398  0009A8  0E01               	movlw	high main@msgbuffer
  1399  0009AA  0100               	movlb	0	; () banked
  1400  0009AC  0100               	movlb	0	; () banked
  1401  0009AE  6FA6               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1402  0009B0  0101               	movlb	1	; () banked
  1403  0009B2  0EA2               	movlw	low main@msgbuffer
  1404  0009B4  0100               	movlb	0	; () banked
  1405  0009B6  0100               	movlb	0	; () banked
  1406  0009B8  6FA5               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1407  0009BA  0101               	movlb	1	; () banked
  1408  0009BC  0101               	movlb	1	; () banked
  1409  0009BE  51CB               	movf	main@length& (0+255),w,b
  1410  0009C0  ECF2  F005         	call	_start_i2c_slave_reply
  1411                           
  1412                           ;main.c: 193: break;
  1413  0009C4  D00F               	goto	l2599
  1414  0009C6                     l2597:
  1415  0009C6  0101               	movlb	1	; () banked
  1416  0009C8  0101               	movlb	1	; () banked
  1417  0009CA  51CA               	movf	main@msgtype& (0+255),w,b
  1418                           
  1419                           ; Switch size 1, requested type "space"
  1420                           ; Number of cases is 4, Range of values is 10 to 42
  1421                           ; switch strategies available:
  1422                           ; Name         Instructions Cycles
  1423                           ; simple_byte           13     7 (average)
  1424                           ;	Chosen strategy is simple_byte
  1425  0009CC  0A0A               	xorlw	10	; case 10
  1426  0009CE  B4D8               	btfsc	status,2,c
  1427  0009D0  D753               	goto	l2569
  1428  0009D2  0A22               	xorlw	34	; case 40
  1429  0009D4  B4D8               	btfsc	status,2,c
  1430  0009D6  D75D               	goto	l130
  1431  0009D8  0A01               	xorlw	1	; case 41
  1432  0009DA  B4D8               	btfsc	status,2,c
  1433  0009DC  D7A0               	goto	l136
  1434  0009DE  0A03               	xorlw	3	; case 42
  1435  0009E0  B4D8               	btfsc	status,2,c
  1436  0009E2  D7D5               	goto	l2591
  1437  0009E4                     l2599:
  1438                           
  1439                           ;main.c: 201: }
  1440                           ;main.c: 204: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1441  0009E4  0101               	movlb	1	; () banked
  1442  0009E6  0E01               	movlw	high main@msgtype
  1443  0009E8  0100               	movlb	0	; () banked
  1444  0009EA  0100               	movlb	0	; () banked
  1445  0009EC  6FBE               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1446  0009EE  0101               	movlb	1	; () banked
  1447  0009F0  0ECA               	movlw	low main@msgtype
  1448  0009F2  0100               	movlb	0	; () banked
  1449  0009F4  0100               	movlb	0	; () banked
  1450  0009F6  6FBD               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1451  0009F8  0101               	movlb	1	; () banked
  1452  0009FA  0E01               	movlw	high main@msgbuffer
  1453  0009FC  0100               	movlb	0	; () banked
  1454  0009FE  0100               	movlb	0	; () banked
  1455  000A00  6FC0               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1456  000A02  0101               	movlb	1	; () banked
  1457  000A04  0EA2               	movlw	low main@msgbuffer
  1458  000A06  0100               	movlb	0	; () banked
  1459  000A08  0100               	movlb	0	; () banked
  1460  000A0A  6FBF               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1461  000A0C  0E0A               	movlw	10
  1462  000A0E  ECD4  F00D         	call	_ToMainLow_recvmsg
  1463  000A12  0101               	movlb	1	; () banked
  1464  000A14  0101               	movlb	1	; () banked
  1465  000A16  6FCB               	movwf	main@length& (0+255),b
  1466                           
  1467                           ; BSR set to: 1
  1468                           ;main.c: 205: if (length < 0) {
  1469  000A18  0101               	movlb	1	; () banked
  1470  000A1A  0101               	movlb	1	; () banked
  1471  000A1C  BFCB               	btfsc	main@length& (0+255),7,b
  1472  000A1E  D70B               	goto	l123
  1473  000A20  D036               	goto	l2611
  1474  000A22                     l2605:
  1475                           
  1476                           ; BSR set to: 1
  1477                           ;main.c: 213: {
  1478                           ;main.c: 214: timer1_lthread(&t1thread_data);
  1479  000A22  0101               	movlb	1	; () banked
  1480  000A24  0E01               	movlw	high main@t1thread_data
  1481  000A26  0100               	movlb	0	; () banked
  1482  000A28  0100               	movlb	0	; () banked
  1483  000A2A  6FC5               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1484  000A2C  0101               	movlb	1	; () banked
  1485  000A2E  0ECC               	movlw	low main@t1thread_data
  1486  000A30  0100               	movlb	0	; () banked
  1487  000A32  0100               	movlb	0	; () banked
  1488  000A34  6FC4               	movwf	timer1_lthread@tptr& (0+255),b
  1489  000A36  EC76  F007         	call	_timer1_lthread	;wreg free
  1490                           
  1491                           ;main.c: 215: break;
  1492  000A3A  D6FD               	goto	l123
  1493  000A3C                     l2607:
  1494                           
  1495                           ;main.c: 218: case 31:
  1496                           ;main.c: 219: case 32:
  1497                           ;main.c: 220: {
  1498                           ;main.c: 221: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1499  000A3C  0101               	movlb	1	; () banked
  1500  000A3E  0E01               	movlw	high main@uthread_data
  1501  000A40  0100               	movlb	0	; () banked
  1502  000A42  0100               	movlb	0	; () banked
  1503  000A44  6FC0               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1504  000A46  0101               	movlb	1	; () banked
  1505  000A48  0EB0               	movlw	low main@uthread_data
  1506  000A4A  0100               	movlb	0	; () banked
  1507  000A4C  0100               	movlb	0	; () banked
  1508  000A4E  6FBF               	movwf	uart_lthread@uptr& (0+255),b
  1509  000A50  0101               	movlb	1	; () banked
  1510  000A52  0100               	movlb	0	; () banked
  1511  000A54  C1CA  F0C1         	movff	main@msgtype,uart_lthread@msgtype
  1512  000A58  0100               	movlb	0	; () banked
  1513  000A5A  0100               	movlb	0	; () banked
  1514  000A5C  6BC2               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1515  000A5E  0101               	movlb	1	; () banked
  1516  000A60  0101               	movlb	1	; () banked
  1517  000A62  51CB               	movf	main@length& (0+255),w,b
  1518  000A64  0100               	movlb	0	; () banked
  1519  000A66  0100               	movlb	0	; () banked
  1520  000A68  6FC3               	movwf	uart_lthread@length& (0+255),b
  1521  000A6A  0100               	movlb	0	; () banked
  1522  000A6C  6BC4               	clrf	(uart_lthread@length+1)& (0+255),b
  1523  000A6E  0100               	movlb	0	; () banked
  1524  000A70  BFC3               	btfsc	uart_lthread@length& (0+255),7,b
  1525  000A72  07C4               	decf	(uart_lthread@length+1)& (0+255),f,b
  1526  000A74  0101               	movlb	1	; () banked
  1527  000A76  0E01               	movlw	high main@msgbuffer
  1528  000A78  0100               	movlb	0	; () banked
  1529  000A7A  0100               	movlb	0	; () banked
  1530  000A7C  6FC6               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1531  000A7E  0101               	movlb	1	; () banked
  1532  000A80  0EA2               	movlw	low main@msgbuffer
  1533  000A82  0100               	movlb	0	; () banked
  1534  000A84  0100               	movlb	0	; () banked
  1535  000A86  6FC5               	movwf	uart_lthread@msgbuffer& (0+255),b
  1536  000A88  EC68  F008         	call	_uart_lthread	;wreg free
  1537                           
  1538                           ;main.c: 222: break;
  1539  000A8C  D6D4               	goto	l123
  1540  000A8E                     l2611:
  1541  000A8E  0101               	movlb	1	; () banked
  1542  000A90  0101               	movlb	1	; () banked
  1543  000A92  51CA               	movf	main@msgtype& (0+255),w,b
  1544                           
  1545                           ; Switch size 1, requested type "space"
  1546                           ; Number of cases is 4, Range of values is 11 to 32
  1547                           ; switch strategies available:
  1548                           ; Name         Instructions Cycles
  1549                           ; simple_byte           13     7 (average)
  1550                           ;	Chosen strategy is simple_byte
  1551  000A94  0A0B               	xorlw	11	; case 11
  1552  000A96  B4D8               	btfsc	status,2,c
  1553  000A98  D7C4               	goto	l2605
  1554  000A9A  0A15               	xorlw	21	; case 30
  1555  000A9C  B4D8               	btfsc	status,2,c
  1556  000A9E  D7CE               	goto	l2607
  1557  000AA0  0A01               	xorlw	1	; case 31
  1558  000AA2  B4D8               	btfsc	status,2,c
  1559  000AA4  D7CB               	goto	l2607
  1560  000AA6  0A3F               	xorlw	63	; case 32
  1561  000AA8  B4D8               	btfsc	status,2,c
  1562  000AAA  D7C8               	goto	l2607
  1563  000AAC  D6C4               	goto	l123
  1564  000AAE                     __end_of_main:
  1565                           	opt stack 0
  1566                           tblptru	equ	0xFF8
  1567                           postinc0	equ	0xFEE
  1568                           wreg	equ	0xFE8
  1569                           status	equ	0xFD8
  1570                           
  1571 ;; *************** function _uart_lthread *****************
  1572 ;; Defined at:
  1573 ;;		line 12 in file "src/uart_thread.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  uptr            2   63[BANK0 ] PTR struct __uart_thread
  1576 ;;		 -> main@uthread_data(10), 
  1577 ;;  msgtype         2   65[BANK0 ] int 
  1578 ;;  length          2   67[BANK0 ] int 
  1579 ;;  msgbuffer       2   69[BANK0 ] PTR unsigned char 
  1580 ;;		 -> main@msgbuffer(11), 
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;  index           2   72[BANK0 ] int 
  1583 ;;  status          1   71[BANK0 ] char 
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  2   63[BANK0 ] int 
  1586 ;; Registers used:
  1587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1593 ;;      Params:         0       8       0       0       0
  1594 ;;      Locals:         0       3       0       0       0
  1595 ;;      Temps:          0       0       0       0       0
  1596 ;;      Totals:         0      11       0       0       0
  1597 ;;Total ram usage:       11 bytes
  1598 ;; Hardware stack levels used:    1
  1599 ;; Hardware stack levels required when called:   13
  1600 ;; This function calls:
  1601 ;;		_FromMainLow_sendmsg
  1602 ;; This function is called by:
  1603 ;;		_main
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text1
  1608  0010D0                     __ptext1:
  1609                           	opt stack 0
  1610  0010D0                     _uart_lthread:
  1611                           	opt stack 17
  1612                           
  1613                           ;uart_thread.c: 13: if (msgtype == 30) {
  1614                           
  1615                           ; BSR set to: 1
  1616                           ;incstack = 0
  1617  0010D0  0100               	movlb	0	; () banked
  1618  0010D2  0100               	movlb	0	; () banked
  1619  0010D4  51C1               	movf	uart_lthread@msgtype& (0+255),w,b
  1620  0010D6  0A1E               	xorlw	30
  1621  0010D8  11C2               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1622  0010DA  B4D8               	btfsc	status,2,c
  1623  0010DC  0012               	return	
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;uart_thread.c: 16: else if(msgtype == 31){
  1627                           
  1628                           ; BSR set to: 0
  1629                           
  1630                           ; BSR set to: 0
  1631                           ;uart_thread.c: 15: }
  1632  0010DE  0100               	movlb	0	; () banked
  1633  0010E0  0100               	movlb	0	; () banked
  1634  0010E2  51C1               	movf	uart_lthread@msgtype& (0+255),w,b
  1635  0010E4  0A1F               	xorlw	31
  1636  0010E6  11C2               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1637  0010E8  A4D8               	btfss	status,2,c
  1638  0010EA  D04F               	goto	l2863
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;uart_thread.c: 18: int index = 0;
  1642  0010EC  0E00               	movlw	0
  1643  0010EE  0100               	movlb	0	; () banked
  1644  0010F0  0100               	movlb	0	; () banked
  1645  0010F2  6FC9               	movwf	(uart_lthread@index+1)& (0+255),b
  1646  0010F4  0E00               	movlw	0
  1647  0010F6  0100               	movlb	0	; () banked
  1648  0010F8  6FC8               	movwf	uart_lthread@index& (0+255),b
  1649                           
  1650                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1651  0010FA  0E00               	movlw	0
  1652  0010FC  0100               	movlb	0	; () banked
  1653  0010FE  0100               	movlb	0	; () banked
  1654  001100  6FC9               	movwf	(uart_lthread@index+1)& (0+255),b
  1655  001102  0E00               	movlw	0
  1656  001104  0100               	movlb	0	; () banked
  1657  001106  6FC8               	movwf	uart_lthread@index& (0+255),b
  1658  001108                     
  1659                           ; BSR set to: 0
  1660  001108  0100               	movlb	0	; () banked
  1661  00110A  0100               	movlb	0	; () banked
  1662  00110C  51C9               	movf	(uart_lthread@index+1)& (0+255),w,b
  1663  00110E  0A80               	xorlw	128
  1664  001110  0F80               	addlw	-128
  1665  001112  0E0A               	movlw	10
  1666  001114  B4D8               	btfsc	status,2,c
  1667  001116  5DC8               	subwf	uart_lthread@index& (0+255),w,b
  1668  001118  B0D8               	btfsc	status,0,c
  1669  00111A  D023               	goto	l2859
  1670                           
  1671                           ; BSR set to: 0
  1672                           
  1673                           ; BSR set to: 0
  1674                           
  1675                           ; BSR set to: 0
  1676  00111C  0100               	movlb	0	; () banked
  1677  00111E  0100               	movlb	0	; () banked
  1678  001120  51C8               	movf	uart_lthread@index& (0+255),w,b
  1679  001122  0100               	movlb	0	; () banked
  1680  001124  0100               	movlb	0	; () banked
  1681  001126  25C5               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1682  001128  6ED9               	movwf	fsr2l,c
  1683  00112A  0100               	movlb	0	; () banked
  1684  00112C  0100               	movlb	0	; () banked
  1685  00112E  51C9               	movf	(uart_lthread@index+1)& (0+255),w,b
  1686  001130  0100               	movlb	0	; () banked
  1687  001132  0100               	movlb	0	; () banked
  1688  001134  21C6               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1689  001136  6EDA               	movwf	fsr2h,c
  1690  001138  0100               	movlb	0	; () banked
  1691  00113A  0100               	movlb	0	; () banked
  1692  00113C  51C8               	movf	uart_lthread@index& (0+255),w,b
  1693  00113E  0100               	movlb	0	; () banked
  1694  001140  0100               	movlb	0	; () banked
  1695  001142  25BF               	addwf	uart_lthread@uptr& (0+255),w,b
  1696  001144  6EE1               	movwf	fsr1l,c
  1697  001146  0100               	movlb	0	; () banked
  1698  001148  0100               	movlb	0	; () banked
  1699  00114A  51C9               	movf	(uart_lthread@index+1)& (0+255),w,b
  1700  00114C  0100               	movlb	0	; () banked
  1701  00114E  0100               	movlb	0	; () banked
  1702  001150  21C0               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1703  001152  6EE2               	movwf	fsr1h,c
  1704  001154  CFDF FFE7          	movff	indf2,indf1
  1705                           
  1706                           ; BSR set to: 0
  1707  001158  0100               	movlb	0	; () banked
  1708  00115A  0100               	movlb	0	; () banked
  1709  00115C  4BC8               	infsnz	uart_lthread@index& (0+255),f,b
  1710  00115E  2BC9               	incf	(uart_lthread@index+1)& (0+255),f,b
  1711  001160  D7D3               	goto	L5
  1712  001162                     l2859:
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1716  001162  C0C1  F0BB         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1717  001166  0100               	movlb	0	; () banked
  1718  001168  0100               	movlb	0	; () banked
  1719  00116A  C0C0  F0BD         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1720  00116E  0100               	movlb	0	; () banked
  1721  001170  0100               	movlb	0	; () banked
  1722  001172  C0BF  F0BC         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1723  001176  0100               	movlb	0	; () banked
  1724  001178  0100               	movlb	0	; () banked
  1725  00117A  51C3               	movf	uart_lthread@length& (0+255),w,b
  1726  00117C  EC72  F00E         	call	_FromMainLow_sendmsg
  1727  001180  0100               	movlb	0	; () banked
  1728  001182  0100               	movlb	0	; () banked
  1729  001184  6FC7               	movwf	uart_lthread@status& (0+255),b
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;uart_thread.c: 25: }
  1733                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1734                           
  1735                           ; BSR set to: 0
  1736  001186  889D               	bsf	3997,4,c	;volatile
  1737                           
  1738                           ;uart_thread.c: 29: }
  1739  001188  0012               	return	
  1740  00118A                     l2863:
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;uart_thread.c: 30: else if(msgtype == 32){
  1744  00118A  0100               	movlb	0	; () banked
  1745  00118C  0100               	movlb	0	; () banked
  1746  00118E  51C1               	movf	uart_lthread@msgtype& (0+255),w,b
  1747  001190  0A20               	xorlw	32
  1748  001192  11C2               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1749  001194  A4D8               	btfss	status,2,c
  1750  001196  0012               	return	
  1751                           
  1752                           ; BSR set to: 0
  1753                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1754  001198  0100               	movlb	0	; () banked
  1755  00119A  0100               	movlb	0	; () banked
  1756  00119C  51C3               	movf	uart_lthread@length& (0+255),w,b
  1757  00119E  0100               	movlb	0	; () banked
  1758  0011A0  0100               	movlb	0	; () banked
  1759  0011A2  25C5               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1760  0011A4  6ED9               	movwf	fsr2l,c
  1761  0011A6  0100               	movlb	0	; () banked
  1762  0011A8  0100               	movlb	0	; () banked
  1763  0011AA  51C4               	movf	(uart_lthread@length+1)& (0+255),w,b
  1764  0011AC  0100               	movlb	0	; () banked
  1765  0011AE  0100               	movlb	0	; () banked
  1766  0011B0  21C6               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1767  0011B2  6EDA               	movwf	fsr2h,c
  1768  0011B4  0E00               	movlw	0
  1769  0011B6  6EDF               	movwf	indf2,c
  1770  0011B8  0012               	return	
  1771  0011BA                     __end_of_uart_lthread:
  1772                           	opt stack 0
  1773                           tblptru	equ	0xFF8
  1774                           postinc0	equ	0xFEE
  1775                           wreg	equ	0xFE8
  1776                           indf1	equ	0xFE7
  1777                           fsr1h	equ	0xFE2
  1778                           fsr1l	equ	0xFE1
  1779                           indf2	equ	0xFDF
  1780                           fsr2h	equ	0xFDA
  1781                           fsr2l	equ	0xFD9
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function _FromMainLow_sendmsg *****************
  1785 ;; Defined at:
  1786 ;;		line 150 in file "src/messages.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  length          1    wreg     unsigned char 
  1789 ;;  msgtype         1   59[BANK0 ] unsigned char 
  1790 ;;  data            2   60[BANK0 ] PTR void 
  1791 ;;		 -> main@uthread_data(10), 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  length          1   62[BANK0 ] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      char 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1803 ;;      Params:         0       3       0       0       0
  1804 ;;      Locals:         0       1       0       0       0
  1805 ;;      Temps:          0       0       0       0       0
  1806 ;;      Totals:         0       4       0       0       0
  1807 ;;Total ram usage:        4 bytes
  1808 ;; Hardware stack levels used:    1
  1809 ;; Hardware stack levels required when called:   12
  1810 ;; This function calls:
  1811 ;;		_send_msg
  1812 ;; This function is called by:
  1813 ;;		_uart_lthread
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text2
  1818  001CE4                     __ptext2:
  1819                           	opt stack 0
  1820  001CE4                     _FromMainLow_sendmsg:
  1821                           	opt stack 17
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;incstack = 0
  1825                           ;FromMainLow_sendmsg@length stored from wreg
  1826  001CE4  CFE8 F0BE          	movff	wreg,FromMainLow_sendmsg@length
  1827                           
  1828                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1829  001CE8  0101               	movlb	1	; () banked
  1830  001CEA  0E01               	movlw	high _FromMainLow_MQ
  1831  001CEC  0100               	movlb	0	; () banked
  1832  001CEE  0100               	movlb	0	; () banked
  1833  001CF0  6FB0               	movwf	(send_msg@qptr+1)& (0+255),b
  1834  001CF2  0101               	movlb	1	; () banked
  1835  001CF4  0E00               	movlw	low _FromMainLow_MQ
  1836  001CF6  0100               	movlb	0	; () banked
  1837  001CF8  0100               	movlb	0	; () banked
  1838  001CFA  6FAF               	movwf	send_msg@qptr& (0+255),b
  1839  001CFC  C0BE  F0B1         	movff	FromMainLow_sendmsg@length,send_msg@length
  1840  001D00  C0BB  F0B2         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1841  001D04  0100               	movlb	0	; () banked
  1842  001D06  0100               	movlb	0	; () banked
  1843  001D08  C0BD  F0B4         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1844  001D0C  0100               	movlb	0	; () banked
  1845  001D0E  0100               	movlb	0	; () banked
  1846  001D10  C0BC  F0B3         	movff	FromMainLow_sendmsg@data,send_msg@data
  1847  001D14  EC79  F006         	call	_send_msg	;wreg free
  1848  001D18  0012               	return	
  1849  001D1A                     __end_of_FromMainLow_sendmsg:
  1850                           	opt stack 0
  1851                           tblptru	equ	0xFF8
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           indf1	equ	0xFE7
  1855                           fsr1h	equ	0xFE2
  1856                           fsr1l	equ	0xFE1
  1857                           indf2	equ	0xFDF
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function _timer1_lthread *****************
  1863 ;; Defined at:
  1864 ;;		line 16 in file "src/timer1_thread.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  tptr            2   68[BANK0 ] PTR struct __timer1_thre
  1867 ;;		 -> main@t1thread_data(11), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  temp            2   74[BANK0 ] unsigned char [2]
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2   68[BANK0 ] int 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1879 ;;      Params:         0       2       0       0       0
  1880 ;;      Locals:         0       2       0       0       0
  1881 ;;      Temps:          0       4       0       0       0
  1882 ;;      Totals:         0       8       0       0       0
  1883 ;;Total ram usage:        8 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:   14
  1886 ;; This function calls:
  1887 ;;		_WriteTimer1
  1888 ;;		___lwmod
  1889 ;;		_sendUARTarr
  1890 ;; This function is called by:
  1891 ;;		_main
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text3
  1896  000EEC                     __ptext3:
  1897                           	opt stack 0
  1898  000EEC                     _timer1_lthread:
  1899                           	opt stack 16
  1900                           
  1901                           ;timer1_thread.c: 17: tptr->cmCount++;
  1902                           
  1903                           ;incstack = 0
  1904  000EEC  C0C4  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1905  000EF0  C0C5  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1906  000EF4  2ADE               	incf	postinc2,f,c
  1907  000EF6  0E00               	movlw	0
  1908  000EF8  22DD               	addwfc	postdec2,f,c
  1909                           
  1910                           ;timer1_thread.c: 19: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  1911  000EFA  0100               	movlb	0	; () banked
  1912  000EFC  EE20 F00A          	lfsr	2,10
  1913  000F00  0100               	movlb	0	; () banked
  1914  000F02  51C4               	movf	timer1_lthread@tptr& (0+255),w,b
  1915  000F04  26D9               	addwf	fsr2l,f,c
  1916  000F06  0100               	movlb	0	; () banked
  1917  000F08  51C5               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1918  000F0A  22DA               	addwfc	fsr2h,f,c
  1919  000F0C  50DF               	movf	indf2,w,c
  1920  000F0E  B4D8               	btfsc	status,2,c
  1921  000F10  D054               	goto	l2839
  1922                           
  1923                           ; BSR set to: 0
  1924  000F12  C0C4  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1925  000F16  C0C5  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1926  000F1A  0100               	movlb	0	; () banked
  1927  000F1C  CFDE F0A5          	movff	postinc2,___lwmod@dividend
  1928  000F20  0100               	movlb	0	; () banked
  1929  000F22  CFDD F0A6          	movff	postdec2,___lwmod@dividend+1
  1930  000F26  0100               	movlb	0	; () banked
  1931  000F28  EE20 F006          	lfsr	2,6
  1932  000F2C  0100               	movlb	0	; () banked
  1933  000F2E  51C4               	movf	timer1_lthread@tptr& (0+255),w,b
  1934  000F30  26D9               	addwf	fsr2l,f,c
  1935  000F32  0100               	movlb	0	; () banked
  1936  000F34  51C5               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1937  000F36  22DA               	addwfc	fsr2h,f,c
  1938  000F38  0100               	movlb	0	; () banked
  1939  000F3A  CFDE F0A7          	movff	postinc2,___lwmod@divisor
  1940  000F3E  0100               	movlb	0	; () banked
  1941  000F40  CFDD F0A8          	movff	postdec2,___lwmod@divisor+1
  1942  000F44  EC36  F00B         	call	___lwmod	;wreg free
  1943  000F48  0EFF               	movlw	255
  1944  000F4A  0100               	movlb	0	; () banked
  1945  000F4C  6FC6               	movwf	??_timer1_lthread& (0+255),b
  1946  000F4E  0EFF               	movlw	255
  1947  000F50  6FC7               	movwf	(??_timer1_lthread+1)& (0+255),b
  1948  000F52  0100               	movlb	0	; () banked
  1949  000F54  EE20 F006          	lfsr	2,6
  1950  000F58  0100               	movlb	0	; () banked
  1951  000F5A  51C4               	movf	timer1_lthread@tptr& (0+255),w,b
  1952  000F5C  26D9               	addwf	fsr2l,f,c
  1953  000F5E  0100               	movlb	0	; () banked
  1954  000F60  51C5               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1955  000F62  22DA               	addwfc	fsr2h,f,c
  1956  000F64  CFDE F0C8          	movff	postinc2,??_timer1_lthread+2
  1957  000F68  CFDD F0C9          	movff	postdec2,??_timer1_lthread+3
  1958  000F6C  0100               	movlb	0	; () banked
  1959  000F6E  51C6               	movf	??_timer1_lthread& (0+255),w,b
  1960  000F70  0100               	movlb	0	; () banked
  1961  000F72  27C8               	addwf	(??_timer1_lthread+2)& (0+255),f,b
  1962  000F74  0100               	movlb	0	; () banked
  1963  000F76  51C7               	movf	(??_timer1_lthread+1)& (0+255),w,b
  1964  000F78  0100               	movlb	0	; () banked
  1965  000F7A  23C9               	addwfc	(??_timer1_lthread+3)& (0+255),f,b
  1966  000F7C  0100               	movlb	0	; () banked
  1967  000F7E  0100               	movlb	0	; () banked
  1968  000F80  51A6               	movf	(?___lwmod+1)& (0+255),w,b
  1969  000F82  0100               	movlb	0	; () banked
  1970  000F84  19C9               	xorwf	(??_timer1_lthread+3)& (0+255),w,b
  1971  000F86  E105               	bnz	u1705
  1972  000F88  0100               	movlb	0	; () banked
  1973  000F8A  0100               	movlb	0	; () banked
  1974  000F8C  51A5               	movf	?___lwmod& (0+255),w,b
  1975  000F8E  0100               	movlb	0	; () banked
  1976  000F90  19C8               	xorwf	(??_timer1_lthread+2)& (0+255),w,b
  1977  000F92                     u1705:
  1978  000F92  A4D8               	btfss	status,2,c
  1979  000F94  D012               	goto	l2839
  1980                           
  1981                           ; BSR set to: 0
  1982                           ;timer1_thread.c: 20: unsigned char temp[2] = {0,0};
  1983  000F96  C0CF  F0CA         	movff	timer1_lthread@F5145,timer1_lthread@temp
  1984  000F9A  C0D0  F0CB         	movff	timer1_lthread@F5145+1,timer1_lthread@temp+1
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;timer1_thread.c: 21: sendUARTarr(2,temp);
  1988  000F9E  0100               	movlb	0	; () banked
  1989  000FA0  0E00               	movlw	high timer1_lthread@temp
  1990  000FA2  0100               	movlb	0	; () banked
  1991  000FA4  0100               	movlb	0	; () banked
  1992  000FA6  6FC0               	movwf	(sendUARTarr@data+1)& (0+255),b
  1993  000FA8  0100               	movlb	0	; () banked
  1994  000FAA  0ECA               	movlw	low timer1_lthread@temp
  1995  000FAC  0100               	movlb	0	; () banked
  1996  000FAE  0100               	movlb	0	; () banked
  1997  000FB0  6FBF               	movwf	sendUARTarr@data& (0+255),b
  1998  000FB2  0E02               	movlw	2
  1999  000FB4  ECB3  F00D         	call	_sendUARTarr
  2000                           
  2001                           ;timer1_thread.c: 22: T1CONbits.TMR1ON = 0;;
  2002  000FB8  90CD               	bcf	4045,0,c	;volatile
  2003  000FBA                     l2839:
  2004                           
  2005                           ;timer1_thread.c: 23: }
  2006                           ;timer1_thread.c: 25: WriteTimer1(tptr->cmDist);
  2007  000FBA  0100               	movlb	0	; () banked
  2008  000FBC  EE20 F004          	lfsr	2,4
  2009  000FC0  0100               	movlb	0	; () banked
  2010  000FC2  51C4               	movf	timer1_lthread@tptr& (0+255),w,b
  2011  000FC4  26D9               	addwf	fsr2l,f,c
  2012  000FC6  0100               	movlb	0	; () banked
  2013  000FC8  51C5               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2014  000FCA  22DA               	addwfc	fsr2h,f,c
  2015  000FCC  0100               	movlb	0	; () banked
  2016  000FCE  CFDE F0A5          	movff	postinc2,WriteTimer1@timer1
  2017  000FD2  0100               	movlb	0	; () banked
  2018  000FD4  CFDD F0A6          	movff	postdec2,WriteTimer1@timer1+1
  2019  000FD8  ECA1  F00F         	call	_WriteTimer1	;wreg free
  2020  000FDC  0012               	return	
  2021  000FDE                     __end_of_timer1_lthread:
  2022                           	opt stack 0
  2023                           tblptru	equ	0xFF8
  2024                           postinc0	equ	0xFEE
  2025                           wreg	equ	0xFE8
  2026                           indf1	equ	0xFE7
  2027                           fsr1h	equ	0xFE2
  2028                           fsr1l	equ	0xFE1
  2029                           indf2	equ	0xFDF
  2030                           postinc2	equ	0xFDE
  2031                           postdec2	equ	0xFDD
  2032                           fsr2h	equ	0xFDA
  2033                           fsr2l	equ	0xFD9
  2034                           status	equ	0xFD8
  2035                           
  2036 ;; *************** function _timer0_lthread *****************
  2037 ;; Defined at:
  2038 ;;		line 16 in file "src/timer0_thread.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;  tptr            2   68[BANK0 ] PTR struct __timer0_thre
  2041 ;;		 -> main@t0thread_data(9), 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  temp            2   74[BANK0 ] unsigned char [2]
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  2   68[BANK0 ] int 
  2046 ;; Registers used:
  2047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2053 ;;      Params:         0       2       0       0       0
  2054 ;;      Locals:         0       2       0       0       0
  2055 ;;      Temps:          0       4       0       0       0
  2056 ;;      Totals:         0       8       0       0       0
  2057 ;;Total ram usage:        8 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:   14
  2060 ;; This function calls:
  2061 ;;		_WriteTimer0
  2062 ;;		___lwmod
  2063 ;;		_sendUARTarr
  2064 ;; This function is called by:
  2065 ;;		_main
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text4
  2070  000FDE                     __ptext4:
  2071                           	opt stack 0
  2072  000FDE                     _timer0_lthread:
  2073                           	opt stack 16
  2074                           
  2075                           ;timer0_thread.c: 17: tptr->cmCount++;
  2076                           
  2077                           ;incstack = 0
  2078  000FDE  C0C4  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2079  000FE2  C0C5  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2080  000FE6  2ADE               	incf	postinc2,f,c
  2081  000FE8  0E00               	movlw	0
  2082  000FEA  22DD               	addwfc	postdec2,f,c
  2083                           
  2084                           ;timer0_thread.c: 19: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  2085  000FEC  0100               	movlb	0	; () banked
  2086  000FEE  EE20 F008          	lfsr	2,8
  2087  000FF2  0100               	movlb	0	; () banked
  2088  000FF4  51C4               	movf	timer0_lthread@tptr& (0+255),w,b
  2089  000FF6  26D9               	addwf	fsr2l,f,c
  2090  000FF8  0100               	movlb	0	; () banked
  2091  000FFA  51C5               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2092  000FFC  22DA               	addwfc	fsr2h,f,c
  2093  000FFE  50DF               	movf	indf2,w,c
  2094  001000  B4D8               	btfsc	status,2,c
  2095  001002  D054               	goto	l2801
  2096                           
  2097                           ; BSR set to: 0
  2098  001004  C0C4  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2099  001008  C0C5  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2100  00100C  0100               	movlb	0	; () banked
  2101  00100E  CFDE F0A5          	movff	postinc2,___lwmod@dividend
  2102  001012  0100               	movlb	0	; () banked
  2103  001014  CFDD F0A6          	movff	postdec2,___lwmod@dividend+1
  2104  001018  0100               	movlb	0	; () banked
  2105  00101A  EE20 F006          	lfsr	2,6
  2106  00101E  0100               	movlb	0	; () banked
  2107  001020  51C4               	movf	timer0_lthread@tptr& (0+255),w,b
  2108  001022  26D9               	addwf	fsr2l,f,c
  2109  001024  0100               	movlb	0	; () banked
  2110  001026  51C5               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2111  001028  22DA               	addwfc	fsr2h,f,c
  2112  00102A  0100               	movlb	0	; () banked
  2113  00102C  CFDE F0A7          	movff	postinc2,___lwmod@divisor
  2114  001030  0100               	movlb	0	; () banked
  2115  001032  CFDD F0A8          	movff	postdec2,___lwmod@divisor+1
  2116  001036  EC36  F00B         	call	___lwmod	;wreg free
  2117  00103A  0EFF               	movlw	255
  2118  00103C  0100               	movlb	0	; () banked
  2119  00103E  6FC6               	movwf	??_timer0_lthread& (0+255),b
  2120  001040  0EFF               	movlw	255
  2121  001042  6FC7               	movwf	(??_timer0_lthread+1)& (0+255),b
  2122  001044  0100               	movlb	0	; () banked
  2123  001046  EE20 F006          	lfsr	2,6
  2124  00104A  0100               	movlb	0	; () banked
  2125  00104C  51C4               	movf	timer0_lthread@tptr& (0+255),w,b
  2126  00104E  26D9               	addwf	fsr2l,f,c
  2127  001050  0100               	movlb	0	; () banked
  2128  001052  51C5               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2129  001054  22DA               	addwfc	fsr2h,f,c
  2130  001056  CFDE F0C8          	movff	postinc2,??_timer0_lthread+2
  2131  00105A  CFDD F0C9          	movff	postdec2,??_timer0_lthread+3
  2132  00105E  0100               	movlb	0	; () banked
  2133  001060  51C6               	movf	??_timer0_lthread& (0+255),w,b
  2134  001062  0100               	movlb	0	; () banked
  2135  001064  27C8               	addwf	(??_timer0_lthread+2)& (0+255),f,b
  2136  001066  0100               	movlb	0	; () banked
  2137  001068  51C7               	movf	(??_timer0_lthread+1)& (0+255),w,b
  2138  00106A  0100               	movlb	0	; () banked
  2139  00106C  23C9               	addwfc	(??_timer0_lthread+3)& (0+255),f,b
  2140  00106E  0100               	movlb	0	; () banked
  2141  001070  0100               	movlb	0	; () banked
  2142  001072  51A6               	movf	(?___lwmod+1)& (0+255),w,b
  2143  001074  0100               	movlb	0	; () banked
  2144  001076  19C9               	xorwf	(??_timer0_lthread+3)& (0+255),w,b
  2145  001078  E105               	bnz	u1665
  2146  00107A  0100               	movlb	0	; () banked
  2147  00107C  0100               	movlb	0	; () banked
  2148  00107E  51A5               	movf	?___lwmod& (0+255),w,b
  2149  001080  0100               	movlb	0	; () banked
  2150  001082  19C8               	xorwf	(??_timer0_lthread+2)& (0+255),w,b
  2151  001084                     u1665:
  2152  001084  A4D8               	btfss	status,2,c
  2153  001086  D012               	goto	l2801
  2154                           
  2155                           ; BSR set to: 0
  2156                           ;timer0_thread.c: 20: unsigned char temp[2] = {0,0};
  2157  001088  C0CD  F0CA         	movff	timer0_lthread@F5144,timer0_lthread@temp
  2158  00108C  C0CE  F0CB         	movff	timer0_lthread@F5144+1,timer0_lthread@temp+1
  2159                           
  2160                           ; BSR set to: 0
  2161                           ;timer0_thread.c: 21: sendUARTarr(2,temp);
  2162  001090  0100               	movlb	0	; () banked
  2163  001092  0E00               	movlw	high timer0_lthread@temp
  2164  001094  0100               	movlb	0	; () banked
  2165  001096  0100               	movlb	0	; () banked
  2166  001098  6FC0               	movwf	(sendUARTarr@data+1)& (0+255),b
  2167  00109A  0100               	movlb	0	; () banked
  2168  00109C  0ECA               	movlw	low timer0_lthread@temp
  2169  00109E  0100               	movlb	0	; () banked
  2170  0010A0  0100               	movlb	0	; () banked
  2171  0010A2  6FBF               	movwf	sendUARTarr@data& (0+255),b
  2172  0010A4  0E02               	movlw	2
  2173  0010A6  ECB3  F00D         	call	_sendUARTarr
  2174                           
  2175                           ;timer0_thread.c: 22: T0CONbits.TMR0ON = 0;;
  2176  0010AA  9ED5               	bcf	4053,7,c	;volatile
  2177  0010AC                     l2801:
  2178                           
  2179                           ;timer0_thread.c: 23: }
  2180                           ;timer0_thread.c: 25: WriteTimer0(tptr->cmDist);
  2181  0010AC  0100               	movlb	0	; () banked
  2182  0010AE  EE20 F004          	lfsr	2,4
  2183  0010B2  0100               	movlb	0	; () banked
  2184  0010B4  51C4               	movf	timer0_lthread@tptr& (0+255),w,b
  2185  0010B6  26D9               	addwf	fsr2l,f,c
  2186  0010B8  0100               	movlb	0	; () banked
  2187  0010BA  51C5               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2188  0010BC  22DA               	addwfc	fsr2h,f,c
  2189  0010BE  0100               	movlb	0	; () banked
  2190  0010C0  CFDE F0A5          	movff	postinc2,WriteTimer0@timer0
  2191  0010C4  0100               	movlb	0	; () banked
  2192  0010C6  CFDD F0A6          	movff	postdec2,WriteTimer0@timer0+1
  2193  0010CA  EC98  F00F         	call	_WriteTimer0	;wreg free
  2194  0010CE  0012               	return	
  2195  0010D0                     __end_of_timer0_lthread:
  2196                           	opt stack 0
  2197                           tblptru	equ	0xFF8
  2198                           postinc0	equ	0xFEE
  2199                           wreg	equ	0xFE8
  2200                           indf1	equ	0xFE7
  2201                           fsr1h	equ	0xFE2
  2202                           fsr1l	equ	0xFE1
  2203                           indf2	equ	0xFDF
  2204                           postinc2	equ	0xFDE
  2205                           postdec2	equ	0xFDD
  2206                           fsr2h	equ	0xFDA
  2207                           fsr2l	equ	0xFD9
  2208                           status	equ	0xFD8
  2209                           
  2210 ;; *************** function ___lwmod *****************
  2211 ;; Defined at:
  2212 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\common\lwmod.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;  dividend        2   37[BANK0 ] unsigned int 
  2215 ;;  divisor         2   39[BANK0 ] unsigned int 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  counter         1   42[BANK0 ] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  2   37[BANK0 ] unsigned int 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2227 ;;      Params:         0       4       0       0       0
  2228 ;;      Locals:         0       1       0       0       0
  2229 ;;      Temps:          0       1       0       0       0
  2230 ;;      Totals:         0       6       0       0       0
  2231 ;;Total ram usage:        6 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:   10
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_timer0_lthread
  2238 ;;		_timer1_lthread
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text5
  2243  00166C                     __ptext5:
  2244                           	opt stack 0
  2245  00166C                     ___lwmod:
  2246                           	opt stack 19
  2247                           
  2248                           ;incstack = 0
  2249  00166C  0100               	movlb	0	; () banked
  2250  00166E  0100               	movlb	0	; () banked
  2251  001670  51A8               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2252  001672  11A7               	iorwf	___lwmod@divisor& (0+255),w,b
  2253  001674  B4D8               	btfsc	status,2,c
  2254  001676  D03A               	goto	l1093
  2255                           
  2256                           ; BSR set to: 0
  2257  001678  0100               	movlb	0	; () banked
  2258  00167A  6FA9               	movwf	??___lwmod& (0+255),b
  2259  00167C  0E01               	movlw	1
  2260  00167E  0100               	movlb	0	; () banked
  2261  001680  0100               	movlb	0	; () banked
  2262  001682  6FAA               	movwf	___lwmod@counter& (0+255),b
  2263  001684  0100               	movlb	0	; () banked
  2264  001686  51A9               	movf	??___lwmod& (0+255),w,b
  2265  001688  D009               	goto	l3045
  2266  00168A                     l3043:
  2267                           
  2268                           ; BSR set to: 0
  2269  00168A  0100               	movlb	0	; () banked
  2270  00168C  0100               	movlb	0	; () banked
  2271  00168E  0100               	movlb	0	; () banked
  2272  001690  90D8               	bcf	status,0,c
  2273  001692  37A7               	rlcf	___lwmod@divisor& (0+255),f,b
  2274  001694  37A8               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2275  001696  0100               	movlb	0	; () banked
  2276  001698  0100               	movlb	0	; () banked
  2277  00169A  2BAA               	incf	___lwmod@counter& (0+255),f,b
  2278  00169C                     l3045:
  2279                           
  2280                           ; BSR set to: 0
  2281  00169C  0100               	movlb	0	; () banked
  2282  00169E  0100               	movlb	0	; () banked
  2283  0016A0  AFA8               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2284  0016A2  D7F3               	goto	l3043
  2285  0016A4                     l3047:
  2286                           
  2287                           ; BSR set to: 0
  2288  0016A4  0100               	movlb	0	; () banked
  2289  0016A6  0100               	movlb	0	; () banked
  2290  0016A8  51A7               	movf	___lwmod@divisor& (0+255),w,b
  2291  0016AA  0100               	movlb	0	; () banked
  2292  0016AC  0100               	movlb	0	; () banked
  2293  0016AE  5DA5               	subwf	___lwmod@dividend& (0+255),w,b
  2294  0016B0  0100               	movlb	0	; () banked
  2295  0016B2  0100               	movlb	0	; () banked
  2296  0016B4  51A8               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2297  0016B6  0100               	movlb	0	; () banked
  2298  0016B8  0100               	movlb	0	; () banked
  2299  0016BA  59A6               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2300  0016BC  A0D8               	btfss	status,0,c
  2301  0016BE  D00C               	goto	l3051
  2302                           
  2303                           ; BSR set to: 0
  2304  0016C0  0100               	movlb	0	; () banked
  2305  0016C2  0100               	movlb	0	; () banked
  2306  0016C4  51A7               	movf	___lwmod@divisor& (0+255),w,b
  2307  0016C6  0100               	movlb	0	; () banked
  2308  0016C8  0100               	movlb	0	; () banked
  2309  0016CA  5FA5               	subwf	___lwmod@dividend& (0+255),f,b
  2310  0016CC  0100               	movlb	0	; () banked
  2311  0016CE  0100               	movlb	0	; () banked
  2312  0016D0  51A8               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2313  0016D2  0100               	movlb	0	; () banked
  2314  0016D4  0100               	movlb	0	; () banked
  2315  0016D6  5BA6               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2316  0016D8                     l3051:
  2317                           
  2318                           ; BSR set to: 0
  2319  0016D8  0100               	movlb	0	; () banked
  2320  0016DA  0100               	movlb	0	; () banked
  2321  0016DC  0100               	movlb	0	; () banked
  2322  0016DE  90D8               	bcf	status,0,c
  2323  0016E0  33A8               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2324  0016E2  33A7               	rrcf	___lwmod@divisor& (0+255),f,b
  2325                           
  2326                           ; BSR set to: 0
  2327  0016E4  0100               	movlb	0	; () banked
  2328  0016E6  0100               	movlb	0	; () banked
  2329  0016E8  2FAA               	decfsz	___lwmod@counter& (0+255),f,b
  2330  0016EA  D7DC               	goto	l3047
  2331  0016EC                     l1093:
  2332                           
  2333                           ; BSR set to: 0
  2334  0016EC  C0A5  F0A5         	movff	___lwmod@dividend,?___lwmod
  2335  0016F0  C0A6  F0A6         	movff	___lwmod@dividend+1,?___lwmod+1
  2336                           
  2337                           ; BSR set to: 0
  2338  0016F4  0012               	return	
  2339  0016F6                     __end_of___lwmod:
  2340                           	opt stack 0
  2341                           tblptru	equ	0xFF8
  2342                           postinc0	equ	0xFEE
  2343                           wreg	equ	0xFE8
  2344                           indf1	equ	0xFE7
  2345                           fsr1h	equ	0xFE2
  2346                           fsr1l	equ	0xFE1
  2347                           indf2	equ	0xFDF
  2348                           postinc2	equ	0xFDE
  2349                           postdec2	equ	0xFDD
  2350                           fsr2h	equ	0xFDA
  2351                           fsr2l	equ	0xFD9
  2352                           status	equ	0xFD8
  2353                           
  2354 ;; *************** function _WriteTimer0 *****************
  2355 ;; Defined at:
  2356 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  timer0          2   37[BANK0 ] unsigned int 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  timer           2   39[BANK0 ] struct Timers
  2361 ;; Return value:  Size  Location     Type
  2362 ;;		None               void
  2363 ;; Registers used:
  2364 ;;		None
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2370 ;;      Params:         0       2       0       0       0
  2371 ;;      Locals:         0       2       0       0       0
  2372 ;;      Temps:          0       0       0       0       0
  2373 ;;      Totals:         0       4       0       0       0
  2374 ;;Total ram usage:        4 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:   10
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_timer0_lthread
  2381 ;;		_turn
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text6
  2386  001F30                     __ptext6:
  2387                           	opt stack 0
  2388  001F30                     _WriteTimer0:
  2389                           	opt stack 19
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;incstack = 0
  2393  001F30  C0A5  F0A7         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2394  001F34  C0A6  F0A8         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2395  001F38  C0A8  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2396  001F3C  C0A7  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2397  001F40  0012               	return	
  2398  001F42                     __end_of_WriteTimer0:
  2399                           	opt stack 0
  2400                           tblptru	equ	0xFF8
  2401                           postinc0	equ	0xFEE
  2402                           wreg	equ	0xFE8
  2403                           indf1	equ	0xFE7
  2404                           fsr1h	equ	0xFE2
  2405                           fsr1l	equ	0xFE1
  2406                           indf2	equ	0xFDF
  2407                           postinc2	equ	0xFDE
  2408                           postdec2	equ	0xFDD
  2409                           fsr2h	equ	0xFDA
  2410                           fsr2l	equ	0xFD9
  2411                           status	equ	0xFD8
  2412                           
  2413 ;; *************** function _start_i2c_slave_reply *****************
  2414 ;; Defined at:
  2415 ;;		line 53 in file "src/my_i2c.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  length          1    wreg     unsigned char 
  2418 ;;  msg             2   37[BANK0 ] PTR unsigned char 
  2419 ;;		 -> main@msgbuffer(11), 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  length          1   41[BANK0 ] unsigned char 
  2422 ;; Return value:  Size  Location     Type
  2423 ;;		None               void
  2424 ;; Registers used:
  2425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2431 ;;      Params:         0       2       0       0       0
  2432 ;;      Locals:         0       1       0       0       0
  2433 ;;      Temps:          0       2       0       0       0
  2434 ;;      Totals:         0       5       0       0       0
  2435 ;;Total ram usage:        5 bytes
  2436 ;; Hardware stack levels used:    1
  2437 ;; Hardware stack levels required when called:   10
  2438 ;; This function calls:
  2439 ;;		Nothing
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text7
  2446  000BE4                     __ptext7:
  2447                           	opt stack 0
  2448  000BE4                     _start_i2c_slave_reply:
  2449                           	opt stack 20
  2450                           
  2451                           ;incstack = 0
  2452                           ;start_i2c_slave_reply@length stored from wreg
  2453  000BE4  CFE8 F0A9          	movff	wreg,start_i2c_slave_reply@length
  2454                           
  2455                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2456  000BE8  0100               	movlb	0	; () banked
  2457  000BEA  EE20 F019          	lfsr	2,25
  2458  000BEE  0100               	movlb	0	; () banked
  2459  000BF0  51D1               	movf	_ic_ptr& (0+255),w,b
  2460  000BF2  26D9               	addwf	fsr2l,f,c
  2461  000BF4  0100               	movlb	0	; () banked
  2462  000BF6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2463  000BF8  22DA               	addwfc	fsr2h,f,c
  2464  000BFA  0E00               	movlw	0
  2465  000BFC  6EDF               	movwf	indf2,c
  2466  000BFE  D042               	goto	l2819
  2467  000C00                     l2815:
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2471  000C00  0100               	movlb	0	; () banked
  2472  000C02  EE20 F019          	lfsr	2,25
  2473  000C06  0100               	movlb	0	; () banked
  2474  000C08  51D1               	movf	_ic_ptr& (0+255),w,b
  2475  000C0A  26D9               	addwf	fsr2l,f,c
  2476  000C0C  0100               	movlb	0	; () banked
  2477  000C0E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2478  000C10  22DA               	addwfc	fsr2h,f,c
  2479  000C12  50DF               	movf	indf2,w,c
  2480  000C14  0100               	movlb	0	; () banked
  2481  000C16  6FA7               	movwf	??_start_i2c_slave_reply& (0+255),b
  2482  000C18  0100               	movlb	0	; () banked
  2483  000C1A  51A7               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2484  000C1C  0D01               	mullw	1
  2485  000C1E  50F3               	movf	prodl,w,c
  2486  000C20  0100               	movlb	0	; () banked
  2487  000C22  0100               	movlb	0	; () banked
  2488  000C24  25A5               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2489  000C26  6ED9               	movwf	fsr2l,c
  2490  000C28  50F4               	movf	prodh,w,c
  2491  000C2A  0100               	movlb	0	; () banked
  2492  000C2C  0100               	movlb	0	; () banked
  2493  000C2E  21A6               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2494  000C30  6EDA               	movwf	fsr2h,c
  2495  000C32  0100               	movlb	0	; () banked
  2496  000C34  EE10 F019          	lfsr	1,25
  2497  000C38  0100               	movlb	0	; () banked
  2498  000C3A  51D1               	movf	_ic_ptr& (0+255),w,b
  2499  000C3C  26E1               	addwf	fsr1l,f,c
  2500  000C3E  0100               	movlb	0	; () banked
  2501  000C40  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2502  000C42  22E2               	addwfc	fsr1h,f,c
  2503  000C44  50E7               	movf	indf1,w,c
  2504  000C46  0100               	movlb	0	; () banked
  2505  000C48  6FA8               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2506  000C4A  0100               	movlb	0	; () banked
  2507  000C4C  51A8               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2508  000C4E  0D01               	mullw	1
  2509  000C50  0E0F               	movlw	15
  2510  000C52  26F3               	addwf	prodl,f,c
  2511  000C54  0E00               	movlw	0
  2512  000C56  22F4               	addwfc	prodh,f,c
  2513  000C58  50F3               	movf	prodl,w,c
  2514  000C5A  0100               	movlb	0	; () banked
  2515  000C5C  0100               	movlb	0	; () banked
  2516  000C5E  25D1               	addwf	_ic_ptr& (0+255),w,b
  2517  000C60  6EE1               	movwf	fsr1l,c
  2518  000C62  50F4               	movf	prodh,w,c
  2519  000C64  0100               	movlb	0	; () banked
  2520  000C66  0100               	movlb	0	; () banked
  2521  000C68  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2522  000C6A  6EE2               	movwf	fsr1h,c
  2523  000C6C  CFDF FFE7          	movff	indf2,indf1
  2524                           
  2525                           ; BSR set to: 0
  2526  000C70  0100               	movlb	0	; () banked
  2527  000C72  EE20 F019          	lfsr	2,25
  2528  000C76  0100               	movlb	0	; () banked
  2529  000C78  51D1               	movf	_ic_ptr& (0+255),w,b
  2530  000C7A  26D9               	addwf	fsr2l,f,c
  2531  000C7C  0100               	movlb	0	; () banked
  2532  000C7E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2533  000C80  22DA               	addwfc	fsr2h,f,c
  2534  000C82  2ADF               	incf	indf2,f,c
  2535  000C84                     l2819:
  2536                           
  2537                           ; BSR set to: 0
  2538  000C84  0100               	movlb	0	; () banked
  2539  000C86  EE20 F019          	lfsr	2,25
  2540  000C8A  0100               	movlb	0	; () banked
  2541  000C8C  51D1               	movf	_ic_ptr& (0+255),w,b
  2542  000C8E  26D9               	addwf	fsr2l,f,c
  2543  000C90  0100               	movlb	0	; () banked
  2544  000C92  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2545  000C94  22DA               	addwfc	fsr2h,f,c
  2546  000C96  50DF               	movf	indf2,w,c
  2547  000C98  0100               	movlb	0	; () banked
  2548  000C9A  6FA7               	movwf	??_start_i2c_slave_reply& (0+255),b
  2549  000C9C  0100               	movlb	0	; () banked
  2550  000C9E  0100               	movlb	0	; () banked
  2551  000CA0  51A9               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2552  000CA2  0100               	movlb	0	; () banked
  2553  000CA4  5DA7               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2554  000CA6  A0D8               	btfss	status,0,c
  2555  000CA8  D7AB               	goto	l2815
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;my_i2c.c: 57: }
  2559                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2560                           
  2561                           ; BSR set to: 0
  2562  000CAA  0100               	movlb	0	; () banked
  2563  000CAC  EE20 F019          	lfsr	2,25
  2564  000CB0  0100               	movlb	0	; () banked
  2565  000CB2  51D1               	movf	_ic_ptr& (0+255),w,b
  2566  000CB4  26D9               	addwf	fsr2l,f,c
  2567  000CB6  0100               	movlb	0	; () banked
  2568  000CB8  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2569  000CBA  22DA               	addwfc	fsr2h,f,c
  2570  000CBC  0100               	movlb	0	; () banked
  2571  000CBE  C0A9  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2572                           
  2573                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2574  000CC2  0100               	movlb	0	; () banked
  2575  000CC4  EE20 F01A          	lfsr	2,26
  2576  000CC8  0100               	movlb	0	; () banked
  2577  000CCA  51D1               	movf	_ic_ptr& (0+255),w,b
  2578  000CCC  26D9               	addwf	fsr2l,f,c
  2579  000CCE  0100               	movlb	0	; () banked
  2580  000CD0  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2581  000CD2  22DA               	addwfc	fsr2h,f,c
  2582  000CD4  0E01               	movlw	1
  2583  000CD6  6EDF               	movwf	indf2,c
  2584                           
  2585                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2586  000CD8  0100               	movlb	0	; () banked
  2587  000CDA  EE20 F00F          	lfsr	2,15
  2588  000CDE  0100               	movlb	0	; () banked
  2589  000CE0  51D1               	movf	_ic_ptr& (0+255),w,b
  2590  000CE2  26D9               	addwf	fsr2l,f,c
  2591  000CE4  0100               	movlb	0	; () banked
  2592  000CE6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  2593  000CE8  22DA               	addwfc	fsr2h,f,c
  2594  000CEA  50DF               	movf	indf2,w,c
  2595  000CEC  6EC9               	movwf	4041,c	;volatile
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2599  000CEE  88C6               	bsf	4038,4,c	;volatile
  2600                           
  2601                           ; BSR set to: 0
  2602  000CF0  0012               	return	
  2603  000CF2                     __end_of_start_i2c_slave_reply:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           prodh	equ	0xFF4
  2607                           prodl	equ	0xFF3
  2608                           postinc0	equ	0xFEE
  2609                           wreg	equ	0xFE8
  2610                           indf1	equ	0xFE7
  2611                           fsr1h	equ	0xFE2
  2612                           fsr1l	equ	0xFE1
  2613                           indf2	equ	0xFDF
  2614                           postinc2	equ	0xFDE
  2615                           postdec2	equ	0xFDD
  2616                           fsr2h	equ	0xFDA
  2617                           fsr2l	equ	0xFD9
  2618                           status	equ	0xFD8
  2619                           
  2620 ;; *************** function _moveDist *****************
  2621 ;; Defined at:
  2622 ;;		line 15 in file "src/motors.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;  tptr            2   68[BANK0 ] PTR struct __timer1_thre
  2625 ;;		 -> main@t1thread_data(11), 
  2626 ;;  dist            2   70[BANK0 ] int 
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;  test            2   72[BANK0 ] unsigned char [2]
  2629 ;; Return value:  Size  Location     Type
  2630 ;;		None               void
  2631 ;; Registers used:
  2632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2638 ;;      Params:         0       4       0       0       0
  2639 ;;      Locals:         0       2       0       0       0
  2640 ;;      Temps:          0       0       0       0       0
  2641 ;;      Totals:         0       6       0       0       0
  2642 ;;Total ram usage:        6 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:   14
  2645 ;; This function calls:
  2646 ;;		_WriteTimer1
  2647 ;;		_sendUARTarr
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           	psect	text8
  2654  0013FE                     __ptext8:
  2655                           	opt stack 0
  2656  0013FE                     _moveDist:
  2657                           	opt stack 16
  2658                           
  2659                           ;motors.c: 16: tptr->distLim = true;
  2660                           
  2661                           ; BSR set to: 0
  2662                           ;incstack = 0
  2663  0013FE  0100               	movlb	0	; () banked
  2664  001400  EE20 F00A          	lfsr	2,10
  2665  001404  0100               	movlb	0	; () banked
  2666  001406  51C4               	movf	moveDist@tptr& (0+255),w,b
  2667  001408  26D9               	addwf	fsr2l,f,c
  2668  00140A  0100               	movlb	0	; () banked
  2669  00140C  51C5               	movf	(moveDist@tptr+1)& (0+255),w,b
  2670  00140E  22DA               	addwfc	fsr2h,f,c
  2671  001410  0E01               	movlw	1
  2672  001412  6EDF               	movwf	indf2,c
  2673                           
  2674                           ;motors.c: 17: tptr->curMove = dist;
  2675  001414  0100               	movlb	0	; () banked
  2676  001416  EE20 F006          	lfsr	2,6
  2677  00141A  0100               	movlb	0	; () banked
  2678  00141C  51C4               	movf	moveDist@tptr& (0+255),w,b
  2679  00141E  26D9               	addwf	fsr2l,f,c
  2680  001420  0100               	movlb	0	; () banked
  2681  001422  51C5               	movf	(moveDist@tptr+1)& (0+255),w,b
  2682  001424  22DA               	addwfc	fsr2h,f,c
  2683  001426  0100               	movlb	0	; () banked
  2684  001428  C0C6  FFDE         	movff	moveDist@dist,postinc2
  2685  00142C  0100               	movlb	0	; () banked
  2686  00142E  C0C7  FFDD         	movff	moveDist@dist+1,postdec2
  2687                           
  2688                           ;motors.c: 18: unsigned char test[2];
  2689                           ;motors.c: 19: test[0] = tptr->ctrl[0];
  2690  001432  0100               	movlb	0	; () banked
  2691  001434  EE20 F002          	lfsr	2,2
  2692  001438  0100               	movlb	0	; () banked
  2693  00143A  51C4               	movf	moveDist@tptr& (0+255),w,b
  2694  00143C  26D9               	addwf	fsr2l,f,c
  2695  00143E  0100               	movlb	0	; () banked
  2696  001440  51C5               	movf	(moveDist@tptr+1)& (0+255),w,b
  2697  001442  22DA               	addwfc	fsr2h,f,c
  2698  001444  50DF               	movf	indf2,w,c
  2699  001446  0100               	movlb	0	; () banked
  2700  001448  0100               	movlb	0	; () banked
  2701  00144A  6FC8               	movwf	moveDist@test& (0+255),b
  2702                           
  2703                           ;motors.c: 20: test[1] = tptr->ctrl[1];
  2704  00144C  0100               	movlb	0	; () banked
  2705  00144E  EE20 F003          	lfsr	2,3
  2706  001452  0100               	movlb	0	; () banked
  2707  001454  51C4               	movf	moveDist@tptr& (0+255),w,b
  2708  001456  26D9               	addwf	fsr2l,f,c
  2709  001458  0100               	movlb	0	; () banked
  2710  00145A  51C5               	movf	(moveDist@tptr+1)& (0+255),w,b
  2711  00145C  22DA               	addwfc	fsr2h,f,c
  2712  00145E  50DF               	movf	indf2,w,c
  2713  001460  0100               	movlb	0	; () banked
  2714  001462  0100               	movlb	0	; () banked
  2715  001464  6FC9               	movwf	(moveDist@test+1)& (0+255),b
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;motors.c: 21: T1CONbits.TMR1ON = 1;;
  2719  001466  80CD               	bsf	4045,0,c	;volatile
  2720                           
  2721                           ; BSR set to: 0
  2722                           ;motors.c: 22: sendUARTarr(2,test);
  2723  001468  0100               	movlb	0	; () banked
  2724  00146A  0E00               	movlw	high moveDist@test
  2725  00146C  0100               	movlb	0	; () banked
  2726  00146E  0100               	movlb	0	; () banked
  2727  001470  6FC0               	movwf	(sendUARTarr@data+1)& (0+255),b
  2728  001472  0100               	movlb	0	; () banked
  2729  001474  0EC8               	movlw	low moveDist@test
  2730  001476  0100               	movlb	0	; () banked
  2731  001478  0100               	movlb	0	; () banked
  2732  00147A  6FBF               	movwf	sendUARTarr@data& (0+255),b
  2733  00147C  0E02               	movlw	2
  2734  00147E  ECB3  F00D         	call	_sendUARTarr
  2735                           
  2736                           ;motors.c: 23: WriteTimer1(tptr->cmDist);
  2737  001482  0100               	movlb	0	; () banked
  2738  001484  EE20 F004          	lfsr	2,4
  2739  001488  0100               	movlb	0	; () banked
  2740  00148A  51C4               	movf	moveDist@tptr& (0+255),w,b
  2741  00148C  26D9               	addwf	fsr2l,f,c
  2742  00148E  0100               	movlb	0	; () banked
  2743  001490  51C5               	movf	(moveDist@tptr+1)& (0+255),w,b
  2744  001492  22DA               	addwfc	fsr2h,f,c
  2745  001494  0100               	movlb	0	; () banked
  2746  001496  CFDE F0A5          	movff	postinc2,WriteTimer1@timer1
  2747  00149A  0100               	movlb	0	; () banked
  2748  00149C  CFDD F0A6          	movff	postdec2,WriteTimer1@timer1+1
  2749  0014A0  ECA1  F00F         	call	_WriteTimer1	;wreg free
  2750  0014A4  0012               	return	
  2751  0014A6                     __end_of_moveDist:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           indf1	equ	0xFE7
  2759                           fsr1h	equ	0xFE2
  2760                           fsr1l	equ	0xFE1
  2761                           indf2	equ	0xFDF
  2762                           postinc2	equ	0xFDE
  2763                           postdec2	equ	0xFDD
  2764                           fsr2h	equ	0xFDA
  2765                           fsr2l	equ	0xFD9
  2766                           status	equ	0xFD8
  2767                           
  2768 ;; *************** function _sendUARTarr *****************
  2769 ;; Defined at:
  2770 ;;		line 85 in file "src/my_uart.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  length          1    wreg     unsigned char 
  2773 ;;  data            2   63[BANK0 ] PTR unsigned char 
  2774 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), stop@test(2), turn@test(2), 
  2775 ;;		 -> moveDist@test(2), move@test(2), main@ctrl(2), 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  length          1   67[BANK0 ] unsigned char 
  2778 ;;  retval          1   66[BANK0 ] char 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      enum E4332
  2781 ;; Registers used:
  2782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2788 ;;      Params:         0       2       0       0       0
  2789 ;;      Locals:         0       2       0       0       0
  2790 ;;      Temps:          0       1       0       0       0
  2791 ;;      Totals:         0       5       0       0       0
  2792 ;;Total ram usage:        5 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:   13
  2795 ;; This function calls:
  2796 ;;		_ToMainLow_sendmsg
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;;		_moveDist
  2800 ;;		_timer0_lthread
  2801 ;;		_timer1_lthread
  2802 ;;		_move
  2803 ;;		_turn
  2804 ;;		_stop
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           	psect	text9
  2809  001B66                     __ptext9:
  2810                           	opt stack 0
  2811  001B66                     _sendUARTarr:
  2812                           	opt stack 16
  2813                           
  2814                           ;incstack = 0
  2815                           ;sendUARTarr@length stored from wreg
  2816  001B66  CFE8 F0C3          	movff	wreg,sendUARTarr@length
  2817                           
  2818                           ;my_uart.c: 86: if(length > 10){
  2819  001B6A  0E0A               	movlw	10
  2820  001B6C  0100               	movlb	0	; () banked
  2821  001B6E  0100               	movlb	0	; () banked
  2822  001B70  65C3               	cpfsgt	sendUARTarr@length& (0+255),b
  2823  001B72  D001               	goto	l2807
  2824  001B74  0012               	return	
  2825  001B76                     l2807:
  2826                           
  2827                           ; BSR set to: 0
  2828                           ;my_uart.c: 89: }
  2829                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  2830  001B76  0100               	movlb	0	; () banked
  2831  001B78  6FC1               	movwf	??_sendUARTarr& (0+255),b
  2832  001B7A  0E1F               	movlw	31
  2833  001B7C  0100               	movlb	0	; () banked
  2834  001B7E  0100               	movlb	0	; () banked
  2835  001B80  6FBB               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2836  001B82  0100               	movlb	0	; () banked
  2837  001B84  51C1               	movf	??_sendUARTarr& (0+255),w,b
  2838  001B86  0100               	movlb	0	; () banked
  2839  001B88  0100               	movlb	0	; () banked
  2840  001B8A  C0C0  F0BD         	movff	sendUARTarr@data+1,ToMainLow_sendmsg@data+1
  2841  001B8E  0100               	movlb	0	; () banked
  2842  001B90  0100               	movlb	0	; () banked
  2843  001B92  C0BF  F0BC         	movff	sendUARTarr@data,ToMainLow_sendmsg@data
  2844  001B96  0100               	movlb	0	; () banked
  2845  001B98  0100               	movlb	0	; () banked
  2846  001B9A  51C3               	movf	sendUARTarr@length& (0+255),w,b
  2847  001B9C  EC8D  F00E         	call	_ToMainLow_sendmsg
  2848  001BA0  0100               	movlb	0	; () banked
  2849  001BA2  0100               	movlb	0	; () banked
  2850  001BA4  6FC2               	movwf	sendUARTarr@retval& (0+255),b
  2851  001BA6  0012               	return	
  2852  001BA8                     __end_of_sendUARTarr:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           prodh	equ	0xFF4
  2856                           prodl	equ	0xFF3
  2857                           postinc0	equ	0xFEE
  2858                           wreg	equ	0xFE8
  2859                           indf1	equ	0xFE7
  2860                           fsr1h	equ	0xFE2
  2861                           fsr1l	equ	0xFE1
  2862                           indf2	equ	0xFDF
  2863                           postinc2	equ	0xFDE
  2864                           postdec2	equ	0xFDD
  2865                           fsr2h	equ	0xFDA
  2866                           fsr2l	equ	0xFD9
  2867                           status	equ	0xFD8
  2868                           
  2869 ;; *************** function _ToMainLow_sendmsg *****************
  2870 ;; Defined at:
  2871 ;;		line 103 in file "src/messages.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;  length          1    wreg     unsigned char 
  2874 ;;  msgtype         1   59[BANK0 ] unsigned char 
  2875 ;;  data            2   60[BANK0 ] PTR void 
  2876 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  2877 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@ctrl(2), 
  2878 ;;		 -> main@uc(5), NULL(0), 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;  length          1   62[BANK0 ] unsigned char 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      char 
  2883 ;; Registers used:
  2884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2890 ;;      Params:         0       3       0       0       0
  2891 ;;      Locals:         0       1       0       0       0
  2892 ;;      Temps:          0       0       0       0       0
  2893 ;;      Totals:         0       4       0       0       0
  2894 ;;Total ram usage:        4 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:   12
  2897 ;; This function calls:
  2898 ;;		_send_msg
  2899 ;; This function is called by:
  2900 ;;		_sendUARTarr
  2901 ;;		_sendUARTbyte
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text10
  2906  001D1A                     __ptext10:
  2907                           	opt stack 0
  2908  001D1A                     _ToMainLow_sendmsg:
  2909                           	opt stack 16
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;incstack = 0
  2913                           ;ToMainLow_sendmsg@length stored from wreg
  2914  001D1A  CFE8 F0BE          	movff	wreg,ToMainLow_sendmsg@length
  2915                           
  2916                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2917  001D1E  0101               	movlb	1	; () banked
  2918  001D20  0E01               	movlw	high _ToMainLow_MQ
  2919  001D22  0100               	movlb	0	; () banked
  2920  001D24  0100               	movlb	0	; () banked
  2921  001D26  6FB0               	movwf	(send_msg@qptr+1)& (0+255),b
  2922  001D28  0101               	movlb	1	; () banked
  2923  001D2A  0E6C               	movlw	low _ToMainLow_MQ
  2924  001D2C  0100               	movlb	0	; () banked
  2925  001D2E  0100               	movlb	0	; () banked
  2926  001D30  6FAF               	movwf	send_msg@qptr& (0+255),b
  2927  001D32  C0BE  F0B1         	movff	ToMainLow_sendmsg@length,send_msg@length
  2928  001D36  C0BB  F0B2         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2929  001D3A  0100               	movlb	0	; () banked
  2930  001D3C  0100               	movlb	0	; () banked
  2931  001D3E  C0BD  F0B4         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2932  001D42  0100               	movlb	0	; () banked
  2933  001D44  0100               	movlb	0	; () banked
  2934  001D46  C0BC  F0B3         	movff	ToMainLow_sendmsg@data,send_msg@data
  2935  001D4A  EC79  F006         	call	_send_msg	;wreg free
  2936  001D4E  0012               	return	
  2937  001D50                     __end_of_ToMainLow_sendmsg:
  2938                           	opt stack 0
  2939                           tblptru	equ	0xFF8
  2940                           prodh	equ	0xFF4
  2941                           prodl	equ	0xFF3
  2942                           postinc0	equ	0xFEE
  2943                           wreg	equ	0xFE8
  2944                           indf1	equ	0xFE7
  2945                           fsr1h	equ	0xFE2
  2946                           fsr1l	equ	0xFE1
  2947                           indf2	equ	0xFDF
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           fsr2h	equ	0xFDA
  2951                           fsr2l	equ	0xFD9
  2952                           status	equ	0xFD8
  2953                           
  2954 ;; *************** function _send_msg *****************
  2955 ;; Defined at:
  2956 ;;		line 24 in file "src/messages.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;  qptr            2   47[BANK0 ] PTR struct __msg_queue
  2959 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2960 ;;  length          1   49[BANK0 ] unsigned char 
  2961 ;;  msgtype         1   50[BANK0 ] unsigned char 
  2962 ;;  data            2   51[BANK0 ] PTR void 
  2963 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  2964 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  2965 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  2966 ;;		 -> NULL(0), 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  qmsg            2   57[BANK0 ] PTR struct __msg
  2969 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2970 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2971 ;;  tlength         2   54[BANK0 ] unsigned int 
  2972 ;;  slot            1   56[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      char 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2982 ;;      Params:         0       6       0       0       0
  2983 ;;      Locals:         0       5       0       0       0
  2984 ;;      Temps:          0       1       0       0       0
  2985 ;;      Totals:         0      12       0       0       0
  2986 ;;Total ram usage:       12 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:   11
  2989 ;; This function calls:
  2990 ;;		_memcpy
  2991 ;; This function is called by:
  2992 ;;		_ToMainLow_sendmsg
  2993 ;;		_FromMainLow_sendmsg
  2994 ;;		_FromMainHigh_sendmsg
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text11
  2999  000CF2                     __ptext11:
  3000                           	opt stack 0
  3001  000CF2                     _send_msg:
  3002                           	opt stack 17
  3003                           
  3004                           ;messages.c: 25: unsigned char slot;
  3005                           ;messages.c: 27: msg *qmsg;
  3006                           ;messages.c: 28: size_t tlength = length;
  3007                           
  3008                           ;incstack = 0
  3009  000CF2  0100               	movlb	0	; () banked
  3010  000CF4  0100               	movlb	0	; () banked
  3011  000CF6  C0B1  F0B6         	movff	send_msg@length,send_msg@tlength
  3012  000CFA  0100               	movlb	0	; () banked
  3013  000CFC  0100               	movlb	0	; () banked
  3014  000CFE  6BB7               	clrf	(send_msg@tlength+1)& (0+255),b
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3018  000D00  0100               	movlb	0	; () banked
  3019  000D02  EE20 F034          	lfsr	2,52
  3020  000D06  0100               	movlb	0	; () banked
  3021  000D08  51AF               	movf	send_msg@qptr& (0+255),w,b
  3022  000D0A  26D9               	addwf	fsr2l,f,c
  3023  000D0C  0100               	movlb	0	; () banked
  3024  000D0E  51B0               	movf	(send_msg@qptr+1)& (0+255),w,b
  3025  000D10  22DA               	addwfc	fsr2h,f,c
  3026  000D12  50DF               	movf	indf2,w,c
  3027  000D14  0100               	movlb	0	; () banked
  3028  000D16  0100               	movlb	0	; () banked
  3029  000D18  6FB8               	movwf	send_msg@slot& (0+255),b
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3033  000D1A  0100               	movlb	0	; () banked
  3034  000D1C  0100               	movlb	0	; () banked
  3035  000D1E  51B8               	movf	send_msg@slot& (0+255),w,b
  3036  000D20  0D0D               	mullw	13
  3037  000D22  50F3               	movf	prodl,w,c
  3038  000D24  0100               	movlb	0	; () banked
  3039  000D26  0100               	movlb	0	; () banked
  3040  000D28  25AF               	addwf	send_msg@qptr& (0+255),w,b
  3041  000D2A  0100               	movlb	0	; () banked
  3042  000D2C  0100               	movlb	0	; () banked
  3043  000D2E  6FB9               	movwf	send_msg@qmsg& (0+255),b
  3044  000D30  50F4               	movf	prodh,w,c
  3045  000D32  0100               	movlb	0	; () banked
  3046  000D34  0100               	movlb	0	; () banked
  3047  000D36  21B0               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3048  000D38  0100               	movlb	0	; () banked
  3049  000D3A  6FBA               	movwf	(send_msg@qmsg+1)& (0+255),b
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;messages.c: 41: if (qmsg->full != 0) {
  3053  000D3C  C0B9  FFD9         	movff	send_msg@qmsg,fsr2l
  3054  000D40  C0BA  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3055  000D44  50DF               	movf	indf2,w,c
  3056  000D46  B4D8               	btfsc	status,2,c
  3057  000D48  D002               	goto	l2893
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;messages.c: 42: return (-1);
  3061  000D4A  0EFF               	movlw	255
  3062  000D4C  0012               	return	
  3063  000D4E                     l2893:
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;messages.c: 43: }
  3067                           ;messages.c: 46: qmsg->length = length;
  3068  000D4E  0100               	movlb	0	; () banked
  3069  000D50  EE20 F001          	lfsr	2,1
  3070  000D54  0100               	movlb	0	; () banked
  3071  000D56  51B9               	movf	send_msg@qmsg& (0+255),w,b
  3072  000D58  26D9               	addwf	fsr2l,f,c
  3073  000D5A  0100               	movlb	0	; () banked
  3074  000D5C  51BA               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3075  000D5E  22DA               	addwfc	fsr2h,f,c
  3076  000D60  0100               	movlb	0	; () banked
  3077  000D62  C0B1  FFDF         	movff	send_msg@length,indf2
  3078                           
  3079                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3080  000D66  0100               	movlb	0	; () banked
  3081  000D68  EE20 F002          	lfsr	2,2
  3082  000D6C  0100               	movlb	0	; () banked
  3083  000D6E  51B9               	movf	send_msg@qmsg& (0+255),w,b
  3084  000D70  26D9               	addwf	fsr2l,f,c
  3085  000D72  0100               	movlb	0	; () banked
  3086  000D74  51BA               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3087  000D76  22DA               	addwfc	fsr2h,f,c
  3088  000D78  0100               	movlb	0	; () banked
  3089  000D7A  C0B2  FFDF         	movff	send_msg@msgtype,indf2
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3093  000D7E  0E03               	movlw	3
  3094  000D80  0100               	movlb	0	; () banked
  3095  000D82  0100               	movlb	0	; () banked
  3096  000D84  25B9               	addwf	send_msg@qmsg& (0+255),w,b
  3097  000D86  0100               	movlb	0	; () banked
  3098  000D88  0100               	movlb	0	; () banked
  3099  000D8A  6FA5               	movwf	memcpy@d1& (0+255),b
  3100  000D8C  0E00               	movlw	0
  3101  000D8E  0100               	movlb	0	; () banked
  3102  000D90  0100               	movlb	0	; () banked
  3103  000D92  21BA               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3104  000D94  0100               	movlb	0	; () banked
  3105  000D96  6FA6               	movwf	(memcpy@d1+1)& (0+255),b
  3106  000D98  0100               	movlb	0	; () banked
  3107  000D9A  0100               	movlb	0	; () banked
  3108  000D9C  C0B4  F0A8         	movff	send_msg@data+1,memcpy@s1+1
  3109  000DA0  0100               	movlb	0	; () banked
  3110  000DA2  0100               	movlb	0	; () banked
  3111  000DA4  C0B3  F0A7         	movff	send_msg@data,memcpy@s1
  3112  000DA8  C0B6  F0A9         	movff	send_msg@tlength,memcpy@n
  3113  000DAC  C0B7  F0AA         	movff	send_msg@tlength+1,memcpy@n+1
  3114  000DB0  ECEB  F00C         	call	_memcpy	;wreg free
  3115                           
  3116                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3117  000DB4  0100               	movlb	0	; () banked
  3118  000DB6  EE20 F034          	lfsr	2,52
  3119  000DBA  0100               	movlb	0	; () banked
  3120  000DBC  51AF               	movf	send_msg@qptr& (0+255),w,b
  3121  000DBE  26D9               	addwf	fsr2l,f,c
  3122  000DC0  0100               	movlb	0	; () banked
  3123  000DC2  51B0               	movf	(send_msg@qptr+1)& (0+255),w,b
  3124  000DC4  22DA               	addwfc	fsr2h,f,c
  3125  000DC6  0100               	movlb	0	; () banked
  3126  000DC8  EE10 F034          	lfsr	1,52
  3127  000DCC  0100               	movlb	0	; () banked
  3128  000DCE  51AF               	movf	send_msg@qptr& (0+255),w,b
  3129  000DD0  26E1               	addwf	fsr1l,f,c
  3130  000DD2  0100               	movlb	0	; () banked
  3131  000DD4  51B0               	movf	(send_msg@qptr+1)& (0+255),w,b
  3132  000DD6  22E2               	addwfc	fsr1h,f,c
  3133  000DD8  50E7               	movf	indf1,w,c
  3134  000DDA  0100               	movlb	0	; () banked
  3135  000DDC  6FB5               	movwf	??_send_msg& (0+255),b
  3136  000DDE  0100               	movlb	0	; () banked
  3137  000DE0  29B5               	incf	??_send_msg& (0+255),w,b
  3138  000DE2  0B03               	andlw	3
  3139  000DE4  6EDF               	movwf	indf2,c
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;messages.c: 59: qmsg->full = 1;
  3143  000DE6  C0B9  FFD9         	movff	send_msg@qmsg,fsr2l
  3144  000DEA  C0BA  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3145  000DEE  0E01               	movlw	1
  3146  000DF0  6EDF               	movwf	indf2,c
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;messages.c: 60: return (1);
  3150  000DF2  0E01               	movlw	1
  3151  000DF4  0012               	return	
  3152  000DF6                     __end_of_send_msg:
  3153                           	opt stack 0
  3154                           tblptru	equ	0xFF8
  3155                           prodh	equ	0xFF4
  3156                           prodl	equ	0xFF3
  3157                           postinc0	equ	0xFEE
  3158                           wreg	equ	0xFE8
  3159                           indf1	equ	0xFE7
  3160                           fsr1h	equ	0xFE2
  3161                           fsr1l	equ	0xFE1
  3162                           indf2	equ	0xFDF
  3163                           postinc2	equ	0xFDE
  3164                           postdec2	equ	0xFDD
  3165                           fsr2h	equ	0xFDA
  3166                           fsr2l	equ	0xFD9
  3167                           status	equ	0xFD8
  3168                           
  3169 ;; *************** function _WriteTimer1 *****************
  3170 ;; Defined at:
  3171 ;;		line 14 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  timer1          2   37[BANK0 ] unsigned int 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  timer           2   39[BANK0 ] struct Timers
  3176 ;; Return value:  Size  Location     Type
  3177 ;;		None               void
  3178 ;; Registers used:
  3179 ;;		None
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3185 ;;      Params:         0       2       0       0       0
  3186 ;;      Locals:         0       2       0       0       0
  3187 ;;      Temps:          0       0       0       0       0
  3188 ;;      Totals:         0       4       0       0       0
  3189 ;;Total ram usage:        4 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:   10
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_moveDist
  3196 ;;		_timer1_lthread
  3197 ;;		_stop
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text12
  3202  001F42                     __ptext12:
  3203                           	opt stack 0
  3204  001F42                     _WriteTimer1:
  3205                           	opt stack 19
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;incstack = 0
  3209  001F42  C0A5  F0A7         	movff	WriteTimer1@timer1,WriteTimer1@timer
  3210  001F46  C0A6  F0A8         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  3211  001F4A  C0A8  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  3212  001F4E  C0A7  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  3213  001F52  0012               	return	
  3214  001F54                     __end_of_WriteTimer1:
  3215                           	opt stack 0
  3216                           tblptru	equ	0xFF8
  3217                           prodh	equ	0xFF4
  3218                           prodl	equ	0xFF3
  3219                           postinc0	equ	0xFEE
  3220                           wreg	equ	0xFE8
  3221                           indf1	equ	0xFE7
  3222                           fsr1h	equ	0xFE2
  3223                           fsr1l	equ	0xFE1
  3224                           indf2	equ	0xFDF
  3225                           postinc2	equ	0xFDE
  3226                           postdec2	equ	0xFDD
  3227                           fsr2h	equ	0xFDA
  3228                           fsr2l	equ	0xFD9
  3229                           status	equ	0xFD8
  3230                           
  3231 ;; *************** function _init_uart_recv *****************
  3232 ;; Defined at:
  3233 ;;		line 80 in file "src/my_uart.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;  uc              2   37[BANK0 ] PTR struct __uart_comm
  3236 ;;		 -> main@uc(5), 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;		None               void
  3241 ;; Registers used:
  3242 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3248 ;;      Params:         0       2       0       0       0
  3249 ;;      Locals:         0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0
  3251 ;;      Totals:         0       2       0       0       0
  3252 ;;Total ram usage:        2 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:   10
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_main
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text13
  3263  001EDE                     __ptext13:
  3264                           	opt stack 0
  3265  001EDE                     _init_uart_recv:
  3266                           	opt stack 20
  3267                           
  3268                           ;my_uart.c: 81: uc_ptr = uc;
  3269                           
  3270                           ;incstack = 0
  3271  001EDE  0100               	movlb	0	; () banked
  3272  001EE0  C0A6  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3273  001EE4  0100               	movlb	0	; () banked
  3274  001EE6  C0A5  F049         	movff	init_uart_recv@uc,_uc_ptr
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  3278  001EEA  EE20 F004          	lfsr	2,4
  3279  001EEE  5049               	movf	_uc_ptr,w,c
  3280  001EF0  26D9               	addwf	fsr2l,f,c
  3281  001EF2  504A               	movf	_uc_ptr+1,w,c
  3282  001EF4  22DA               	addwfc	fsr2h,f,c
  3283  001EF6  0E00               	movlw	0
  3284  001EF8  6EDF               	movwf	indf2,c
  3285                           
  3286                           ; BSR set to: 0
  3287  001EFA  0012               	return	
  3288  001EFC                     __end_of_init_uart_recv:
  3289                           	opt stack 0
  3290                           tblptru	equ	0xFF8
  3291                           prodh	equ	0xFF4
  3292                           prodl	equ	0xFF3
  3293                           postinc0	equ	0xFEE
  3294                           wreg	equ	0xFE8
  3295                           indf1	equ	0xFE7
  3296                           fsr1h	equ	0xFE2
  3297                           fsr1l	equ	0xFE1
  3298                           indf2	equ	0xFDF
  3299                           postinc2	equ	0xFDE
  3300                           postdec2	equ	0xFDD
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305 ;; *************** function _init_uart_lthread *****************
  3306 ;; Defined at:
  3307 ;;		line 7 in file "src/uart_thread.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  uptr            2   37[BANK0 ] PTR struct __uart_thread
  3310 ;;		 -> main@uthread_data(10), 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;		None               void
  3315 ;; Registers used:
  3316 ;;		None
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3322 ;;      Params:         0       2       0       0       0
  3323 ;;      Locals:         0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0
  3325 ;;      Totals:         0       2       0       0       0
  3326 ;;Total ram usage:        2 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:   10
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_main
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text14
  3337  001F80                     __ptext14:
  3338                           	opt stack 0
  3339  001F80                     _init_uart_lthread:
  3340                           	opt stack 20
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;incstack = 0
  3344  001F80  0012               	return	
  3345  001F82                     __end_of_init_uart_lthread:
  3346                           	opt stack 0
  3347                           tblptru	equ	0xFF8
  3348                           prodh	equ	0xFF4
  3349                           prodl	equ	0xFF3
  3350                           postinc0	equ	0xFEE
  3351                           wreg	equ	0xFE8
  3352                           indf1	equ	0xFE7
  3353                           fsr1h	equ	0xFE2
  3354                           fsr1l	equ	0xFE1
  3355                           indf2	equ	0xFDF
  3356                           postinc2	equ	0xFDE
  3357                           postdec2	equ	0xFDD
  3358                           fsr2h	equ	0xFDA
  3359                           fsr2l	equ	0xFD9
  3360                           status	equ	0xFD8
  3361                           
  3362 ;; *************** function _init_timer1_lthread *****************
  3363 ;; Defined at:
  3364 ;;		line 7 in file "src/timer1_thread.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;  tptr            2   37[BANK0 ] PTR struct __timer1_thre
  3367 ;;		 -> main@t1thread_data(11), 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;		None               void
  3372 ;; Registers used:
  3373 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3379 ;;      Params:         0       2       0       0       0
  3380 ;;      Locals:         0       0       0       0       0
  3381 ;;      Temps:          0       0       0       0       0
  3382 ;;      Totals:         0       2       0       0       0
  3383 ;;Total ram usage:        2 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:   10
  3386 ;; This function calls:
  3387 ;;		Nothing
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text15
  3394  0016F6                     __ptext15:
  3395                           	opt stack 0
  3396  0016F6                     _init_timer1_lthread:
  3397                           	opt stack 20
  3398                           
  3399                           ;timer1_thread.c: 8: tptr->cmCount = 0;
  3400                           
  3401                           ;incstack = 0
  3402  0016F6  C0A5  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3403  0016FA  C0A6  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3404  0016FE  0E00               	movlw	0
  3405  001700  6EDE               	movwf	postinc2,c
  3406  001702  0E00               	movlw	0
  3407  001704  6EDD               	movwf	postdec2,c
  3408                           
  3409                           ;timer1_thread.c: 9: tptr->ctrl[0] = 80;
  3410  001706  0100               	movlb	0	; () banked
  3411  001708  EE20 F002          	lfsr	2,2
  3412  00170C  0100               	movlb	0	; () banked
  3413  00170E  51A5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3414  001710  26D9               	addwf	fsr2l,f,c
  3415  001712  0100               	movlb	0	; () banked
  3416  001714  51A6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3417  001716  22DA               	addwfc	fsr2h,f,c
  3418  001718  0E50               	movlw	80
  3419  00171A  6EDF               	movwf	indf2,c
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;timer1_thread.c: 10: tptr->ctrl[1] = 205;
  3423  00171C  0100               	movlb	0	; () banked
  3424  00171E  EE20 F003          	lfsr	2,3
  3425  001722  0100               	movlb	0	; () banked
  3426  001724  51A5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3427  001726  26D9               	addwf	fsr2l,f,c
  3428  001728  0100               	movlb	0	; () banked
  3429  00172A  51A6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3430  00172C  22DA               	addwfc	fsr2h,f,c
  3431  00172E  0ECD               	movlw	205
  3432  001730  6EDF               	movwf	indf2,c
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;timer1_thread.c: 11: tptr->cmDist = 65461;;
  3436  001732  0100               	movlb	0	; () banked
  3437  001734  EE20 F004          	lfsr	2,4
  3438  001738  0100               	movlb	0	; () banked
  3439  00173A  51A5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3440  00173C  26D9               	addwf	fsr2l,f,c
  3441  00173E  0100               	movlb	0	; () banked
  3442  001740  51A6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3443  001742  22DA               	addwfc	fsr2h,f,c
  3444  001744  0EB5               	movlw	181
  3445  001746  6EDE               	movwf	postinc2,c
  3446  001748  0EFF               	movlw	255
  3447  00174A  6EDD               	movwf	postdec2,c
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;timer1_thread.c: 12: tptr->curMove = 0;
  3451  00174C  0100               	movlb	0	; () banked
  3452  00174E  EE20 F006          	lfsr	2,6
  3453  001752  0100               	movlb	0	; () banked
  3454  001754  51A5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3455  001756  26D9               	addwf	fsr2l,f,c
  3456  001758  0100               	movlb	0	; () banked
  3457  00175A  51A6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3458  00175C  22DA               	addwfc	fsr2h,f,c
  3459  00175E  0E00               	movlw	0
  3460  001760  6EDE               	movwf	postinc2,c
  3461  001762  0E00               	movlw	0
  3462  001764  6EDD               	movwf	postdec2,c
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;timer1_thread.c: 13: tptr->distLim = false;
  3466  001766  0100               	movlb	0	; () banked
  3467  001768  EE20 F00A          	lfsr	2,10
  3468  00176C  0100               	movlb	0	; () banked
  3469  00176E  51A5               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3470  001770  26D9               	addwf	fsr2l,f,c
  3471  001772  0100               	movlb	0	; () banked
  3472  001774  51A6               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3473  001776  22DA               	addwfc	fsr2h,f,c
  3474  001778  0E00               	movlw	0
  3475  00177A  6EDF               	movwf	indf2,c
  3476                           
  3477                           ; BSR set to: 0
  3478  00177C  0012               	return	
  3479  00177E                     __end_of_init_timer1_lthread:
  3480                           	opt stack 0
  3481                           tblptru	equ	0xFF8
  3482                           prodh	equ	0xFF4
  3483                           prodl	equ	0xFF3
  3484                           postinc0	equ	0xFEE
  3485                           wreg	equ	0xFE8
  3486                           indf1	equ	0xFE7
  3487                           fsr1h	equ	0xFE2
  3488                           fsr1l	equ	0xFE1
  3489                           indf2	equ	0xFDF
  3490                           postinc2	equ	0xFDE
  3491                           postdec2	equ	0xFDD
  3492                           fsr2h	equ	0xFDA
  3493                           fsr2l	equ	0xFD9
  3494                           status	equ	0xFD8
  3495                           
  3496 ;; *************** function _init_timer0_lthread *****************
  3497 ;; Defined at:
  3498 ;;		line 7 in file "src/timer0_thread.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  tptr            2   37[BANK0 ] PTR struct __timer0_thre
  3501 ;;		 -> main@t0thread_data(9), 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;		None               void
  3506 ;; Registers used:
  3507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3513 ;;      Params:         0       2       0       0       0
  3514 ;;      Locals:         0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0
  3516 ;;      Totals:         0       2       0       0       0
  3517 ;;Total ram usage:        2 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:   10
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text16
  3528  00177E                     __ptext16:
  3529                           	opt stack 0
  3530  00177E                     _init_timer0_lthread:
  3531                           	opt stack 20
  3532                           
  3533                           ;timer0_thread.c: 8: tptr->cmCount = 0;
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;incstack = 0
  3537  00177E  C0A5  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  3538  001782  C0A6  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  3539  001786  0E00               	movlw	0
  3540  001788  6EDE               	movwf	postinc2,c
  3541  00178A  0E00               	movlw	0
  3542  00178C  6EDD               	movwf	postdec2,c
  3543                           
  3544                           ;timer0_thread.c: 9: tptr->ctrl[0] = 80;
  3545  00178E  0100               	movlb	0	; () banked
  3546  001790  EE20 F002          	lfsr	2,2
  3547  001794  0100               	movlb	0	; () banked
  3548  001796  51A5               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3549  001798  26D9               	addwf	fsr2l,f,c
  3550  00179A  0100               	movlb	0	; () banked
  3551  00179C  51A6               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3552  00179E  22DA               	addwfc	fsr2h,f,c
  3553  0017A0  0E50               	movlw	80
  3554  0017A2  6EDF               	movwf	indf2,c
  3555                           
  3556                           ; BSR set to: 0
  3557                           ;timer0_thread.c: 10: tptr->ctrl[1] = 205;
  3558  0017A4  0100               	movlb	0	; () banked
  3559  0017A6  EE20 F003          	lfsr	2,3
  3560  0017AA  0100               	movlb	0	; () banked
  3561  0017AC  51A5               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3562  0017AE  26D9               	addwf	fsr2l,f,c
  3563  0017B0  0100               	movlb	0	; () banked
  3564  0017B2  51A6               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3565  0017B4  22DA               	addwfc	fsr2h,f,c
  3566  0017B6  0ECD               	movlw	205
  3567  0017B8  6EDF               	movwf	indf2,c
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;timer0_thread.c: 11: tptr->cmDist = 65461;;
  3571  0017BA  0100               	movlb	0	; () banked
  3572  0017BC  EE20 F004          	lfsr	2,4
  3573  0017C0  0100               	movlb	0	; () banked
  3574  0017C2  51A5               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3575  0017C4  26D9               	addwf	fsr2l,f,c
  3576  0017C6  0100               	movlb	0	; () banked
  3577  0017C8  51A6               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3578  0017CA  22DA               	addwfc	fsr2h,f,c
  3579  0017CC  0EB5               	movlw	181
  3580  0017CE  6EDE               	movwf	postinc2,c
  3581  0017D0  0EFF               	movlw	255
  3582  0017D2  6EDD               	movwf	postdec2,c
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;timer0_thread.c: 12: tptr->curMove = 0;
  3586  0017D4  0100               	movlb	0	; () banked
  3587  0017D6  EE20 F006          	lfsr	2,6
  3588  0017DA  0100               	movlb	0	; () banked
  3589  0017DC  51A5               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3590  0017DE  26D9               	addwf	fsr2l,f,c
  3591  0017E0  0100               	movlb	0	; () banked
  3592  0017E2  51A6               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3593  0017E4  22DA               	addwfc	fsr2h,f,c
  3594  0017E6  0E00               	movlw	0
  3595  0017E8  6EDE               	movwf	postinc2,c
  3596  0017EA  0E00               	movlw	0
  3597  0017EC  6EDD               	movwf	postdec2,c
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;timer0_thread.c: 13: tptr->distLim = false;
  3601  0017EE  0100               	movlb	0	; () banked
  3602  0017F0  EE20 F008          	lfsr	2,8
  3603  0017F4  0100               	movlb	0	; () banked
  3604  0017F6  51A5               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3605  0017F8  26D9               	addwf	fsr2l,f,c
  3606  0017FA  0100               	movlb	0	; () banked
  3607  0017FC  51A6               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3608  0017FE  22DA               	addwfc	fsr2h,f,c
  3609  001800  0E00               	movlw	0
  3610  001802  6EDF               	movwf	indf2,c
  3611                           
  3612                           ; BSR set to: 0
  3613  001804  0012               	return	
  3614  001806                     __end_of_init_timer0_lthread:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           prodh	equ	0xFF4
  3618                           prodl	equ	0xFF3
  3619                           postinc0	equ	0xFEE
  3620                           wreg	equ	0xFE8
  3621                           indf1	equ	0xFE7
  3622                           fsr1h	equ	0xFE2
  3623                           fsr1l	equ	0xFE1
  3624                           indf2	equ	0xFDF
  3625                           postinc2	equ	0xFDE
  3626                           postdec2	equ	0xFDD
  3627                           fsr2h	equ	0xFDA
  3628                           fsr2l	equ	0xFD9
  3629                           status	equ	0xFD8
  3630                           
  3631 ;; *************** function _init_queues *****************
  3632 ;; Defined at:
  3633 ;;		line 194 in file "src/messages.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;		None               void
  3640 ;; Registers used:
  3641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3647 ;;      Params:         0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0
  3649 ;;      Temps:          0       1       0       0       0
  3650 ;;      Totals:         0       1       0       0       0
  3651 ;;Total ram usage:        1 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:   11
  3654 ;; This function calls:
  3655 ;;		_init_queue
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text17
  3662  0018FE                     __ptext17:
  3663                           	opt stack 0
  3664  0018FE                     _init_queues:
  3665                           	opt stack 19
  3666                           
  3667                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;incstack = 0
  3671  0018FE  0100               	movlb	0	; () banked
  3672  001900  6FA9               	movwf	??_init_queues& (0+255),b
  3673  001902  0E00               	movlw	0
  3674  001904  6E47               	movwf	_MQ_Main_Willing_to_block,c
  3675  001906  0100               	movlb	0	; () banked
  3676  001908  51A9               	movf	??_init_queues& (0+255),w,b
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3680  00190A  0101               	movlb	1	; () banked
  3681  00190C  0E01               	movlw	high _ToMainLow_MQ
  3682  00190E  0100               	movlb	0	; () banked
  3683  001910  0100               	movlb	0	; () banked
  3684  001912  6FA6               	movwf	(init_queue@qptr+1)& (0+255),b
  3685  001914  0101               	movlb	1	; () banked
  3686  001916  0E6C               	movlw	low _ToMainLow_MQ
  3687  001918  0100               	movlb	0	; () banked
  3688  00191A  0100               	movlb	0	; () banked
  3689  00191C  6FA5               	movwf	init_queue@qptr& (0+255),b
  3690  00191E  EC42  F00C         	call	_init_queue	;wreg free
  3691                           
  3692                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3693  001922  0101               	movlb	1	; () banked
  3694  001924  0E01               	movlw	high _ToMainHigh_MQ
  3695  001926  0100               	movlb	0	; () banked
  3696  001928  0100               	movlb	0	; () banked
  3697  00192A  6FA6               	movwf	(init_queue@qptr+1)& (0+255),b
  3698  00192C  0101               	movlb	1	; () banked
  3699  00192E  0E36               	movlw	low _ToMainHigh_MQ
  3700  001930  0100               	movlb	0	; () banked
  3701  001932  0100               	movlb	0	; () banked
  3702  001934  6FA5               	movwf	init_queue@qptr& (0+255),b
  3703  001936  EC42  F00C         	call	_init_queue	;wreg free
  3704                           
  3705                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3706  00193A  0101               	movlb	1	; () banked
  3707  00193C  0E01               	movlw	high _FromMainLow_MQ
  3708  00193E  0100               	movlb	0	; () banked
  3709  001940  0100               	movlb	0	; () banked
  3710  001942  6FA6               	movwf	(init_queue@qptr+1)& (0+255),b
  3711  001944  0101               	movlb	1	; () banked
  3712  001946  0E00               	movlw	low _FromMainLow_MQ
  3713  001948  0100               	movlb	0	; () banked
  3714  00194A  0100               	movlb	0	; () banked
  3715  00194C  6FA5               	movwf	init_queue@qptr& (0+255),b
  3716  00194E  EC42  F00C         	call	_init_queue	;wreg free
  3717                           
  3718                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3719  001952  0102               	movlb	2	; () banked
  3720  001954  0E02               	movlw	high _FromMainHigh_MQ
  3721  001956  0100               	movlb	0	; () banked
  3722  001958  0100               	movlb	0	; () banked
  3723  00195A  6FA6               	movwf	(init_queue@qptr+1)& (0+255),b
  3724  00195C  0102               	movlb	2	; () banked
  3725  00195E  0E00               	movlw	low _FromMainHigh_MQ
  3726  001960  0100               	movlb	0	; () banked
  3727  001962  0100               	movlb	0	; () banked
  3728  001964  6FA5               	movwf	init_queue@qptr& (0+255),b
  3729  001966  EC42  F00C         	call	_init_queue	;wreg free
  3730  00196A  0012               	return	
  3731  00196C                     __end_of_init_queues:
  3732                           	opt stack 0
  3733                           tblptru	equ	0xFF8
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           postinc0	equ	0xFEE
  3737                           wreg	equ	0xFE8
  3738                           indf1	equ	0xFE7
  3739                           fsr1h	equ	0xFE2
  3740                           fsr1l	equ	0xFE1
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           postdec2	equ	0xFDD
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _init_queue *****************
  3749 ;; Defined at:
  3750 ;;		line 14 in file "src/messages.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  qptr            2   37[BANK0 ] PTR struct __msg_queue
  3753 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  i               1   40[BANK0 ] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;		None               void
  3758 ;; Registers used:
  3759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3765 ;;      Params:         0       2       0       0       0
  3766 ;;      Locals:         0       1       0       0       0
  3767 ;;      Temps:          0       1       0       0       0
  3768 ;;      Totals:         0       4       0       0       0
  3769 ;;Total ram usage:        4 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:   10
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_init_queues
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text18
  3780  001884                     __ptext18:
  3781                           	opt stack 0
  3782  001884                     _init_queue:
  3783                           	opt stack 19
  3784                           
  3785                           ;messages.c: 15: unsigned char i;
  3786                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3787                           
  3788                           ;incstack = 0
  3789  001884  0100               	movlb	0	; () banked
  3790  001886  EE20 F034          	lfsr	2,52
  3791  00188A  0100               	movlb	0	; () banked
  3792  00188C  51A5               	movf	init_queue@qptr& (0+255),w,b
  3793  00188E  26D9               	addwf	fsr2l,f,c
  3794  001890  0100               	movlb	0	; () banked
  3795  001892  51A6               	movf	(init_queue@qptr+1)& (0+255),w,b
  3796  001894  22DA               	addwfc	fsr2h,f,c
  3797  001896  0E00               	movlw	0
  3798  001898  6EDF               	movwf	indf2,c
  3799                           
  3800                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3801  00189A  0100               	movlb	0	; () banked
  3802  00189C  EE20 F035          	lfsr	2,53
  3803  0018A0  0100               	movlb	0	; () banked
  3804  0018A2  51A5               	movf	init_queue@qptr& (0+255),w,b
  3805  0018A4  26D9               	addwf	fsr2l,f,c
  3806  0018A6  0100               	movlb	0	; () banked
  3807  0018A8  51A6               	movf	(init_queue@qptr+1)& (0+255),w,b
  3808  0018AA  22DA               	addwfc	fsr2h,f,c
  3809  0018AC  0E00               	movlw	0
  3810  0018AE  6EDF               	movwf	indf2,c
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3814  0018B0  0100               	movlb	0	; () banked
  3815  0018B2  6FA7               	movwf	??_init_queue& (0+255),b
  3816  0018B4  0E00               	movlw	0
  3817  0018B6  0100               	movlb	0	; () banked
  3818  0018B8  0100               	movlb	0	; () banked
  3819  0018BA  6FA8               	movwf	init_queue@i& (0+255),b
  3820  0018BC  0100               	movlb	0	; () banked
  3821  0018BE  51A7               	movf	??_init_queue& (0+255),w,b
  3822                           
  3823                           ; BSR set to: 0
  3824  0018C0  0E03               	movlw	3
  3825  0018C2  0100               	movlb	0	; () banked
  3826  0018C4  0100               	movlb	0	; () banked
  3827  0018C6  65A8               	cpfsgt	init_queue@i& (0+255),b
  3828  0018C8  D001               	goto	l2875
  3829  0018CA  0012               	return	
  3830  0018CC                     l2875:
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;messages.c: 20: qptr->queue[i].full = 0;
  3834  0018CC  0100               	movlb	0	; () banked
  3835  0018CE  0100               	movlb	0	; () banked
  3836  0018D0  51A8               	movf	init_queue@i& (0+255),w,b
  3837  0018D2  0D0D               	mullw	13
  3838  0018D4  50F3               	movf	prodl,w,c
  3839  0018D6  0100               	movlb	0	; () banked
  3840  0018D8  0100               	movlb	0	; () banked
  3841  0018DA  25A5               	addwf	init_queue@qptr& (0+255),w,b
  3842  0018DC  6ED9               	movwf	fsr2l,c
  3843  0018DE  50F4               	movf	prodh,w,c
  3844  0018E0  0100               	movlb	0	; () banked
  3845  0018E2  0100               	movlb	0	; () banked
  3846  0018E4  21A6               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3847  0018E6  6EDA               	movwf	fsr2h,c
  3848  0018E8  0E00               	movlw	0
  3849  0018EA  6EDF               	movwf	indf2,c
  3850                           
  3851                           ; BSR set to: 0
  3852  0018EC  0100               	movlb	0	; () banked
  3853  0018EE  0100               	movlb	0	; () banked
  3854  0018F0  2BA8               	incf	init_queue@i& (0+255),f,b
  3855                           
  3856                           ; BSR set to: 0
  3857  0018F2  0E03               	movlw	3
  3858  0018F4  0100               	movlb	0	; () banked
  3859  0018F6  0100               	movlb	0	; () banked
  3860  0018F8  65A8               	cpfsgt	init_queue@i& (0+255),b
  3861  0018FA  D7E8               	goto	l2875
  3862  0018FC  0012               	return	
  3863  0018FE                     __end_of_init_queue:
  3864                           	opt stack 0
  3865                           tblptru	equ	0xFF8
  3866                           prodh	equ	0xFF4
  3867                           prodl	equ	0xFF3
  3868                           postinc0	equ	0xFEE
  3869                           wreg	equ	0xFE8
  3870                           indf1	equ	0xFE7
  3871                           fsr1h	equ	0xFE2
  3872                           fsr1l	equ	0xFE1
  3873                           indf2	equ	0xFDF
  3874                           postinc2	equ	0xFDE
  3875                           postdec2	equ	0xFDD
  3876                           fsr2h	equ	0xFDA
  3877                           fsr2l	equ	0xFD9
  3878                           status	equ	0xFD8
  3879                           
  3880 ;; *************** function _init_i2c *****************
  3881 ;; Defined at:
  3882 ;;		line 268 in file "src/my_i2c.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  ic              2   37[BANK0 ] PTR struct __i2c_comm
  3885 ;;		 -> main@ic(28), 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;		None               void
  3890 ;; Registers used:
  3891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3897 ;;      Params:         0       2       0       0       0
  3898 ;;      Locals:         0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0
  3900 ;;      Totals:         0       2       0       0       0
  3901 ;;Total ram usage:        2 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:   10
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_main
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text19
  3912  00196C                     __ptext19:
  3913                           	opt stack 0
  3914  00196C                     _init_i2c:
  3915                           	opt stack 20
  3916                           
  3917                           ;my_i2c.c: 269: ic_ptr = ic;
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;incstack = 0
  3921  00196C  0100               	movlb	0	; () banked
  3922  00196E  0100               	movlb	0	; () banked
  3923  001970  C0A6  F0D2         	movff	init_i2c@ic+1,_ic_ptr+1
  3924  001974  0100               	movlb	0	; () banked
  3925  001976  0100               	movlb	0	; () banked
  3926  001978  C0A5  F0D1         	movff	init_i2c@ic,_ic_ptr
  3927                           
  3928                           ; BSR set to: 0
  3929                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3930  00197C  0100               	movlb	0	; () banked
  3931  00197E  EE20 F00A          	lfsr	2,10
  3932  001982  0100               	movlb	0	; () banked
  3933  001984  51D1               	movf	_ic_ptr& (0+255),w,b
  3934  001986  26D9               	addwf	fsr2l,f,c
  3935  001988  0100               	movlb	0	; () banked
  3936  00198A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3937  00198C  22DA               	addwfc	fsr2h,f,c
  3938  00198E  0E00               	movlw	0
  3939  001990  6EDF               	movwf	indf2,c
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3943  001992  0100               	movlb	0	; () banked
  3944  001994  EE20 F00B          	lfsr	2,11
  3945  001998  0100               	movlb	0	; () banked
  3946  00199A  51D1               	movf	_ic_ptr& (0+255),w,b
  3947  00199C  26D9               	addwf	fsr2l,f,c
  3948  00199E  0100               	movlb	0	; () banked
  3949  0019A0  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3950  0019A2  22DA               	addwfc	fsr2h,f,c
  3951  0019A4  0E00               	movlw	0
  3952  0019A6  6EDF               	movwf	indf2,c
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3956  0019A8  0100               	movlb	0	; () banked
  3957  0019AA  EE20 F00C          	lfsr	2,12
  3958  0019AE  0100               	movlb	0	; () banked
  3959  0019B0  51D1               	movf	_ic_ptr& (0+255),w,b
  3960  0019B2  26D9               	addwf	fsr2l,f,c
  3961  0019B4  0100               	movlb	0	; () banked
  3962  0019B6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3963  0019B8  22DA               	addwfc	fsr2h,f,c
  3964  0019BA  0E05               	movlw	5
  3965  0019BC  6EDF               	movwf	indf2,c
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3969  0019BE  0100               	movlb	0	; () banked
  3970  0019C0  EE20 F00E          	lfsr	2,14
  3971  0019C4  0100               	movlb	0	; () banked
  3972  0019C6  51D1               	movf	_ic_ptr& (0+255),w,b
  3973  0019C8  26D9               	addwf	fsr2l,f,c
  3974  0019CA  0100               	movlb	0	; () banked
  3975  0019CC  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  3976  0019CE  22DA               	addwfc	fsr2h,f,c
  3977  0019D0  0E00               	movlw	0
  3978  0019D2  6EDF               	movwf	indf2,c
  3979                           
  3980                           ; BSR set to: 0
  3981  0019D4  0012               	return	
  3982  0019D6                     __end_of_init_i2c:
  3983                           	opt stack 0
  3984                           tblptru	equ	0xFF8
  3985                           prodh	equ	0xFF4
  3986                           prodl	equ	0xFF3
  3987                           postinc0	equ	0xFEE
  3988                           wreg	equ	0xFE8
  3989                           indf1	equ	0xFE7
  3990                           fsr1h	equ	0xFE2
  3991                           fsr1l	equ	0xFE1
  3992                           indf2	equ	0xFDF
  3993                           postinc2	equ	0xFDE
  3994                           postdec2	equ	0xFDD
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8
  3998                           
  3999 ;; *************** function _i2c_configure_slave *****************
  4000 ;; Defined at:
  4001 ;;		line 279 in file "src/my_i2c.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  addr            1    wreg     unsigned char 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  addr            1   37[BANK0 ] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;		None               void
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4015 ;;      Params:         0       0       0       0       0
  4016 ;;      Locals:         0       1       0       0       0
  4017 ;;      Temps:          0       0       0       0       0
  4018 ;;      Totals:         0       1       0       0       0
  4019 ;;Total ram usage:        1 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:   10
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text20
  4030  001E44                     __ptext20:
  4031                           	opt stack 0
  4032  001E44                     _i2c_configure_slave:
  4033                           	opt stack 20
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;incstack = 0
  4037                           ;i2c_configure_slave@addr stored from wreg
  4038  001E44  CFE8 F0A5          	movff	wreg,i2c_configure_slave@addr
  4039                           
  4040                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  4041  001E48  8694               	bsf	3988,3,c	;volatile
  4042                           
  4043                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  4044  001E4A  8894               	bsf	3988,4,c	;volatile
  4045                           
  4046                           ;my_i2c.c: 297: SSPADD = addr;
  4047  001E4C  C0A5  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  4048                           
  4049                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  4050  001E50  0E00               	movlw	0
  4051  001E52  6EC7               	movwf	4039,c	;volatile
  4052                           
  4053                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  4054  001E54  0E00               	movlw	0
  4055  001E56  6EC6               	movwf	4038,c	;volatile
  4056                           
  4057                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  4058  001E58  0E00               	movlw	0
  4059  001E5A  6EC5               	movwf	4037,c	;volatile
  4060                           
  4061                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  4062  001E5C  0E0E               	movlw	14
  4063  001E5E  12C6               	iorwf	4038,f,c	;volatile
  4064                           
  4065                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  4066  001E60  8EC7               	bsf	4039,7,c	;volatile
  4067                           
  4068                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  4069  001E62  8694               	bsf	3988,3,c	;volatile
  4070                           
  4071                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  4072  001E64  8894               	bsf	3988,4,c	;volatile
  4073                           
  4074                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  4075  001E66  80C5               	bsf	4037,0,c	;volatile
  4076                           
  4077                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  4078  001E68  8AC6               	bsf	4038,5,c	;volatile
  4079  001E6A  0012               	return	
  4080  001E6C                     __end_of_i2c_configure_slave:
  4081                           	opt stack 0
  4082                           tblptru	equ	0xFF8
  4083                           prodh	equ	0xFF4
  4084                           prodl	equ	0xFF3
  4085                           postinc0	equ	0xFEE
  4086                           wreg	equ	0xFE8
  4087                           indf1	equ	0xFE7
  4088                           fsr1h	equ	0xFE2
  4089                           fsr1l	equ	0xFE1
  4090                           indf2	equ	0xFDF
  4091                           postinc2	equ	0xFDE
  4092                           postdec2	equ	0xFDD
  4093                           fsr2h	equ	0xFDA
  4094                           fsr2l	equ	0xFD9
  4095                           status	equ	0xFD8
  4096                           
  4097 ;; *************** function _enable_interrupts *****************
  4098 ;; Defined at:
  4099 ;;		line 15 in file "src/interrupts.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;		None               void
  4106 ;; Registers used:
  4107 ;;		None
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4113 ;;      Params:         0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0
  4116 ;;      Totals:         0       0       0       0       0
  4117 ;;Total ram usage:        0 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:   10
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_main
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text21
  4128  001F72                     __ptext21:
  4129                           	opt stack 0
  4130  001F72                     _enable_interrupts:
  4131                           	opt stack 20
  4132                           
  4133                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  4134                           
  4135                           ;incstack = 0
  4136  001F72  8ED0               	bsf	4048,7,c	;volatile
  4137                           
  4138                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  4139  001F74  8EF2               	bsf	intcon,7,c	;volatile
  4140                           
  4141                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  4142  001F76  8CF2               	bsf	intcon,6,c	;volatile
  4143  001F78  0012               	return	
  4144  001F7A                     __end_of_enable_interrupts:
  4145                           	opt stack 0
  4146                           tblptru	equ	0xFF8
  4147                           prodh	equ	0xFF4
  4148                           prodl	equ	0xFF3
  4149                           intcon	equ	0xFF2
  4150                           postinc0	equ	0xFEE
  4151                           wreg	equ	0xFE8
  4152                           indf1	equ	0xFE7
  4153                           fsr1h	equ	0xFE2
  4154                           fsr1l	equ	0xFE1
  4155                           indf2	equ	0xFDF
  4156                           postinc2	equ	0xFDE
  4157                           postdec2	equ	0xFDD
  4158                           fsr2h	equ	0xFDA
  4159                           fsr2l	equ	0xFD9
  4160                           status	equ	0xFD8
  4161                           
  4162 ;; *************** function _block_on_To_msgqueues *****************
  4163 ;; Defined at:
  4164 ;;		line 258 in file "src/messages.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;		None
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;		None               void
  4171 ;; Registers used:
  4172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4178 ;;      Params:         0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0
  4180 ;;      Temps:          0       1       0       0       0
  4181 ;;      Totals:         0       1       0       0       0
  4182 ;;Total ram usage:        1 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; Hardware stack levels required when called:   13
  4185 ;; This function calls:
  4186 ;;		_Delay1KTCYx
  4187 ;;		_check_msg
  4188 ;;		_in_main
  4189 ;; This function is called by:
  4190 ;;		_main
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text22
  4195  001806                     __ptext22:
  4196                           	opt stack 0
  4197  001806                     _block_on_To_msgqueues:
  4198                           	opt stack 17
  4199                           
  4200                           ;messages.c: 259: if (!in_main()) {
  4201                           
  4202                           ;incstack = 0
  4203  001806  EC91  F00D         	call	_in_main	;wreg free
  4204  00180A  0100               	movlb	0	; () banked
  4205  00180C  0100               	movlb	0	; () banked
  4206  00180E  51AA               	movf	(?_in_main+1)& (0+255),w,b
  4207  001810  0100               	movlb	0	; () banked
  4208  001812  11A9               	iorwf	?_in_main& (0+255),w,b
  4209  001814  B4D8               	btfsc	status,2,c
  4210  001816  0012               	return	
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;messages.c: 261: }
  4214                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  4215                           
  4216                           ; BSR set to: 0
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;messages.c: 260: return;
  4220  001818  0100               	movlb	0	; () banked
  4221  00181A  6FAB               	movwf	??_block_on_To_msgqueues& (0+255),b
  4222  00181C  0E01               	movlw	1
  4223  00181E  6E47               	movwf	_MQ_Main_Willing_to_block,c
  4224  001820  0100               	movlb	0	; () banked
  4225  001822  51AB               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4226  001824                     l2773:
  4227                           
  4228                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  4229  001824  0101               	movlb	1	; () banked
  4230  001826  0E01               	movlw	high _ToMainHigh_MQ
  4231  001828  0100               	movlb	0	; () banked
  4232  00182A  0100               	movlb	0	; () banked
  4233  00182C  6FA6               	movwf	(check_msg@qptr+1)& (0+255),b
  4234  00182E  0101               	movlb	1	; () banked
  4235  001830  0E36               	movlw	low _ToMainHigh_MQ
  4236  001832  0100               	movlb	0	; () banked
  4237  001834  0100               	movlb	0	; () banked
  4238  001836  6FA5               	movwf	check_msg@qptr& (0+255),b
  4239  001838  ECA8  F00E         	call	_check_msg	;wreg free
  4240  00183C  0900               	iorlw	0
  4241  00183E  B4D8               	btfsc	status,2,c
  4242  001840  D007               	goto	l2779
  4243                           
  4244                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  4245  001842  0100               	movlb	0	; () banked
  4246  001844  6FAB               	movwf	??_block_on_To_msgqueues& (0+255),b
  4247  001846  0E00               	movlw	0
  4248  001848  6E47               	movwf	_MQ_Main_Willing_to_block,c
  4249  00184A  0100               	movlb	0	; () banked
  4250  00184C  51AB               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4251  00184E  0012               	return	
  4252  001850                     l2779:
  4253                           
  4254                           ;messages.c: 271: }
  4255                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  4256  001850  0101               	movlb	1	; () banked
  4257  001852  0E01               	movlw	high _ToMainLow_MQ
  4258  001854  0100               	movlb	0	; () banked
  4259  001856  0100               	movlb	0	; () banked
  4260  001858  6FA6               	movwf	(check_msg@qptr+1)& (0+255),b
  4261  00185A  0101               	movlb	1	; () banked
  4262  00185C  0E6C               	movlw	low _ToMainLow_MQ
  4263  00185E  0100               	movlb	0	; () banked
  4264  001860  0100               	movlb	0	; () banked
  4265  001862  6FA5               	movwf	check_msg@qptr& (0+255),b
  4266  001864  ECA8  F00E         	call	_check_msg	;wreg free
  4267  001868  0900               	iorlw	0
  4268  00186A  B4D8               	btfsc	status,2,c
  4269  00186C  D007               	goto	l2785
  4270                           
  4271                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  4272  00186E  0100               	movlb	0	; () banked
  4273  001870  6FAB               	movwf	??_block_on_To_msgqueues& (0+255),b
  4274  001872  0E00               	movlw	0
  4275  001874  6E47               	movwf	_MQ_Main_Willing_to_block,c
  4276  001876  0100               	movlb	0	; () banked
  4277  001878  51AB               	movf	??_block_on_To_msgqueues& (0+255),w,b
  4278  00187A  0012               	return	
  4279  00187C                     l2785:
  4280                           
  4281                           ;messages.c: 278: }
  4282                           ;messages.c: 279: Delay1KTCYx(10);
  4283  00187C  0E0A               	movlw	10
  4284  00187E  EC8D  F00F         	call	_Delay1KTCYx
  4285  001882  D7D0               	goto	l2773
  4286  001884                     __end_of_block_on_To_msgqueues:
  4287                           	opt stack 0
  4288                           tblptru	equ	0xFF8
  4289                           prodh	equ	0xFF4
  4290                           prodl	equ	0xFF3
  4291                           intcon	equ	0xFF2
  4292                           postinc0	equ	0xFEE
  4293                           wreg	equ	0xFE8
  4294                           indf1	equ	0xFE7
  4295                           fsr1h	equ	0xFE2
  4296                           fsr1l	equ	0xFE1
  4297                           indf2	equ	0xFDF
  4298                           postinc2	equ	0xFDE
  4299                           postdec2	equ	0xFDD
  4300                           fsr2h	equ	0xFDA
  4301                           fsr2l	equ	0xFD9
  4302                           status	equ	0xFD8
  4303                           
  4304 ;; *************** function _in_main *****************
  4305 ;; Defined at:
  4306 ;;		line 41 in file "src/interrupts.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;		None
  4309 ;; Auto vars:     Size  Location     Type
  4310 ;;		None
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  2   41[BANK0 ] int 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0, cstack
  4315 ;; Tracked objects:
  4316 ;;		On entry : 0/0
  4317 ;;		On exit  : 0/0
  4318 ;;		Unchanged: 0/0
  4319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4320 ;;      Params:         0       2       0       0       0
  4321 ;;      Locals:         0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0
  4323 ;;      Totals:         0       2       0       0       0
  4324 ;;Total ram usage:        2 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:   12
  4327 ;; This function calls:
  4328 ;;		_in_high_int
  4329 ;;		_in_low_int
  4330 ;; This function is called by:
  4331 ;;		_block_on_To_msgqueues
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           	psect	text23
  4336  001B22                     __ptext23:
  4337                           	opt stack 0
  4338  001B22                     _in_main:
  4339                           	opt stack 17
  4340                           
  4341                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  4342                           
  4343                           ;incstack = 0
  4344  001B22  EC6E  F00D         	call	_in_low_int	;wreg free
  4345  001B26  0100               	movlb	0	; () banked
  4346  001B28  0100               	movlb	0	; () banked
  4347  001B2A  51A8               	movf	(?_in_low_int+1)& (0+255),w,b
  4348  001B2C  0100               	movlb	0	; () banked
  4349  001B2E  11A7               	iorwf	?_in_low_int& (0+255),w,b
  4350  001B30  A4D8               	btfss	status,2,c
  4351  001B32  D011               	goto	l2329
  4352                           
  4353                           ; BSR set to: 0
  4354  001B34  ECAA  F00F         	call	_in_high_int	;wreg free
  4355  001B38  0100               	movlb	0	; () banked
  4356  001B3A  0100               	movlb	0	; () banked
  4357  001B3C  51A6               	movf	(?_in_high_int+1)& (0+255),w,b
  4358  001B3E  0100               	movlb	0	; () banked
  4359  001B40  11A5               	iorwf	?_in_high_int& (0+255),w,b
  4360  001B42  A4D8               	btfss	status,2,c
  4361  001B44  D008               	goto	l2329
  4362                           
  4363                           ; BSR set to: 0
  4364                           ;interrupts.c: 43: return (1);
  4365  001B46  0E00               	movlw	0
  4366  001B48  0100               	movlb	0	; () banked
  4367  001B4A  0100               	movlb	0	; () banked
  4368  001B4C  6FAA               	movwf	(?_in_main+1)& (0+255),b
  4369  001B4E  0E01               	movlw	1
  4370  001B50  0100               	movlb	0	; () banked
  4371  001B52  6FA9               	movwf	?_in_main& (0+255),b
  4372  001B54  0012               	return	
  4373  001B56                     l2329:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;interrupts.c: 45: return (0);
  4377  001B56  0E00               	movlw	0
  4378  001B58  0100               	movlb	0	; () banked
  4379  001B5A  0100               	movlb	0	; () banked
  4380  001B5C  6FAA               	movwf	(?_in_main+1)& (0+255),b
  4381  001B5E  0E00               	movlw	0
  4382  001B60  0100               	movlb	0	; () banked
  4383  001B62  6FA9               	movwf	?_in_main& (0+255),b
  4384  001B64  0012               	return	
  4385  001B66                     __end_of_in_main:
  4386                           	opt stack 0
  4387                           tblptru	equ	0xFF8
  4388                           prodh	equ	0xFF4
  4389                           prodl	equ	0xFF3
  4390                           intcon	equ	0xFF2
  4391                           postinc0	equ	0xFEE
  4392                           wreg	equ	0xFE8
  4393                           indf1	equ	0xFE7
  4394                           fsr1h	equ	0xFE2
  4395                           fsr1l	equ	0xFE1
  4396                           indf2	equ	0xFDF
  4397                           postinc2	equ	0xFDE
  4398                           postdec2	equ	0xFDD
  4399                           fsr2h	equ	0xFDA
  4400                           fsr2l	equ	0xFD9
  4401                           status	equ	0xFD8
  4402                           
  4403 ;; *************** function _in_low_int *****************
  4404 ;; Defined at:
  4405 ;;		line 31 in file "src/interrupts.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  2   39[BANK0 ] int 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4419 ;;      Params:         0       2       0       0       0
  4420 ;;      Locals:         0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0
  4422 ;;      Totals:         0       2       0       0       0
  4423 ;;Total ram usage:        2 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:   11
  4426 ;; This function calls:
  4427 ;;		_in_high_int
  4428 ;; This function is called by:
  4429 ;;		_in_main
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text24
  4434  001ADC                     __ptext24:
  4435                           	opt stack 0
  4436  001ADC                     _in_low_int:
  4437                           	opt stack 17
  4438                           
  4439                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;incstack = 0
  4443  001ADC  ACF2               	btfss	intcon,6,c	;volatile
  4444  001ADE  D008               	goto	l2307
  4445                           
  4446                           ;interrupts.c: 33: return (0);
  4447  001AE0  0E00               	movlw	0
  4448  001AE2  0100               	movlb	0	; () banked
  4449  001AE4  0100               	movlb	0	; () banked
  4450  001AE6  6FA8               	movwf	(?_in_low_int+1)& (0+255),b
  4451  001AE8  0E00               	movlw	0
  4452  001AEA  0100               	movlb	0	; () banked
  4453  001AEC  6FA7               	movwf	?_in_low_int& (0+255),b
  4454  001AEE  0012               	return	
  4455  001AF0                     l2307:
  4456  001AF0  ECAA  F00F         	call	_in_high_int	;wreg free
  4457  001AF4  0100               	movlb	0	; () banked
  4458  001AF6  0100               	movlb	0	; () banked
  4459  001AF8  51A6               	movf	(?_in_high_int+1)& (0+255),w,b
  4460  001AFA  0100               	movlb	0	; () banked
  4461  001AFC  11A5               	iorwf	?_in_high_int& (0+255),w,b
  4462  001AFE  B4D8               	btfsc	status,2,c
  4463  001B00  D008               	goto	l2315
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;interrupts.c: 35: return (0);
  4467  001B02  0E00               	movlw	0
  4468  001B04  0100               	movlb	0	; () banked
  4469  001B06  0100               	movlb	0	; () banked
  4470  001B08  6FA8               	movwf	(?_in_low_int+1)& (0+255),b
  4471  001B0A  0E00               	movlw	0
  4472  001B0C  0100               	movlb	0	; () banked
  4473  001B0E  6FA7               	movwf	?_in_low_int& (0+255),b
  4474  001B10  0012               	return	
  4475  001B12                     l2315:
  4476                           
  4477                           ; BSR set to: 0
  4478                           ;interrupts.c: 37: return (1);
  4479  001B12  0E00               	movlw	0
  4480  001B14  0100               	movlb	0	; () banked
  4481  001B16  0100               	movlb	0	; () banked
  4482  001B18  6FA8               	movwf	(?_in_low_int+1)& (0+255),b
  4483  001B1A  0E01               	movlw	1
  4484  001B1C  0100               	movlb	0	; () banked
  4485  001B1E  6FA7               	movwf	?_in_low_int& (0+255),b
  4486  001B20  0012               	return	
  4487  001B22                     __end_of_in_low_int:
  4488                           	opt stack 0
  4489                           tblptru	equ	0xFF8
  4490                           prodh	equ	0xFF4
  4491                           prodl	equ	0xFF3
  4492                           intcon	equ	0xFF2
  4493                           postinc0	equ	0xFEE
  4494                           wreg	equ	0xFE8
  4495                           indf1	equ	0xFE7
  4496                           fsr1h	equ	0xFE2
  4497                           fsr1l	equ	0xFE1
  4498                           indf2	equ	0xFDF
  4499                           postinc2	equ	0xFDE
  4500                           postdec2	equ	0xFDD
  4501                           fsr2h	equ	0xFDA
  4502                           fsr2l	equ	0xFD9
  4503                           status	equ	0xFD8
  4504                           
  4505 ;; *************** function _in_high_int *****************
  4506 ;; Defined at:
  4507 ;;		line 23 in file "src/interrupts.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;		None
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  2   37[BANK0 ] int 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4521 ;;      Params:         0       2       0       0       0
  4522 ;;      Locals:         0       0       0       0       0
  4523 ;;      Temps:          0       0       0       0       0
  4524 ;;      Totals:         0       2       0       0       0
  4525 ;;Total ram usage:        2 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:   10
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_in_low_int
  4532 ;;		_in_main
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text25
  4537  001F54                     __ptext25:
  4538                           	opt stack 0
  4539  001F54                     _in_high_int:
  4540                           	opt stack 17
  4541                           
  4542                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;incstack = 0
  4546  001F54  0E00               	movlw	0
  4547  001F56  AEF2               	btfss	intcon,7,c	;volatile
  4548  001F58  0E01               	movlw	1
  4549  001F5A  0100               	movlb	0	; () banked
  4550  001F5C  0100               	movlb	0	; () banked
  4551  001F5E  6FA5               	movwf	?_in_high_int& (0+255),b
  4552  001F60  0100               	movlb	0	; () banked
  4553  001F62  6BA6               	clrf	(?_in_high_int+1)& (0+255),b
  4554  001F64  0012               	return	
  4555  001F66                     __end_of_in_high_int:
  4556                           	opt stack 0
  4557                           tblptru	equ	0xFF8
  4558                           prodh	equ	0xFF4
  4559                           prodl	equ	0xFF3
  4560                           intcon	equ	0xFF2
  4561                           postinc0	equ	0xFEE
  4562                           wreg	equ	0xFE8
  4563                           indf1	equ	0xFE7
  4564                           fsr1h	equ	0xFE2
  4565                           fsr1l	equ	0xFE1
  4566                           indf2	equ	0xFDF
  4567                           postinc2	equ	0xFDE
  4568                           postdec2	equ	0xFDD
  4569                           fsr2h	equ	0xFDA
  4570                           fsr2l	equ	0xFD9
  4571                           status	equ	0xFD8
  4572                           
  4573 ;; *************** function _check_msg *****************
  4574 ;; Defined at:
  4575 ;;		line 222 in file "src/messages.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  qptr            2   37[BANK0 ] PTR struct __msg_queue
  4578 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      unsigned char 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4590 ;;      Params:         0       2       0       0       0
  4591 ;;      Locals:         0       0       0       0       0
  4592 ;;      Temps:          0       1       0       0       0
  4593 ;;      Totals:         0       3       0       0       0
  4594 ;;Total ram usage:        3 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:   10
  4597 ;; This function calls:
  4598 ;;		Nothing
  4599 ;; This function is called by:
  4600 ;;		_block_on_To_msgqueues
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text26
  4605  001D50                     __ptext26:
  4606                           	opt stack 0
  4607  001D50                     _check_msg:
  4608                           	opt stack 19
  4609                           
  4610                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4611                           
  4612                           ; BSR set to: 0
  4613                           ;incstack = 0
  4614  001D50  0100               	movlb	0	; () banked
  4615  001D52  EE20 F035          	lfsr	2,53
  4616  001D56  0100               	movlb	0	; () banked
  4617  001D58  51A5               	movf	check_msg@qptr& (0+255),w,b
  4618  001D5A  26D9               	addwf	fsr2l,f,c
  4619  001D5C  0100               	movlb	0	; () banked
  4620  001D5E  51A6               	movf	(check_msg@qptr+1)& (0+255),w,b
  4621  001D60  22DA               	addwfc	fsr2h,f,c
  4622  001D62  50DF               	movf	indf2,w,c
  4623  001D64  0100               	movlb	0	; () banked
  4624  001D66  6FA7               	movwf	??_check_msg& (0+255),b
  4625  001D68  0100               	movlb	0	; () banked
  4626  001D6A  51A7               	movf	??_check_msg& (0+255),w,b
  4627  001D6C  0D0D               	mullw	13
  4628  001D6E  50F3               	movf	prodl,w,c
  4629  001D70  0100               	movlb	0	; () banked
  4630  001D72  0100               	movlb	0	; () banked
  4631  001D74  25A5               	addwf	check_msg@qptr& (0+255),w,b
  4632  001D76  6ED9               	movwf	fsr2l,c
  4633  001D78  50F4               	movf	prodh,w,c
  4634  001D7A  0100               	movlb	0	; () banked
  4635  001D7C  0100               	movlb	0	; () banked
  4636  001D7E  21A6               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4637  001D80  6EDA               	movwf	fsr2h,c
  4638  001D82  50DF               	movf	indf2,w,c
  4639  001D84  0012               	return	
  4640  001D86                     __end_of_check_msg:
  4641                           	opt stack 0
  4642                           tblptru	equ	0xFF8
  4643                           prodh	equ	0xFF4
  4644                           prodl	equ	0xFF3
  4645                           intcon	equ	0xFF2
  4646                           postinc0	equ	0xFEE
  4647                           wreg	equ	0xFE8
  4648                           indf1	equ	0xFE7
  4649                           fsr1h	equ	0xFE2
  4650                           fsr1l	equ	0xFE1
  4651                           indf2	equ	0xFDF
  4652                           postinc2	equ	0xFDE
  4653                           postdec2	equ	0xFDD
  4654                           fsr2h	equ	0xFDA
  4655                           fsr2l	equ	0xFD9
  4656                           status	equ	0xFD8
  4657                           
  4658 ;; *************** function _Delay1KTCYx *****************
  4659 ;; Defined at:
  4660 ;;		line 8 in file "E:\MPLAB\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  unit            1    wreg     unsigned char 
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;  unit            1   37[BANK0 ] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;		None               void
  4667 ;; Registers used:
  4668 ;;		wreg
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4674 ;;      Params:         0       0       0       0       0
  4675 ;;      Locals:         0       1       0       0       0
  4676 ;;      Temps:          0       0       0       0       0
  4677 ;;      Totals:         0       1       0       0       0
  4678 ;;Total ram usage:        1 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:   10
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_block_on_To_msgqueues
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text27
  4689  001F1A                     __ptext27:
  4690                           	opt stack 0
  4691  001F1A                     _Delay1KTCYx:
  4692                           	opt stack 19
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;incstack = 0
  4696                           ;Delay1KTCYx@unit stored from wreg
  4697  001F1A  CFE8 F0A5          	movff	wreg,Delay1KTCYx@unit
  4698  001F1E                     l781:
  4699  001F1E  0EFA               	movlw	250
  4700  001F20                     u2397:
  4701  001F20  F000               	nop	
  4702  001F22  2EE8               	decfsz	wreg,f,c
  4703  001F24  D7FD               	goto	u2397
  4704  001F26  0100               	movlb	0	; () banked
  4705  001F28  0100               	movlb	0	; () banked
  4706  001F2A  2FA5               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4707  001F2C  D7F8               	goto	l781
  4708  001F2E  0012               	return	
  4709  001F30                     __end_of_Delay1KTCYx:
  4710                           	opt stack 0
  4711                           tblptru	equ	0xFF8
  4712                           prodh	equ	0xFF4
  4713                           prodl	equ	0xFF3
  4714                           intcon	equ	0xFF2
  4715                           postinc0	equ	0xFEE
  4716                           wreg	equ	0xFE8
  4717                           indf1	equ	0xFE7
  4718                           fsr1h	equ	0xFE2
  4719                           fsr1l	equ	0xFE1
  4720                           indf2	equ	0xFDF
  4721                           postinc2	equ	0xFDE
  4722                           postdec2	equ	0xFDD
  4723                           fsr2h	equ	0xFDA
  4724                           fsr2l	equ	0xFD9
  4725                           status	equ	0xFD8
  4726                           
  4727 ;; *************** function _ToMainLow_recvmsg *****************
  4728 ;; Defined at:
  4729 ;;		line 112 in file "src/messages.c"
  4730 ;; Parameters:    Size  Location     Type
  4731 ;;  maxlength       1    wreg     unsigned char 
  4732 ;;  msgtype         2   61[BANK0 ] PTR unsigned char 
  4733 ;;		 -> main@msgtype(1), 
  4734 ;;  data            2   63[BANK0 ] PTR void 
  4735 ;;		 -> main@msgbuffer(11), 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  maxlength       1   65[BANK0 ] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      char 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4747 ;;      Params:         0       4       0       0       0
  4748 ;;      Locals:         0       1       0       0       0
  4749 ;;      Temps:          0       0       0       0       0
  4750 ;;      Totals:         0       5       0       0       0
  4751 ;;Total ram usage:        5 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:   12
  4754 ;; This function calls:
  4755 ;;		_recv_msg
  4756 ;; This function is called by:
  4757 ;;		_main
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text28
  4762  001BA8                     __ptext28:
  4763                           	opt stack 0
  4764  001BA8                     _ToMainLow_recvmsg:
  4765                           	opt stack 18
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;incstack = 0
  4769                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4770  001BA8  CFE8 F0C1          	movff	wreg,ToMainLow_recvmsg@maxlength
  4771                           
  4772                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4773  001BAC  0101               	movlb	1	; () banked
  4774  001BAE  0E01               	movlw	high _ToMainLow_MQ
  4775  001BB0  0100               	movlb	0	; () banked
  4776  001BB2  0100               	movlb	0	; () banked
  4777  001BB4  6FB0               	movwf	(recv_msg@qptr+1)& (0+255),b
  4778  001BB6  0101               	movlb	1	; () banked
  4779  001BB8  0E6C               	movlw	low _ToMainLow_MQ
  4780  001BBA  0100               	movlb	0	; () banked
  4781  001BBC  0100               	movlb	0	; () banked
  4782  001BBE  6FAF               	movwf	recv_msg@qptr& (0+255),b
  4783  001BC0  C0C1  F0B1         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4784  001BC4  0100               	movlb	0	; () banked
  4785  001BC6  0100               	movlb	0	; () banked
  4786  001BC8  C0BE  F0B3         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4787  001BCC  0100               	movlb	0	; () banked
  4788  001BCE  0100               	movlb	0	; () banked
  4789  001BD0  C0BD  F0B2         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4790  001BD4  0100               	movlb	0	; () banked
  4791  001BD6  0100               	movlb	0	; () banked
  4792  001BD8  C0C0  F0B5         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4793  001BDC  0100               	movlb	0	; () banked
  4794  001BDE  0100               	movlb	0	; () banked
  4795  001BE0  C0BF  F0B4         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4796  001BE4  EC57  F005         	call	_recv_msg	;wreg free
  4797  001BE8  0012               	return	
  4798  001BEA                     __end_of_ToMainLow_recvmsg:
  4799                           	opt stack 0
  4800                           tblptru	equ	0xFF8
  4801                           prodh	equ	0xFF4
  4802                           prodl	equ	0xFF3
  4803                           intcon	equ	0xFF2
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           indf1	equ	0xFE7
  4807                           fsr1h	equ	0xFE2
  4808                           fsr1l	equ	0xFE1
  4809                           indf2	equ	0xFDF
  4810                           postinc2	equ	0xFDE
  4811                           postdec2	equ	0xFDD
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function _ToMainHigh_recvmsg *****************
  4817 ;; Defined at:
  4818 ;;		line 135 in file "src/messages.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  maxlength       1    wreg     unsigned char 
  4821 ;;  msgtype         2   61[BANK0 ] PTR unsigned char 
  4822 ;;		 -> main@msgtype(1), 
  4823 ;;  data            2   63[BANK0 ] PTR void 
  4824 ;;		 -> main@msgbuffer(11), 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  maxlength       1   65[BANK0 ] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      char 
  4829 ;; Registers used:
  4830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4836 ;;      Params:         0       4       0       0       0
  4837 ;;      Locals:         0       1       0       0       0
  4838 ;;      Temps:          0       0       0       0       0
  4839 ;;      Totals:         0       5       0       0       0
  4840 ;;Total ram usage:        5 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:   12
  4843 ;; This function calls:
  4844 ;;		_recv_msg
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text29
  4851  001BEA                     __ptext29:
  4852                           	opt stack 0
  4853  001BEA                     _ToMainHigh_recvmsg:
  4854                           	opt stack 18
  4855                           
  4856                           ;incstack = 0
  4857                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4858  001BEA  CFE8 F0C1          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4859                           
  4860                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4861  001BEE  0101               	movlb	1	; () banked
  4862  001BF0  0E01               	movlw	high _ToMainHigh_MQ
  4863  001BF2  0100               	movlb	0	; () banked
  4864  001BF4  0100               	movlb	0	; () banked
  4865  001BF6  6FB0               	movwf	(recv_msg@qptr+1)& (0+255),b
  4866  001BF8  0101               	movlb	1	; () banked
  4867  001BFA  0E36               	movlw	low _ToMainHigh_MQ
  4868  001BFC  0100               	movlb	0	; () banked
  4869  001BFE  0100               	movlb	0	; () banked
  4870  001C00  6FAF               	movwf	recv_msg@qptr& (0+255),b
  4871  001C02  C0C1  F0B1         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4872  001C06  0100               	movlb	0	; () banked
  4873  001C08  0100               	movlb	0	; () banked
  4874  001C0A  C0BE  F0B3         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4875  001C0E  0100               	movlb	0	; () banked
  4876  001C10  0100               	movlb	0	; () banked
  4877  001C12  C0BD  F0B2         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4878  001C16  0100               	movlb	0	; () banked
  4879  001C18  0100               	movlb	0	; () banked
  4880  001C1A  C0C0  F0B5         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4881  001C1E  0100               	movlb	0	; () banked
  4882  001C20  0100               	movlb	0	; () banked
  4883  001C22  C0BF  F0B4         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4884  001C26  EC57  F005         	call	_recv_msg	;wreg free
  4885  001C2A  0012               	return	
  4886  001C2C                     __end_of_ToMainHigh_recvmsg:
  4887                           	opt stack 0
  4888                           tblptru	equ	0xFF8
  4889                           prodh	equ	0xFF4
  4890                           prodl	equ	0xFF3
  4891                           intcon	equ	0xFF2
  4892                           postinc0	equ	0xFEE
  4893                           wreg	equ	0xFE8
  4894                           indf1	equ	0xFE7
  4895                           fsr1h	equ	0xFE2
  4896                           fsr1l	equ	0xFE1
  4897                           indf2	equ	0xFDF
  4898                           postinc2	equ	0xFDE
  4899                           postdec2	equ	0xFDD
  4900                           fsr2h	equ	0xFDA
  4901                           fsr2l	equ	0xFD9
  4902                           status	equ	0xFD8
  4903                           
  4904 ;; *************** function _recv_msg *****************
  4905 ;; Defined at:
  4906 ;;		line 63 in file "src/messages.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  qptr            2   47[BANK0 ] PTR struct __msg_queue
  4909 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4910 ;;  maxlength       1   49[BANK0 ] unsigned char 
  4911 ;;  msgtype         2   50[BANK0 ] PTR unsigned char 
  4912 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4913 ;;  data            2   52[BANK0 ] PTR void 
  4914 ;;		 -> main@msgbuffer(11), NULL(0), 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  qmsg            2   59[BANK0 ] PTR struct __msg
  4917 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4918 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4919 ;;  tlength         2   57[BANK0 ] unsigned int 
  4920 ;;  slot            1   56[BANK0 ] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;                  1    wreg      char 
  4923 ;; Registers used:
  4924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4930 ;;      Params:         0       7       0       0       0
  4931 ;;      Locals:         0       5       0       0       0
  4932 ;;      Temps:          0       2       0       0       0
  4933 ;;      Totals:         0      14       0       0       0
  4934 ;;Total ram usage:       14 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; Hardware stack levels required when called:   11
  4937 ;; This function calls:
  4938 ;;		_memcpy
  4939 ;; This function is called by:
  4940 ;;		_ToMainLow_recvmsg
  4941 ;;		_ToMainHigh_recvmsg
  4942 ;;		_FromMainHigh_recvmsg
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           	psect	text30
  4947  000AAE                     __ptext30:
  4948                           	opt stack 0
  4949  000AAE                     _recv_msg:
  4950                           	opt stack 18
  4951                           
  4952                           ;messages.c: 64: unsigned char slot;
  4953                           ;messages.c: 68: msg *qmsg;
  4954                           ;messages.c: 69: size_t tlength;
  4955                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4956                           
  4957                           ;incstack = 0
  4958  000AAE  0100               	movlb	0	; () banked
  4959  000AB0  EE20 F035          	lfsr	2,53
  4960  000AB4  0100               	movlb	0	; () banked
  4961  000AB6  51AF               	movf	recv_msg@qptr& (0+255),w,b
  4962  000AB8  26D9               	addwf	fsr2l,f,c
  4963  000ABA  0100               	movlb	0	; () banked
  4964  000ABC  51B0               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4965  000ABE  22DA               	addwfc	fsr2h,f,c
  4966  000AC0  50DF               	movf	indf2,w,c
  4967  000AC2  0100               	movlb	0	; () banked
  4968  000AC4  0100               	movlb	0	; () banked
  4969  000AC6  6FB8               	movwf	recv_msg@slot& (0+255),b
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4973  000AC8  0100               	movlb	0	; () banked
  4974  000ACA  0100               	movlb	0	; () banked
  4975  000ACC  51B8               	movf	recv_msg@slot& (0+255),w,b
  4976  000ACE  0D0D               	mullw	13
  4977  000AD0  50F3               	movf	prodl,w,c
  4978  000AD2  0100               	movlb	0	; () banked
  4979  000AD4  0100               	movlb	0	; () banked
  4980  000AD6  25AF               	addwf	recv_msg@qptr& (0+255),w,b
  4981  000AD8  0100               	movlb	0	; () banked
  4982  000ADA  0100               	movlb	0	; () banked
  4983  000ADC  6FBB               	movwf	recv_msg@qmsg& (0+255),b
  4984  000ADE  50F4               	movf	prodh,w,c
  4985  000AE0  0100               	movlb	0	; () banked
  4986  000AE2  0100               	movlb	0	; () banked
  4987  000AE4  21B0               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4988  000AE6  0100               	movlb	0	; () banked
  4989  000AE8  6FBC               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4990                           
  4991                           ; BSR set to: 0
  4992                           ;messages.c: 74: if (qmsg->full == 1) {
  4993  000AEA  0E01               	movlw	1
  4994  000AEC  C0BB  FFD9         	movff	recv_msg@qmsg,fsr2l
  4995  000AF0  C0BC  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4996  000AF4  62DF               	cpfseq	indf2,c
  4997  000AF6  D074               	goto	l2943
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;messages.c: 76: if (qmsg->length > maxlength) {
  5001  000AF8  0100               	movlb	0	; () banked
  5002  000AFA  EE20 F001          	lfsr	2,1
  5003  000AFE  0100               	movlb	0	; () banked
  5004  000B00  51BB               	movf	recv_msg@qmsg& (0+255),w,b
  5005  000B02  26D9               	addwf	fsr2l,f,c
  5006  000B04  0100               	movlb	0	; () banked
  5007  000B06  51BC               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5008  000B08  22DA               	addwfc	fsr2h,f,c
  5009  000B0A  50DF               	movf	indf2,w,c
  5010  000B0C  0100               	movlb	0	; () banked
  5011  000B0E  0100               	movlb	0	; () banked
  5012  000B10  5DB1               	subwf	recv_msg@maxlength& (0+255),w,b
  5013  000B12  B0D8               	btfsc	status,0,c
  5014  000B14  D002               	goto	l2927
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;messages.c: 77: return (-3);
  5018  000B16  0EFD               	movlw	253
  5019  000B18  0012               	return	
  5020  000B1A                     l2927:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;messages.c: 78: }
  5024                           ;messages.c: 80: tlength = qmsg->length;
  5025  000B1A  0100               	movlb	0	; () banked
  5026  000B1C  EE20 F001          	lfsr	2,1
  5027  000B20  0100               	movlb	0	; () banked
  5028  000B22  51BB               	movf	recv_msg@qmsg& (0+255),w,b
  5029  000B24  26D9               	addwf	fsr2l,f,c
  5030  000B26  0100               	movlb	0	; () banked
  5031  000B28  51BC               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5032  000B2A  22DA               	addwfc	fsr2h,f,c
  5033  000B2C  50DF               	movf	indf2,w,c
  5034  000B2E  0100               	movlb	0	; () banked
  5035  000B30  6FB6               	movwf	??_recv_msg& (0+255),b
  5036  000B32  0100               	movlb	0	; () banked
  5037  000B34  51B6               	movf	??_recv_msg& (0+255),w,b
  5038  000B36  0100               	movlb	0	; () banked
  5039  000B38  0100               	movlb	0	; () banked
  5040  000B3A  6FB9               	movwf	recv_msg@tlength& (0+255),b
  5041  000B3C  0100               	movlb	0	; () banked
  5042  000B3E  6BBA               	clrf	(recv_msg@tlength+1)& (0+255),b
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  5046  000B40  0100               	movlb	0	; () banked
  5047  000B42  0100               	movlb	0	; () banked
  5048  000B44  C0B5  F0A6         	movff	recv_msg@data+1,memcpy@d1+1
  5049  000B48  0100               	movlb	0	; () banked
  5050  000B4A  0100               	movlb	0	; () banked
  5051  000B4C  C0B4  F0A5         	movff	recv_msg@data,memcpy@d1
  5052  000B50  0E03               	movlw	3
  5053  000B52  0100               	movlb	0	; () banked
  5054  000B54  0100               	movlb	0	; () banked
  5055  000B56  25BB               	addwf	recv_msg@qmsg& (0+255),w,b
  5056  000B58  0100               	movlb	0	; () banked
  5057  000B5A  6FB6               	movwf	??_recv_msg& (0+255),b
  5058  000B5C  0E00               	movlw	0
  5059  000B5E  0100               	movlb	0	; () banked
  5060  000B60  0100               	movlb	0	; () banked
  5061  000B62  21BC               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  5062  000B64  0100               	movlb	0	; () banked
  5063  000B66  6FB7               	movwf	(??_recv_msg+1)& (0+255),b
  5064  000B68  C0B6  F0A7         	movff	??_recv_msg,memcpy@s1
  5065  000B6C  C0B7  F0A8         	movff	??_recv_msg+1,memcpy@s1+1
  5066  000B70  C0B9  F0A9         	movff	recv_msg@tlength,memcpy@n
  5067  000B74  C0BA  F0AA         	movff	recv_msg@tlength+1,memcpy@n+1
  5068  000B78  ECEB  F00C         	call	_memcpy	;wreg free
  5069                           
  5070                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5071  000B7C  0100               	movlb	0	; () banked
  5072  000B7E  EE20 F035          	lfsr	2,53
  5073  000B82  0100               	movlb	0	; () banked
  5074  000B84  51AF               	movf	recv_msg@qptr& (0+255),w,b
  5075  000B86  26D9               	addwf	fsr2l,f,c
  5076  000B88  0100               	movlb	0	; () banked
  5077  000B8A  51B0               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5078  000B8C  22DA               	addwfc	fsr2h,f,c
  5079  000B8E  0100               	movlb	0	; () banked
  5080  000B90  EE10 F035          	lfsr	1,53
  5081  000B94  0100               	movlb	0	; () banked
  5082  000B96  51AF               	movf	recv_msg@qptr& (0+255),w,b
  5083  000B98  26E1               	addwf	fsr1l,f,c
  5084  000B9A  0100               	movlb	0	; () banked
  5085  000B9C  51B0               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5086  000B9E  22E2               	addwfc	fsr1h,f,c
  5087  000BA0  50E7               	movf	indf1,w,c
  5088  000BA2  0100               	movlb	0	; () banked
  5089  000BA4  6FB6               	movwf	??_recv_msg& (0+255),b
  5090  000BA6  0100               	movlb	0	; () banked
  5091  000BA8  29B6               	incf	??_recv_msg& (0+255),w,b
  5092  000BAA  0B03               	andlw	3
  5093  000BAC  6EDF               	movwf	indf2,c
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5097  000BAE  0100               	movlb	0	; () banked
  5098  000BB0  EE20 F002          	lfsr	2,2
  5099  000BB4  0100               	movlb	0	; () banked
  5100  000BB6  51BB               	movf	recv_msg@qmsg& (0+255),w,b
  5101  000BB8  26D9               	addwf	fsr2l,f,c
  5102  000BBA  0100               	movlb	0	; () banked
  5103  000BBC  51BC               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5104  000BBE  22DA               	addwfc	fsr2h,f,c
  5105  000BC0  C0B2  FFE1         	movff	recv_msg@msgtype,fsr1l
  5106  000BC4  C0B3  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5107  000BC8  CFDF FFE7          	movff	indf2,indf1
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;messages.c: 91: qmsg->full = 0;
  5111  000BCC  C0BB  FFD9         	movff	recv_msg@qmsg,fsr2l
  5112  000BD0  C0BC  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5113  000BD4  0E00               	movlw	0
  5114  000BD6  6EDF               	movwf	indf2,c
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;messages.c: 92: return (tlength);
  5118  000BD8  0100               	movlb	0	; () banked
  5119  000BDA  0100               	movlb	0	; () banked
  5120  000BDC  51B9               	movf	recv_msg@tlength& (0+255),w,b
  5121  000BDE  0012               	return	
  5122  000BE0                     l2943:
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;messages.c: 94: return (-4);
  5126  000BE0  0EFC               	movlw	252
  5127  000BE2  0012               	return	
  5128  000BE4                     __end_of_recv_msg:
  5129                           	opt stack 0
  5130                           tblptru	equ	0xFF8
  5131                           prodh	equ	0xFF4
  5132                           prodl	equ	0xFF3
  5133                           intcon	equ	0xFF2
  5134                           postinc0	equ	0xFEE
  5135                           wreg	equ	0xFE8
  5136                           indf1	equ	0xFE7
  5137                           fsr1h	equ	0xFE2
  5138                           fsr1l	equ	0xFE1
  5139                           indf2	equ	0xFDF
  5140                           postinc2	equ	0xFDE
  5141                           postdec2	equ	0xFDD
  5142                           fsr2h	equ	0xFDA
  5143                           fsr2l	equ	0xFD9
  5144                           status	equ	0xFD8
  5145                           
  5146 ;; *************** function _memcpy *****************
  5147 ;; Defined at:
  5148 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;  d1              2   37[BANK0 ] PTR void 
  5151 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5152 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5153 ;;		 -> main@msgbuffer(11), NULL(0), 
  5154 ;;  s1              2   39[BANK0 ] PTR const void 
  5155 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5156 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5157 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  5158 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  5159 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5160 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  5161 ;;		 -> NULL(0), 
  5162 ;;  n               2   41[BANK0 ] unsigned int 
  5163 ;; Auto vars:     Size  Location     Type
  5164 ;;  s               2   45[BANK0 ] PTR const unsigned char 
  5165 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5166 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5167 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  5168 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  5169 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5170 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  5171 ;;		 -> NULL(0), 
  5172 ;;  d               2   43[BANK0 ] PTR unsigned char 
  5173 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5174 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5175 ;;		 -> main@msgbuffer(11), NULL(0), 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  2   37[BANK0 ] PTR void 
  5178 ;; Registers used:
  5179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5185 ;;      Params:         0       6       0       0       0
  5186 ;;      Locals:         0       4       0       0       0
  5187 ;;      Temps:          0       0       0       0       0
  5188 ;;      Totals:         0      10       0       0       0
  5189 ;;Total ram usage:       10 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:   10
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_send_msg
  5196 ;;		_recv_msg
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text31
  5201  0019D6                     __ptext31:
  5202                           	opt stack 0
  5203  0019D6                     _memcpy:
  5204                           	opt stack 17
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;incstack = 0
  5208  0019D6  0100               	movlb	0	; () banked
  5209  0019D8  0100               	movlb	0	; () banked
  5210  0019DA  C0A8  F0AE         	movff	memcpy@s1+1,memcpy@s+1
  5211  0019DE  0100               	movlb	0	; () banked
  5212  0019E0  0100               	movlb	0	; () banked
  5213  0019E2  C0A7  F0AD         	movff	memcpy@s1,memcpy@s
  5214  0019E6  0100               	movlb	0	; () banked
  5215  0019E8  0100               	movlb	0	; () banked
  5216  0019EA  C0A6  F0AC         	movff	memcpy@d1+1,memcpy@d+1
  5217  0019EE  0100               	movlb	0	; () banked
  5218  0019F0  0100               	movlb	0	; () banked
  5219  0019F2  C0A5  F0AB         	movff	memcpy@d1,memcpy@d
  5220  0019F6  D012               	goto	l2913
  5221  0019F8                     l2907:
  5222                           
  5223                           ; BSR set to: 0
  5224  0019F8  C0AD  FFD9         	movff	memcpy@s,fsr2l
  5225  0019FC  C0AE  FFDA         	movff	memcpy@s+1,fsr2h
  5226  001A00  C0AB  FFE1         	movff	memcpy@d,fsr1l
  5227  001A04  C0AC  FFE2         	movff	memcpy@d+1,fsr1h
  5228  001A08  CFDF FFE7          	movff	indf2,indf1
  5229                           
  5230                           ; BSR set to: 0
  5231  001A0C  0100               	movlb	0	; () banked
  5232  001A0E  0100               	movlb	0	; () banked
  5233  001A10  4BAD               	infsnz	memcpy@s& (0+255),f,b
  5234  001A12  2BAE               	incf	(memcpy@s+1)& (0+255),f,b
  5235                           
  5236                           ; BSR set to: 0
  5237  001A14  0100               	movlb	0	; () banked
  5238  001A16  0100               	movlb	0	; () banked
  5239  001A18  4BAB               	infsnz	memcpy@d& (0+255),f,b
  5240  001A1A  2BAC               	incf	(memcpy@d+1)& (0+255),f,b
  5241  001A1C                     l2913:
  5242                           
  5243                           ; BSR set to: 0
  5244  001A1C  0100               	movlb	0	; () banked
  5245  001A1E  0100               	movlb	0	; () banked
  5246  001A20  07A9               	decf	memcpy@n& (0+255),f,b
  5247  001A22  A0D8               	btfss	status,0,c
  5248  001A24  07AA               	decf	(memcpy@n+1)& (0+255),f,b
  5249  001A26  0100               	movlb	0	; () banked
  5250  001A28  29A9               	incf	memcpy@n& (0+255),w,b
  5251  001A2A  B4D8               	btfsc	status,2,c
  5252  001A2C  29AA               	incf	(memcpy@n+1)& (0+255),w,b
  5253  001A2E  B4D8               	btfsc	status,2,c
  5254                           
  5255                           ; BSR set to: 0
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;	Return value of _memcpy is never used
  5259  001A30  0012               	return	
  5260  001A32  D7E2               	goto	l2907
  5261  001A34                     __end_of_memcpy:
  5262                           	opt stack 0
  5263                           tblptru	equ	0xFF8
  5264                           prodh	equ	0xFF4
  5265                           prodl	equ	0xFF3
  5266                           intcon	equ	0xFF2
  5267                           postinc0	equ	0xFEE
  5268                           wreg	equ	0xFE8
  5269                           indf1	equ	0xFE7
  5270                           fsr1h	equ	0xFE2
  5271                           fsr1l	equ	0xFE1
  5272                           indf2	equ	0xFDF
  5273                           postinc2	equ	0xFDE
  5274                           postdec2	equ	0xFDD
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8
  5278                           
  5279 ;; *************** function _OpenUSART *****************
  5280 ;; Defined at:
  5281 ;;		line 73 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  config          1    wreg     unsigned char 
  5284 ;;  spbrg           2   37[BANK0 ] unsigned int 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;  config          1   42[BANK0 ] unsigned char 
  5287 ;; Return value:  Size  Location     Type
  5288 ;;		None               void
  5289 ;; Registers used:
  5290 ;;		wreg, status,2
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5296 ;;      Params:         0       2       0       0       0
  5297 ;;      Locals:         0       1       0       0       0
  5298 ;;      Temps:          0       3       0       0       0
  5299 ;;      Totals:         0       6       0       0       0
  5300 ;;Total ram usage:        6 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:   10
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_main
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text32
  5311  0015DA                     __ptext32:
  5312                           	opt stack 0
  5313  0015DA                     _OpenUSART:
  5314                           	opt stack 20
  5315                           
  5316                           ; BSR set to: 0
  5317                           ;incstack = 0
  5318                           ;OpenUSART@config stored from wreg
  5319  0015DA  CFE8 F0AA          	movff	wreg,OpenUSART@config
  5320  0015DE  0E00               	movlw	0
  5321  0015E0  6EAC               	movwf	4012,c	;volatile
  5322  0015E2  0E00               	movlw	0
  5323  0015E4  6EAB               	movwf	4011,c	;volatile
  5324  0015E6  0100               	movlb	0	; () banked
  5325  0015E8  0100               	movlb	0	; () banked
  5326  0015EA  B1AA               	btfsc	OpenUSART@config& (0+255),0,b
  5327                           
  5328                           ; BSR set to: 0
  5329  0015EC  88AC               	bsf	4012,4,c	;volatile
  5330                           
  5331                           ; BSR set to: 0
  5332                           
  5333                           ; BSR set to: 0
  5334  0015EE  0100               	movlb	0	; () banked
  5335  0015F0  0100               	movlb	0	; () banked
  5336  0015F2  A3AA               	btfss	OpenUSART@config& (0+255),1,b
  5337  0015F4  D002               	goto	l2697
  5338                           
  5339                           ; BSR set to: 0
  5340  0015F6  8CAC               	bsf	4012,6,c	;volatile
  5341  0015F8  8CAB               	bsf	4011,6,c	;volatile
  5342  0015FA                     l2697:
  5343                           
  5344                           ; BSR set to: 0
  5345  0015FA  0100               	movlb	0	; () banked
  5346  0015FC  0100               	movlb	0	; () banked
  5347  0015FE  B5AA               	btfsc	OpenUSART@config& (0+255),2,b
  5348                           
  5349                           ; BSR set to: 0
  5350  001600  8EAC               	bsf	4012,7,c	;volatile
  5351                           
  5352                           ; BSR set to: 0
  5353                           
  5354                           ; BSR set to: 0
  5355  001602  0100               	movlb	0	; () banked
  5356  001604  0100               	movlb	0	; () banked
  5357  001606  A7AA               	btfss	OpenUSART@config& (0+255),3,b
  5358  001608  D002               	goto	l548
  5359                           
  5360                           ; BSR set to: 0
  5361  00160A  88AB               	bsf	4011,4,c	;volatile
  5362  00160C  D001               	goto	l2705
  5363  00160E                     l548:
  5364                           
  5365                           ; BSR set to: 0
  5366  00160E  8AAB               	bsf	4011,5,c	;volatile
  5367  001610                     l2705:
  5368                           
  5369                           ; BSR set to: 0
  5370  001610  0100               	movlb	0	; () banked
  5371  001612  0100               	movlb	0	; () banked
  5372  001614  B9AA               	btfsc	OpenUSART@config& (0+255),4,b
  5373                           
  5374                           ; BSR set to: 0
  5375  001616  84AC               	bsf	4012,2,c	;volatile
  5376                           
  5377                           ; BSR set to: 0
  5378  001618  989E               	bcf	3998,4,c	;volatile
  5379                           
  5380                           ; BSR set to: 0
  5381  00161A  0100               	movlb	0	; () banked
  5382  00161C  0100               	movlb	0	; () banked
  5383  00161E  BBAA               	btfsc	OpenUSART@config& (0+255),5,b
  5384                           
  5385                           ; BSR set to: 0
  5386  001620  86AB               	bsf	4011,3,c	;volatile
  5387                           
  5388                           ; BSR set to: 0
  5389                           
  5390                           ; BSR set to: 0
  5391  001622  0100               	movlb	0	; () banked
  5392  001624  0100               	movlb	0	; () banked
  5393  001626  ADAA               	btfss	OpenUSART@config& (0+255),6,b
  5394  001628  D002               	goto	l552
  5395                           
  5396                           ; BSR set to: 0
  5397  00162A  8A9D               	bsf	3997,5,c	;volatile
  5398  00162C  D001               	goto	l553
  5399  00162E                     l552:
  5400                           
  5401                           ; BSR set to: 0
  5402  00162E  9A9D               	bcf	3997,5,c	;volatile
  5403  001630                     l553:
  5404                           
  5405                           ; BSR set to: 0
  5406  001630  9A9E               	bcf	3998,5,c	;volatile
  5407                           
  5408                           ; BSR set to: 0
  5409  001632  0100               	movlb	0	; () banked
  5410  001634  0100               	movlb	0	; () banked
  5411  001636  AFAA               	btfss	OpenUSART@config& (0+255),7,b
  5412  001638  D002               	goto	l554
  5413                           
  5414                           ; BSR set to: 0
  5415  00163A  889D               	bsf	3997,4,c	;volatile
  5416  00163C  D001               	goto	l555
  5417  00163E                     l554:
  5418                           
  5419                           ; BSR set to: 0
  5420  00163E  989D               	bcf	3997,4,c	;volatile
  5421  001640                     l555:
  5422                           
  5423                           ; BSR set to: 0
  5424  001640  C0A5  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5425                           
  5426                           ; BSR set to: 0
  5427  001644  0100               	movlb	0	; () banked
  5428  001646  C0A6  F0A7         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5429  00164A  C0A7  F0A8         	movff	??_OpenUSART,??_OpenUSART+1
  5430  00164E  0100               	movlb	0	; () banked
  5431  001650  6BA9               	clrf	(??_OpenUSART+2)& (0+255),b
  5432  001652  0100               	movlb	0	; () banked
  5433  001654  51A8               	movf	(??_OpenUSART+1)& (0+255),w,b
  5434  001656  6EB0               	movwf	4016,c	;volatile
  5435                           
  5436                           ; BSR set to: 0
  5437  001658  8AAC               	bsf	4012,5,c	;volatile
  5438                           
  5439                           ; BSR set to: 0
  5440  00165A  8EAB               	bsf	4011,7,c	;volatile
  5441                           
  5442                           ; BSR set to: 0
  5443  00165C  9C94               	bcf	3988,6,c	;volatile
  5444                           
  5445                           ; BSR set to: 0
  5446  00165E  8E94               	bsf	3988,7,c	;volatile
  5447                           
  5448                           ; BSR set to: 0
  5449  001660  A8AC               	btfss	4012,4,c	;volatile
  5450  001662  0012               	return	
  5451                           
  5452                           ; BSR set to: 0
  5453  001664  BEAC               	btfsc	4012,7,c	;volatile
  5454  001666  0012               	return	
  5455                           
  5456                           ; BSR set to: 0
  5457  001668  8C94               	bsf	3988,6,c	;volatile
  5458  00166A  0012               	return	
  5459  00166C                     __end_of_OpenUSART:
  5460                           	opt stack 0
  5461                           tblptru	equ	0xFF8
  5462                           prodh	equ	0xFF4
  5463                           prodl	equ	0xFF3
  5464                           intcon	equ	0xFF2
  5465                           postinc0	equ	0xFEE
  5466                           wreg	equ	0xFE8
  5467                           indf1	equ	0xFE7
  5468                           fsr1h	equ	0xFE2
  5469                           fsr1l	equ	0xFE1
  5470                           indf2	equ	0xFDF
  5471                           postinc2	equ	0xFDE
  5472                           postdec2	equ	0xFDD
  5473                           fsr2h	equ	0xFDA
  5474                           fsr2l	equ	0xFD9
  5475                           status	equ	0xFD8
  5476                           
  5477 ;; *************** function _OpenTimer1 *****************
  5478 ;; Defined at:
  5479 ;;		line 16 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  config          1    wreg     unsigned char 
  5482 ;; Auto vars:     Size  Location     Type
  5483 ;;  config          1   37[BANK0 ] unsigned char 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;		None               void
  5486 ;; Registers used:
  5487 ;;		wreg, status,2, status,0
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5493 ;;      Params:         0       0       0       0       0
  5494 ;;      Locals:         0       1       0       0       0
  5495 ;;      Temps:          0       0       0       0       0
  5496 ;;      Totals:         0       1       0       0       0
  5497 ;;Total ram usage:        1 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:   10
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_main
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           	psect	text33
  5508  001CAC                     __ptext33:
  5509                           	opt stack 0
  5510  001CAC                     _OpenTimer1:
  5511                           	opt stack 20
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;incstack = 0
  5515                           ;OpenTimer1@config stored from wreg
  5516  001CAC  CFE8 F0A5          	movff	wreg,OpenTimer1@config
  5517  001CB0  0100               	movlb	0	; () banked
  5518  001CB2  0100               	movlb	0	; () banked
  5519  001CB4  51A5               	movf	OpenTimer1@config& (0+255),w,b
  5520  001CB6  0B7E               	andlw	126
  5521  001CB8  6ECD               	movwf	4045,c	;volatile
  5522                           
  5523                           ; BSR set to: 0
  5524  001CBA  0100               	movlb	0	; () banked
  5525  001CBC  0100               	movlb	0	; () banked
  5526  001CBE  ADA5               	btfss	OpenTimer1@config& (0+255),6,b
  5527  001CC0  D002               	goto	l511
  5528                           
  5529                           ; BSR set to: 0
  5530  001CC2  8ECD               	bsf	4045,7,c	;volatile
  5531  001CC4  D001               	goto	l2679
  5532  001CC6                     l511:
  5533                           
  5534                           ; BSR set to: 0
  5535  001CC6  9ECD               	bcf	4045,7,c	;volatile
  5536  001CC8                     l2679:
  5537                           
  5538                           ; BSR set to: 0
  5539  001CC8  0E00               	movlw	0
  5540  001CCA  6ECF               	movwf	4047,c	;volatile
  5541  001CCC  0E00               	movlw	0
  5542  001CCE  6ECE               	movwf	4046,c	;volatile
  5543                           
  5544                           ; BSR set to: 0
  5545  001CD0  909E               	bcf	3998,0,c	;volatile
  5546                           
  5547                           ; BSR set to: 0
  5548  001CD2  0100               	movlb	0	; () banked
  5549  001CD4  0100               	movlb	0	; () banked
  5550  001CD6  AFA5               	btfss	OpenTimer1@config& (0+255),7,b
  5551  001CD8  D002               	goto	l513
  5552                           
  5553                           ; BSR set to: 0
  5554  001CDA  809D               	bsf	3997,0,c	;volatile
  5555  001CDC  D001               	goto	l514
  5556  001CDE                     l513:
  5557                           
  5558                           ; BSR set to: 0
  5559  001CDE  909D               	bcf	3997,0,c	;volatile
  5560  001CE0                     l514:
  5561                           
  5562                           ; BSR set to: 0
  5563  001CE0  80CD               	bsf	4045,0,c	;volatile
  5564                           
  5565                           ; BSR set to: 0
  5566  001CE2  0012               	return	
  5567  001CE4                     __end_of_OpenTimer1:
  5568                           	opt stack 0
  5569                           tblptru	equ	0xFF8
  5570                           prodh	equ	0xFF4
  5571                           prodl	equ	0xFF3
  5572                           intcon	equ	0xFF2
  5573                           postinc0	equ	0xFEE
  5574                           wreg	equ	0xFE8
  5575                           indf1	equ	0xFE7
  5576                           fsr1h	equ	0xFE2
  5577                           fsr1l	equ	0xFE1
  5578                           indf2	equ	0xFDF
  5579                           postinc2	equ	0xFDE
  5580                           postdec2	equ	0xFDD
  5581                           fsr2h	equ	0xFDA
  5582                           fsr2l	equ	0xFD9
  5583                           status	equ	0xFD8
  5584                           
  5585 ;; *************** function _OpenTimer0 *****************
  5586 ;; Defined at:
  5587 ;;		line 18 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  config          1    wreg     unsigned char 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  config          1   37[BANK0 ] unsigned char 
  5592 ;; Return value:  Size  Location     Type
  5593 ;;		None               void
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5601 ;;      Params:         0       0       0       0       0
  5602 ;;      Locals:         0       1       0       0       0
  5603 ;;      Temps:          0       0       0       0       0
  5604 ;;      Totals:         0       1       0       0       0
  5605 ;;Total ram usage:        1 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:   10
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_main
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text34
  5616  001E1A                     __ptext34:
  5617                           	opt stack 0
  5618  001E1A                     _OpenTimer0:
  5619                           	opt stack 20
  5620                           
  5621                           ; BSR set to: 0
  5622                           ;incstack = 0
  5623                           ;OpenTimer0@config stored from wreg
  5624  001E1A  CFE8 F0A5          	movff	wreg,OpenTimer0@config
  5625  001E1E  0100               	movlb	0	; () banked
  5626  001E20  0100               	movlb	0	; () banked
  5627  001E22  51A5               	movf	OpenTimer0@config& (0+255),w,b
  5628  001E24  0B7F               	andlw	127
  5629  001E26  6ED5               	movwf	4053,c	;volatile
  5630                           
  5631                           ; BSR set to: 0
  5632  001E28  0E00               	movlw	0
  5633  001E2A  6ED7               	movwf	4055,c	;volatile
  5634                           
  5635                           ; BSR set to: 0
  5636  001E2C  0E00               	movlw	0
  5637  001E2E  6ED6               	movwf	4054,c	;volatile
  5638                           
  5639                           ; BSR set to: 0
  5640  001E30  94F2               	bcf	intcon,2,c	;volatile
  5641                           
  5642                           ; BSR set to: 0
  5643  001E32  0100               	movlb	0	; () banked
  5644  001E34  0100               	movlb	0	; () banked
  5645  001E36  AFA5               	btfss	OpenTimer0@config& (0+255),7,b
  5646  001E38  D002               	goto	l487
  5647                           
  5648                           ; BSR set to: 0
  5649  001E3A  8AF2               	bsf	intcon,5,c	;volatile
  5650  001E3C  D001               	goto	l488
  5651  001E3E                     l487:
  5652                           
  5653                           ; BSR set to: 0
  5654  001E3E  9AF2               	bcf	intcon,5,c	;volatile
  5655  001E40                     l488:
  5656                           
  5657                           ; BSR set to: 0
  5658  001E40  8ED5               	bsf	4053,7,c	;volatile
  5659                           
  5660                           ; BSR set to: 0
  5661  001E42  0012               	return	
  5662  001E44                     __end_of_OpenTimer0:
  5663                           	opt stack 0
  5664                           tblptru	equ	0xFF8
  5665                           prodh	equ	0xFF4
  5666                           prodl	equ	0xFF3
  5667                           intcon	equ	0xFF2
  5668                           postinc0	equ	0xFEE
  5669                           wreg	equ	0xFE8
  5670                           indf1	equ	0xFE7
  5671                           fsr1h	equ	0xFE2
  5672                           fsr1l	equ	0xFE1
  5673                           indf2	equ	0xFDF
  5674                           postinc2	equ	0xFDE
  5675                           postdec2	equ	0xFDD
  5676                           fsr2h	equ	0xFDA
  5677                           fsr2l	equ	0xFD9
  5678                           status	equ	0xFD8
  5679                           
  5680 ;; *************** function _InterruptHandlerLow *****************
  5681 ;; Defined at:
  5682 ;;		line 116 in file "src/interrupts.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;		None
  5685 ;; Auto vars:     Size  Location     Type
  5686 ;;		None
  5687 ;; Return value:  Size  Location     Type
  5688 ;;		None               void
  5689 ;; Registers used:
  5690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5696 ;;      Params:         0       0       0       0       0
  5697 ;;      Locals:         0       0       0       0       0
  5698 ;;      Temps:         18       0       0       0       0
  5699 ;;      Totals:        18       0       0       0       0
  5700 ;;Total ram usage:       18 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    9
  5703 ;; This function calls:
  5704 ;;		_uart_recv_int_handler
  5705 ;;		_uart_trans_int_handler
  5706 ;;		i1_ToMainLow_sendmsg
  5707 ;; This function is called by:
  5708 ;;		Interrupt level 1
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	intcodelo
  5713  000018                     __pintcodelo:
  5714                           	opt stack 0
  5715  000018                     _InterruptHandlerLow:
  5716                           	opt stack 16
  5717                           
  5718                           ; BSR set to: 0
  5719                           ;incstack = 0
  5720  000018  CFD8 F025          	movff	status,??_InterruptHandlerLow+1
  5721  00001C  CFE8 F026          	movff	wreg,??_InterruptHandlerLow+2
  5722  000020  CFE0 F027          	movff	bsr,??_InterruptHandlerLow+3
  5723  000024  CFFA F028          	movff	pclath,??_InterruptHandlerLow+4
  5724  000028  CFFB F029          	movff	pclatu,??_InterruptHandlerLow+5
  5725  00002C  CFE9 F02A          	movff	fsr0l,??_InterruptHandlerLow+6
  5726  000030  CFEA F02B          	movff	fsr0h,??_InterruptHandlerLow+7
  5727  000034  CFE1 F02C          	movff	fsr1l,??_InterruptHandlerLow+8
  5728  000038  CFE2 F02D          	movff	fsr1h,??_InterruptHandlerLow+9
  5729  00003C  CFD9 F02E          	movff	fsr2l,??_InterruptHandlerLow+10
  5730  000040  CFDA F02F          	movff	fsr2h,??_InterruptHandlerLow+11
  5731  000044  CFF3 F030          	movff	prodl,??_InterruptHandlerLow+12
  5732  000048  CFF4 F031          	movff	prodh,??_InterruptHandlerLow+13
  5733  00004C  CFF6 F032          	movff	tblptrl,??_InterruptHandlerLow+14
  5734  000050  CFF7 F033          	movff	tblptrh,??_InterruptHandlerLow+15
  5735  000054  CFF8 F034          	movff	tblptru,??_InterruptHandlerLow+16
  5736  000058  CFF5 F035          	movff	tablat,??_InterruptHandlerLow+17
  5737                           
  5738                           ;interrupts.c: 118: if (PIR1bits.TMR1IF) {
  5739  00005C  A09E               	btfss	3998,0,c	;volatile
  5740  00005E  D00C               	goto	i1l3233
  5741                           
  5742                           ;interrupts.c: 119: PIR1bits.TMR1IF = 0;
  5743  000060  909E               	bcf	3998,0,c	;volatile
  5744                           
  5745                           ;interrupts.c: 120: ToMainLow_sendmsg(0, 11, (void *)0);
  5746  000062  6E24               	movwf	??_InterruptHandlerLow& (0+255),c
  5747  000064  0E0B               	movlw	11
  5748  000066  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5749  000068  5024               	movf	??_InterruptHandlerLow& (0+255),w,c
  5750  00006A  0E00               	movlw	0
  5751  00006C  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5752  00006E  0E00               	movlw	0
  5753  000070  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5754  000072  0E00               	movlw	0
  5755  000074  EC4A  F00F         	call	i1_ToMainLow_sendmsg
  5756  000078                     i1l3233:
  5757                           
  5758                           ;interrupts.c: 121: }
  5759                           ;interrupts.c: 124: if (PIR1bits.RCIF) {
  5760  000078  AA9E               	btfss	3998,5,c	;volatile
  5761  00007A  D003               	goto	i1l3239
  5762                           
  5763                           ;interrupts.c: 125: PIR1bits.RCIF = 0;
  5764  00007C  9A9E               	bcf	3998,5,c	;volatile
  5765                           
  5766                           ;interrupts.c: 126: uart_recv_int_handler();
  5767  00007E  EC53  F00A         	call	_uart_recv_int_handler	;wreg free
  5768  000082                     i1l3239:
  5769                           
  5770                           ;interrupts.c: 127: }
  5771                           ;interrupts.c: 130: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5772  000082  B89E               	btfsc	3998,4,c	;volatile
  5773  000084  A89D               	btfss	3997,4,c	;volatile
  5774  000086  D002               	goto	i1l52
  5775                           
  5776                           ;interrupts.c: 131: uart_trans_int_handler();
  5777  000088  EC1A  F00D         	call	_uart_trans_int_handler	;wreg free
  5778  00008C                     i1l52:
  5779  00008C  C035  FFF5         	movff	??_InterruptHandlerLow+17,tablat
  5780  000090  C034  FFF8         	movff	??_InterruptHandlerLow+16,tblptru
  5781  000094  C033  FFF7         	movff	??_InterruptHandlerLow+15,tblptrh
  5782  000098  C032  FFF6         	movff	??_InterruptHandlerLow+14,tblptrl
  5783  00009C  C031  FFF4         	movff	??_InterruptHandlerLow+13,prodh
  5784  0000A0  C030  FFF3         	movff	??_InterruptHandlerLow+12,prodl
  5785  0000A4  C02F  FFDA         	movff	??_InterruptHandlerLow+11,fsr2h
  5786  0000A8  C02E  FFD9         	movff	??_InterruptHandlerLow+10,fsr2l
  5787  0000AC  C02D  FFE2         	movff	??_InterruptHandlerLow+9,fsr1h
  5788  0000B0  C02C  FFE1         	movff	??_InterruptHandlerLow+8,fsr1l
  5789  0000B4  C02B  FFEA         	movff	??_InterruptHandlerLow+7,fsr0h
  5790  0000B8  C02A  FFE9         	movff	??_InterruptHandlerLow+6,fsr0l
  5791  0000BC  C029  FFFB         	movff	??_InterruptHandlerLow+5,pclatu
  5792  0000C0  C028  FFFA         	movff	??_InterruptHandlerLow+4,pclath
  5793  0000C4  C027  FFE0         	movff	??_InterruptHandlerLow+3,bsr
  5794  0000C8  C026  FFE8         	movff	??_InterruptHandlerLow+2,wreg
  5795  0000CC  C025  FFD8         	movff	??_InterruptHandlerLow+1,status
  5796  0000D0  0010               	retfie	
  5797  0000D2                     __end_of_InterruptHandlerLow:
  5798                           	opt stack 0
  5799                           pclatu	equ	0xFFB
  5800                           pclath	equ	0xFFA
  5801                           tblptru	equ	0xFF8
  5802                           tblptrh	equ	0xFF7
  5803                           tblptrl	equ	0xFF6
  5804                           tablat	equ	0xFF5
  5805                           prodh	equ	0xFF4
  5806                           prodl	equ	0xFF3
  5807                           intcon	equ	0xFF2
  5808                           postinc0	equ	0xFEE
  5809                           fsr0h	equ	0xFEA
  5810                           fsr0l	equ	0xFE9
  5811                           wreg	equ	0xFE8
  5812                           indf1	equ	0xFE7
  5813                           fsr1h	equ	0xFE2
  5814                           fsr1l	equ	0xFE1
  5815                           bsr	equ	0xFE0
  5816                           indf2	equ	0xFDF
  5817                           postinc2	equ	0xFDE
  5818                           postdec2	equ	0xFDD
  5819                           fsr2h	equ	0xFDA
  5820                           fsr2l	equ	0xFD9
  5821                           status	equ	0xFD8
  5822                           
  5823 ;; *************** function _uart_trans_int_handler *****************
  5824 ;; Defined at:
  5825 ;;		line 11 in file "src/my_uart.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;		None
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  data            2   30[COMRAM] PTR unsigned char 
  5830 ;;		 -> NULL(0), 
  5831 ;;  length          1   34[COMRAM] char 
  5832 ;;  curIndex        1   33[COMRAM] unsigned char 
  5833 ;;  msgtype         1   32[COMRAM] unsigned char 
  5834 ;; Return value:  Size  Location     Type
  5835 ;;		None               void
  5836 ;; Registers used:
  5837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5843 ;;      Params:         0       0       0       0       0
  5844 ;;      Locals:         5       0       0       0       0
  5845 ;;      Temps:          1       0       0       0       0
  5846 ;;      Totals:         6       0       0       0       0
  5847 ;;Total ram usage:        6 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    8
  5850 ;; This function calls:
  5851 ;;		_FromMainLow_recvmsg
  5852 ;; This function is called by:
  5853 ;;		_InterruptHandlerLow
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text36
  5858  001A34                     __ptext36:
  5859                           	opt stack 0
  5860  001A34                     _uart_trans_int_handler:
  5861                           	opt stack 16
  5862                           
  5863                           ;my_uart.c: 13: unsigned char* data = (0);
  5864                           
  5865                           ;incstack = 0
  5866  001A34  0E00               	movlw	0
  5867  001A36  6E20               	movwf	uart_trans_int_handler@data+1,c
  5868  001A38  0E00               	movlw	0
  5869  001A3A  6E1F               	movwf	uart_trans_int_handler@data,c
  5870                           
  5871                           ;my_uart.c: 14: unsigned char msgtype;
  5872                           ;my_uart.c: 15: unsigned char curIndex;
  5873                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5874  001A3C  0E00               	movlw	high uart_trans_int_handler@msgtype
  5875  001A3E  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5876  001A40  0E21               	movlw	low uart_trans_int_handler@msgtype
  5877  001A42  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5878  001A44  C020  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5879  001A48  C01F  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5880  001A4C  0E0A               	movlw	10
  5881  001A4E  EC36  F00F         	call	_FromMainLow_recvmsg
  5882  001A52  6E23               	movwf	uart_trans_int_handler@length,c
  5883                           
  5884                           ;my_uart.c: 17: if (length < 0) {
  5885  001A54  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5886  001A56  D019               	goto	i1l391
  5887                           
  5888                           ;my_uart.c: 26: curIndex = 0;
  5889                           
  5890                           ;my_uart.c: 24: }
  5891                           ;my_uart.c: 25: } else {
  5892                           
  5893                           ;my_uart.c: 22: else{
  5894                           
  5895                           ;my_uart.c: 21: }
  5896  001A58  6E1E               	movwf	??_uart_trans_int_handler& (0+255),c
  5897  001A5A  0E00               	movlw	0
  5898  001A5C  6E22               	movwf	uart_trans_int_handler@curIndex,c
  5899  001A5E  501E               	movf	??_uart_trans_int_handler& (0+255),w,c
  5900                           
  5901                           ;my_uart.c: 27: while(curIndex < length){
  5902  001A60  D00D               	goto	i1l3225
  5903  001A62                     i1l394:
  5904  001A62  A2AC               	btfss	4012,1,c	;volatile
  5905  001A64  D7FE               	goto	i1l394
  5906                           
  5907                           ;my_uart.c: 33: TXREG = data[curIndex];
  5908  001A66  5022               	movf	uart_trans_int_handler@curIndex,w,c
  5909  001A68  0D01               	mullw	1
  5910  001A6A  50F3               	movf	prodl,w,c
  5911  001A6C  241F               	addwf	uart_trans_int_handler@data,w,c
  5912  001A6E  6ED9               	movwf	fsr2l,c
  5913  001A70  50F4               	movf	prodh,w,c
  5914  001A72  2020               	addwfc	uart_trans_int_handler@data+1,w,c
  5915  001A74  6EDA               	movwf	fsr2h,c
  5916  001A76  50DF               	movf	indf2,w,c
  5917  001A78  6EAD               	movwf	4013,c	;volatile
  5918                           
  5919                           ;my_uart.c: 35: curIndex++;
  5920  001A7A  2A22               	incf	uart_trans_int_handler@curIndex,f,c
  5921  001A7C                     i1l3225:
  5922  001A7C  5022               	movf	uart_trans_int_handler@curIndex,w,c
  5923  001A7E  BE23               	btfsc	uart_trans_int_handler@length,7,c
  5924  001A80  D004               	goto	i1l391
  5925  001A82  0AFF               	xorlw	255
  5926  001A84  2423               	addwf	uart_trans_int_handler@length,w,c
  5927  001A86  B0D8               	btfsc	status,0,c
  5928  001A88  D7EC               	goto	i1l394
  5929  001A8A                     i1l391:
  5930                           
  5931                           ;my_uart.c: 36: }
  5932                           ;my_uart.c: 37: }
  5933                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  5934  001A8A  989D               	bcf	3997,4,c	;volatile
  5935  001A8C  0012               	return	
  5936  001A8E                     __end_of_uart_trans_int_handler:
  5937                           	opt stack 0
  5938                           pclatu	equ	0xFFB
  5939                           pclath	equ	0xFFA
  5940                           tblptru	equ	0xFF8
  5941                           tblptrh	equ	0xFF7
  5942                           tblptrl	equ	0xFF6
  5943                           tablat	equ	0xFF5
  5944                           prodh	equ	0xFF4
  5945                           prodl	equ	0xFF3
  5946                           intcon	equ	0xFF2
  5947                           postinc0	equ	0xFEE
  5948                           fsr0h	equ	0xFEA
  5949                           fsr0l	equ	0xFE9
  5950                           wreg	equ	0xFE8
  5951                           indf1	equ	0xFE7
  5952                           fsr1h	equ	0xFE2
  5953                           fsr1l	equ	0xFE1
  5954                           bsr	equ	0xFE0
  5955                           indf2	equ	0xFDF
  5956                           postinc2	equ	0xFDE
  5957                           postdec2	equ	0xFDD
  5958                           fsr2h	equ	0xFDA
  5959                           fsr2l	equ	0xFD9
  5960                           status	equ	0xFD8
  5961                           
  5962 ;; *************** function _FromMainLow_recvmsg *****************
  5963 ;; Defined at:
  5964 ;;		line 159 in file "src/messages.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;  maxlength       1    wreg     unsigned char 
  5967 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5968 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5969 ;;  data            2   26[COMRAM] PTR void 
  5970 ;;		 -> NULL(0), 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  maxlength       1   28[COMRAM] unsigned char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      char 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5982 ;;      Params:         4       0       0       0       0
  5983 ;;      Locals:         1       0       0       0       0
  5984 ;;      Temps:          0       0       0       0       0
  5985 ;;      Totals:         5       0       0       0       0
  5986 ;;Total ram usage:        5 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:    7
  5989 ;; This function calls:
  5990 ;;		i1_recv_msg
  5991 ;; This function is called by:
  5992 ;;		_uart_trans_int_handler
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text37
  5997  001E6C                     __ptext37:
  5998                           	opt stack 0
  5999  001E6C                     _FromMainLow_recvmsg:
  6000                           	opt stack 16
  6001                           
  6002                           ;incstack = 0
  6003                           ;FromMainLow_recvmsg@maxlength stored from wreg
  6004  001E6C  CFE8 F01D          	movff	wreg,FromMainLow_recvmsg@maxlength
  6005                           
  6006                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  6007  001E70  0101               	movlb	1	; () banked
  6008  001E72  0E01               	movlw	high _FromMainLow_MQ
  6009  001E74  6E0C               	movwf	i1recv_msg@qptr+1,c
  6010  001E76  0101               	movlb	1	; () banked
  6011  001E78  0E00               	movlw	low _FromMainLow_MQ
  6012  001E7A  6E0B               	movwf	i1recv_msg@qptr,c
  6013  001E7C  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  6014  001E80  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  6015  001E84  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  6016  001E88  6A11               	clrf	i1recv_msg@data+1,c
  6017  001E8A  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  6018  001E8E  ECDD  F008         	call	i1_recv_msg	;wreg free
  6019  001E92  0012               	return	
  6020  001E94                     __end_of_FromMainLow_recvmsg:
  6021                           	opt stack 0
  6022                           pclatu	equ	0xFFB
  6023                           pclath	equ	0xFFA
  6024                           tblptru	equ	0xFF8
  6025                           tblptrh	equ	0xFF7
  6026                           tblptrl	equ	0xFF6
  6027                           tablat	equ	0xFF5
  6028                           prodh	equ	0xFF4
  6029                           prodl	equ	0xFF3
  6030                           intcon	equ	0xFF2
  6031                           postinc0	equ	0xFEE
  6032                           fsr0h	equ	0xFEA
  6033                           fsr0l	equ	0xFE9
  6034                           wreg	equ	0xFE8
  6035                           indf1	equ	0xFE7
  6036                           fsr1h	equ	0xFE2
  6037                           fsr1l	equ	0xFE1
  6038                           bsr	equ	0xFE0
  6039                           indf2	equ	0xFDF
  6040                           postinc2	equ	0xFDE
  6041                           postdec2	equ	0xFDD
  6042                           fsr2h	equ	0xFDA
  6043                           fsr2l	equ	0xFD9
  6044                           status	equ	0xFD8
  6045                           
  6046 ;; *************** function i1_recv_msg *****************
  6047 ;; Defined at:
  6048 ;;		line 63 in file "src/messages.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6051 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6052 ;;  maxlength       1   12[COMRAM] unsigned char 
  6053 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  6054 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  6055 ;;  data            2   15[COMRAM] PTR void 
  6056 ;;		 -> main@msgbuffer(11), NULL(0), 
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  6059 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6060 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6061 ;;  recv_msg        2   20[COMRAM] unsigned int 
  6062 ;;  recv_msg        1   19[COMRAM] unsigned char 
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      char 
  6065 ;; Registers used:
  6066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6072 ;;      Params:         7       0       0       0       0
  6073 ;;      Locals:         5       0       0       0       0
  6074 ;;      Temps:          2       0       0       0       0
  6075 ;;      Totals:        14       0       0       0       0
  6076 ;;Total ram usage:       14 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    6
  6079 ;; This function calls:
  6080 ;;		i1_memcpy
  6081 ;; This function is called by:
  6082 ;;		_FromMainLow_recvmsg
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text38
  6087  0011BA                     __ptext38:
  6088                           	opt stack 0
  6089  0011BA                     i1_recv_msg:
  6090                           	opt stack 16
  6091                           
  6092                           ;messages.c: 64: unsigned char slot;
  6093                           ;messages.c: 68: msg *qmsg;
  6094                           ;messages.c: 69: size_t tlength;
  6095                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6096                           
  6097                           ;incstack = 0
  6098  0011BA  EE20 F035          	lfsr	2,53
  6099  0011BE  500B               	movf	i1recv_msg@qptr,w,c
  6100  0011C0  26D9               	addwf	fsr2l,f,c
  6101  0011C2  500C               	movf	i1recv_msg@qptr+1,w,c
  6102  0011C4  22DA               	addwfc	fsr2h,f,c
  6103  0011C6  50DF               	movf	indf2,w,c
  6104  0011C8  6E14               	movwf	i1recv_msg@slot,c
  6105                           
  6106                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6107  0011CA  5014               	movf	i1recv_msg@slot,w,c
  6108  0011CC  0D0D               	mullw	13
  6109  0011CE  50F3               	movf	prodl,w,c
  6110  0011D0  240B               	addwf	i1recv_msg@qptr,w,c
  6111  0011D2  6E17               	movwf	i1recv_msg@qmsg,c
  6112  0011D4  50F4               	movf	prodh,w,c
  6113  0011D6  200C               	addwfc	i1recv_msg@qptr+1,w,c
  6114  0011D8  6E18               	movwf	i1recv_msg@qmsg+1,c
  6115                           
  6116                           ;messages.c: 74: if (qmsg->full == 1) {
  6117  0011DA  0E01               	movlw	1
  6118  0011DC  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6119  0011E0  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6120  0011E4  62DF               	cpfseq	indf2,c
  6121  0011E6  D050               	goto	i1l3179
  6122                           
  6123                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6124  0011E8  EE20 F001          	lfsr	2,1
  6125  0011EC  5017               	movf	i1recv_msg@qmsg,w,c
  6126  0011EE  26D9               	addwf	fsr2l,f,c
  6127  0011F0  5018               	movf	i1recv_msg@qmsg+1,w,c
  6128  0011F2  22DA               	addwfc	fsr2h,f,c
  6129  0011F4  50DF               	movf	indf2,w,c
  6130  0011F6  5C0D               	subwf	i1recv_msg@maxlength,w,c
  6131  0011F8  B0D8               	btfsc	status,0,c
  6132  0011FA  D002               	goto	i1l3163
  6133                           
  6134                           ;messages.c: 77: return (-3);
  6135  0011FC  0EFD               	movlw	253
  6136  0011FE  0012               	return	
  6137  001200                     i1l3163:
  6138                           
  6139                           ;messages.c: 78: }
  6140                           ;messages.c: 80: tlength = qmsg->length;
  6141  001200  EE20 F001          	lfsr	2,1
  6142  001204  5017               	movf	i1recv_msg@qmsg,w,c
  6143  001206  26D9               	addwf	fsr2l,f,c
  6144  001208  5018               	movf	i1recv_msg@qmsg+1,w,c
  6145  00120A  22DA               	addwfc	fsr2h,f,c
  6146  00120C  50DF               	movf	indf2,w,c
  6147  00120E  6E12               	movwf	??i1_recv_msg& (0+255),c
  6148  001210  5012               	movf	??i1_recv_msg,w,c
  6149  001212  6E15               	movwf	i1recv_msg@tlength,c
  6150  001214  6A16               	clrf	i1recv_msg@tlength+1,c
  6151                           
  6152                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6153  001216  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  6154  00121A  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  6155  00121E  0E03               	movlw	3
  6156  001220  2417               	addwf	i1recv_msg@qmsg,w,c
  6157  001222  6E12               	movwf	??i1_recv_msg& (0+255),c
  6158  001224  0E00               	movlw	0
  6159  001226  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  6160  001228  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  6161  00122A  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  6162  00122E  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  6163  001232  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  6164  001236  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  6165  00123A  EC16  F00E         	call	i1_memcpy	;wreg free
  6166                           
  6167                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6168  00123E  EE20 F035          	lfsr	2,53
  6169  001242  500B               	movf	i1recv_msg@qptr,w,c
  6170  001244  26D9               	addwf	fsr2l,f,c
  6171  001246  500C               	movf	i1recv_msg@qptr+1,w,c
  6172  001248  22DA               	addwfc	fsr2h,f,c
  6173  00124A  EE10 F035          	lfsr	1,53
  6174  00124E  500B               	movf	i1recv_msg@qptr,w,c
  6175  001250  26E1               	addwf	fsr1l,f,c
  6176  001252  500C               	movf	i1recv_msg@qptr+1,w,c
  6177  001254  22E2               	addwfc	fsr1h,f,c
  6178  001256  50E7               	movf	indf1,w,c
  6179  001258  6E12               	movwf	??i1_recv_msg& (0+255),c
  6180  00125A  2812               	incf	??i1_recv_msg,w,c
  6181  00125C  0B03               	andlw	3
  6182  00125E  6EDF               	movwf	indf2,c
  6183                           
  6184                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6185  001260  EE20 F002          	lfsr	2,2
  6186  001264  5017               	movf	i1recv_msg@qmsg,w,c
  6187  001266  26D9               	addwf	fsr2l,f,c
  6188  001268  5018               	movf	i1recv_msg@qmsg+1,w,c
  6189  00126A  22DA               	addwfc	fsr2h,f,c
  6190  00126C  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  6191  001270  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  6192  001274  CFDF FFE7          	movff	indf2,indf1
  6193                           
  6194                           ;messages.c: 91: qmsg->full = 0;
  6195  001278  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6196  00127C  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6197  001280  0E00               	movlw	0
  6198  001282  6EDF               	movwf	indf2,c
  6199                           
  6200                           ;messages.c: 92: return (tlength);
  6201  001284  5015               	movf	i1recv_msg@tlength,w,c
  6202  001286  0012               	return	
  6203  001288                     i1l3179:
  6204                           
  6205                           ;messages.c: 94: return (-4);
  6206  001288  0EFC               	movlw	252
  6207  00128A  0012               	return	
  6208  00128C                     __end_ofi1_recv_msg:
  6209                           	opt stack 0
  6210                           pclatu	equ	0xFFB
  6211                           pclath	equ	0xFFA
  6212                           tblptru	equ	0xFF8
  6213                           tblptrh	equ	0xFF7
  6214                           tblptrl	equ	0xFF6
  6215                           tablat	equ	0xFF5
  6216                           prodh	equ	0xFF4
  6217                           prodl	equ	0xFF3
  6218                           intcon	equ	0xFF2
  6219                           postinc0	equ	0xFEE
  6220                           fsr0h	equ	0xFEA
  6221                           fsr0l	equ	0xFE9
  6222                           wreg	equ	0xFE8
  6223                           indf1	equ	0xFE7
  6224                           fsr1h	equ	0xFE2
  6225                           fsr1l	equ	0xFE1
  6226                           bsr	equ	0xFE0
  6227                           indf2	equ	0xFDF
  6228                           postinc2	equ	0xFDE
  6229                           postdec2	equ	0xFDD
  6230                           fsr2h	equ	0xFDA
  6231                           fsr2l	equ	0xFD9
  6232                           status	equ	0xFD8
  6233                           
  6234 ;; *************** function _uart_recv_int_handler *****************
  6235 ;; Defined at:
  6236 ;;		line 42 in file "src/my_uart.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;		None
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;		None
  6241 ;; Return value:  Size  Location     Type
  6242 ;;		None               void
  6243 ;; Registers used:
  6244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6250 ;;      Params:         0       0       0       0       0
  6251 ;;      Locals:         0       0       0       0       0
  6252 ;;      Temps:          1       0       0       0       0
  6253 ;;      Totals:         1       0       0       0       0
  6254 ;;Total ram usage:        1 bytes
  6255 ;; Hardware stack levels used:    1
  6256 ;; Hardware stack levels required when called:    8
  6257 ;; This function calls:
  6258 ;;		_ReadUSART
  6259 ;;		i1_ToMainLow_sendmsg
  6260 ;; This function is called by:
  6261 ;;		_InterruptHandlerLow
  6262 ;; This function uses a non-reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text39
  6266  0014A6                     __ptext39:
  6267                           	opt stack 0
  6268  0014A6                     _uart_recv_int_handler:
  6269                           	opt stack 16
  6270                           
  6271                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  6272                           
  6273                           ;incstack = 0
  6274  0014A6  AA9E               	btfss	3998,5,c	;volatile
  6275  0014A8  D03C               	goto	i1l3203
  6276                           
  6277                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  6278  0014AA  EE20 F004          	lfsr	2,4
  6279  0014AE  5049               	movf	_uc_ptr,w,c
  6280  0014B0  26D9               	addwf	fsr2l,f,c
  6281  0014B2  504A               	movf	_uc_ptr+1,w,c
  6282  0014B4  22DA               	addwfc	fsr2h,f,c
  6283  0014B6  50DF               	movf	indf2,w,c
  6284  0014B8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6285  0014BA  501B               	movf	??_uart_recv_int_handler,w,c
  6286  0014BC  0D01               	mullw	1
  6287  0014BE  50F3               	movf	prodl,w,c
  6288  0014C0  2449               	addwf	_uc_ptr,w,c
  6289  0014C2  6ED9               	movwf	fsr2l,c
  6290  0014C4  50F4               	movf	prodh,w,c
  6291  0014C6  204A               	addwfc	_uc_ptr+1,w,c
  6292  0014C8  6EDA               	movwf	fsr2h,c
  6293  0014CA  EC7E  F00F         	call	_ReadUSART	;wreg free
  6294  0014CE  6EDF               	movwf	indf2,c
  6295                           
  6296                           ;my_uart.c: 56: uc_ptr->buflen++;
  6297  0014D0  EE20 F004          	lfsr	2,4
  6298  0014D4  5049               	movf	_uc_ptr,w,c
  6299  0014D6  26D9               	addwf	fsr2l,f,c
  6300  0014D8  504A               	movf	_uc_ptr+1,w,c
  6301  0014DA  22DA               	addwfc	fsr2h,f,c
  6302  0014DC  2ADF               	incf	indf2,f,c
  6303                           
  6304                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  6305  0014DE  EE20 F004          	lfsr	2,4
  6306  0014E2  5049               	movf	_uc_ptr,w,c
  6307  0014E4  26D9               	addwf	fsr2l,f,c
  6308  0014E6  504A               	movf	_uc_ptr+1,w,c
  6309  0014E8  22DA               	addwfc	fsr2h,f,c
  6310  0014EA  0E04               	movlw	4
  6311  0014EC  62DF               	cpfseq	indf2,c
  6312  0014EE  D019               	goto	i1l3203
  6313                           
  6314                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  6315  0014F0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6316  0014F2  0E20               	movlw	32
  6317  0014F4  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6318  0014F6  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6319  0014F8  C04A  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  6320  0014FC  C049  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  6321  001500  EE20 F004          	lfsr	2,4
  6322  001504  5049               	movf	_uc_ptr,w,c
  6323  001506  26D9               	addwf	fsr2l,f,c
  6324  001508  504A               	movf	_uc_ptr+1,w,c
  6325  00150A  22DA               	addwfc	fsr2h,f,c
  6326  00150C  50DF               	movf	indf2,w,c
  6327  00150E  EC4A  F00F         	call	i1_ToMainLow_sendmsg
  6328                           
  6329                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  6330  001512  EE20 F004          	lfsr	2,4
  6331  001516  5049               	movf	_uc_ptr,w,c
  6332  001518  26D9               	addwf	fsr2l,f,c
  6333  00151A  504A               	movf	_uc_ptr+1,w,c
  6334  00151C  22DA               	addwfc	fsr2h,f,c
  6335  00151E  0E00               	movlw	0
  6336  001520  6EDF               	movwf	indf2,c
  6337  001522                     i1l3203:
  6338                           
  6339                           ;my_uart.c: 61: }
  6340                           ;my_uart.c: 62: }
  6341                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  6342  001522  A648               	btfss	_USART_Status,3,c
  6343  001524  0012               	return	
  6344                           
  6345                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  6346  001526  98AB               	bcf	4011,4,c	;volatile
  6347                           
  6348                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  6349  001528  88AB               	bsf	4011,4,c	;volatile
  6350                           
  6351                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  6352  00152A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6353  00152C  0E1E               	movlw	30
  6354  00152E  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6355  001530  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6356  001532  0E00               	movlw	0
  6357  001534  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6358  001536  0E00               	movlw	0
  6359  001538  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6360  00153A  0E00               	movlw	0
  6361  00153C  EC4A  F00F         	call	i1_ToMainLow_sendmsg
  6362  001540  0012               	return	
  6363  001542                     __end_of_uart_recv_int_handler:
  6364                           	opt stack 0
  6365                           pclatu	equ	0xFFB
  6366                           pclath	equ	0xFFA
  6367                           tblptru	equ	0xFF8
  6368                           tblptrh	equ	0xFF7
  6369                           tblptrl	equ	0xFF6
  6370                           tablat	equ	0xFF5
  6371                           prodh	equ	0xFF4
  6372                           prodl	equ	0xFF3
  6373                           intcon	equ	0xFF2
  6374                           postinc0	equ	0xFEE
  6375                           fsr0h	equ	0xFEA
  6376                           fsr0l	equ	0xFE9
  6377                           wreg	equ	0xFE8
  6378                           indf1	equ	0xFE7
  6379                           fsr1h	equ	0xFE2
  6380                           fsr1l	equ	0xFE1
  6381                           bsr	equ	0xFE0
  6382                           indf2	equ	0xFDF
  6383                           postinc2	equ	0xFDE
  6384                           postdec2	equ	0xFDD
  6385                           fsr2h	equ	0xFDA
  6386                           fsr2l	equ	0xFD9
  6387                           status	equ	0xFD8
  6388                           
  6389 ;; *************** function i1_ToMainLow_sendmsg *****************
  6390 ;; Defined at:
  6391 ;;		line 103 in file "src/messages.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  length          1    wreg     unsigned char 
  6394 ;;  msgtype         1   22[COMRAM] unsigned char 
  6395 ;;  data            2   23[COMRAM] PTR void 
  6396 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  6397 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@ctrl(2), 
  6398 ;;		 -> main@uc(5), NULL(0), 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  length          1   25[COMRAM] unsigned char 
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  1    wreg      char 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6410 ;;      Params:         3       0       0       0       0
  6411 ;;      Locals:         1       0       0       0       0
  6412 ;;      Temps:          0       0       0       0       0
  6413 ;;      Totals:         4       0       0       0       0
  6414 ;;Total ram usage:        4 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    7
  6417 ;; This function calls:
  6418 ;;		i1_send_msg
  6419 ;; This function is called by:
  6420 ;;		_InterruptHandlerLow
  6421 ;;		_uart_recv_int_handler
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text40
  6426  001E94                     __ptext40:
  6427                           	opt stack 0
  6428  001E94                     i1_ToMainLow_sendmsg:
  6429                           	opt stack 17
  6430                           
  6431                           ;incstack = 0
  6432                           ;i1ToMainLow_sendmsg@length stored from wreg
  6433  001E94  CFE8 F01A          	movff	wreg,i1ToMainLow_sendmsg@length
  6434                           
  6435                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6436                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6437  001E98  0101               	movlb	1	; () banked
  6438  001E9A  0E01               	movlw	high _ToMainLow_MQ
  6439  001E9C  6E0C               	movwf	i1send_msg@qptr+1,c
  6440  001E9E  0101               	movlb	1	; () banked
  6441  001EA0  0E6C               	movlw	low _ToMainLow_MQ
  6442  001EA2  6E0B               	movwf	i1send_msg@qptr,c
  6443  001EA4  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6444  001EA8  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6445  001EAC  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6446  001EB0  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6447  001EB4  ECAA  F009         	call	i1_send_msg	;wreg free
  6448  001EB8  0012               	return	
  6449  001EBA                     __end_ofi1_ToMainLow_sendmsg:
  6450                           	opt stack 0
  6451                           pclatu	equ	0xFFB
  6452                           pclath	equ	0xFFA
  6453                           tblptru	equ	0xFF8
  6454                           tblptrh	equ	0xFF7
  6455                           tblptrl	equ	0xFF6
  6456                           tablat	equ	0xFF5
  6457                           prodh	equ	0xFF4
  6458                           prodl	equ	0xFF3
  6459                           intcon	equ	0xFF2
  6460                           postinc0	equ	0xFEE
  6461                           fsr0h	equ	0xFEA
  6462                           fsr0l	equ	0xFE9
  6463                           wreg	equ	0xFE8
  6464                           indf1	equ	0xFE7
  6465                           fsr1h	equ	0xFE2
  6466                           fsr1l	equ	0xFE1
  6467                           bsr	equ	0xFE0
  6468                           indf2	equ	0xFDF
  6469                           postinc2	equ	0xFDE
  6470                           postdec2	equ	0xFDD
  6471                           fsr2h	equ	0xFDA
  6472                           fsr2l	equ	0xFD9
  6473                           status	equ	0xFD8
  6474                           
  6475 ;; *************** function i1_send_msg *****************
  6476 ;; Defined at:
  6477 ;;		line 24 in file "src/messages.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6480 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6481 ;;  length          1   12[COMRAM] unsigned char 
  6482 ;;  msgtype         1   13[COMRAM] unsigned char 
  6483 ;;  data            2   14[COMRAM] PTR void 
  6484 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  6485 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  6486 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  6487 ;;		 -> NULL(0), 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6490 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6491 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6492 ;;  send_msg        2   17[COMRAM] unsigned int 
  6493 ;;  send_msg        1   19[COMRAM] unsigned char 
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  1    wreg      char 
  6496 ;; Registers used:
  6497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6503 ;;      Params:         6       0       0       0       0
  6504 ;;      Locals:         5       0       0       0       0
  6505 ;;      Temps:          1       0       0       0       0
  6506 ;;      Totals:        12       0       0       0       0
  6507 ;;Total ram usage:       12 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; Hardware stack levels required when called:    6
  6510 ;; This function calls:
  6511 ;;		i1_memcpy
  6512 ;; This function is called by:
  6513 ;;		i1_ToMainLow_sendmsg
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text41
  6518  001354                     __ptext41:
  6519                           	opt stack 0
  6520  001354                     i1_send_msg:
  6521                           	opt stack 17
  6522                           
  6523                           ;messages.c: 25: unsigned char slot;
  6524                           ;messages.c: 27: msg *qmsg;
  6525                           ;messages.c: 28: size_t tlength = length;
  6526                           
  6527                           ;incstack = 0
  6528  001354  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6529  001358  6A13               	clrf	i1send_msg@tlength+1,c
  6530                           
  6531                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6532  00135A  EE20 F034          	lfsr	2,52
  6533  00135E  500B               	movf	i1send_msg@qptr,w,c
  6534  001360  26D9               	addwf	fsr2l,f,c
  6535  001362  500C               	movf	i1send_msg@qptr+1,w,c
  6536  001364  22DA               	addwfc	fsr2h,f,c
  6537  001366  50DF               	movf	indf2,w,c
  6538  001368  6E14               	movwf	i1send_msg@slot,c
  6539                           
  6540                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6541  00136A  5014               	movf	i1send_msg@slot,w,c
  6542  00136C  0D0D               	mullw	13
  6543  00136E  50F3               	movf	prodl,w,c
  6544  001370  240B               	addwf	i1send_msg@qptr,w,c
  6545  001372  6E15               	movwf	i1send_msg@qmsg,c
  6546  001374  50F4               	movf	prodh,w,c
  6547  001376  200C               	addwfc	i1send_msg@qptr+1,w,c
  6548  001378  6E16               	movwf	i1send_msg@qmsg+1,c
  6549                           
  6550                           ;messages.c: 41: if (qmsg->full != 0) {
  6551  00137A  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6552  00137E  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6553  001382  50DF               	movf	indf2,w,c
  6554  001384  B4D8               	btfsc	status,2,c
  6555  001386  D002               	goto	i1l3139
  6556                           
  6557                           ;messages.c: 42: return (-1);
  6558  001388  0EFF               	movlw	255
  6559  00138A  0012               	return	
  6560  00138C                     i1l3139:
  6561                           
  6562                           ;messages.c: 43: }
  6563                           ;messages.c: 46: qmsg->length = length;
  6564  00138C  EE20 F001          	lfsr	2,1
  6565  001390  5015               	movf	i1send_msg@qmsg,w,c
  6566  001392  26D9               	addwf	fsr2l,f,c
  6567  001394  5016               	movf	i1send_msg@qmsg+1,w,c
  6568  001396  22DA               	addwfc	fsr2h,f,c
  6569  001398  C00D  FFDF         	movff	i1send_msg@length,indf2
  6570                           
  6571                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6572  00139C  EE20 F002          	lfsr	2,2
  6573  0013A0  5015               	movf	i1send_msg@qmsg,w,c
  6574  0013A2  26D9               	addwf	fsr2l,f,c
  6575  0013A4  5016               	movf	i1send_msg@qmsg+1,w,c
  6576  0013A6  22DA               	addwfc	fsr2h,f,c
  6577  0013A8  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6578                           
  6579                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6580  0013AC  0E03               	movlw	3
  6581  0013AE  2415               	addwf	i1send_msg@qmsg,w,c
  6582  0013B0  6E01               	movwf	i1memcpy@d1,c
  6583  0013B2  0E00               	movlw	0
  6584  0013B4  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6585  0013B6  6E02               	movwf	i1memcpy@d1+1,c
  6586  0013B8  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6587  0013BC  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6588  0013C0  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6589  0013C4  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6590  0013C8  EC16  F00E         	call	i1_memcpy	;wreg free
  6591                           
  6592                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6593  0013CC  EE20 F034          	lfsr	2,52
  6594  0013D0  500B               	movf	i1send_msg@qptr,w,c
  6595  0013D2  26D9               	addwf	fsr2l,f,c
  6596  0013D4  500C               	movf	i1send_msg@qptr+1,w,c
  6597  0013D6  22DA               	addwfc	fsr2h,f,c
  6598  0013D8  EE10 F034          	lfsr	1,52
  6599  0013DC  500B               	movf	i1send_msg@qptr,w,c
  6600  0013DE  26E1               	addwf	fsr1l,f,c
  6601  0013E0  500C               	movf	i1send_msg@qptr+1,w,c
  6602  0013E2  22E2               	addwfc	fsr1h,f,c
  6603  0013E4  50E7               	movf	indf1,w,c
  6604  0013E6  6E11               	movwf	??i1_send_msg& (0+255),c
  6605  0013E8  2811               	incf	??i1_send_msg,w,c
  6606  0013EA  0B03               	andlw	3
  6607  0013EC  6EDF               	movwf	indf2,c
  6608                           
  6609                           ;messages.c: 59: qmsg->full = 1;
  6610  0013EE  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6611  0013F2  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6612  0013F6  0E01               	movlw	1
  6613  0013F8  6EDF               	movwf	indf2,c
  6614                           
  6615                           ;messages.c: 60: return (1);
  6616  0013FA  0E01               	movlw	1
  6617  0013FC  0012               	return	
  6618  0013FE                     __end_ofi1_send_msg:
  6619                           	opt stack 0
  6620                           pclatu	equ	0xFFB
  6621                           pclath	equ	0xFFA
  6622                           tblptru	equ	0xFF8
  6623                           tblptrh	equ	0xFF7
  6624                           tblptrl	equ	0xFF6
  6625                           tablat	equ	0xFF5
  6626                           prodh	equ	0xFF4
  6627                           prodl	equ	0xFF3
  6628                           intcon	equ	0xFF2
  6629                           postinc0	equ	0xFEE
  6630                           fsr0h	equ	0xFEA
  6631                           fsr0l	equ	0xFE9
  6632                           wreg	equ	0xFE8
  6633                           indf1	equ	0xFE7
  6634                           fsr1h	equ	0xFE2
  6635                           fsr1l	equ	0xFE1
  6636                           bsr	equ	0xFE0
  6637                           indf2	equ	0xFDF
  6638                           postinc2	equ	0xFDE
  6639                           postdec2	equ	0xFDD
  6640                           fsr2h	equ	0xFDA
  6641                           fsr2l	equ	0xFD9
  6642                           status	equ	0xFD8
  6643                           
  6644 ;; *************** function i1_memcpy *****************
  6645 ;; Defined at:
  6646 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  6647 ;; Parameters:    Size  Location     Type
  6648 ;;  d1              2    0[COMRAM] PTR void 
  6649 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6650 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6651 ;;		 -> main@msgbuffer(11), NULL(0), 
  6652 ;;  s1              2    2[COMRAM] PTR const void 
  6653 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6654 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6655 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  6656 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  6657 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6658 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  6659 ;;		 -> NULL(0), 
  6660 ;;  n               2    4[COMRAM] unsigned int 
  6661 ;; Auto vars:     Size  Location     Type
  6662 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6663 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6664 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6665 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  6666 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  6667 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6668 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  6669 ;;		 -> NULL(0), 
  6670 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6671 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6672 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6673 ;;		 -> main@msgbuffer(11), NULL(0), 
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  2    0[COMRAM] PTR void 
  6676 ;; Registers used:
  6677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6683 ;;      Params:         6       0       0       0       0
  6684 ;;      Locals:         4       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0
  6686 ;;      Totals:        10       0       0       0       0
  6687 ;;Total ram usage:       10 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    5
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		i1_send_msg
  6694 ;;		i1_recv_msg
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text42
  6699  001C2C                     __ptext42:
  6700                           	opt stack 0
  6701  001C2C                     i1_memcpy:
  6702                           	opt stack 17
  6703                           
  6704                           ;incstack = 0
  6705  001C2C  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6706  001C30  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6707  001C34  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6708  001C38  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6709  001C3C  D00E               	goto	i1l3115
  6710  001C3E                     i1l3109:
  6711  001C3E  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6712  001C42  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6713  001C46  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6714  001C4A  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6715  001C4E  CFDF FFE7          	movff	indf2,indf1
  6716  001C52  4A09               	infsnz	i1memcpy@s,f,c
  6717  001C54  2A0A               	incf	i1memcpy@s+1,f,c
  6718  001C56  4A07               	infsnz	i1memcpy@d,f,c
  6719  001C58  2A08               	incf	i1memcpy@d+1,f,c
  6720  001C5A                     i1l3115:
  6721  001C5A  0605               	decf	i1memcpy@n,f,c
  6722  001C5C  A0D8               	btfss	status,0,c
  6723  001C5E  0606               	decf	i1memcpy@n+1,f,c
  6724  001C60  2805               	incf	i1memcpy@n& (0+255),w,c
  6725  001C62  B4D8               	btfsc	status,2,c
  6726  001C64  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6727  001C66  B4D8               	btfsc	status,2,c
  6728                           
  6729                           ;	Return value of i1_memcpy is never used
  6730  001C68  0012               	return	
  6731  001C6A  D7E9               	goto	i1l3109
  6732  001C6C                     __end_ofi1_memcpy:
  6733                           	opt stack 0
  6734                           pclatu	equ	0xFFB
  6735                           pclath	equ	0xFFA
  6736                           tblptru	equ	0xFF8
  6737                           tblptrh	equ	0xFF7
  6738                           tblptrl	equ	0xFF6
  6739                           tablat	equ	0xFF5
  6740                           prodh	equ	0xFF4
  6741                           prodl	equ	0xFF3
  6742                           intcon	equ	0xFF2
  6743                           postinc0	equ	0xFEE
  6744                           fsr0h	equ	0xFEA
  6745                           fsr0l	equ	0xFE9
  6746                           wreg	equ	0xFE8
  6747                           indf1	equ	0xFE7
  6748                           fsr1h	equ	0xFE2
  6749                           fsr1l	equ	0xFE1
  6750                           bsr	equ	0xFE0
  6751                           indf2	equ	0xFDF
  6752                           postinc2	equ	0xFDE
  6753                           postdec2	equ	0xFDD
  6754                           fsr2h	equ	0xFDA
  6755                           fsr2l	equ	0xFD9
  6756                           status	equ	0xFD8
  6757                           
  6758 ;; *************** function _ReadUSART *****************
  6759 ;; Defined at:
  6760 ;;		line 15 in file "E:\MPLAB\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;		None
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  data            1    0[COMRAM] unsigned char 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      unsigned char 
  6767 ;; Registers used:
  6768 ;;		wreg, status,2, status,0
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6774 ;;      Params:         0       0       0       0       0
  6775 ;;      Locals:         1       0       0       0       0
  6776 ;;      Temps:          0       0       0       0       0
  6777 ;;      Totals:         1       0       0       0       0
  6778 ;;Total ram usage:        1 bytes
  6779 ;; Hardware stack levels used:    1
  6780 ;; Hardware stack levels required when called:    5
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_uart_recv_int_handler
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text43
  6789  001EFC                     __ptext43:
  6790                           	opt stack 0
  6791  001EFC                     _ReadUSART:
  6792                           	opt stack 18
  6793                           
  6794                           ;incstack = 0
  6795  001EFC  0EF2               	movlw	242
  6796  001EFE  1648               	andwf	_USART_Status,f,c
  6797  001F00  ACAB               	btfss	4011,6,c	;volatile
  6798  001F02  D003               	goto	i1l566
  6799  001F04  9048               	bcf	_USART_Status,0,c
  6800  001F06  B0AB               	btfsc	4011,0,c	;volatile
  6801  001F08  8048               	bsf	_USART_Status,0,c
  6802  001F0A                     i1l566:
  6803  001F0A  B4AB               	btfsc	4011,2,c	;volatile
  6804  001F0C  8448               	bsf	_USART_Status,2,c
  6805  001F0E  B2AB               	btfsc	4011,1,c	;volatile
  6806  001F10  8648               	bsf	_USART_Status,3,c
  6807  001F12  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6808  001F16  5001               	movf	ReadUSART@data,w,c
  6809  001F18  0012               	return	
  6810  001F1A                     __end_of_ReadUSART:
  6811                           	opt stack 0
  6812                           pclatu	equ	0xFFB
  6813                           pclath	equ	0xFFA
  6814                           tblptru	equ	0xFF8
  6815                           tblptrh	equ	0xFF7
  6816                           tblptrl	equ	0xFF6
  6817                           tablat	equ	0xFF5
  6818                           prodh	equ	0xFF4
  6819                           prodl	equ	0xFF3
  6820                           intcon	equ	0xFF2
  6821                           postinc0	equ	0xFEE
  6822                           fsr0h	equ	0xFEA
  6823                           fsr0l	equ	0xFE9
  6824                           wreg	equ	0xFE8
  6825                           indf1	equ	0xFE7
  6826                           fsr1h	equ	0xFE2
  6827                           fsr1l	equ	0xFE1
  6828                           bsr	equ	0xFE0
  6829                           indf2	equ	0xFDF
  6830                           postinc2	equ	0xFDE
  6831                           postdec2	equ	0xFDD
  6832                           fsr2h	equ	0xFDA
  6833                           fsr2l	equ	0xFD9
  6834                           status	equ	0xFD8
  6835                           
  6836 ;; *************** function _InterruptHandlerHigh *****************
  6837 ;; Defined at:
  6838 ;;		line 84 in file "src/interrupts.c"
  6839 ;; Parameters:    Size  Location     Type
  6840 ;;		None
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;		None
  6843 ;; Return value:  Size  Location     Type
  6844 ;;		None               void
  6845 ;; Registers used:
  6846 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6847 ;; Tracked objects:
  6848 ;;		On entry : 0/0
  6849 ;;		On exit  : 0/0
  6850 ;;		Unchanged: 0/0
  6851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6852 ;;      Params:         0       0       0       0       0
  6853 ;;      Locals:         0       0       0       0       0
  6854 ;;      Temps:          0      15       0       0       0
  6855 ;;      Totals:         0      15       0       0       0
  6856 ;;Total ram usage:       15 bytes
  6857 ;; Hardware stack levels used:    1
  6858 ;; Hardware stack levels required when called:    4
  6859 ;; This function calls:
  6860 ;;		_SleepIfOkay
  6861 ;;		_ToMainHigh_sendmsg
  6862 ;;		_i2c_int_handler
  6863 ;; This function is called by:
  6864 ;;		Interrupt level 2
  6865 ;; This function uses a non-reentrant model
  6866 ;;
  6867                           
  6868                           	psect	intcode
  6869  000008                     __pintcode:
  6870                           	opt stack 0
  6871  000008                     _InterruptHandlerHigh:
  6872                           	opt stack 16
  6873                           
  6874                           ;incstack = 0
  6875  000008  CFFA F097          	movff	pclath,??_InterruptHandlerHigh+1
  6876  00000C  CFFB F098          	movff	pclatu,??_InterruptHandlerHigh+2
  6877  000010  EFA1  F00A         	goto	int_func
  6878                           pclatu	equ	0xFFB
  6879                           pclath	equ	0xFFA
  6880                           tblptru	equ	0xFF8
  6881                           tblptrh	equ	0xFF7
  6882                           tblptrl	equ	0xFF6
  6883                           tablat	equ	0xFF5
  6884                           prodh	equ	0xFF4
  6885                           prodl	equ	0xFF3
  6886                           intcon	equ	0xFF2
  6887                           postinc0	equ	0xFEE
  6888                           fsr0h	equ	0xFEA
  6889                           fsr0l	equ	0xFE9
  6890                           wreg	equ	0xFE8
  6891                           indf1	equ	0xFE7
  6892                           fsr1h	equ	0xFE2
  6893                           fsr1l	equ	0xFE1
  6894                           bsr	equ	0xFE0
  6895                           indf2	equ	0xFDF
  6896                           postinc2	equ	0xFDE
  6897                           postdec2	equ	0xFDD
  6898                           fsr2h	equ	0xFDA
  6899                           fsr2l	equ	0xFD9
  6900                           status	equ	0xFD8
  6901                           
  6902                           	psect	intcode_body
  6903  001542                     __pintcode_body:
  6904                           	opt stack 16
  6905  001542                     int_func:
  6906                           	opt stack 16
  6907  001542  CFE9 F099          	movff	fsr0l,??_InterruptHandlerHigh+3
  6908  001546  CFEA F09A          	movff	fsr0h,??_InterruptHandlerHigh+4
  6909  00154A  CFE1 F09B          	movff	fsr1l,??_InterruptHandlerHigh+5
  6910  00154E  CFE2 F09C          	movff	fsr1h,??_InterruptHandlerHigh+6
  6911  001552  CFD9 F09D          	movff	fsr2l,??_InterruptHandlerHigh+7
  6912  001556  CFDA F09E          	movff	fsr2h,??_InterruptHandlerHigh+8
  6913  00155A  CFF3 F09F          	movff	prodl,??_InterruptHandlerHigh+9
  6914  00155E  CFF4 F0A0          	movff	prodh,??_InterruptHandlerHigh+10
  6915  001562  CFF6 F0A1          	movff	tblptrl,??_InterruptHandlerHigh+11
  6916  001566  CFF7 F0A2          	movff	tblptrh,??_InterruptHandlerHigh+12
  6917  00156A  CFF8 F0A3          	movff	tblptru,??_InterruptHandlerHigh+13
  6918  00156E  CFF5 F0A4          	movff	tablat,??_InterruptHandlerHigh+14
  6919                           
  6920                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6921  001572  A69E               	btfss	3998,3,c	;volatile
  6922  001574  D003               	goto	i2l3251
  6923                           
  6924                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6925  001576  969E               	bcf	3998,3,c	;volatile
  6926                           
  6927                           ;interrupts.c: 93: i2c_int_handler();
  6928  001578  EC6B  F000         	call	_i2c_int_handler	;wreg free
  6929  00157C                     i2l3251:
  6930                           
  6931                           ;interrupts.c: 94: }
  6932                           ;interrupts.c: 97: if (INTCONbits.TMR0IF) {
  6933  00157C  A4F2               	btfss	intcon,2,c	;volatile
  6934  00157E  D00E               	goto	i2l3257
  6935                           
  6936                           ;interrupts.c: 98: INTCONbits.TMR0IF = 0;
  6937  001580  94F2               	bcf	intcon,2,c	;volatile
  6938                           
  6939                           ;interrupts.c: 99: ToMainHigh_sendmsg(0, 10, (void *)0);
  6940  001582  0100               	movlb	0	; () banked
  6941  001584  6F96               	movwf	??_InterruptHandlerHigh& (0+255),b
  6942  001586  0E0A               	movlw	10
  6943  001588  6E41               	movwf	ToMainHigh_sendmsg@msgtype,c
  6944  00158A  0100               	movlb	0	; () banked
  6945  00158C  5196               	movf	??_InterruptHandlerHigh& (0+255),w,b
  6946  00158E  0E00               	movlw	0
  6947  001590  6E43               	movwf	ToMainHigh_sendmsg@data+1,c
  6948  001592  0E00               	movlw	0
  6949  001594  6E42               	movwf	ToMainHigh_sendmsg@data,c
  6950  001596  0E00               	movlw	0
  6951  001598  ECDD  F00E         	call	_ToMainHigh_sendmsg
  6952  00159C                     i2l3257:
  6953                           
  6954                           ;interrupts.c: 100: }
  6955                           ;interrupts.c: 103: SleepIfOkay();
  6956  00159C  EC47  F00D         	call	_SleepIfOkay	;wreg free
  6957  0015A0  C0A4  FFF5         	movff	??_InterruptHandlerHigh+14,tablat
  6958  0015A4  C0A3  FFF8         	movff	??_InterruptHandlerHigh+13,tblptru
  6959  0015A8  C0A2  FFF7         	movff	??_InterruptHandlerHigh+12,tblptrh
  6960  0015AC  C0A1  FFF6         	movff	??_InterruptHandlerHigh+11,tblptrl
  6961  0015B0  C0A0  FFF4         	movff	??_InterruptHandlerHigh+10,prodh
  6962  0015B4  C09F  FFF3         	movff	??_InterruptHandlerHigh+9,prodl
  6963  0015B8  C09E  FFDA         	movff	??_InterruptHandlerHigh+8,fsr2h
  6964  0015BC  C09D  FFD9         	movff	??_InterruptHandlerHigh+7,fsr2l
  6965  0015C0  C09C  FFE2         	movff	??_InterruptHandlerHigh+6,fsr1h
  6966  0015C4  C09B  FFE1         	movff	??_InterruptHandlerHigh+5,fsr1l
  6967  0015C8  C09A  FFEA         	movff	??_InterruptHandlerHigh+4,fsr0h
  6968  0015CC  C099  FFE9         	movff	??_InterruptHandlerHigh+3,fsr0l
  6969  0015D0  C098  FFFB         	movff	??_InterruptHandlerHigh+2,pclatu
  6970  0015D4  C097  FFFA         	movff	??_InterruptHandlerHigh+1,pclath
  6971  0015D8  0011               	retfie		f
  6972  0015DA                     __end_of_InterruptHandlerHigh:
  6973                           	opt stack 0
  6974                           pclatu	equ	0xFFB
  6975                           pclath	equ	0xFFA
  6976                           tblptru	equ	0xFF8
  6977                           tblptrh	equ	0xFF7
  6978                           tblptrl	equ	0xFF6
  6979                           tablat	equ	0xFF5
  6980                           prodh	equ	0xFF4
  6981                           prodl	equ	0xFF3
  6982                           intcon	equ	0xFF2
  6983                           postinc0	equ	0xFEE
  6984                           fsr0h	equ	0xFEA
  6985                           fsr0l	equ	0xFE9
  6986                           wreg	equ	0xFE8
  6987                           indf1	equ	0xFE7
  6988                           fsr1h	equ	0xFE2
  6989                           fsr1l	equ	0xFE1
  6990                           bsr	equ	0xFE0
  6991                           indf2	equ	0xFDF
  6992                           postinc2	equ	0xFDE
  6993                           postdec2	equ	0xFDD
  6994                           fsr2h	equ	0xFDA
  6995                           fsr2l	equ	0xFD9
  6996                           status	equ	0xFD8
  6997                           
  6998 ;; *************** function _i2c_int_handler *****************
  6999 ;; Defined at:
  7000 ;;		line 100 in file "src/my_i2c.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;		None
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  error_buf       3   13[BANK0 ] unsigned char [3]
  7005 ;;  data_read       1   21[BANK0 ] unsigned char 
  7006 ;;  msg_ready       1   20[BANK0 ] unsigned char 
  7007 ;;  msg_to_send     1   19[BANK0 ] unsigned char 
  7008 ;;  i2c_data        1   18[BANK0 ] unsigned char 
  7009 ;;  overrun_erro    1   17[BANK0 ] unsigned char 
  7010 ;;  data_written    1   16[BANK0 ] unsigned char 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;		None               void
  7013 ;; Registers used:
  7014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7020 ;;      Params:         0       0       0       0       0
  7021 ;;      Locals:         0       9       0       0       0
  7022 ;;      Temps:          0       2       0       0       0
  7023 ;;      Totals:         0      11       0       0       0
  7024 ;;Total ram usage:       11 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:    3
  7027 ;; This function calls:
  7028 ;;		_ToMainHigh_sendmsg
  7029 ;;		_handle_start
  7030 ;; This function is called by:
  7031 ;;		_InterruptHandlerHigh
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text45
  7036  0000D6                     __ptext45:
  7037                           	opt stack 0
  7038  0000D6                     _i2c_int_handler:
  7039                           	opt stack 16
  7040                           
  7041                           ;my_i2c.c: 101: unsigned char i2c_data;
  7042                           ;my_i2c.c: 102: unsigned char data_read = 0;
  7043                           
  7044                           ;incstack = 0
  7045  0000D6  0100               	movlb	0	; () banked
  7046  0000D8  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7047  0000DA  0E00               	movlw	0
  7048  0000DC  0100               	movlb	0	; () banked
  7049  0000DE  0100               	movlb	0	; () banked
  7050  0000E0  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  7051  0000E2  0100               	movlb	0	; () banked
  7052  0000E4  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7053                           
  7054                           ;my_i2c.c: 103: unsigned char data_written = 0;
  7055  0000E6  0100               	movlb	0	; () banked
  7056  0000E8  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7057  0000EA  0E00               	movlw	0
  7058  0000EC  0100               	movlb	0	; () banked
  7059  0000EE  0100               	movlb	0	; () banked
  7060  0000F0  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  7061  0000F2  0100               	movlb	0	; () banked
  7062  0000F4  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7063                           
  7064                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  7065  0000F6  0100               	movlb	0	; () banked
  7066  0000F8  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7067  0000FA  0E00               	movlw	0
  7068  0000FC  0100               	movlb	0	; () banked
  7069  0000FE  0100               	movlb	0	; () banked
  7070  000100  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7071  000102  0100               	movlb	0	; () banked
  7072  000104  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7073                           
  7074                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  7075  000106  0100               	movlb	0	; () banked
  7076  000108  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7077  00010A  0E00               	movlw	0
  7078  00010C  0100               	movlb	0	; () banked
  7079  00010E  0100               	movlb	0	; () banked
  7080  000110  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7081  000112  0100               	movlb	0	; () banked
  7082  000114  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7083                           
  7084                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  7085  000116  0100               	movlb	0	; () banked
  7086  000118  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7087  00011A  0E00               	movlw	0
  7088  00011C  0100               	movlb	0	; () banked
  7089  00011E  0100               	movlb	0	; () banked
  7090  000120  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7091  000122  0100               	movlb	0	; () banked
  7092  000124  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7093                           
  7094                           ; BSR set to: 0
  7095                           ;my_i2c.c: 107: unsigned char error_buf[3];
  7096                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  7097  000126  ACC6               	btfss	4038,6,c	;volatile
  7098  000128  D029               	goto	i2l3273
  7099                           
  7100                           ; BSR set to: 0
  7101                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  7102  00012A  9CC6               	bcf	4038,6,c	;volatile
  7103                           
  7104                           ; BSR set to: 0
  7105                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  7106  00012C  0100               	movlb	0	; () banked
  7107  00012E  EE20 F00C          	lfsr	2,12
  7108  000132  0100               	movlb	0	; () banked
  7109  000134  51D1               	movf	_ic_ptr& (0+255),w,b
  7110  000136  26D9               	addwf	fsr2l,f,c
  7111  000138  0100               	movlb	0	; () banked
  7112  00013A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7113  00013C  22DA               	addwfc	fsr2h,f,c
  7114  00013E  0E05               	movlw	5
  7115  000140  6EDF               	movwf	indf2,c
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;my_i2c.c: 116: overrun_error = 1;
  7119  000142  0100               	movlb	0	; () banked
  7120  000144  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7121  000146  0E01               	movlw	1
  7122  000148  0100               	movlb	0	; () banked
  7123  00014A  0100               	movlb	0	; () banked
  7124  00014C  6F91               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7125  00014E  0100               	movlb	0	; () banked
  7126  000150  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7130  000152  0100               	movlb	0	; () banked
  7131  000154  EE20 F00E          	lfsr	2,14
  7132  000158  0100               	movlb	0	; () banked
  7133  00015A  51D1               	movf	_ic_ptr& (0+255),w,b
  7134  00015C  26D9               	addwf	fsr2l,f,c
  7135  00015E  0100               	movlb	0	; () banked
  7136  000160  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7137  000162  22DA               	addwfc	fsr2h,f,c
  7138  000164  2ADF               	incf	indf2,f,c
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7142  000166  0100               	movlb	0	; () banked
  7143  000168  EE20 F00D          	lfsr	2,13
  7144  00016C  0100               	movlb	0	; () banked
  7145  00016E  51D1               	movf	_ic_ptr& (0+255),w,b
  7146  000170  26D9               	addwf	fsr2l,f,c
  7147  000172  0100               	movlb	0	; () banked
  7148  000174  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7149  000176  22DA               	addwfc	fsr2h,f,c
  7150  000178  0E04               	movlw	4
  7151  00017A  6EDF               	movwf	indf2,c
  7152  00017C                     i2l3273:
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;my_i2c.c: 119: }
  7156                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7157  00017C  A0C7               	btfss	4039,0,c	;volatile
  7158  00017E  D00A               	goto	i2l3279
  7159                           
  7160                           ; BSR set to: 0
  7161                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7162  000180  CFC9 F092          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7163                           
  7164                           ; BSR set to: 0
  7165                           ;my_i2c.c: 123: data_read = 1;
  7166  000184  0100               	movlb	0	; () banked
  7167  000186  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7168  000188  0E01               	movlw	1
  7169  00018A  0100               	movlb	0	; () banked
  7170  00018C  0100               	movlb	0	; () banked
  7171  00018E  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  7172  000190  0100               	movlb	0	; () banked
  7173  000192  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7174  000194                     i2l3279:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;my_i2c.c: 124: }
  7178                           ;my_i2c.c: 126: if (!overrun_error) {
  7179  000194  0100               	movlb	0	; () banked
  7180  000196  0100               	movlb	0	; () banked
  7181  000198  6791               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7182  00019A  D1CE               	goto	i2l318
  7183  00019C  D1B7               	goto	i2l3367
  7184  00019E                     i2l320:
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;my_i2c.c: 129: {
  7188                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7189  00019E  A6C7               	btfss	4039,3,c	;volatile
  7190  0001A0  D1CB               	goto	i2l318
  7191                           
  7192                           ; BSR set to: 0
  7193                           ;my_i2c.c: 132: handle_start(data_read);
  7194  0001A2  0100               	movlb	0	; () banked
  7195  0001A4  0100               	movlb	0	; () banked
  7196  0001A6  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7197  0001A8  EC46  F009         	call	_handle_start
  7198                           
  7199                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7200  0001AC  0100               	movlb	0	; () banked
  7201  0001AE  EE20 F00C          	lfsr	2,12
  7202  0001B2  0100               	movlb	0	; () banked
  7203  0001B4  51D1               	movf	_ic_ptr& (0+255),w,b
  7204  0001B6  26D9               	addwf	fsr2l,f,c
  7205  0001B8  0100               	movlb	0	; () banked
  7206  0001BA  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7207  0001BC  22DA               	addwfc	fsr2h,f,c
  7208  0001BE  0E08               	movlw	8
  7209  0001C0  62DF               	cpfseq	indf2,c
  7210  0001C2  D1BA               	goto	i2l318
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;my_i2c.c: 135: data_read = 0;
  7214  0001C4  0100               	movlb	0	; () banked
  7215  0001C6  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7216  0001C8  0E00               	movlw	0
  7217  0001CA  0100               	movlb	0	; () banked
  7218  0001CC  0100               	movlb	0	; () banked
  7219  0001CE  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  7220  0001D0  0100               	movlb	0	; () banked
  7221  0001D2  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7222                           
  7223                           ;my_i2c.c: 136: msg_to_send = 1;
  7224  0001D4  0100               	movlb	0	; () banked
  7225  0001D6  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7226  0001D8  0E01               	movlw	1
  7227  0001DA  0100               	movlb	0	; () banked
  7228  0001DC  0100               	movlb	0	; () banked
  7229  0001DE  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7230  0001E0  D187               	goto	L11
  7231  0001E2                     i2l324:
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;my_i2c.c: 142: {
  7235                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7236  0001E2  A8C7               	btfss	4039,4,c	;volatile
  7237  0001E4  D030               	goto	i2l3299
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7241  0001E6  0100               	movlb	0	; () banked
  7242  0001E8  EE20 F00B          	lfsr	2,11
  7243  0001EC  0100               	movlb	0	; () banked
  7244  0001EE  51D1               	movf	_ic_ptr& (0+255),w,b
  7245  0001F0  26D9               	addwf	fsr2l,f,c
  7246  0001F2  0100               	movlb	0	; () banked
  7247  0001F4  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7248  0001F6  22DA               	addwfc	fsr2h,f,c
  7249  0001F8  2ADF               	incf	indf2,f,c
  7250                           
  7251                           ; BSR set to: 0
  7252                           ;my_i2c.c: 148: if (data_read) {
  7253  0001FA  0100               	movlb	0	; () banked
  7254  0001FC  0100               	movlb	0	; () banked
  7255  0001FE  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7256  000200  B4D8               	btfsc	status,2,c
  7257  000202  D179               	goto	L13
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7261  000204  BAC7               	btfsc	4039,5,c	;volatile
  7262  000206  D009               	goto	i2l3297
  7263                           
  7264                           ; BSR set to: 0
  7265                           ;my_i2c.c: 150: msg_ready = 1;
  7266  000208  0100               	movlb	0	; () banked
  7267  00020A  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7268  00020C  0E01               	movlw	1
  7269  00020E  0100               	movlb	0	; () banked
  7270  000210  0100               	movlb	0	; () banked
  7271  000212  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7272  000214  0100               	movlb	0	; () banked
  7273  000216  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7274                           
  7275                           ;my_i2c.c: 151: } else {
  7276  000218  D16E               	goto	L13
  7277  00021A                     i2l3297:
  7278                           
  7279                           ; BSR set to: 0
  7280                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7281  00021A  0100               	movlb	0	; () banked
  7282  00021C  EE20 F00E          	lfsr	2,14
  7283  000220  0100               	movlb	0	; () banked
  7284  000222  51D1               	movf	_ic_ptr& (0+255),w,b
  7285  000224  26D9               	addwf	fsr2l,f,c
  7286  000226  0100               	movlb	0	; () banked
  7287  000228  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7288  00022A  22DA               	addwfc	fsr2h,f,c
  7289  00022C  2ADF               	incf	indf2,f,c
  7290                           
  7291                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7292  00022E  0100               	movlb	0	; () banked
  7293  000230  EE20 F00D          	lfsr	2,13
  7294  000234  0100               	movlb	0	; () banked
  7295  000236  51D1               	movf	_ic_ptr& (0+255),w,b
  7296  000238  26D9               	addwf	fsr2l,f,c
  7297  00023A  0100               	movlb	0	; () banked
  7298  00023C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7299  00023E  22DA               	addwfc	fsr2h,f,c
  7300  000240  0E06               	movlw	6
  7301  000242  6EDF               	movwf	indf2,c
  7302                           
  7303                           ; BSR set to: 0
  7304  000244  D158               	goto	L13
  7305  000246                     i2l3299:
  7306                           
  7307                           ; BSR set to: 0
  7308  000246  0100               	movlb	0	; () banked
  7309  000248  0100               	movlb	0	; () banked
  7310  00024A  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7311  00024C  B4D8               	btfsc	status,2,c
  7312  00024E  D174               	goto	i2l318
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7316  000250  0100               	movlb	0	; () banked
  7317  000252  EE20 F00B          	lfsr	2,11
  7318  000256  0100               	movlb	0	; () banked
  7319  000258  51D1               	movf	_ic_ptr& (0+255),w,b
  7320  00025A  26D9               	addwf	fsr2l,f,c
  7321  00025C  0100               	movlb	0	; () banked
  7322  00025E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7323  000260  22DA               	addwfc	fsr2h,f,c
  7324  000262  2ADF               	incf	indf2,f,c
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7328  000264  BAC7               	btfsc	4039,5,c	;volatile
  7329  000266  D019               	goto	i2l3315
  7330                           
  7331                           ; BSR set to: 0
  7332                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7333  000268  B4C7               	btfsc	4039,2,c	;volatile
  7334  00026A  D00B               	goto	i2l3309
  7335                           
  7336                           ; BSR set to: 0
  7337                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7338  00026C  0100               	movlb	0	; () banked
  7339  00026E  EE20 F00C          	lfsr	2,12
  7340  000272  0100               	movlb	0	; () banked
  7341  000274  51D1               	movf	_ic_ptr& (0+255),w,b
  7342  000276  26D9               	addwf	fsr2l,f,c
  7343  000278  0100               	movlb	0	; () banked
  7344  00027A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7345  00027C  22DA               	addwfc	fsr2h,f,c
  7346  00027E  0E07               	movlw	7
  7347  000280  D076               	goto	L10
  7348  000282                     i2l3309:
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7352  000282  0100               	movlb	0	; () banked
  7353  000284  EE20 F00C          	lfsr	2,12
  7354  000288  0100               	movlb	0	; () banked
  7355  00028A  51D1               	movf	_ic_ptr& (0+255),w,b
  7356  00028C  26D9               	addwf	fsr2l,f,c
  7357  00028E  0100               	movlb	0	; () banked
  7358  000290  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7359  000292  22DA               	addwfc	fsr2h,f,c
  7360  000294  0E08               	movlw	8
  7361  000296  6EDF               	movwf	indf2,c
  7362  000298  D11D               	goto	L14
  7363  00029A                     i2l3315:
  7364                           
  7365                           ; BSR set to: 0
  7366                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7367  00029A  0100               	movlb	0	; () banked
  7368  00029C  EE20 F00E          	lfsr	2,14
  7369  0002A0  0100               	movlb	0	; () banked
  7370  0002A2  51D1               	movf	_ic_ptr& (0+255),w,b
  7371  0002A4  26D9               	addwf	fsr2l,f,c
  7372  0002A6  0100               	movlb	0	; () banked
  7373  0002A8  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7374  0002AA  22DA               	addwfc	fsr2h,f,c
  7375  0002AC  2ADF               	incf	indf2,f,c
  7376                           
  7377                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7378  0002AE  0100               	movlb	0	; () banked
  7379  0002B0  EE20 F00C          	lfsr	2,12
  7380  0002B4  0100               	movlb	0	; () banked
  7381  0002B6  51D1               	movf	_ic_ptr& (0+255),w,b
  7382  0002B8  26D9               	addwf	fsr2l,f,c
  7383  0002BA  0100               	movlb	0	; () banked
  7384  0002BC  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7385  0002BE  22DA               	addwfc	fsr2h,f,c
  7386  0002C0  0E05               	movlw	5
  7387  0002C2  6EDF               	movwf	indf2,c
  7388                           
  7389                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7390  0002C4  0100               	movlb	0	; () banked
  7391  0002C6  EE20 F00D          	lfsr	2,13
  7392  0002CA  0100               	movlb	0	; () banked
  7393  0002CC  51D1               	movf	_ic_ptr& (0+255),w,b
  7394  0002CE  26D9               	addwf	fsr2l,f,c
  7395  0002D0  0100               	movlb	0	; () banked
  7396  0002D2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7397  0002D4  22DA               	addwfc	fsr2h,f,c
  7398  0002D6  0E06               	movlw	6
  7399  0002D8  D04A               	goto	L10
  7400  0002DA                     i2l3317:
  7401                           
  7402                           ; BSR set to: 0
  7403                           ;my_i2c.c: 177: {
  7404                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7405  0002DA  0100               	movlb	0	; () banked
  7406  0002DC  EE20 F01A          	lfsr	2,26
  7407  0002E0  0100               	movlb	0	; () banked
  7408  0002E2  51D1               	movf	_ic_ptr& (0+255),w,b
  7409  0002E4  26D9               	addwf	fsr2l,f,c
  7410  0002E6  0100               	movlb	0	; () banked
  7411  0002E8  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7412  0002EA  22DA               	addwfc	fsr2h,f,c
  7413  0002EC  50DF               	movf	indf2,w,c
  7414  0002EE  0100               	movlb	0	; () banked
  7415  0002F0  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7416  0002F2  0100               	movlb	0	; () banked
  7417  0002F4  EE20 F019          	lfsr	2,25
  7418  0002F8  0100               	movlb	0	; () banked
  7419  0002FA  51D1               	movf	_ic_ptr& (0+255),w,b
  7420  0002FC  26D9               	addwf	fsr2l,f,c
  7421  0002FE  0100               	movlb	0	; () banked
  7422  000300  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7423  000302  22DA               	addwfc	fsr2h,f,c
  7424  000304  50DF               	movf	indf2,w,c
  7425  000306  0100               	movlb	0	; () banked
  7426  000308  5D8B               	subwf	??_i2c_int_handler& (0+255),w,b
  7427  00030A  B0D8               	btfsc	status,0,c
  7428  00030C  D0F4               	goto	L13
  7429                           
  7430                           ; BSR set to: 0
  7431                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7432  00030E  0100               	movlb	0	; () banked
  7433  000310  EE20 F01A          	lfsr	2,26
  7434  000314  0100               	movlb	0	; () banked
  7435  000316  51D1               	movf	_ic_ptr& (0+255),w,b
  7436  000318  26D9               	addwf	fsr2l,f,c
  7437  00031A  0100               	movlb	0	; () banked
  7438  00031C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7439  00031E  22DA               	addwfc	fsr2h,f,c
  7440  000320  50DF               	movf	indf2,w,c
  7441  000322  0100               	movlb	0	; () banked
  7442  000324  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7443  000326  0100               	movlb	0	; () banked
  7444  000328  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7445  00032A  0D01               	mullw	1
  7446  00032C  0E0F               	movlw	15
  7447  00032E  26F3               	addwf	prodl,f,c
  7448  000330  0E00               	movlw	0
  7449  000332  22F4               	addwfc	prodh,f,c
  7450  000334  50F3               	movf	prodl,w,c
  7451  000336  0100               	movlb	0	; () banked
  7452  000338  0100               	movlb	0	; () banked
  7453  00033A  25D1               	addwf	_ic_ptr& (0+255),w,b
  7454  00033C  6ED9               	movwf	fsr2l,c
  7455  00033E  50F4               	movf	prodh,w,c
  7456  000340  0100               	movlb	0	; () banked
  7457  000342  0100               	movlb	0	; () banked
  7458  000344  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7459  000346  6EDA               	movwf	fsr2h,c
  7460  000348  50DF               	movf	indf2,w,c
  7461  00034A  6EC9               	movwf	4041,c	;volatile
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7465  00034C  0100               	movlb	0	; () banked
  7466  00034E  EE20 F01A          	lfsr	2,26
  7467  000352  0100               	movlb	0	; () banked
  7468  000354  51D1               	movf	_ic_ptr& (0+255),w,b
  7469  000356  26D9               	addwf	fsr2l,f,c
  7470  000358  0100               	movlb	0	; () banked
  7471  00035A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7472  00035C  22DA               	addwfc	fsr2h,f,c
  7473  00035E  2ADF               	incf	indf2,f,c
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;my_i2c.c: 181: data_written = 1;
  7477  000360  0100               	movlb	0	; () banked
  7478  000362  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7479  000364  0E01               	movlw	1
  7480  000366  0100               	movlb	0	; () banked
  7481  000368  0100               	movlb	0	; () banked
  7482  00036A  6F90               	movwf	i2c_int_handler@data_written& (0+255),b
  7483  00036C  D0C1               	goto	L11
  7484  00036E                     L10:
  7485  00036E  6EDF               	movwf	indf2,c
  7486  000370  D0E3               	goto	i2l318
  7487  000372                     i2l338:
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;my_i2c.c: 189: {
  7491                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7492  000372  A8C7               	btfss	4039,4,c	;volatile
  7493  000374  D062               	goto	i2l3345
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7497  000376  0100               	movlb	0	; () banked
  7498  000378  EE20 F00B          	lfsr	2,11
  7499  00037C  0100               	movlb	0	; () banked
  7500  00037E  51D1               	movf	_ic_ptr& (0+255),w,b
  7501  000380  26D9               	addwf	fsr2l,f,c
  7502  000382  0100               	movlb	0	; () banked
  7503  000384  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7504  000386  22DA               	addwfc	fsr2h,f,c
  7505  000388  2ADF               	incf	indf2,f,c
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;my_i2c.c: 194: if (data_read) {
  7509  00038A  0100               	movlb	0	; () banked
  7510  00038C  0100               	movlb	0	; () banked
  7511  00038E  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7512  000390  B4D8               	btfsc	status,2,c
  7513  000392  D04A               	goto	i2l3341
  7514                           
  7515                           ; BSR set to: 0
  7516                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7517  000394  AAC7               	btfss	4039,5,c	;volatile
  7518  000396  D027               	goto	i2l3339
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7522  000398  0100               	movlb	0	; () banked
  7523  00039A  EE20 F00A          	lfsr	2,10
  7524  00039E  0100               	movlb	0	; () banked
  7525  0003A0  51D1               	movf	_ic_ptr& (0+255),w,b
  7526  0003A2  26D9               	addwf	fsr2l,f,c
  7527  0003A4  0100               	movlb	0	; () banked
  7528  0003A6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7529  0003A8  22DA               	addwfc	fsr2h,f,c
  7530  0003AA  50DF               	movf	indf2,w,c
  7531  0003AC  0100               	movlb	0	; () banked
  7532  0003AE  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7533  0003B0  0100               	movlb	0	; () banked
  7534  0003B2  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7535  0003B4  0D01               	mullw	1
  7536  0003B6  50F3               	movf	prodl,w,c
  7537  0003B8  0100               	movlb	0	; () banked
  7538  0003BA  0100               	movlb	0	; () banked
  7539  0003BC  25D1               	addwf	_ic_ptr& (0+255),w,b
  7540  0003BE  6ED9               	movwf	fsr2l,c
  7541  0003C0  50F4               	movf	prodh,w,c
  7542  0003C2  0100               	movlb	0	; () banked
  7543  0003C4  0100               	movlb	0	; () banked
  7544  0003C6  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7545  0003C8  6EDA               	movwf	fsr2h,c
  7546  0003CA  0100               	movlb	0	; () banked
  7547  0003CC  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7548                           
  7549                           ; BSR set to: 0
  7550                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7551  0003D0  0100               	movlb	0	; () banked
  7552  0003D2  EE20 F00A          	lfsr	2,10
  7553  0003D6  0100               	movlb	0	; () banked
  7554  0003D8  51D1               	movf	_ic_ptr& (0+255),w,b
  7555  0003DA  26D9               	addwf	fsr2l,f,c
  7556  0003DC  0100               	movlb	0	; () banked
  7557  0003DE  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7558  0003E0  22DA               	addwfc	fsr2h,f,c
  7559  0003E2  2ADF               	incf	indf2,f,c
  7560  0003E4  D021               	goto	i2l3341
  7561  0003E6                     i2l3339:
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7565  0003E6  0100               	movlb	0	; () banked
  7566  0003E8  EE20 F00E          	lfsr	2,14
  7567  0003EC  0100               	movlb	0	; () banked
  7568  0003EE  51D1               	movf	_ic_ptr& (0+255),w,b
  7569  0003F0  26D9               	addwf	fsr2l,f,c
  7570  0003F2  0100               	movlb	0	; () banked
  7571  0003F4  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7572  0003F6  22DA               	addwfc	fsr2h,f,c
  7573  0003F8  2ADF               	incf	indf2,f,c
  7574                           
  7575                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7576  0003FA  0100               	movlb	0	; () banked
  7577  0003FC  EE20 F00D          	lfsr	2,13
  7578  000400  0100               	movlb	0	; () banked
  7579  000402  51D1               	movf	_ic_ptr& (0+255),w,b
  7580  000404  26D9               	addwf	fsr2l,f,c
  7581  000406  0100               	movlb	0	; () banked
  7582  000408  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7583  00040A  22DA               	addwfc	fsr2h,f,c
  7584  00040C  0E06               	movlw	6
  7585  00040E  6EDF               	movwf	indf2,c
  7586                           
  7587                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7588  000410  0100               	movlb	0	; () banked
  7589  000412  EE20 F00C          	lfsr	2,12
  7590  000416  0100               	movlb	0	; () banked
  7591  000418  51D1               	movf	_ic_ptr& (0+255),w,b
  7592  00041A  26D9               	addwf	fsr2l,f,c
  7593  00041C  0100               	movlb	0	; () banked
  7594  00041E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7595  000420  22DA               	addwfc	fsr2h,f,c
  7596  000422  0E05               	movlw	5
  7597  000424  6EDF               	movwf	indf2,c
  7598  000426  D067               	goto	L13
  7599  000428                     i2l3341:
  7600                           
  7601                           ; BSR set to: 0
  7602                           ;my_i2c.c: 205: msg_ready = 1;
  7603  000428  0100               	movlb	0	; () banked
  7604  00042A  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7605  00042C  0E01               	movlw	1
  7606  00042E  0100               	movlb	0	; () banked
  7607  000430  0100               	movlb	0	; () banked
  7608  000432  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7609  000434  0100               	movlb	0	; () banked
  7610  000436  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7611                           
  7612                           ; BSR set to: 0
  7613  000438  D05E               	goto	L13
  7614  00043A                     i2l3345:
  7615                           
  7616                           ; BSR set to: 0
  7617  00043A  0100               	movlb	0	; () banked
  7618  00043C  0100               	movlb	0	; () banked
  7619  00043E  5195               	movf	i2c_int_handler@data_read& (0+255),w,b
  7620  000440  B4D8               	btfsc	status,2,c
  7621  000442  D07A               	goto	i2l318
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7625  000444  0100               	movlb	0	; () banked
  7626  000446  EE20 F00B          	lfsr	2,11
  7627  00044A  0100               	movlb	0	; () banked
  7628  00044C  51D1               	movf	_ic_ptr& (0+255),w,b
  7629  00044E  26D9               	addwf	fsr2l,f,c
  7630  000450  0100               	movlb	0	; () banked
  7631  000452  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7632  000454  22DA               	addwfc	fsr2h,f,c
  7633  000456  2ADF               	incf	indf2,f,c
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7637  000458  AAC7               	btfss	4039,5,c	;volatile
  7638  00045A  D027               	goto	i2l346
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7642  00045C  0100               	movlb	0	; () banked
  7643  00045E  EE20 F00A          	lfsr	2,10
  7644  000462  0100               	movlb	0	; () banked
  7645  000464  51D1               	movf	_ic_ptr& (0+255),w,b
  7646  000466  26D9               	addwf	fsr2l,f,c
  7647  000468  0100               	movlb	0	; () banked
  7648  00046A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7649  00046C  22DA               	addwfc	fsr2h,f,c
  7650  00046E  50DF               	movf	indf2,w,c
  7651  000470  0100               	movlb	0	; () banked
  7652  000472  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7653  000474  0100               	movlb	0	; () banked
  7654  000476  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7655  000478  0D01               	mullw	1
  7656  00047A  50F3               	movf	prodl,w,c
  7657  00047C  0100               	movlb	0	; () banked
  7658  00047E  0100               	movlb	0	; () banked
  7659  000480  25D1               	addwf	_ic_ptr& (0+255),w,b
  7660  000482  6ED9               	movwf	fsr2l,c
  7661  000484  50F4               	movf	prodh,w,c
  7662  000486  0100               	movlb	0	; () banked
  7663  000488  0100               	movlb	0	; () banked
  7664  00048A  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7665  00048C  6EDA               	movwf	fsr2h,c
  7666  00048E  0100               	movlb	0	; () banked
  7667  000490  C092  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7671  000494  0100               	movlb	0	; () banked
  7672  000496  EE20 F00A          	lfsr	2,10
  7673  00049A  0100               	movlb	0	; () banked
  7674  00049C  51D1               	movf	_ic_ptr& (0+255),w,b
  7675  00049E  26D9               	addwf	fsr2l,f,c
  7676  0004A0  0100               	movlb	0	; () banked
  7677  0004A2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7678  0004A4  22DA               	addwfc	fsr2h,f,c
  7679  0004A6  2ADF               	incf	indf2,f,c
  7680                           
  7681                           ;my_i2c.c: 213: } else {
  7682  0004A8  D047               	goto	i2l318
  7683  0004AA                     i2l346:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7687  0004AA  A4C7               	btfss	4039,2,c	;volatile
  7688  0004AC  D6B6               	goto	i2l3297
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7692  0004AE  0100               	movlb	0	; () banked
  7693  0004B0  EE20 F00C          	lfsr	2,12
  7694  0004B4  0100               	movlb	0	; () banked
  7695  0004B6  51D1               	movf	_ic_ptr& (0+255),w,b
  7696  0004B8  26D9               	addwf	fsr2l,f,c
  7697  0004BA  0100               	movlb	0	; () banked
  7698  0004BC  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7699  0004BE  22DA               	addwfc	fsr2h,f,c
  7700  0004C0  0E08               	movlw	8
  7701  0004C2  6EDF               	movwf	indf2,c
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;my_i2c.c: 216: msg_ready = 1;
  7705  0004C4  0100               	movlb	0	; () banked
  7706  0004C6  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7707  0004C8  0E01               	movlw	1
  7708  0004CA  0100               	movlb	0	; () banked
  7709  0004CC  0100               	movlb	0	; () banked
  7710  0004CE  6F94               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7711  0004D0  0100               	movlb	0	; () banked
  7712  0004D2  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7713  0004D4                     L14:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;my_i2c.c: 217: msg_to_send = 1;
  7717  0004D4  0100               	movlb	0	; () banked
  7718  0004D6  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7719  0004D8  0E01               	movlw	1
  7720  0004DA  0100               	movlb	0	; () banked
  7721  0004DC  0100               	movlb	0	; () banked
  7722  0004DE  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7723  0004E0  0100               	movlb	0	; () banked
  7724  0004E2  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;my_i2c.c: 219: data_read = 0;
  7728  0004E4  0100               	movlb	0	; () banked
  7729  0004E6  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7730  0004E8  0E00               	movlw	0
  7731  0004EA  0100               	movlb	0	; () banked
  7732  0004EC  0100               	movlb	0	; () banked
  7733  0004EE  6F95               	movwf	i2c_int_handler@data_read& (0+255),b
  7734  0004F0                     L11:
  7735  0004F0  0100               	movlb	0	; () banked
  7736  0004F2  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7737                           
  7738                           ;my_i2c.c: 220: } else {
  7739  0004F4  D021               	goto	i2l318
  7740  0004F6                     L13:
  7741                           
  7742                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7743  0004F6  0100               	movlb	0	; () banked
  7744  0004F8  EE20 F00C          	lfsr	2,12
  7745  0004FC  0100               	movlb	0	; () banked
  7746  0004FE  51D1               	movf	_ic_ptr& (0+255),w,b
  7747  000500  26D9               	addwf	fsr2l,f,c
  7748  000502  0100               	movlb	0	; () banked
  7749  000504  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7750  000506  22DA               	addwfc	fsr2h,f,c
  7751  000508  0E05               	movlw	5
  7752  00050A  D731               	goto	L10
  7753  00050C                     i2l3367:
  7754                           
  7755                           ; BSR set to: 0
  7756  00050C  0100               	movlb	0	; () banked
  7757  00050E  EE20 F00C          	lfsr	2,12
  7758  000512  0100               	movlb	0	; () banked
  7759  000514  51D1               	movf	_ic_ptr& (0+255),w,b
  7760  000516  26D9               	addwf	fsr2l,f,c
  7761  000518  0100               	movlb	0	; () banked
  7762  00051A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7763  00051C  22DA               	addwfc	fsr2h,f,c
  7764  00051E  50DF               	movf	indf2,w,c
  7765                           
  7766                           ; Switch size 1, requested type "space"
  7767                           ; Number of cases is 4, Range of values is 5 to 8
  7768                           ; switch strategies available:
  7769                           ; Name         Instructions Cycles
  7770                           ; simple_byte           13     7 (average)
  7771                           ;	Chosen strategy is simple_byte
  7772  000520  0A05               	xorlw	5	; case 5
  7773  000522  B4D8               	btfsc	status,2,c
  7774  000524  D63C               	goto	i2l320
  7775  000526  0A03               	xorlw	3	; case 6
  7776  000528  B4D8               	btfsc	status,2,c
  7777  00052A  D65B               	goto	i2l324
  7778  00052C  0A01               	xorlw	1	; case 7
  7779  00052E  B4D8               	btfsc	status,2,c
  7780  000530  D720               	goto	i2l338
  7781  000532  0A0F               	xorlw	15	; case 8
  7782  000534  B4D8               	btfsc	status,2,c
  7783  000536  D6D1               	goto	i2l3317
  7784  000538                     i2l318:
  7785                           
  7786                           ; BSR set to: 0
  7787                           ;my_i2c.c: 230: }
  7788                           ;my_i2c.c: 233: if (data_read || data_written) {
  7789  000538  0100               	movlb	0	; () banked
  7790  00053A  0100               	movlb	0	; () banked
  7791  00053C  6795               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7792  00053E  D005               	goto	i2l352
  7793                           
  7794                           ; BSR set to: 0
  7795  000540  0100               	movlb	0	; () banked
  7796  000542  0100               	movlb	0	; () banked
  7797  000544  5190               	movf	i2c_int_handler@data_written& (0+255),w,b
  7798  000546  B4D8               	btfsc	status,2,c
  7799  000548  D002               	goto	i2l3373
  7800  00054A                     i2l352:
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7804  00054A  A8C6               	btfss	4038,4,c	;volatile
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7808  00054C  88C6               	bsf	4038,4,c	;volatile
  7809  00054E                     i2l3373:
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;my_i2c.c: 237: }
  7813                           ;my_i2c.c: 238: }
  7814                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7815  00054E  0100               	movlb	0	; () banked
  7816  000550  EE20 F00A          	lfsr	2,10
  7817  000554  0100               	movlb	0	; () banked
  7818  000556  51D1               	movf	_ic_ptr& (0+255),w,b
  7819  000558  26D9               	addwf	fsr2l,f,c
  7820  00055A  0100               	movlb	0	; () banked
  7821  00055C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7822  00055E  22DA               	addwfc	fsr2h,f,c
  7823  000560  0E08               	movlw	8
  7824  000562  64DF               	cpfsgt	indf2,c
  7825  000564  D024               	goto	i2l3379
  7826                           
  7827                           ; BSR set to: 0
  7828  000566  0100               	movlb	0	; () banked
  7829  000568  0100               	movlb	0	; () banked
  7830  00056A  6794               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7831  00056C  D020               	goto	i2l3379
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7835  00056E  0100               	movlb	0	; () banked
  7836  000570  EE20 F00C          	lfsr	2,12
  7837  000574  0100               	movlb	0	; () banked
  7838  000576  51D1               	movf	_ic_ptr& (0+255),w,b
  7839  000578  26D9               	addwf	fsr2l,f,c
  7840  00057A  0100               	movlb	0	; () banked
  7841  00057C  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7842  00057E  22DA               	addwfc	fsr2h,f,c
  7843  000580  0E05               	movlw	5
  7844  000582  6EDF               	movwf	indf2,c
  7845                           
  7846                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7847  000584  0100               	movlb	0	; () banked
  7848  000586  EE20 F00E          	lfsr	2,14
  7849  00058A  0100               	movlb	0	; () banked
  7850  00058C  51D1               	movf	_ic_ptr& (0+255),w,b
  7851  00058E  26D9               	addwf	fsr2l,f,c
  7852  000590  0100               	movlb	0	; () banked
  7853  000592  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7854  000594  22DA               	addwfc	fsr2h,f,c
  7855  000596  2ADF               	incf	indf2,f,c
  7856                           
  7857                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7858  000598  0100               	movlb	0	; () banked
  7859  00059A  EE20 F00D          	lfsr	2,13
  7860  00059E  0100               	movlb	0	; () banked
  7861  0005A0  51D1               	movf	_ic_ptr& (0+255),w,b
  7862  0005A2  26D9               	addwf	fsr2l,f,c
  7863  0005A4  0100               	movlb	0	; () banked
  7864  0005A6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7865  0005A8  22DA               	addwfc	fsr2h,f,c
  7866  0005AA  0E07               	movlw	7
  7867  0005AC  6EDF               	movwf	indf2,c
  7868  0005AE                     i2l3379:
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;my_i2c.c: 245: }
  7872                           ;my_i2c.c: 247: if (msg_ready) {
  7873  0005AE  0100               	movlb	0	; () banked
  7874  0005B0  0100               	movlb	0	; () banked
  7875  0005B2  5194               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7876  0005B4  B4D8               	btfsc	status,2,c
  7877  0005B6  D044               	goto	i2l3387
  7878                           
  7879                           ; BSR set to: 0
  7880                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7881  0005B8  0100               	movlb	0	; () banked
  7882  0005BA  EE20 F00B          	lfsr	2,11
  7883  0005BE  0100               	movlb	0	; () banked
  7884  0005C0  51D1               	movf	_ic_ptr& (0+255),w,b
  7885  0005C2  26D9               	addwf	fsr2l,f,c
  7886  0005C4  0100               	movlb	0	; () banked
  7887  0005C6  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7888  0005C8  22DA               	addwfc	fsr2h,f,c
  7889  0005CA  0100               	movlb	0	; () banked
  7890  0005CC  EE10 F00A          	lfsr	1,10
  7891  0005D0  0100               	movlb	0	; () banked
  7892  0005D2  51D1               	movf	_ic_ptr& (0+255),w,b
  7893  0005D4  26E1               	addwf	fsr1l,f,c
  7894  0005D6  0100               	movlb	0	; () banked
  7895  0005D8  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7896  0005DA  22E2               	addwfc	fsr1h,f,c
  7897  0005DC  50E7               	movf	indf1,w,c
  7898  0005DE  0100               	movlb	0	; () banked
  7899  0005E0  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7900  0005E2  0100               	movlb	0	; () banked
  7901  0005E4  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7902  0005E6  0D01               	mullw	1
  7903  0005E8  50F3               	movf	prodl,w,c
  7904  0005EA  0100               	movlb	0	; () banked
  7905  0005EC  0100               	movlb	0	; () banked
  7906  0005EE  25D1               	addwf	_ic_ptr& (0+255),w,b
  7907  0005F0  6EE1               	movwf	fsr1l,c
  7908  0005F2  50F4               	movf	prodh,w,c
  7909  0005F4  0100               	movlb	0	; () banked
  7910  0005F6  0100               	movlb	0	; () banked
  7911  0005F8  21D2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7912  0005FA  6EE2               	movwf	fsr1h,c
  7913  0005FC  CFDF FFE7          	movff	indf2,indf1
  7914                           
  7915                           ; BSR set to: 0
  7916                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7917  000600  0100               	movlb	0	; () banked
  7918  000602  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  7919  000604  0E28               	movlw	40
  7920  000606  6E41               	movwf	ToMainHigh_sendmsg@msgtype,c
  7921  000608  0100               	movlb	0	; () banked
  7922  00060A  518B               	movf	??_i2c_int_handler& (0+255),w,b
  7923  00060C  0100               	movlb	0	; () banked
  7924  00060E  C0D2  F043         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7925  000612  0100               	movlb	0	; () banked
  7926  000614  C0D1  F042         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7927  000618  0100               	movlb	0	; () banked
  7928  00061A  EE20 F00A          	lfsr	2,10
  7929  00061E  0100               	movlb	0	; () banked
  7930  000620  51D1               	movf	_ic_ptr& (0+255),w,b
  7931  000622  26D9               	addwf	fsr2l,f,c
  7932  000624  0100               	movlb	0	; () banked
  7933  000626  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7934  000628  22DA               	addwfc	fsr2h,f,c
  7935  00062A  50DF               	movf	indf2,w,c
  7936  00062C  0100               	movlb	0	; () banked
  7937  00062E  6F8C               	movwf	(??_i2c_int_handler+1)& (0+255),b
  7938  000630  0100               	movlb	0	; () banked
  7939  000632  298C               	incf	(??_i2c_int_handler+1)& (0+255),w,b
  7940  000634  ECDD  F00E         	call	_ToMainHigh_sendmsg
  7941                           
  7942                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7943  000638  0100               	movlb	0	; () banked
  7944  00063A  EE20 F00A          	lfsr	2,10
  7945  00063E  D045               	goto	L12
  7946  000640                     i2l3387:
  7947                           
  7948                           ; BSR set to: 0
  7949  000640  0100               	movlb	0	; () banked
  7950  000642  EE20 F00E          	lfsr	2,14
  7951  000646  0100               	movlb	0	; () banked
  7952  000648  51D1               	movf	_ic_ptr& (0+255),w,b
  7953  00064A  26D9               	addwf	fsr2l,f,c
  7954  00064C  0100               	movlb	0	; () banked
  7955  00064E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7956  000650  22DA               	addwfc	fsr2h,f,c
  7957  000652  50DF               	movf	indf2,w,c
  7958  000654  B4D8               	btfsc	status,2,c
  7959  000656  D041               	goto	i2l3395
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7963  000658  0100               	movlb	0	; () banked
  7964  00065A  EE20 F00E          	lfsr	2,14
  7965  00065E  0100               	movlb	0	; () banked
  7966  000660  51D1               	movf	_ic_ptr& (0+255),w,b
  7967  000662  26D9               	addwf	fsr2l,f,c
  7968  000664  0100               	movlb	0	; () banked
  7969  000666  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7970  000668  22DA               	addwfc	fsr2h,f,c
  7971  00066A  50DF               	movf	indf2,w,c
  7972  00066C  0100               	movlb	0	; () banked
  7973  00066E  0100               	movlb	0	; () banked
  7974  000670  6F8D               	movwf	i2c_int_handler@error_buf& (0+255),b
  7975                           
  7976                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7977  000672  0100               	movlb	0	; () banked
  7978  000674  EE20 F00D          	lfsr	2,13
  7979  000678  0100               	movlb	0	; () banked
  7980  00067A  51D1               	movf	_ic_ptr& (0+255),w,b
  7981  00067C  26D9               	addwf	fsr2l,f,c
  7982  00067E  0100               	movlb	0	; () banked
  7983  000680  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7984  000682  22DA               	addwfc	fsr2h,f,c
  7985  000684  50DF               	movf	indf2,w,c
  7986  000686  0100               	movlb	0	; () banked
  7987  000688  0100               	movlb	0	; () banked
  7988  00068A  6F8E               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7989                           
  7990                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7991  00068C  0100               	movlb	0	; () banked
  7992  00068E  EE20 F00B          	lfsr	2,11
  7993  000692  0100               	movlb	0	; () banked
  7994  000694  51D1               	movf	_ic_ptr& (0+255),w,b
  7995  000696  26D9               	addwf	fsr2l,f,c
  7996  000698  0100               	movlb	0	; () banked
  7997  00069A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  7998  00069C  22DA               	addwfc	fsr2h,f,c
  7999  00069E  50DF               	movf	indf2,w,c
  8000  0006A0  0100               	movlb	0	; () banked
  8001  0006A2  0100               	movlb	0	; () banked
  8002  0006A4  6F8F               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  8003                           
  8004                           ; BSR set to: 0
  8005                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  8006  0006A6  0100               	movlb	0	; () banked
  8007  0006A8  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  8008  0006AA  0E29               	movlw	41
  8009  0006AC  6E41               	movwf	ToMainHigh_sendmsg@msgtype,c
  8010  0006AE  0100               	movlb	0	; () banked
  8011  0006B0  518B               	movf	??_i2c_int_handler& (0+255),w,b
  8012  0006B2  0100               	movlb	0	; () banked
  8013  0006B4  0E00               	movlw	high i2c_int_handler@error_buf
  8014  0006B6  6E43               	movwf	ToMainHigh_sendmsg@data+1,c
  8015  0006B8  0100               	movlb	0	; () banked
  8016  0006BA  0E8D               	movlw	low i2c_int_handler@error_buf
  8017  0006BC  6E42               	movwf	ToMainHigh_sendmsg@data,c
  8018  0006BE  0E03               	movlw	3
  8019  0006C0  ECDD  F00E         	call	_ToMainHigh_sendmsg
  8020                           
  8021                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  8022  0006C4  0100               	movlb	0	; () banked
  8023  0006C6  EE20 F00E          	lfsr	2,14
  8024  0006CA                     L12:
  8025  0006CA  0100               	movlb	0	; () banked
  8026  0006CC  51D1               	movf	_ic_ptr& (0+255),w,b
  8027  0006CE  26D9               	addwf	fsr2l,f,c
  8028  0006D0  0100               	movlb	0	; () banked
  8029  0006D2  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8030  0006D4  22DA               	addwfc	fsr2h,f,c
  8031  0006D6  0E00               	movlw	0
  8032  0006D8  6EDF               	movwf	indf2,c
  8033  0006DA                     i2l3395:
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;my_i2c.c: 257: }
  8037                           ;my_i2c.c: 258: if (msg_to_send) {
  8038  0006DA  0100               	movlb	0	; () banked
  8039  0006DC  0100               	movlb	0	; () banked
  8040  0006DE  5193               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  8041  0006E0  B4D8               	btfsc	status,2,c
  8042  0006E2  0012               	return	
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  8046  0006E4  0100               	movlb	0	; () banked
  8047  0006E6  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  8048  0006E8  0E2A               	movlw	42
  8049  0006EA  6E41               	movwf	ToMainHigh_sendmsg@msgtype,c
  8050  0006EC  0100               	movlb	0	; () banked
  8051  0006EE  518B               	movf	??_i2c_int_handler& (0+255),w,b
  8052  0006F0  0100               	movlb	0	; () banked
  8053  0006F2  C0D2  F043         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  8054  0006F6  0100               	movlb	0	; () banked
  8055  0006F8  C0D1  F042         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  8056  0006FC  0E00               	movlw	0
  8057  0006FE  ECDD  F00E         	call	_ToMainHigh_sendmsg
  8058                           
  8059                           ;my_i2c.c: 261: msg_to_send = 0;
  8060  000702  0100               	movlb	0	; () banked
  8061  000704  6F8B               	movwf	??_i2c_int_handler& (0+255),b
  8062  000706  0E00               	movlw	0
  8063  000708  0100               	movlb	0	; () banked
  8064  00070A  0100               	movlb	0	; () banked
  8065  00070C  6F93               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  8066  00070E  0100               	movlb	0	; () banked
  8067  000710  518B               	movf	??_i2c_int_handler& (0+255),w,b
  8068  000712  0012               	return	
  8069  000714                     __end_of_i2c_int_handler:
  8070                           	opt stack 0
  8071                           pclatu	equ	0xFFB
  8072                           pclath	equ	0xFFA
  8073                           tblptru	equ	0xFF8
  8074                           tblptrh	equ	0xFF7
  8075                           tblptrl	equ	0xFF6
  8076                           tablat	equ	0xFF5
  8077                           prodh	equ	0xFF4
  8078                           prodl	equ	0xFF3
  8079                           intcon	equ	0xFF2
  8080                           postinc0	equ	0xFEE
  8081                           fsr0h	equ	0xFEA
  8082                           fsr0l	equ	0xFE9
  8083                           wreg	equ	0xFE8
  8084                           indf1	equ	0xFE7
  8085                           fsr1h	equ	0xFE2
  8086                           fsr1l	equ	0xFE1
  8087                           bsr	equ	0xFE0
  8088                           indf2	equ	0xFDF
  8089                           postinc2	equ	0xFDE
  8090                           postdec2	equ	0xFDD
  8091                           fsr2h	equ	0xFDA
  8092                           fsr2l	equ	0xFD9
  8093                           status	equ	0xFD8
  8094                           
  8095 ;; *************** function _handle_start *****************
  8096 ;; Defined at:
  8097 ;;		line 71 in file "src/my_i2c.c"
  8098 ;; Parameters:    Size  Location     Type
  8099 ;;  data_read       1    wreg     unsigned char 
  8100 ;; Auto vars:     Size  Location     Type
  8101 ;;  data_read       1   53[COMRAM] unsigned char 
  8102 ;; Return value:  Size  Location     Type
  8103 ;;		None               void
  8104 ;; Registers used:
  8105 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8106 ;; Tracked objects:
  8107 ;;		On entry : 0/0
  8108 ;;		On exit  : 0/0
  8109 ;;		Unchanged: 0/0
  8110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8111 ;;      Params:         0       0       0       0       0
  8112 ;;      Locals:         1       0       0       0       0
  8113 ;;      Temps:          0       0       0       0       0
  8114 ;;      Totals:         1       0       0       0       0
  8115 ;;Total ram usage:        1 bytes
  8116 ;; Hardware stack levels used:    1
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_i2c_int_handler
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text46
  8125  00128C                     __ptext46:
  8126                           	opt stack 0
  8127  00128C                     _handle_start:
  8128                           	opt stack 18
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;incstack = 0
  8132                           ;handle_start@data_read stored from wreg
  8133  00128C  CFE8 F036          	movff	wreg,handle_start@data_read
  8134                           
  8135                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  8136  001290  0100               	movlb	0	; () banked
  8137  001292  EE20 F00B          	lfsr	2,11
  8138  001296  0100               	movlb	0	; () banked
  8139  001298  51D1               	movf	_ic_ptr& (0+255),w,b
  8140  00129A  26D9               	addwf	fsr2l,f,c
  8141  00129C  0100               	movlb	0	; () banked
  8142  00129E  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8143  0012A0  22DA               	addwfc	fsr2h,f,c
  8144  0012A2  0E01               	movlw	1
  8145  0012A4  6EDF               	movwf	indf2,c
  8146                           
  8147                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  8148  0012A6  0100               	movlb	0	; () banked
  8149  0012A8  EE20 F00A          	lfsr	2,10
  8150  0012AC  0100               	movlb	0	; () banked
  8151  0012AE  51D1               	movf	_ic_ptr& (0+255),w,b
  8152  0012B0  26D9               	addwf	fsr2l,f,c
  8153  0012B2  0100               	movlb	0	; () banked
  8154  0012B4  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8155  0012B6  22DA               	addwfc	fsr2h,f,c
  8156  0012B8  0E00               	movlw	0
  8157  0012BA  6EDF               	movwf	indf2,c
  8158                           
  8159                           ; BSR set to: 0
  8160                           ;my_i2c.c: 75: if (data_read) {
  8161  0012BC  5036               	movf	handle_start@data_read,w,c
  8162  0012BE  B4D8               	btfsc	status,2,c
  8163  0012C0  D03D               	goto	i2l3013
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  8167  0012C2  AAC7               	btfss	4039,5,c	;volatile
  8168  0012C4  D021               	goto	i2l308
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  8172  0012C6  0100               	movlb	0	; () banked
  8173  0012C8  EE20 F00C          	lfsr	2,12
  8174  0012CC  0100               	movlb	0	; () banked
  8175  0012CE  51D1               	movf	_ic_ptr& (0+255),w,b
  8176  0012D0  26D9               	addwf	fsr2l,f,c
  8177  0012D2  0100               	movlb	0	; () banked
  8178  0012D4  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8179  0012D6  22DA               	addwfc	fsr2h,f,c
  8180  0012D8  0E05               	movlw	5
  8181  0012DA  6EDF               	movwf	indf2,c
  8182                           
  8183                           ;my_i2c.c: 80: ic_ptr->error_count++;
  8184  0012DC  0100               	movlb	0	; () banked
  8185  0012DE  EE20 F00E          	lfsr	2,14
  8186  0012E2  0100               	movlb	0	; () banked
  8187  0012E4  51D1               	movf	_ic_ptr& (0+255),w,b
  8188  0012E6  26D9               	addwf	fsr2l,f,c
  8189  0012E8  0100               	movlb	0	; () banked
  8190  0012EA  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8191  0012EC  22DA               	addwfc	fsr2h,f,c
  8192  0012EE  2ADF               	incf	indf2,f,c
  8193                           
  8194                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  8195  0012F0  0100               	movlb	0	; () banked
  8196  0012F2  EE20 F00D          	lfsr	2,13
  8197  0012F6  0100               	movlb	0	; () banked
  8198  0012F8  51D1               	movf	_ic_ptr& (0+255),w,b
  8199  0012FA  26D9               	addwf	fsr2l,f,c
  8200  0012FC  0100               	movlb	0	; () banked
  8201  0012FE  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8202  001300  22DA               	addwfc	fsr2h,f,c
  8203  001302  0E05               	movlw	5
  8204  001304  6EDF               	movwf	indf2,c
  8205                           
  8206                           ;my_i2c.c: 82: } else {
  8207  001306  0012               	return	
  8208  001308                     i2l308:
  8209                           
  8210                           ; BSR set to: 0
  8211                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8212  001308  A4C7               	btfss	4039,2,c	;volatile
  8213  00130A  D00C               	goto	i2l3011
  8214                           
  8215                           ; BSR set to: 0
  8216                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8217  00130C  0100               	movlb	0	; () banked
  8218  00130E  EE20 F00C          	lfsr	2,12
  8219  001312  0100               	movlb	0	; () banked
  8220  001314  51D1               	movf	_ic_ptr& (0+255),w,b
  8221  001316  26D9               	addwf	fsr2l,f,c
  8222  001318  0100               	movlb	0	; () banked
  8223  00131A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8224  00131C  22DA               	addwfc	fsr2h,f,c
  8225  00131E  0E08               	movlw	8
  8226  001320  6EDF               	movwf	indf2,c
  8227                           
  8228                           ;my_i2c.c: 85: } else {
  8229  001322  0012               	return	
  8230  001324                     i2l3011:
  8231                           
  8232                           ; BSR set to: 0
  8233                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8234  001324  0100               	movlb	0	; () banked
  8235  001326  EE20 F00C          	lfsr	2,12
  8236  00132A  0100               	movlb	0	; () banked
  8237  00132C  51D1               	movf	_ic_ptr& (0+255),w,b
  8238  00132E  26D9               	addwf	fsr2l,f,c
  8239  001330  0100               	movlb	0	; () banked
  8240  001332  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8241  001334  22DA               	addwfc	fsr2h,f,c
  8242  001336  0E07               	movlw	7
  8243  001338  6EDF               	movwf	indf2,c
  8244  00133A  0012               	return	
  8245  00133C                     i2l3013:
  8246                           
  8247                           ; BSR set to: 0
  8248                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8249  00133C  0100               	movlb	0	; () banked
  8250  00133E  EE20 F00C          	lfsr	2,12
  8251  001342  0100               	movlb	0	; () banked
  8252  001344  51D1               	movf	_ic_ptr& (0+255),w,b
  8253  001346  26D9               	addwf	fsr2l,f,c
  8254  001348  0100               	movlb	0	; () banked
  8255  00134A  51D2               	movf	(_ic_ptr+1)& (0+255),w,b
  8256  00134C  22DA               	addwfc	fsr2h,f,c
  8257  00134E  0E06               	movlw	6
  8258  001350  6EDF               	movwf	indf2,c
  8259  001352  0012               	return	
  8260  001354                     __end_of_handle_start:
  8261                           	opt stack 0
  8262                           pclatu	equ	0xFFB
  8263                           pclath	equ	0xFFA
  8264                           tblptru	equ	0xFF8
  8265                           tblptrh	equ	0xFF7
  8266                           tblptrl	equ	0xFF6
  8267                           tablat	equ	0xFF5
  8268                           prodh	equ	0xFF4
  8269                           prodl	equ	0xFF3
  8270                           intcon	equ	0xFF2
  8271                           postinc0	equ	0xFEE
  8272                           fsr0h	equ	0xFEA
  8273                           fsr0l	equ	0xFE9
  8274                           wreg	equ	0xFE8
  8275                           indf1	equ	0xFE7
  8276                           fsr1h	equ	0xFE2
  8277                           fsr1l	equ	0xFE1
  8278                           bsr	equ	0xFE0
  8279                           indf2	equ	0xFDF
  8280                           postinc2	equ	0xFDE
  8281                           postdec2	equ	0xFDD
  8282                           fsr2h	equ	0xFDA
  8283                           fsr2l	equ	0xFD9
  8284                           status	equ	0xFD8
  8285                           
  8286 ;; *************** function _ToMainHigh_sendmsg *****************
  8287 ;; Defined at:
  8288 ;;		line 126 in file "src/messages.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  length          1    wreg     unsigned char 
  8291 ;;  msgtype         1   64[COMRAM] unsigned char 
  8292 ;;  data            2   65[COMRAM] PTR void 
  8293 ;;		 -> i2c_int_handler@error_buf(3), main@ic(28), NULL(0), 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  length          1   67[COMRAM] unsigned char 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      char 
  8298 ;; Registers used:
  8299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8305 ;;      Params:         3       0       0       0       0
  8306 ;;      Locals:         1       0       0       0       0
  8307 ;;      Temps:          0       0       0       0       0
  8308 ;;      Totals:         4       0       0       0       0
  8309 ;;Total ram usage:        4 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    2
  8312 ;; This function calls:
  8313 ;;		i2_send_msg
  8314 ;; This function is called by:
  8315 ;;		_InterruptHandlerHigh
  8316 ;;		_i2c_int_handler
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text47
  8321  001DBA                     __ptext47:
  8322                           	opt stack 0
  8323  001DBA                     _ToMainHigh_sendmsg:
  8324                           	opt stack 16
  8325                           
  8326                           ; BSR set to: 0
  8327                           ;incstack = 0
  8328                           ;ToMainHigh_sendmsg@length stored from wreg
  8329  001DBA  CFE8 F044          	movff	wreg,ToMainHigh_sendmsg@length
  8330                           
  8331                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8332                           ;	Return value of _ToMainHigh_sendmsg is never used
  8333  001DBE  0101               	movlb	1	; () banked
  8334  001DC0  0E01               	movlw	high _ToMainHigh_MQ
  8335  001DC2  0100               	movlb	0	; () banked
  8336  001DC4  0100               	movlb	0	; () banked
  8337  001DC6  6F81               	movwf	(i2send_msg@qptr+1)& (0+255),b
  8338  001DC8  0101               	movlb	1	; () banked
  8339  001DCA  0E36               	movlw	low _ToMainHigh_MQ
  8340  001DCC  0100               	movlb	0	; () banked
  8341  001DCE  0100               	movlb	0	; () banked
  8342  001DD0  6F80               	movwf	i2send_msg@qptr& (0+255),b
  8343  001DD2  C044  F082         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8344  001DD6  C041  F083         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8345  001DDA  0100               	movlb	0	; () banked
  8346  001DDC  C043  F085         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8347  001DE0  0100               	movlb	0	; () banked
  8348  001DE2  C042  F084         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8349  001DE6  ECFB  F006         	call	i2_send_msg	;wreg free
  8350  001DEA  0012               	return	
  8351  001DEC                     __end_of_ToMainHigh_sendmsg:
  8352                           	opt stack 0
  8353                           pclatu	equ	0xFFB
  8354                           pclath	equ	0xFFA
  8355                           tblptru	equ	0xFF8
  8356                           tblptrh	equ	0xFF7
  8357                           tblptrl	equ	0xFF6
  8358                           tablat	equ	0xFF5
  8359                           prodh	equ	0xFF4
  8360                           prodl	equ	0xFF3
  8361                           intcon	equ	0xFF2
  8362                           postinc0	equ	0xFEE
  8363                           fsr0h	equ	0xFEA
  8364                           fsr0l	equ	0xFE9
  8365                           wreg	equ	0xFE8
  8366                           indf1	equ	0xFE7
  8367                           fsr1h	equ	0xFE2
  8368                           fsr1l	equ	0xFE1
  8369                           bsr	equ	0xFE0
  8370                           indf2	equ	0xFDF
  8371                           postinc2	equ	0xFDE
  8372                           postdec2	equ	0xFDD
  8373                           fsr2h	equ	0xFDA
  8374                           fsr2l	equ	0xFD9
  8375                           status	equ	0xFD8
  8376                           
  8377 ;; *************** function i2_send_msg *****************
  8378 ;; Defined at:
  8379 ;;		line 24 in file "src/messages.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8382 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8383 ;;  length          1    2[BANK0 ] unsigned char 
  8384 ;;  msgtype         1    3[BANK0 ] unsigned char 
  8385 ;;  data            2    4[BANK0 ] PTR void 
  8386 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  8387 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  8388 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  8389 ;;		 -> NULL(0), 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  send_msg        2    9[BANK0 ] PTR struct __msg
  8392 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8393 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8394 ;;  send_msg        2    6[BANK0 ] unsigned int 
  8395 ;;  send_msg        1    8[BANK0 ] unsigned char 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  1    wreg      char 
  8398 ;; Registers used:
  8399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8405 ;;      Params:         0       6       0       0       0
  8406 ;;      Locals:         0       5       0       0       0
  8407 ;;      Temps:          1       0       0       0       0
  8408 ;;      Totals:         1      11       0       0       0
  8409 ;;Total ram usage:       12 bytes
  8410 ;; Hardware stack levels used:    1
  8411 ;; Hardware stack levels required when called:    1
  8412 ;; This function calls:
  8413 ;;		i2_memcpy
  8414 ;; This function is called by:
  8415 ;;		_ToMainHigh_sendmsg
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text48
  8420  000DF6                     __ptext48:
  8421                           	opt stack 0
  8422  000DF6                     i2_send_msg:
  8423                           	opt stack 16
  8424                           
  8425                           ;messages.c: 25: unsigned char slot;
  8426                           ;messages.c: 27: msg *qmsg;
  8427                           ;messages.c: 28: size_t tlength = length;
  8428                           
  8429                           ;incstack = 0
  8430  000DF6  0100               	movlb	0	; () banked
  8431  000DF8  0100               	movlb	0	; () banked
  8432  000DFA  C082  F086         	movff	i2send_msg@length,i2send_msg@tlength
  8433  000DFE  0100               	movlb	0	; () banked
  8434  000E00  0100               	movlb	0	; () banked
  8435  000E02  6B87               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8436                           
  8437                           ; BSR set to: 0
  8438                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8439  000E04  0100               	movlb	0	; () banked
  8440  000E06  EE20 F034          	lfsr	2,52
  8441  000E0A  0100               	movlb	0	; () banked
  8442  000E0C  5180               	movf	i2send_msg@qptr& (0+255),w,b
  8443  000E0E  26D9               	addwf	fsr2l,f,c
  8444  000E10  0100               	movlb	0	; () banked
  8445  000E12  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8446  000E14  22DA               	addwfc	fsr2h,f,c
  8447  000E16  50DF               	movf	indf2,w,c
  8448  000E18  0100               	movlb	0	; () banked
  8449  000E1A  0100               	movlb	0	; () banked
  8450  000E1C  6F88               	movwf	i2send_msg@slot& (0+255),b
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8454  000E1E  0100               	movlb	0	; () banked
  8455  000E20  0100               	movlb	0	; () banked
  8456  000E22  5188               	movf	i2send_msg@slot& (0+255),w,b
  8457  000E24  0D0D               	mullw	13
  8458  000E26  50F3               	movf	prodl,w,c
  8459  000E28  0100               	movlb	0	; () banked
  8460  000E2A  0100               	movlb	0	; () banked
  8461  000E2C  2580               	addwf	i2send_msg@qptr& (0+255),w,b
  8462  000E2E  0100               	movlb	0	; () banked
  8463  000E30  0100               	movlb	0	; () banked
  8464  000E32  6F89               	movwf	i2send_msg@qmsg& (0+255),b
  8465  000E34  50F4               	movf	prodh,w,c
  8466  000E36  0100               	movlb	0	; () banked
  8467  000E38  0100               	movlb	0	; () banked
  8468  000E3A  2181               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  8469  000E3C  0100               	movlb	0	; () banked
  8470  000E3E  6F8A               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;messages.c: 41: if (qmsg->full != 0) {
  8474  000E40  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8475  000E44  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8476  000E48  50DF               	movf	indf2,w,c
  8477  000E4A  B4D8               	btfsc	status,2,c
  8478  000E4C  D002               	goto	i2l3417
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;messages.c: 42: return (-1);
  8482  000E4E  0EFF               	movlw	255
  8483  000E50  0012               	return	
  8484  000E52                     i2l3417:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;messages.c: 43: }
  8488                           ;messages.c: 46: qmsg->length = length;
  8489  000E52  0100               	movlb	0	; () banked
  8490  000E54  EE20 F001          	lfsr	2,1
  8491  000E58  0100               	movlb	0	; () banked
  8492  000E5A  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  8493  000E5C  26D9               	addwf	fsr2l,f,c
  8494  000E5E  0100               	movlb	0	; () banked
  8495  000E60  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8496  000E62  22DA               	addwfc	fsr2h,f,c
  8497  000E64  0100               	movlb	0	; () banked
  8498  000E66  C082  FFDF         	movff	i2send_msg@length,indf2
  8499                           
  8500                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8501  000E6A  0100               	movlb	0	; () banked
  8502  000E6C  EE20 F002          	lfsr	2,2
  8503  000E70  0100               	movlb	0	; () banked
  8504  000E72  5189               	movf	i2send_msg@qmsg& (0+255),w,b
  8505  000E74  26D9               	addwf	fsr2l,f,c
  8506  000E76  0100               	movlb	0	; () banked
  8507  000E78  518A               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8508  000E7A  22DA               	addwfc	fsr2h,f,c
  8509  000E7C  0100               	movlb	0	; () banked
  8510  000E7E  C083  FFDF         	movff	i2send_msg@msgtype,indf2
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8514  000E82  0E03               	movlw	3
  8515  000E84  0100               	movlb	0	; () banked
  8516  000E86  0100               	movlb	0	; () banked
  8517  000E88  2589               	addwf	i2send_msg@qmsg& (0+255),w,b
  8518  000E8A  6E36               	movwf	i2memcpy@d1,c
  8519  000E8C  0E00               	movlw	0
  8520  000E8E  0100               	movlb	0	; () banked
  8521  000E90  0100               	movlb	0	; () banked
  8522  000E92  218A               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8523  000E94  6E37               	movwf	i2memcpy@d1+1,c
  8524  000E96  0100               	movlb	0	; () banked
  8525  000E98  C085  F039         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8526  000E9C  0100               	movlb	0	; () banked
  8527  000E9E  C084  F038         	movff	i2send_msg@data,i2memcpy@s1
  8528  000EA2  C086  F03A         	movff	i2send_msg@tlength,i2memcpy@n
  8529  000EA6  C087  F03B         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8530  000EAA  EC36  F00E         	call	i2_memcpy	;wreg free
  8531                           
  8532                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8533  000EAE  0100               	movlb	0	; () banked
  8534  000EB0  EE20 F034          	lfsr	2,52
  8535  000EB4  0100               	movlb	0	; () banked
  8536  000EB6  5180               	movf	i2send_msg@qptr& (0+255),w,b
  8537  000EB8  26D9               	addwf	fsr2l,f,c
  8538  000EBA  0100               	movlb	0	; () banked
  8539  000EBC  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8540  000EBE  22DA               	addwfc	fsr2h,f,c
  8541  000EC0  0100               	movlb	0	; () banked
  8542  000EC2  EE10 F034          	lfsr	1,52
  8543  000EC6  0100               	movlb	0	; () banked
  8544  000EC8  5180               	movf	i2send_msg@qptr& (0+255),w,b
  8545  000ECA  26E1               	addwf	fsr1l,f,c
  8546  000ECC  0100               	movlb	0	; () banked
  8547  000ECE  5181               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  8548  000ED0  22E2               	addwfc	fsr1h,f,c
  8549  000ED2  50E7               	movf	indf1,w,c
  8550  000ED4  6E40               	movwf	??i2_send_msg& (0+255),c
  8551  000ED6  2840               	incf	??i2_send_msg,w,c
  8552  000ED8  0B03               	andlw	3
  8553  000EDA  6EDF               	movwf	indf2,c
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;messages.c: 59: qmsg->full = 1;
  8557  000EDC  C089  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8558  000EE0  C08A  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8559  000EE4  0E01               	movlw	1
  8560  000EE6  6EDF               	movwf	indf2,c
  8561                           
  8562                           ; BSR set to: 0
  8563                           ;messages.c: 60: return (1);
  8564  000EE8  0E01               	movlw	1
  8565  000EEA  0012               	return	
  8566  000EEC                     __end_ofi2_send_msg:
  8567                           	opt stack 0
  8568                           pclatu	equ	0xFFB
  8569                           pclath	equ	0xFFA
  8570                           tblptru	equ	0xFF8
  8571                           tblptrh	equ	0xFF7
  8572                           tblptrl	equ	0xFF6
  8573                           tablat	equ	0xFF5
  8574                           prodh	equ	0xFF4
  8575                           prodl	equ	0xFF3
  8576                           intcon	equ	0xFF2
  8577                           postinc0	equ	0xFEE
  8578                           fsr0h	equ	0xFEA
  8579                           fsr0l	equ	0xFE9
  8580                           wreg	equ	0xFE8
  8581                           indf1	equ	0xFE7
  8582                           fsr1h	equ	0xFE2
  8583                           fsr1l	equ	0xFE1
  8584                           bsr	equ	0xFE0
  8585                           indf2	equ	0xFDF
  8586                           postinc2	equ	0xFDE
  8587                           postdec2	equ	0xFDD
  8588                           fsr2h	equ	0xFDA
  8589                           fsr2l	equ	0xFD9
  8590                           status	equ	0xFD8
  8591                           
  8592 ;; *************** function i2_memcpy *****************
  8593 ;; Defined at:
  8594 ;;		line 11 in file "E:\MPLAB\xc8\v1.30\sources\common\memcpy.c"
  8595 ;; Parameters:    Size  Location     Type
  8596 ;;  d1              2   53[COMRAM] PTR void 
  8597 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8598 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8599 ;;		 -> main@msgbuffer(11), NULL(0), 
  8600 ;;  s1              2   55[COMRAM] PTR const void 
  8601 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8602 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8603 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  8604 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  8605 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8606 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  8607 ;;		 -> NULL(0), 
  8608 ;;  n               2   57[COMRAM] unsigned int 
  8609 ;; Auto vars:     Size  Location     Type
  8610 ;;  memcpy          2   61[COMRAM] PTR const unsigned char 
  8611 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8612 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8613 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  8614 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  8615 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8616 ;;		 -> main@ctrl(2), main@uthread_data(10), main@ic(28), main@uc(5), 
  8617 ;;		 -> NULL(0), 
  8618 ;;  memcpy          2   59[COMRAM] PTR unsigned char 
  8619 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8620 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8621 ;;		 -> main@msgbuffer(11), NULL(0), 
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  2   53[COMRAM] PTR void 
  8624 ;; Registers used:
  8625 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8631 ;;      Params:         6       0       0       0       0
  8632 ;;      Locals:         4       0       0       0       0
  8633 ;;      Temps:          0       0       0       0       0
  8634 ;;      Totals:        10       0       0       0       0
  8635 ;;Total ram usage:       10 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		i2_send_msg
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text49
  8645  001C6C                     __ptext49:
  8646                           	opt stack 0
  8647  001C6C                     i2_memcpy:
  8648                           	opt stack 16
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;incstack = 0
  8652  001C6C  C039  F03F         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8653  001C70  C038  F03E         	movff	i2memcpy@s1,i2memcpy@s
  8654  001C74  C037  F03D         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8655  001C78  C036  F03C         	movff	i2memcpy@d1,i2memcpy@d
  8656  001C7C  D00E               	goto	i2l3125
  8657  001C7E                     i2l3119:
  8658  001C7E  C03E  FFD9         	movff	i2memcpy@s,fsr2l
  8659  001C82  C03F  FFDA         	movff	i2memcpy@s+1,fsr2h
  8660  001C86  C03C  FFE1         	movff	i2memcpy@d,fsr1l
  8661  001C8A  C03D  FFE2         	movff	i2memcpy@d+1,fsr1h
  8662  001C8E  CFDF FFE7          	movff	indf2,indf1
  8663  001C92  4A3E               	infsnz	i2memcpy@s,f,c
  8664  001C94  2A3F               	incf	i2memcpy@s+1,f,c
  8665  001C96  4A3C               	infsnz	i2memcpy@d,f,c
  8666  001C98  2A3D               	incf	i2memcpy@d+1,f,c
  8667  001C9A                     i2l3125:
  8668  001C9A  063A               	decf	i2memcpy@n,f,c
  8669  001C9C  A0D8               	btfss	status,0,c
  8670  001C9E  063B               	decf	i2memcpy@n+1,f,c
  8671  001CA0  283A               	incf	i2memcpy@n& (0+255),w,c
  8672  001CA2  B4D8               	btfsc	status,2,c
  8673  001CA4  283B               	incf	(i2memcpy@n+1)& (0+255),w,c
  8674  001CA6  B4D8               	btfsc	status,2,c
  8675                           
  8676                           ;	Return value of i2_memcpy is never used
  8677  001CA8  0012               	return	
  8678  001CAA  D7E9               	goto	i2l3119
  8679  001CAC                     __end_ofi2_memcpy:
  8680                           	opt stack 0
  8681                           pclatu	equ	0xFFB
  8682                           pclath	equ	0xFFA
  8683                           tblptru	equ	0xFF8
  8684                           tblptrh	equ	0xFF7
  8685                           tblptrl	equ	0xFF6
  8686                           tablat	equ	0xFF5
  8687                           prodh	equ	0xFF4
  8688                           prodl	equ	0xFF3
  8689                           intcon	equ	0xFF2
  8690                           postinc0	equ	0xFEE
  8691                           fsr0h	equ	0xFEA
  8692                           fsr0l	equ	0xFE9
  8693                           wreg	equ	0xFE8
  8694                           indf1	equ	0xFE7
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           bsr	equ	0xFE0
  8698                           indf2	equ	0xFDF
  8699                           postinc2	equ	0xFDE
  8700                           postdec2	equ	0xFDD
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8
  8704                           
  8705 ;; *************** function _SleepIfOkay *****************
  8706 ;; Defined at:
  8707 ;;		line 228 in file "src/messages.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;		None
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;		None
  8712 ;; Return value:  Size  Location     Type
  8713 ;;		None               void
  8714 ;; Registers used:
  8715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8721 ;;      Params:         0       0       0       0       0
  8722 ;;      Locals:         0       0       0       0       0
  8723 ;;      Temps:          0       0       0       0       0
  8724 ;;      Totals:         0       0       0       0       0
  8725 ;;Total ram usage:        0 bytes
  8726 ;; Hardware stack levels used:    1
  8727 ;; Hardware stack levels required when called:    2
  8728 ;; This function calls:
  8729 ;;		_enter_sleep_mode
  8730 ;;		i2_check_msg
  8731 ;;		i2_in_high_int
  8732 ;;		i2_in_low_int
  8733 ;; This function is called by:
  8734 ;;		_InterruptHandlerHigh
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738                           	psect	text50
  8739  001A8E                     __ptext50:
  8740                           	opt stack 0
  8741  001A8E                     _SleepIfOkay:
  8742                           	opt stack 17
  8743                           
  8744                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8745                           
  8746                           ;incstack = 0
  8747  001A8E  6647               	tstfsz	_MQ_Main_Willing_to_block,c
  8748  001A90  D001               	goto	i2l2497
  8749  001A92  0012               	return	
  8750  001A94                     i2l2497:
  8751                           
  8752                           ;messages.c: 232: }
  8753                           ;messages.c: 235: if (in_low_int()) {
  8754  001A94  ECF6  F00E         	call	i2_in_low_int	;wreg free
  8755  001A98  5039               	movf	?i2_in_low_int+1,w,c
  8756  001A9A  1038               	iorwf	?i2_in_low_int,w,c
  8757  001A9C  A4D8               	btfss	status,2,c
  8758  001A9E  0012               	return	
  8759                           
  8760                           ;messages.c: 237: }
  8761                           ;messages.c: 240: if (!in_high_int()) {
  8762                           
  8763                           ;messages.c: 236: return;
  8764  001AA0  ECB3  F00F         	call	i2_in_high_int	;wreg free
  8765  001AA4  5037               	movf	?i2_in_high_int+1,w,c
  8766  001AA6  1036               	iorwf	?i2_in_high_int,w,c
  8767  001AA8  B4D8               	btfsc	status,2,c
  8768  001AAA  0012               	return	
  8769                           
  8770                           ;messages.c: 242: }
  8771                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8772                           
  8773                           ;messages.c: 241: return;
  8774  001AAC  0101               	movlb	1	; () banked
  8775  001AAE  0E01               	movlw	high _ToMainHigh_MQ
  8776  001AB0  6E37               	movwf	i2check_msg@qptr+1,c
  8777  001AB2  0101               	movlb	1	; () banked
  8778  001AB4  0E36               	movlw	low _ToMainHigh_MQ
  8779  001AB6  6E36               	movwf	i2check_msg@qptr,c
  8780  001AB8  EC5D  F00F         	call	i2_check_msg	;wreg free
  8781  001ABC  0900               	iorlw	0
  8782  001ABE  A4D8               	btfss	status,2,c
  8783  001AC0  0012               	return	
  8784                           
  8785                           ;messages.c: 249: }
  8786                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8787                           
  8788                           ;messages.c: 248: return;
  8789  001AC2  0101               	movlb	1	; () banked
  8790  001AC4  0E01               	movlw	high _ToMainLow_MQ
  8791  001AC6  6E37               	movwf	i2check_msg@qptr+1,c
  8792  001AC8  0101               	movlb	1	; () banked
  8793  001ACA  0E6C               	movlw	low _ToMainLow_MQ
  8794  001ACC  6E36               	movwf	i2check_msg@qptr,c
  8795  001ACE  EC5D  F00F         	call	i2_check_msg	;wreg free
  8796  001AD2  0900               	iorlw	0
  8797  001AD4  B4D8               	btfsc	status,2,c
  8798                           
  8799                           ;messages.c: 252: }
  8800                           ;messages.c: 253: enter_sleep_mode();
  8801                           
  8802                           ;messages.c: 251: return;
  8803  001AD6  ECBD  F00F         	call	_enter_sleep_mode	;wreg free
  8804  001ADA  0012               	return	
  8805  001ADC                     __end_of_SleepIfOkay:
  8806                           	opt stack 0
  8807                           pclatu	equ	0xFFB
  8808                           pclath	equ	0xFFA
  8809                           tblptru	equ	0xFF8
  8810                           tblptrh	equ	0xFF7
  8811                           tblptrl	equ	0xFF6
  8812                           tablat	equ	0xFF5
  8813                           prodh	equ	0xFF4
  8814                           prodl	equ	0xFF3
  8815                           intcon	equ	0xFF2
  8816                           postinc0	equ	0xFEE
  8817                           fsr0h	equ	0xFEA
  8818                           fsr0l	equ	0xFE9
  8819                           wreg	equ	0xFE8
  8820                           indf1	equ	0xFE7
  8821                           fsr1h	equ	0xFE2
  8822                           fsr1l	equ	0xFE1
  8823                           bsr	equ	0xFE0
  8824                           indf2	equ	0xFDF
  8825                           postinc2	equ	0xFDE
  8826                           postdec2	equ	0xFDD
  8827                           fsr2h	equ	0xFDA
  8828                           fsr2l	equ	0xFD9
  8829                           status	equ	0xFD8
  8830                           
  8831 ;; *************** function i2_in_low_int *****************
  8832 ;; Defined at:
  8833 ;;		line 31 in file "src/interrupts.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  2   55[COMRAM] int 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2, status,0, cstack
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8847 ;;      Params:         2       0       0       0       0
  8848 ;;      Locals:         0       0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0
  8850 ;;      Totals:         2       0       0       0       0
  8851 ;;Total ram usage:        2 bytes
  8852 ;; Hardware stack levels used:    1
  8853 ;; Hardware stack levels required when called:    1
  8854 ;; This function calls:
  8855 ;;		i2_in_high_int
  8856 ;; This function is called by:
  8857 ;;		_SleepIfOkay
  8858 ;; This function uses a non-reentrant model
  8859 ;;
  8860                           
  8861                           	psect	text51
  8862  001DEC                     __ptext51:
  8863                           	opt stack 0
  8864  001DEC                     i2_in_low_int:
  8865                           	opt stack 17
  8866                           
  8867                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  8868                           
  8869                           ;incstack = 0
  8870  001DEC  ACF2               	btfss	intcon,6,c	;volatile
  8871  001DEE  D005               	goto	i2l3067
  8872                           
  8873                           ;interrupts.c: 33: return (0);
  8874  001DF0  0E00               	movlw	0
  8875  001DF2  6E39               	movwf	?i2_in_low_int+1,c
  8876  001DF4  0E00               	movlw	0
  8877  001DF6  6E38               	movwf	?i2_in_low_int,c
  8878  001DF8  0012               	return	
  8879  001DFA                     i2l3067:
  8880  001DFA  ECB3  F00F         	call	i2_in_high_int	;wreg free
  8881  001DFE  5037               	movf	?i2_in_high_int+1,w,c
  8882  001E00  1036               	iorwf	?i2_in_high_int,w,c
  8883  001E02  B4D8               	btfsc	status,2,c
  8884  001E04  D005               	goto	i2l3075
  8885                           
  8886                           ;interrupts.c: 35: return (0);
  8887  001E06  0E00               	movlw	0
  8888  001E08  6E39               	movwf	?i2_in_low_int+1,c
  8889  001E0A  0E00               	movlw	0
  8890  001E0C  6E38               	movwf	?i2_in_low_int,c
  8891  001E0E  0012               	return	
  8892  001E10                     i2l3075:
  8893                           
  8894                           ;interrupts.c: 37: return (1);
  8895  001E10  0E00               	movlw	0
  8896  001E12  6E39               	movwf	?i2_in_low_int+1,c
  8897  001E14  0E01               	movlw	1
  8898  001E16  6E38               	movwf	?i2_in_low_int,c
  8899  001E18  0012               	return	
  8900  001E1A                     __end_ofi2_in_low_int:
  8901                           	opt stack 0
  8902                           pclatu	equ	0xFFB
  8903                           pclath	equ	0xFFA
  8904                           tblptru	equ	0xFF8
  8905                           tblptrh	equ	0xFF7
  8906                           tblptrl	equ	0xFF6
  8907                           tablat	equ	0xFF5
  8908                           prodh	equ	0xFF4
  8909                           prodl	equ	0xFF3
  8910                           intcon	equ	0xFF2
  8911                           postinc0	equ	0xFEE
  8912                           fsr0h	equ	0xFEA
  8913                           fsr0l	equ	0xFE9
  8914                           wreg	equ	0xFE8
  8915                           indf1	equ	0xFE7
  8916                           fsr1h	equ	0xFE2
  8917                           fsr1l	equ	0xFE1
  8918                           bsr	equ	0xFE0
  8919                           indf2	equ	0xFDF
  8920                           postinc2	equ	0xFDE
  8921                           postdec2	equ	0xFDD
  8922                           fsr2h	equ	0xFDA
  8923                           fsr2l	equ	0xFD9
  8924                           status	equ	0xFD8
  8925                           
  8926 ;; *************** function i2_in_high_int *****************
  8927 ;; Defined at:
  8928 ;;		line 23 in file "src/interrupts.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;		None
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;		None
  8933 ;; Return value:  Size  Location     Type
  8934 ;;                  2   53[COMRAM] int 
  8935 ;; Registers used:
  8936 ;;		wreg, status,2
  8937 ;; Tracked objects:
  8938 ;;		On entry : 0/0
  8939 ;;		On exit  : 0/0
  8940 ;;		Unchanged: 0/0
  8941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8942 ;;      Params:         2       0       0       0       0
  8943 ;;      Locals:         0       0       0       0       0
  8944 ;;      Temps:          0       0       0       0       0
  8945 ;;      Totals:         2       0       0       0       0
  8946 ;;Total ram usage:        2 bytes
  8947 ;; Hardware stack levels used:    1
  8948 ;; This function calls:
  8949 ;;		Nothing
  8950 ;; This function is called by:
  8951 ;;		_SleepIfOkay
  8952 ;;		i2_in_low_int
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           	psect	text52
  8957  001F66                     __ptext52:
  8958                           	opt stack 0
  8959  001F66                     i2_in_high_int:
  8960                           	opt stack 17
  8961                           
  8962                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  8963                           
  8964                           ;incstack = 0
  8965  001F66  0E00               	movlw	0
  8966  001F68  AEF2               	btfss	intcon,7,c	;volatile
  8967  001F6A  0E01               	movlw	1
  8968  001F6C  6E36               	movwf	?i2_in_high_int,c
  8969  001F6E  6A37               	clrf	?i2_in_high_int+1,c
  8970  001F70  0012               	return	
  8971  001F72                     __end_ofi2_in_high_int:
  8972                           	opt stack 0
  8973                           pclatu	equ	0xFFB
  8974                           pclath	equ	0xFFA
  8975                           tblptru	equ	0xFF8
  8976                           tblptrh	equ	0xFF7
  8977                           tblptrl	equ	0xFF6
  8978                           tablat	equ	0xFF5
  8979                           prodh	equ	0xFF4
  8980                           prodl	equ	0xFF3
  8981                           intcon	equ	0xFF2
  8982                           postinc0	equ	0xFEE
  8983                           fsr0h	equ	0xFEA
  8984                           fsr0l	equ	0xFE9
  8985                           wreg	equ	0xFE8
  8986                           indf1	equ	0xFE7
  8987                           fsr1h	equ	0xFE2
  8988                           fsr1l	equ	0xFE1
  8989                           bsr	equ	0xFE0
  8990                           indf2	equ	0xFDF
  8991                           postinc2	equ	0xFDE
  8992                           postdec2	equ	0xFDD
  8993                           fsr2h	equ	0xFDA
  8994                           fsr2l	equ	0xFD9
  8995                           status	equ	0xFD8
  8996                           
  8997 ;; *************** function i2_check_msg *****************
  8998 ;; Defined at:
  8999 ;;		line 222 in file "src/messages.c"
  9000 ;; Parameters:    Size  Location     Type
  9001 ;;  qptr            2   53[COMRAM] PTR struct __msg_queue
  9002 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;		None
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  1    wreg      unsigned char 
  9007 ;; Registers used:
  9008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9014 ;;      Params:         2       0       0       0       0
  9015 ;;      Locals:         0       0       0       0       0
  9016 ;;      Temps:          1       0       0       0       0
  9017 ;;      Totals:         3       0       0       0       0
  9018 ;;Total ram usage:        3 bytes
  9019 ;; Hardware stack levels used:    1
  9020 ;; This function calls:
  9021 ;;		Nothing
  9022 ;; This function is called by:
  9023 ;;		_SleepIfOkay
  9024 ;; This function uses a non-reentrant model
  9025 ;;
  9026                           
  9027                           	psect	text53
  9028  001EBA                     __ptext53:
  9029                           	opt stack 0
  9030  001EBA                     i2_check_msg:
  9031                           	opt stack 18
  9032                           
  9033                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9034                           
  9035                           ;incstack = 0
  9036  001EBA  EE20 F035          	lfsr	2,53
  9037  001EBE  5036               	movf	i2check_msg@qptr,w,c
  9038  001EC0  26D9               	addwf	fsr2l,f,c
  9039  001EC2  5037               	movf	i2check_msg@qptr+1,w,c
  9040  001EC4  22DA               	addwfc	fsr2h,f,c
  9041  001EC6  50DF               	movf	indf2,w,c
  9042  001EC8  6E38               	movwf	??i2_check_msg& (0+255),c
  9043  001ECA  5038               	movf	??i2_check_msg,w,c
  9044  001ECC  0D0D               	mullw	13
  9045  001ECE  50F3               	movf	prodl,w,c
  9046  001ED0  2436               	addwf	i2check_msg@qptr,w,c
  9047  001ED2  6ED9               	movwf	fsr2l,c
  9048  001ED4  50F4               	movf	prodh,w,c
  9049  001ED6  2037               	addwfc	i2check_msg@qptr+1,w,c
  9050  001ED8  6EDA               	movwf	fsr2h,c
  9051  001EDA  50DF               	movf	indf2,w,c
  9052  001EDC  0012               	return	
  9053  001EDE                     __end_ofi2_check_msg:
  9054                           	opt stack 0
  9055                           pclatu	equ	0xFFB
  9056                           pclath	equ	0xFFA
  9057                           tblptru	equ	0xFF8
  9058                           tblptrh	equ	0xFF7
  9059                           tblptrl	equ	0xFF6
  9060                           tablat	equ	0xFF5
  9061                           prodh	equ	0xFF4
  9062                           prodl	equ	0xFF3
  9063                           intcon	equ	0xFF2
  9064                           postinc0	equ	0xFEE
  9065                           fsr0h	equ	0xFEA
  9066                           fsr0l	equ	0xFE9
  9067                           wreg	equ	0xFE8
  9068                           indf1	equ	0xFE7
  9069                           fsr1h	equ	0xFE2
  9070                           fsr1l	equ	0xFE1
  9071                           bsr	equ	0xFE0
  9072                           indf2	equ	0xFDF
  9073                           postinc2	equ	0xFDE
  9074                           postdec2	equ	0xFDD
  9075                           fsr2h	equ	0xFDA
  9076                           fsr2l	equ	0xFD9
  9077                           status	equ	0xFD8
  9078                           
  9079 ;; *************** function _enter_sleep_mode *****************
  9080 ;; Defined at:
  9081 ;;		line 202 in file "src/messages.c"
  9082 ;; Parameters:    Size  Location     Type
  9083 ;;		None
  9084 ;; Auto vars:     Size  Location     Type
  9085 ;;		None
  9086 ;; Return value:  Size  Location     Type
  9087 ;;		None               void
  9088 ;; Registers used:
  9089 ;;		None
  9090 ;; Tracked objects:
  9091 ;;		On entry : 0/0
  9092 ;;		On exit  : 0/0
  9093 ;;		Unchanged: 0/0
  9094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9095 ;;      Params:         0       0       0       0       0
  9096 ;;      Locals:         0       0       0       0       0
  9097 ;;      Temps:          0       0       0       0       0
  9098 ;;      Totals:         0       0       0       0       0
  9099 ;;Total ram usage:        0 bytes
  9100 ;; Hardware stack levels used:    1
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_SleepIfOkay
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           	psect	text54
  9109  001F7A                     __ptext54:
  9110                           	opt stack 0
  9111  001F7A                     _enter_sleep_mode:
  9112                           	opt stack 18
  9113                           
  9114                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9115                           
  9116                           ;incstack = 0
  9117  001F7A  8ED3               	bsf	4051,7,c	;volatile
  9118  001F7C  0003               	sleep		;# 
  9119  001F7E  0012               	return	
  9120  001F80                     __end_of_enter_sleep_mode:
  9121                           	opt stack 0
  9122  0000                     pclatu	equ	0xFFB
  9123                           pclath	equ	0xFFA
  9124                           tblptru	equ	0xFF8
  9125                           tblptrh	equ	0xFF7
  9126                           tblptrl	equ	0xFF6
  9127                           tablat	equ	0xFF5
  9128                           prodh	equ	0xFF4
  9129                           prodl	equ	0xFF3
  9130                           intcon	equ	0xFF2
  9131                           postinc0	equ	0xFEE
  9132                           fsr0h	equ	0xFEA
  9133                           fsr0l	equ	0xFE9
  9134                           wreg	equ	0xFE8
  9135                           indf1	equ	0xFE7
  9136                           fsr1h	equ	0xFE2
  9137                           fsr1l	equ	0xFE1
  9138                           bsr	equ	0xFE0
  9139                           indf2	equ	0xFDF
  9140                           postinc2	equ	0xFDE
  9141                           postdec2	equ	0xFDD
  9142                           fsr2h	equ	0xFDA
  9143                           fsr2l	equ	0xFD9
  9144                           status	equ	0xFD8
  9145                           pclatu	equ	0xFFB
  9146                           pclath	equ	0xFFA
  9147                           tblptru	equ	0xFF8
  9148                           tblptrh	equ	0xFF7
  9149                           tblptrl	equ	0xFF6
  9150                           tablat	equ	0xFF5
  9151                           prodh	equ	0xFF4
  9152                           prodl	equ	0xFF3
  9153                           intcon	equ	0xFF2
  9154                           postinc0	equ	0xFEE
  9155                           fsr0h	equ	0xFEA
  9156                           fsr0l	equ	0xFE9
  9157                           wreg	equ	0xFE8
  9158                           indf1	equ	0xFE7
  9159                           fsr1h	equ	0xFE2
  9160                           fsr1l	equ	0xFE1
  9161                           bsr	equ	0xFE0
  9162                           indf2	equ	0xFDF
  9163                           postinc2	equ	0xFDE
  9164                           postdec2	equ	0xFDD
  9165                           fsr2h	equ	0xFDA
  9166                           fsr2l	equ	0xFD9
  9167                           status	equ	0xFD8
  9168                           
  9169                           	psect	rparam
  9170  0000                     pclatu	equ	0xFFB
  9171                           pclath	equ	0xFFA
  9172                           tblptru	equ	0xFF8
  9173                           tblptrh	equ	0xFF7
  9174                           tblptrl	equ	0xFF6
  9175                           tablat	equ	0xFF5
  9176                           prodh	equ	0xFF4
  9177                           prodl	equ	0xFF3
  9178                           intcon	equ	0xFF2
  9179                           postinc0	equ	0xFEE
  9180                           fsr0h	equ	0xFEA
  9181                           fsr0l	equ	0xFE9
  9182                           wreg	equ	0xFE8
  9183                           indf1	equ	0xFE7
  9184                           fsr1h	equ	0xFE2
  9185                           fsr1l	equ	0xFE1
  9186                           bsr	equ	0xFE0
  9187                           indf2	equ	0xFDF
  9188                           postinc2	equ	0xFDE
  9189                           postdec2	equ	0xFDD
  9190                           fsr2h	equ	0xFDA
  9191                           fsr2l	equ	0xFD9
  9192                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         224
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     68      74
    BANK0           128     77      83
    BANK1           256     81     243
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(COMRAM[2]), turn@test(COMRAM[2]), moveDist@test(BANK0[2]), move@test(COMRAM[2]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(COMRAM[2]), turn@test(COMRAM[2]), moveDist@test(BANK0[2]), move@test(COMRAM[2]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> NULL(NULL[0]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 11
		 -> main@t1thread_data(BANK1[11]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 11
		 -> main@t1thread_data(BANK1[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 9
		 -> main@t0thread_data(BANK1[9]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 9
		 -> main@t0thread_data(BANK1[9]), 

    sendUARTarr@data	PTR unsigned char  size(2) Largest target is 2
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), stop@test(COMRAM[2]), turn@test(COMRAM[2]), 
		 -> moveDist@test(BANK0[2]), move@test(COMRAM[2]), main@ctrl(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK1[28]), NULL(NULL[0]), 

    moveDist@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 11
		 -> main@t1thread_data(BANK1[11]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK1[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK1[28]), NULL(NULL[0]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), stop@test(COMRAM[2]), 
		 -> turn@test(COMRAM[2]), moveDist@test(BANK0[2]), move@test(COMRAM[2]), main@ctrl(BANK1[2]), 
		 -> main@uc(BANK1[5]), NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 
		 -> main@msgbuffer(BANK1[11]), NULL(NULL[0]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer1_lthread@temp(BANK0[2]), timer0_lthread@temp(BANK0[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(COMRAM[2]), turn@test(COMRAM[2]), moveDist@test(BANK0[2]), move@test(COMRAM[2]), 
		 -> main@ctrl(BANK1[2]), main@uthread_data(BANK1[10]), main@ic(BANK1[28]), main@uc(BANK1[5]), 
		 -> NULL(NULL[0]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_ToMainHigh_sendmsg
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _main->_timer0_lthread
    _main->_timer1_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _timer1_lthread->_sendUARTarr
    _timer0_lthread->_sendUARTarr
    _moveDist->_sendUARTarr
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                82    82      0   22710
                                             76 BANK0      1     1      0
                                              0 BANK1     81    81      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                           _moveDist
                        _sendUARTarr
              _start_i2c_slave_reply
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    2541
                                             63 BANK0     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    1951
                                             59 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       8     6      2    3591
                                             68 BANK0      8     6      2
                        _WriteTimer1
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                       8     6      2    3527
                                             68 BANK0      8     6      2
                        _WriteTimer0
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     263
                                             37 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     196
                                             37 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     130
                                             37 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _moveDist                                             6     2      4    3416
                                             68 BANK0      6     2      4
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _sendUARTarr                                          5     3      2    2844
                                             63 BANK0      5     3      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2307
                                             59 BANK0      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1757
                                             47 BANK0     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     260
                                             37 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      86
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      64
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     196
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2     196
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     390
                                             41 BANK0      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     390
                                             37 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      86
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      22
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     270
                                             43 BANK0      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             41 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             39 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             37 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     248
                                             37 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    1973
                                             61 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    1973
                                             61 BANK0      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1779
                                             47 BANK0     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     504
                                             37 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     284
                                             37 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      66
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      44
                                             37 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 18    18      0    8436
                                             35 COMRAM    18    18      0
              _uart_recv_int_handler
             _uart_trans_int_handler
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               6     6      0    2663
                                             29 COMRAM     6     6      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    2477
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    2283
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0    2898
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    2875
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2386
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     929
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               15    15      0    6686
                                             22 BANK0     15    15      0
                        _SleepIfOkay
                 _ToMainHigh_sendmsg
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    11    11      0    3528
                                             11 BANK0     11    11      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      22
                                             53 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    2922
                                             64 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6    2213
                                             63 COMRAM     1     1      0
                                              0 BANK0     11     5      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     662
                                             53 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0     236
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             55 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             53 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2     236
                                             53 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _moveDist
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _sendUARTarr
     _ToMainLow_sendmsg
       _send_msg
         _memcpy
   _start_i2c_slave_reply
   _timer0_lthread
     _WriteTimer0
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer1_lthread
     _WriteTimer1
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
   i1_ToMainLow_sendmsg
     i1_send_msg
       i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _ToMainHigh_sendmsg
     i2_send_msg
       i2_memcpy
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     51      F3       6       94.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80     4D      53       4       64.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     44      4A       1       58.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C6      11        0.0%
DATA                 0      0     1C6      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Mar 24 10:48:47 2015

               main@uthread_data 01B0         _MQ_Main_Willing_to_block 0047  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 1BEA  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1D50  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l130 0892                              l123 0836  
                            l136 091E                              l511 1CC6  
                            l513 1CDE                              l514 1CE0  
                            l552 162E                              l553 1630  
                            l554 163E                              l555 1640  
                            l548 160E                              l487 1E3E  
                            l488 1E40                              l781 1F1E  
           ?_FromMainLow_sendmsg 00BB  __size_of_uart_trans_int_handler 005A  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0100                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00A5  
               ??_init_uart_recv 00A7                             l1093 16EC  
                           l2315 1B12                             l2307 1AF0  
                           l3051 16D8                             l3043 168A  
                           l3045 169C                             l3047 16A4  
                           l2329 1B56                             l2611 0A8E  
                           l2605 0A22                             l2607 0A3C  
                           l2705 1610                             l2801 10AC  
                           l2571 0898                             l2573 08B0  
                           l2581 0902                             l2807 1B76  
                           l2815 0C00                             l2583 0924  
                           l2591 098E                             l2575 08C8  
                           l2913 1A1C                             l2585 0952  
                           l2593 09A6                             l2569 0878  
                           l2907 19F8                             l2819 0C84  
                           l2587 0970                             l2579 08EA  
                           l2773 1824                             l2597 09C6  
                           l2679 1CC8                             l2927 0B1A  
                           l2943 0BE0                             l2839 0FBA  
                           l2863 118A                             l2599 09E4  
                           l2697 15FA                             l2785 187C  
                           l2779 1850                             l2875 18CC  
                           l2859 1162                             l2893 0D4E  
                           _LATA 000F89                             _LATB 000F8A  
                           u1705 0F92                             u1665 1084  
                           u2397 1F20                             i1l52 008C  
                _FromMainHigh_MQ 0200                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 11BA  
                           _main 0714                             fsr0h 000FEA  
                           fsr1h 000FE2                             fsr0l 000FE9  
                           fsr2h 000FDA                             indf1 000FE7  
                           fsr1l 000FE1                             indf2 000FDF  
                           fsr2l 000FD9                      main@msgtype 01CA  
                     i1_send_msg 1354                             pclat 000FFA  
                    i2_check_msg 1EBA                             prodh 000FF4  
                           prodl 000FF3            handle_start@data_read 0036  
                           start 00D2                    __CFG_FOSC2$ON 000000  
                     i2_send_msg 0DF6        ToMainHigh_recvmsg@msgtype 00BD  
                 send_msg@length 00B1                      _Delay1KTCYx 1F1A  
          ??_FromMainLow_recvmsg 001D            ??_FromMainLow_sendmsg 00BE  
                          ?_main 0001     __size_ofi1_ToMainLow_sendmsg 0026  
                          _CMCON 000FB4                            _T0CON 000FD5  
                          _T1CON 000FCD            init_uart_lthread@uptr 00A5  
                __end_of___lwmod 16F6                       i1memcpy@d1 0001  
                          i1l391 1A8A                            i2l320 019E  
                          i1l394 1A62                            i2l308 1308  
                          i2l324 01E2                            i2l318 0538  
                          i1l566 1F0A                            i2l352 054A  
                          i2l346 04AA                            i2l338 0372  
                     i1memcpy@s1 0003                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _PORTA 000F80                            _PORTB 000F81  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
              sendUARTarr@length 00C3                       i2memcpy@d1 0036  
                     i2memcpy@s1 0038                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                sendUARTarr@retval 00C2  
                __end_of_in_main 1B66       ToMainLow_recvmsg@maxlength 00C1  
        i2c_configure_slave@addr 00A5                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 1A34  
               __end_ofi1_memcpy 1C6C                 __end_ofi2_memcpy 1CAC  
                   ?_sendUARTarr 00BF                  __initialization 1D86  
     uart_trans_int_handler@data 001F                     __end_of_main 0AAE  
   uart_trans_int_handler@length 0023       __size_of_ToMainLow_recvmsg 0042  
     __size_of_ToMainLow_sendmsg 0036            __size_ofi2_in_low_int 002E  
                         ??_main 00CC                  send_msg@msgtype 00B2  
                  __activetblptr 000002                  send_msg@tlength 00B6  
     FromMainLow_sendmsg@msgtype 00BB             __end_of_handle_start 1354  
                         _ADCON1 000FC1          ??_uart_recv_int_handler 001B  
                         i1l3115 1C5A                           i1l3203 1522  
                         i1l3109 1C3E                           i1l3225 1A7C  
                         i1l3233 0078                           i1l3139 138C  
                         i1l3163 1200                           i1l3239 0082  
                         i1l3179 1288                           i2l3011 1324  
                         i2l3013 133C                           i2l3125 1C9A  
                         i2l3119 1C7E                       _OpenTimer0 1E1A  
                     _OpenTimer1 1CAC                           i2l3075 1E10  
                         i2l3067 1DFA                           i2l3315 029A  
                         i2l3251 157C                           i2l3341 0428  
                         i2l3317 02DA                           i2l3309 0282  
                 __CFG_WDTEN$OFF 000000                           i2l3417 0E52  
                         i2l3345 043A                           i2l3273 017C  
                         i2l3257 159C                           i2l3339 03E6  
                         i2l3373 054E                           i2l3367 050C  
                         i2l3279 0194                           i2l2497 1A94  
                         i2l3297 021A                           i2l3395 06DA  
                         i2l3387 0640                           i2l3379 05AE  
                         i2l3299 0246      __end_of_i2c_configure_slave 1E6C  
                  ??_SleepIfOkay 003A               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 010E  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0CF2  
             timer0_lthread@temp 00CA               timer0_lthread@tptr 00C4  
        FromMainLow_recvmsg@data 001B                     i2_in_low_int 1DEC  
                    ?i2_send_msg 0080                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0092                  _i2c_int_handler 00D6  
               OpenTimer0@config 00A5                           _ic_ptr 00D1  
                      ??___lwmod 00A9                    main@msgbuffer 01A2  
               __end_of_init_i2c 19D6                 OpenTimer1@config 00A5  
                         _memcpy 19D6                           clear_0 1D8C  
                         clear_1 1D98                           _uc_ptr 0049  
                         main@ic 01D7                           main@uc 01BC  
               __end_of_recv_msg 0BE4      start_i2c_slave_reply@length 00A9  
               __end_of_moveDist 14A6                        ??_in_main 00AB  
               __end_of_send_msg 0DF6          i2c_int_handler@i2c_data 0092  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                      init_queue@i 00A8  
       ToMainLow_recvmsg@msgtype 00BD             __size_of_in_high_int 0012  
        FromMainLow_sendmsg@data 00BC                  __CFG_FOSC$HSPLL 000000  
              _init_uart_lthread 1F80                       __accesstop 0080  
        __end_of__initialization 1DB0       __end_of_ToMainHigh_recvmsg 1C2C  
     __end_of_ToMainHigh_sendmsg 1DEC               ?_init_uart_lthread 00A5  
    __end_of_init_timer0_lthread 1806      __end_of_init_timer1_lthread 177E  
            __end_of_SleepIfOkay 1ADC                   __pcstackCOMRAM 0001  
         __size_ofi2_in_high_int 000C              ??_init_uart_lthread 00A7  
             __size_of_check_msg 0036                __end_of_ReadUSART 1F1A  
            __size_ofi1_recv_msg 00D2              __size_ofi1_send_msg 00AA  
                      ?i1_memcpy 0001    __size_of_InterruptHandlerHigh 15D2  
    __end_of_InterruptHandlerLow 00D2                        ?i2_memcpy 0036  
                  _ToMainHigh_MQ 0136                 _enter_sleep_mode 1F7A  
            __size_ofi2_send_msg 00F6                    ReadUSART@data 0001  
              __end_of_OpenUSART 166C                    check_msg@qptr 00A5  
      __end_of_init_uart_lthread 1F82          ??_block_on_To_msgqueues 00AB  
           __size_of_init_queues 006E                       __pbssBANK0 00CD  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0022                       __pnvCOMRAM 0049  
            i1_ToMainLow_sendmsg 1E94          __end_of_i2c_int_handler 0714  
                   ?i2_check_msg 0036               timer1_lthread@temp 00CA  
             timer1_lthread@tptr 00C4             __size_of_sendUARTarr 0042  
              recv_msg@maxlength 00B1                  recv_msg@msgtype 00B2  
                recv_msg@tlength 00B9            __size_of_handle_start 00C8  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 00A7  
                        ?_memcpy 00A5                 WriteTimer1@timer 00A7  
                  ??_WriteTimer0 00A7                    ??_WriteTimer1 00A7  
        __size_of_timer0_lthread 00F2             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 00F2              timer0_lthread@F5144 00CD  
                     ??i1_memcpy 0007                       ??i2_memcpy 003C  
               i1send_msg@length 000D                    i2_in_high_int 1F66  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
              __end_of_check_msg 1D86                        ?_init_i2c 00A5  
                    _SleepIfOkay 1A8E                        ?_recv_msg 00AF  
                     _in_low_int 1ADC                     _handle_start 128C  
                      ?_moveDist 00C4                          __Hparam 0000  
                      ?_send_msg 00AF                          __Lparam 0000  
    __end_of_FromMainLow_recvmsg 1E94      __end_of_FromMainLow_sendmsg 1D1A  
               init_uart_recv@uc 00A5                          ___lwmod 166C  
                __CFG_STVREN$OFF 000000                          __pcinit 1D86  
                __size_of_memcpy 005E                       _init_queue 1884  
                        __ramtop 0400            ??i1_ToMainLow_sendmsg 001A  
            __size_of_OpenTimer0 002A              __size_of_OpenTimer1 0038  
                        __ptext0 0714                          __ptext1 10D0  
                        __ptext2 1CE4                          __ptext3 0EEC  
                        __ptext4 0FDE                          __ptext5 166C  
                        __ptext6 1F30                          __ptext7 0BE4  
                        __ptext8 13FE                          __ptext9 1B66  
              uart_lthread@index 00C8                        _T0CONbits 000FD5  
                        _in_main 1B22                        _T1CONbits 000FCD  
            __end_of_WriteTimer0 1F42              __end_of_WriteTimer1 1F54  
                 ?i2_in_high_int 0036   __end_of_uart_trans_int_handler 1A8E  
     __size_of_init_uart_lthread 0002                   __pintcode_body 1542  
           end_of_initialization 1DB0   __size_of_uart_recv_int_handler 009C  
                        memcpy@d 00AB                          memcpy@n 00A9  
                        memcpy@s 00AD    __end_of_uart_recv_int_handler 1542  
                     ??_init_i2c 00A7                     ??i1_recv_msg 0012  
    i2c_int_handler@data_written 0090                    __Lmediumconst 0000  
                        int_func 1542                     ??i1_send_msg 0011  
                  ?_uart_lthread 00BF          __size_of_init_uart_recv 001E  
               ?_i2c_int_handler 0001                       ??_recv_msg 00B6  
                     ??_moveDist 00C8                     ??i2_send_msg 0040  
                     ??_send_msg 00B5                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0041  
             __end_ofi1_recv_msg 128C               __end_ofi1_send_msg 13FE  
                      _TRISCbits 000F94               __end_ofi2_send_msg 0EEC  
                 ??_uart_lthread 00C7                        _TXSTAbits 000FAC  
                     main@length 01CB                      ?_in_low_int 00A7  
          _start_i2c_slave_reply 0BE4     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1F80  
             _ToMainHigh_recvmsg 1BEA                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1DBA                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 0FDE  
                    ?_init_queue 00A5                        i2memcpy@d 003C  
                    _WriteTimer0 1F30                      _WriteTimer1 1F42  
                      i2memcpy@n 003A                        i2memcpy@s 003E  
                 _timer1_lthread 0EEC                   __end_of_memcpy 1A34  
              _enable_interrupts 1F72             __size_of_Delay1KTCYx 0016  
            ?_ToMainHigh_recvmsg 00BD                  ??i2_in_high_int 0038  
       i2c_int_handler@data_read 0095              ?_ToMainHigh_sendmsg 0041  
        i1ToMainLow_sendmsg@data 0018               ?_enable_interrupts 0001  
            start_initialization 1D86                    ??_in_high_int 00A7  
                      _ReadUSART 1EFC                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 00BE  
            ??_enable_interrupts 00A5                     ??_OpenTimer0 00A5  
                   ??_OpenTimer1 00A5   __size_of_block_on_To_msgqueues 007E  
  __end_of_block_on_To_msgqueues 1884                        _OpenUSART 15DA  
   __end_of_InterruptHandlerHigh 15DA                       init_i2c@ic 00A5  
           ??_ToMainHigh_recvmsg 00C1             ??_ToMainHigh_sendmsg 0044  
         __end_of_timer0_lthread 10D0         i2c_int_handler@error_buf 008D  
         __end_of_timer1_lthread 0FDE        __end_of_enable_interrupts 1F7A  
                       ??_memcpy 00AB     __size_of_init_timer0_lthread 0088  
   __size_of_init_timer1_lthread 0088               __end_of_OpenTimer0 1E44  
             __end_of_OpenTimer1 1CE4         i2c_int_handler@msg_ready 0094  
            timer1_lthread@F5145 00CF                      __pbssCOMRAM 0045  
                     ?_ReadUSART 0001                    ??_init_queues 00A9  
                  __pcstackBANK0 0080                    __pcstackBANK1 01A2  
            __size_of_in_low_int 0046         start_i2c_slave_reply@msg 00A5  
            __CFG_CCP2MX$DEFAULT 000000                  Delay1KTCYx@unit 00A5  
       ToMainLow_sendmsg@msgtype 00BB     __size_of_InterruptHandlerLow 00BA  
            __end_of_in_high_int 1F66                       ?_OpenUSART 00A5  
                   ?_SleepIfOkay 0001            ToMainLow_recvmsg@data 00BF  
                   _ToMainLow_MQ 016C              __size_of_init_queue 007A  
                 _init_uart_recv 1EDE                        _check_msg 1D50  
                      __pnvBANK0 00D1           ?_start_i2c_slave_reply 00A5  
              __size_of_init_i2c 006A                    ??_sendUARTarr 00C1  
                   recv_msg@data 00B4                     recv_msg@qmsg 00BB  
                   recv_msg@slot 00B8                     recv_msg@qptr 00AF  
              __size_of_recv_msg 0136                        __pintcode 0008  
              __size_of_moveDist 00A8                __size_of_send_msg 0104  
                ?_timer0_lthread 00C4                         ?___lwmod 00A5  
                ?_timer1_lthread 00C4                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 00BF             __end_of_uart_lthread 11BA  
     i2c_int_handler@msg_to_send 0093                         ?_in_main 00A9  
              WriteTimer0@timer0 00A5                WriteTimer1@timer1 00A5  
     i1ToMainLow_sendmsg@msgtype 0017              uart_lthread@msgtype 00C1  
        init_timer0_lthread@tptr 00A5            ToMainLow_sendmsg@data 00BC  
            i1recv_msg@maxlength 000D                 uart_lthread@uptr 00BF  
         __end_of_init_uart_recv 1EFC              __end_of_init_queues 196C  
                i2check_msg@qptr 0036                       ?_check_msg 00A5  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                   moveDist@dist 00C6                    ?i2_in_low_int 0038  
                   moveDist@test 00C8                     moveDist@tptr 00C4  
                       _PIR1bits 000F9E           ToMainHigh_sendmsg@data 0042  
    __end_ofi1_ToMainLow_sendmsg 1EBA                         _RCONbits 000FD0  
               __CFG_WDTPS$32768 000000                   i1recv_msg@data 0010  
                 i1recv_msg@qmsg 0017                   i1recv_msg@slot 0014  
                 i1recv_msg@qptr 000B     FromMainLow_recvmsg@maxlength 001D  
     __size_of_enable_interrupts 0008                i1send_msg@msgtype 000E  
            __end_of_sendUARTarr 1BA8                i1send_msg@tlength 0012  
     FromMainLow_recvmsg@msgtype 0019     __size_of_FromMainLow_recvmsg 0028  
   __size_of_FromMainLow_sendmsg 0036                         i1_memcpy 1C2C  
           _InterruptHandlerHigh 0008                      ??_ReadUSART 0001  
                       i2_memcpy 1C6C                      _in_high_int 1F54  
                   send_msg@data 00B3              _i2c_configure_slave 1E44  
                   send_msg@qmsg 00B9                     send_msg@slot 00B8  
                   send_msg@qptr 00AF                  sendUARTarr@data 00BF  
          uart_lthread@msgbuffer 00C5                  ?_init_uart_recv 00A5  
                    ??_OpenUSART 00A7                  OpenUSART@config 00AA  
                 ??i2_in_low_int 003A            _uart_recv_int_handler 14A6  
                   ??_in_low_int 00A9                         __Hrparam 0000  
           ?_i2c_configure_slave 0001                         __Lrparam 0000  
              ?_enter_sleep_mode 0001         __size_of_i2c_int_handler 063E  
             ??_enter_sleep_mode 0036                 __size_of___lwmod 008A  
                   ??_init_queue 00A7                     ?_WriteTimer0 00A5  
                   ?_WriteTimer1 00A5          ToMainLow_sendmsg@length 00BE  
              main@t0thread_data 01C1            ?_InterruptHandlerHigh 0001  
               __size_of_in_main 0044                i2send_msg@msgtype 0083  
    ToMainHigh_recvmsg@maxlength 00C1                i2send_msg@tlength 0086  
        init_timer1_lthread@tptr 00A5                      _init_queues 18FE  
             __end_of_in_low_int 1B22                         __ptext10 1D1A  
                       __ptext11 0CF2                         __ptext20 1E44  
                       __ptext12 1F42                         __ptext21 1F72  
                       __ptext13 1EDE                         __ptext30 0AAE  
                       __ptext22 1806                         __ptext14 1F80  
                       __ptext31 19D6                         __ptext23 1B22  
                       __ptext15 16F6                         __ptext40 1E94  
                       __ptext32 15DA                         __ptext24 1ADC  
                       __ptext16 177E                         __ptext41 1354  
                       __ptext33 1CAC                         __ptext25 1F54  
                       __ptext17 18FE                         __ptext50 1A8E  
                       __ptext42 1C2C                         __ptext34 1E1A  
                       __ptext26 1D50                         __ptext18 1884  
                       __ptext51 1DEC                         __ptext43 1EFC  
                       __ptext27 1F1A                         __ptext19 196C  
                       __ptext52 1F66                         __ptext36 1A34  
                       __ptext28 1BA8                         __ptext53 1EBA  
                       __ptext45 00D6                         __ptext37 1E6C  
                       __ptext29 1BEA                         __ptext54 1F7A  
                       __ptext46 128C                         __ptext38 11BA  
                       __ptext47 1DBA                         __ptext39 14A6  
                       __ptext48 0DF6                         __ptext49 1C6C  
                 i1send_msg@data 000F        i1ToMainLow_sendmsg@length 001A  
                 i1send_msg@qmsg 0015                   i1send_msg@slot 0014  
                 i1send_msg@qptr 000B               uart_lthread@length 00C3  
            _init_timer0_lthread 177E               uart_lthread@status 00C7  
                       _init_i2c 196C              _init_timer1_lthread 16F6  
                  __size_of_main 039A                    ??i2_check_msg 0038  
              main@t1thread_data 01CC                      ??_check_msg 00A7  
             __end_of_init_queue 18FE             __size_of_SleepIfOkay 004E  
                       _recv_msg 0AAE                         _moveDist 13FE  
          ??_i2c_configure_slave 00A5                         _send_msg 0CF2  
                    _sendUARTarr 1B66                   init_queue@qptr 00A5  
          __size_of_uart_lthread 00EA    uart_trans_int_handler@msgtype 0021  
                  ??_Delay1KTCYx 00A5                         main@baud 01AD  
           ?_init_timer0_lthread 00A5                         main@ctrl 01BA  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 00A5  
                      stop@F5114 0045         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00A5                         memcpy@d1 00A5  
                       memcpy@s1 00A7            __end_ofi2_in_high_int 1F72  
   i2c_int_handler@overrun_error 0091                 i2send_msg@length 0082  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00A7  
               ___lwmod@dividend 00A5           ?_uart_recv_int_handler 0001  
                   _uart_lthread 10D0                   main@UARTConfig 01AE  
          _block_on_To_msgqueues 1806                    ?_handle_start 0001  
               ??_timer0_lthread 00C6      __size_of_ToMainHigh_recvmsg 0042  
    __size_of_ToMainHigh_sendmsg 0032                       _OSCCONbits 000FD3  
               ??_timer1_lthread 00C6                i1recv_msg@msgtype 000E  
              i1recv_msg@tlength 0015         ToMainHigh_sendmsg@length 0044  
            __end_ofi2_check_msg 1EDE            ??_init_timer0_lthread 00A7  
          ??_init_timer1_lthread 00A7           ??_InterruptHandlerHigh 0096  
              _ToMainLow_recvmsg 1BA8                _ToMainLow_sendmsg 1D1A  
             main@last_reg_recvd 01AF                  ___lwmod@divisor 00A7  
           __end_ofi2_in_low_int 1E1A               ?_ToMainLow_recvmsg 00BD  
            __end_of_Delay1KTCYx 1F30                ??_i2c_int_handler 008B  
                ___lwmod@counter 00AA               ?_ToMainLow_sendmsg 00BB  
                    _SSPCON1bits 000FC6                      _SSPCON2bits 000FC5  
                 i2send_msg@data 0084            ??_InterruptHandlerLow 0024  
            ??_ToMainLow_recvmsg 00C1                   i2send_msg@qmsg 0089  
                 i2send_msg@slot 0088                   i2send_msg@qptr 0080  
            ??_ToMainLow_sendmsg 00BE              _FromMainLow_recvmsg 1E6C  
                 ??_handle_start 0036              _FromMainLow_sendmsg 1CE4  
                   _USART_Status 0048  
