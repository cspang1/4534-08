

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Wed Mar 25 11:25:47 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F45J10
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     _ADCON1	set	4033
    76  0000                     _CMCON	set	4020
    77  0000                     _INTCONbits	set	4082
    78  0000                     _IPR1bits	set	3999
    79  0000                     _LATA	set	3977
    80  0000                     _LATB	set	3978
    81  0000                     _OSCCON	set	4051
    82  0000                     _OSCCONbits	set	4051
    83  0000                     _OSCTUNEbits	set	3995
    84  0000                     _PIE1bits	set	3997
    85  0000                     _PIR1bits	set	3998
    86  0000                     _PORTA	set	3968
    87  0000                     _PORTB	set	3969
    88  0000                     _RCONbits	set	4048
    89  0000                     _RCREG	set	4014
    90  0000                     _RCSTA	set	4011
    91  0000                     _RCSTAbits	set	4011
    92  0000                     _SPBRG	set	4015
    93  0000                     _SPBRGH	set	4016
    94  0000                     _SSPADD	set	4040
    95  0000                     _SSPBUF	set	4041
    96  0000                     _SSPCON1	set	4038
    97  0000                     _SSPCON1bits	set	4038
    98  0000                     _SSPCON2	set	4037
    99  0000                     _SSPCON2bits	set	4037
   100  0000                     _SSPSTAT	set	4039
   101  0000                     _SSPSTATbits	set	4039
   102  0000                     _T0CON	set	4053
   103  0000                     _T0CONbits	set	4053
   104  0000                     _T1CON	set	4045
   105  0000                     _T1CONbits	set	4045
   106  0000                     _TMR0H	set	4055
   107  0000                     _TMR0L	set	4054
   108  0000                     _TMR1H	set	4047
   109  0000                     _TMR1L	set	4046
   110  0000                     _TRISA	set	3986
   111  0000                     _TRISB	set	3987
   112  0000                     _TRISCbits	set	3988
   113  0000                     _TXREG	set	4013
   114  0000                     _TXSTA	set	4012
   115  0000                     _TXSTAbits	set	4012
   116                           
   117                           	psect	nvCOMRAM
   118  000049                     __pnvCOMRAM:
   119                           	opt stack 0
   120  000049                     _uc_ptr:
   121                           	opt stack 0
   122  000049                     	ds	2
   123                           
   124                           	psect	nvBANK0
   125  0000E1                     __pnvBANK0:
   126                           	opt stack 0
   127  0000E1                     _ic_ptr:
   128                           	opt stack 0
   129  0000E1                     	ds	2
   130                           
   131                           ; #config settings
   132  0000                     
   133                           	psect	cinit
   134  001B1E                     __pcinit:
   135                           	opt stack 0
   136  001B1E                     start_initialization:
   137                           	opt stack 0
   138  001B1E                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Clear objects allocated to BANK1 (162 bytes)
   142  001B1E  EE01  F000         	lfsr	0,__pbssBANK1
   143  001B22  0EA2               	movlw	162
   144  001B24                     clear_0:
   145  001B24  6AEE               	clrf	postinc0,c
   146  001B26  06E8               	decf	wreg,f,c
   147  001B28  E1FD               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to BANK0 (60 bytes)
   150  001B2A  EE00  F080         	lfsr	0,__pbssBANK0
   151  001B2E  0E3C               	movlw	60
   152  001B30                     clear_1:
   153  001B30  6AEE               	clrf	postinc0,c
   154  001B32  06E8               	decf	wreg,f,c
   155  001B34  E1FD               	bnz	clear_1
   156                           
   157                           ; Clear objects allocated to COMRAM (2 bytes)
   158  001B36  6A4C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   159  001B38  6A4B               	clrf	__pbssCOMRAM& (0+255),c
   160  001B3A                     end_of_initialization:
   161                           	opt stack 0
   162  001B3A                     __end_of__initialization:
   163                           	opt stack 0
   164  001B3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165  001B3C  6EF8               	movwf	tblptru,c
   166  001B3E  0100               	movlb	0
   167  001B40  EF1A  F003         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	bssCOMRAM
   173  00004B                     __pbssCOMRAM:
   174                           	opt stack 0
   175  00004B                     _MQ_Main_Willing_to_block:
   176                           	opt stack 0
   177  00004B                     	ds	1
   178  00004C                     _USART_Status:
   179                           	opt stack 0
   180  00004C                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185                           	psect	bssBANK0
   186  000080                     __pbssBANK0:
   187                           	opt stack 0
   188  000080                     stop@F5114:
   189                           	opt stack 0
   190  000080                     	ds	2
   191  000082                     timer0_lthread@F5145:
   192                           	opt stack 0
   193  000082                     	ds	2
   194  000084                     timer1_lthread@F5146:
   195                           	opt stack 0
   196  000084                     	ds	2
   197  000086                     _ToMainLow_MQ:
   198                           	opt stack 0
   199  000086                     	ds	54
   200                           tblptru	equ	0xFF8
   201                           postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           
   204                           	psect	bssBANK1
   205  000100                     __pbssBANK1:
   206                           	opt stack 0
   207  000100                     _FromMainHigh_MQ:
   208                           	opt stack 0
   209  000100                     	ds	54
   210  000136                     _FromMainLow_MQ:
   211                           	opt stack 0
   212  000136                     	ds	54
   213  00016C                     _ToMainHigh_MQ:
   214                           	opt stack 0
   215  00016C                     	ds	54
   216                           tblptru	equ	0xFF8
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           
   220                           	psect	cstackBANK2
   221  000200                     __pcstackBANK2:
   222                           	opt stack 0
   223  000200                     main@msgbuffer:
   224                           	opt stack 0
   225                           
   226                           ; 11 bytes @ 0x0
   227  000200                     	ds	11
   228  00020B                     main@baud:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0xB
   232  00020B                     	ds	1
   233  00020C                     main@UARTConfig:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0xC
   237  00020C                     	ds	1
   238  00020D                     main@last_reg_recvd:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0xD
   242  00020D                     	ds	1
   243  00020E                     main@uthread_data:
   244                           	opt stack 0
   245                           
   246                           ; 10 bytes @ 0xE
   247  00020E                     	ds	10
   248  000218                     main@uc:
   249                           	opt stack 0
   250                           
   251                           ; 5 bytes @ 0x18
   252  000218                     	ds	5
   253  00021D                     main@msgtype:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x1D
   257  00021D                     	ds	1
   258  00021E                     main@length:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x1E
   262  00021E                     	ds	1
   263  00021F                     main@t1thread_data:
   264                           	opt stack 0
   265                           
   266                           ; 11 bytes @ 0x1F
   267  00021F                     	ds	11
   268  00022A                     main@t0thread_data:
   269                           	opt stack 0
   270                           
   271                           ; 9 bytes @ 0x2A
   272  00022A                     	ds	9
   273  000233                     main@ic:
   274                           	opt stack 0
   275                           
   276                           ; 28 bytes @ 0x33
   277  000233                     	ds	28
   278                           tblptru	equ	0xFF8
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282                           	psect	cstackBANK1
   283  0001A2                     __pcstackBANK1:
   284                           	opt stack 0
   285  0001A2                     memcpy@d:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x0
   289  0001A2                     	ds	2
   290  0001A4                     memcpy@s:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x2
   294  0001A4                     	ds	2
   295  0001A6                     send_msg@qptr:
   296                           	opt stack 0
   297  0001A6                     recv_msg@qptr:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x4
   301  0001A6                     	ds	2
   302  0001A8                     send_msg@length:
   303                           	opt stack 0
   304  0001A8                     recv_msg@maxlength:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x6
   308  0001A8                     	ds	1
   309  0001A9                     send_msg@msgtype:
   310                           	opt stack 0
   311  0001A9                     recv_msg@msgtype:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0x7
   315  0001A9                     	ds	1
   316  0001AA                     send_msg@data:
   317                           	opt stack 0
   318                           
   319                           ; 2 bytes @ 0x8
   320  0001AA                     	ds	1
   321  0001AB                     recv_msg@data:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x9
   325  0001AB                     	ds	1
   326  0001AC                     send_msg@tlength:
   327                           	opt stack 0
   328                           
   329                           ; 2 bytes @ 0xA
   330  0001AC                     	ds	1
   331  0001AD                     recv_msg@slot:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0xB
   335  0001AD                     	ds	1
   336  0001AE                     send_msg@slot:
   337                           	opt stack 0
   338  0001AE                     recv_msg@tlength:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0xC
   342  0001AE                     	ds	1
   343  0001AF                     send_msg@qmsg:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0xD
   347  0001AF                     	ds	1
   348  0001B0                     recv_msg@qmsg:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0xE
   352  0001B0                     	ds	1
   353  0001B1                     ToMainLow_sendmsg@msgtype:
   354                           	opt stack 0
   355  0001B1                     FromMainLow_sendmsg@msgtype:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0xF
   359  0001B1                     	ds	1
   360  0001B2                     ToMainLow_sendmsg@data:
   361                           	opt stack 0
   362  0001B2                     ToMainLow_recvmsg@msgtype:
   363                           	opt stack 0
   364  0001B2                     ToMainHigh_recvmsg@msgtype:
   365                           	opt stack 0
   366  0001B2                     FromMainLow_sendmsg@data:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0x10
   370  0001B2                     	ds	2
   371  0001B4                     ToMainLow_recvmsg@data:
   372                           	opt stack 0
   373  0001B4                     ToMainHigh_recvmsg@data:
   374                           	opt stack 0
   375  0001B4                     sendUARTarr@data:
   376                           	opt stack 0
   377  0001B4                     uart_lthread@uptr:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x12
   381  0001B4                     	ds	2
   382  0001B6                     ToMainLow_recvmsg@maxlength:
   383                           	opt stack 0
   384  0001B6                     ToMainHigh_recvmsg@maxlength:
   385                           	opt stack 0
   386  0001B6                     sendUARTarr@retval:
   387                           	opt stack 0
   388  0001B6                     uart_lthread@msgtype:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x14
   392  0001B6                     	ds	1
   393  0001B7                     sendUARTarr@length:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x15
   397  0001B7                     	ds	1
   398  0001B8                     move@tptr:
   399                           	opt stack 0
   400  0001B8                     turn@tptr:
   401                           	opt stack 0
   402  0001B8                     stop@tptr:
   403                           	opt stack 0
   404  0001B8                     timer0_lthread@tptr:
   405                           	opt stack 0
   406  0001B8                     timer1_lthread@tptr:
   407                           	opt stack 0
   408  0001B8                     uart_lthread@length:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x16
   412  0001B8                     	ds	2
   413  0001BA                     ??_timer0_lthread:
   414  0001BA                     ??_timer1_lthread:
   415  0001BA                     move@test:
   416                           	opt stack 0
   417  0001BA                     turn@angle:
   418                           	opt stack 0
   419  0001BA                     stop@test:
   420                           	opt stack 0
   421  0001BA                     uart_lthread@msgbuffer:
   422                           	opt stack 0
   423                           
   424                           ; 2 bytes @ 0x18
   425  0001BA                     	ds	2
   426  0001BC                     uart_lthread@status:
   427                           	opt stack 0
   428  0001BC                     turn@test:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x1A
   432  0001BC                     	ds	1
   433  0001BD                     uart_lthread@index:
   434                           	opt stack 0
   435                           
   436                           ; 2 bytes @ 0x1B
   437  0001BD                     	ds	1
   438  0001BE                     timer0_lthread@temp:
   439                           	opt stack 0
   440  0001BE                     timer1_lthread@temp:
   441                           	opt stack 0
   442                           
   443                           ; 2 bytes @ 0x1C
   444  0001BE                     	ds	2
   445                           tblptru	equ	0xFF8
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           
   449                           	psect	cstackBANK0
   450  0000BC                     __pcstackBANK0:
   451                           	opt stack 0
   452  0000BC                     i2send_msg@tlength:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x0
   456  0000BC                     	ds	2
   457  0000BE                     i2send_msg@slot:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x2
   461  0000BE                     	ds	1
   462  0000BF                     i2send_msg@qmsg:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x3
   466  0000BF                     	ds	2
   467  0000C1                     ??_i2c_int_handler:
   468                           
   469                           ; 0 bytes @ 0x5
   470  0000C1                     	ds	1
   471  0000C2                     i2c_int_handler@error_buf:
   472                           	opt stack 0
   473                           
   474                           ; 3 bytes @ 0x6
   475  0000C2                     	ds	3
   476  0000C5                     i2c_int_handler@data_written:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x9
   480  0000C5                     	ds	1
   481  0000C6                     i2c_int_handler@overrun_error:
   482                           	opt stack 0
   483                           
   484                           ; 1 bytes @ 0xA
   485  0000C6                     	ds	1
   486  0000C7                     i2c_int_handler@i2c_data:
   487                           	opt stack 0
   488                           
   489                           ; 1 bytes @ 0xB
   490  0000C7                     	ds	1
   491  0000C8                     i2c_int_handler@msg_to_send:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0xC
   495  0000C8                     	ds	1
   496  0000C9                     i2c_int_handler@msg_ready:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0xD
   500  0000C9                     	ds	1
   501  0000CA                     i2c_int_handler@data_read:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0xE
   505  0000CA                     	ds	1
   506  0000CB                     ??_InterruptHandlerHigh:
   507                           
   508                           ; 0 bytes @ 0xF
   509  0000CB                     	ds	14
   510  0000D9                     ?_in_high_int:
   511                           	opt stack 0
   512  0000D9                     ?___lwmod:
   513                           	opt stack 0
   514  0000D9                     i2c_configure_slave@addr:
   515                           	opt stack 0
   516  0000D9                     OpenTimer0@config:
   517                           	opt stack 0
   518  0000D9                     OpenTimer1@config:
   519                           	opt stack 0
   520  0000D9                     Delay1KTCYx@unit:
   521                           	opt stack 0
   522  0000D9                     init_queue@qptr:
   523                           	opt stack 0
   524  0000D9                     check_msg@qptr:
   525                           	opt stack 0
   526  0000D9                     start_i2c_slave_reply@msg:
   527                           	opt stack 0
   528  0000D9                     init_i2c@ic:
   529                           	opt stack 0
   530  0000D9                     init_uart_recv@uc:
   531                           	opt stack 0
   532  0000D9                     init_timer0_lthread@tptr:
   533                           	opt stack 0
   534  0000D9                     init_timer1_lthread@tptr:
   535                           	opt stack 0
   536  0000D9                     init_uart_lthread@uptr:
   537                           	opt stack 0
   538  0000D9                     WriteTimer0@timer0:
   539                           	opt stack 0
   540  0000D9                     WriteTimer1@timer1:
   541                           	opt stack 0
   542  0000D9                     OpenUSART@spbrg:
   543                           	opt stack 0
   544  0000D9                     ___lwmod@dividend:
   545                           	opt stack 0
   546  0000D9                     memcpy@d1:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x1D
   550  0000D9                     	ds	2
   551  0000DB                     ??_OpenUSART:
   552  0000DB                     ??_start_i2c_slave_reply:
   553  0000DB                     ??_check_msg:
   554  0000DB                     ?_in_low_int:
   555                           	opt stack 0
   556  0000DB                     init_queue@i:
   557                           	opt stack 0
   558  0000DB                     WriteTimer0@timer:
   559                           	opt stack 0
   560  0000DB                     WriteTimer1@timer:
   561                           	opt stack 0
   562  0000DB                     ___lwmod@divisor:
   563                           	opt stack 0
   564  0000DB                     memcpy@s1:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x1F
   568  0000DB                     	ds	1
   569  0000DC                     
   570                           ; 0 bytes @ 0x20
   571  0000DC                     	ds	1
   572  0000DD                     ?_in_main:
   573                           	opt stack 0
   574  0000DD                     start_i2c_slave_reply@length:
   575                           	opt stack 0
   576  0000DD                     ___lwmod@counter:
   577                           	opt stack 0
   578  0000DD                     memcpy@n:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x21
   582  0000DD                     	ds	1
   583  0000DE                     OpenUSART@config:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x22
   587  0000DE                     	ds	1
   588  0000DF                     ??_send_msg:
   589  0000DF                     ??_recv_msg:
   590                           
   591                           ; 0 bytes @ 0x23
   592  0000DF                     	ds	1
   593  0000E0                     ToMainLow_sendmsg@length:
   594                           	opt stack 0
   595  0000E0                     FromMainLow_sendmsg@length:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x24
   599  0000E0                     	ds	1
   600  0000E1                     tblptru	equ	0xFF8
   601                           postinc0	equ	0xFEE
   602                           wreg	equ	0xFE8
   603                           
   604                           ; 0 bytes @ 0x25
   605                           
   606                           	psect	cstackCOMRAM
   607  000001                     __pcstackCOMRAM:
   608                           	opt stack 0
   609  000001                     ReadUSART@data:
   610                           	opt stack 0
   611  000001                     i1memcpy@d1:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x0
   615  000001                     	ds	2
   616  000003                     i1memcpy@s1:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x2
   620  000003                     	ds	2
   621  000005                     i1memcpy@n:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x4
   625  000005                     	ds	2
   626  000007                     i1memcpy@d:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x6
   630  000007                     	ds	2
   631  000009                     i1memcpy@s:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x8
   635  000009                     	ds	2
   636  00000B                     i1send_msg@qptr:
   637                           	opt stack 0
   638  00000B                     i1recv_msg@qptr:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0xA
   642  00000B                     	ds	2
   643  00000D                     i1send_msg@length:
   644                           	opt stack 0
   645  00000D                     i1recv_msg@maxlength:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0xC
   649  00000D                     	ds	1
   650  00000E                     i1send_msg@msgtype:
   651                           	opt stack 0
   652  00000E                     i1recv_msg@msgtype:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xD
   656  00000E                     	ds	1
   657  00000F                     i1send_msg@data:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0xE
   661  00000F                     	ds	1
   662  000010                     i1recv_msg@data:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0xF
   666  000010                     	ds	1
   667  000011                     ??i1_send_msg:
   668                           
   669                           ; 0 bytes @ 0x10
   670  000011                     	ds	1
   671  000012                     ??i1_recv_msg:
   672  000012                     i1send_msg@tlength:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x11
   676  000012                     	ds	2
   677  000014                     i1send_msg@slot:
   678                           	opt stack 0
   679  000014                     i1recv_msg@slot:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x13
   683  000014                     	ds	1
   684  000015                     i1send_msg@qmsg:
   685                           	opt stack 0
   686  000015                     i1recv_msg@tlength:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x14
   690  000015                     	ds	2
   691  000017                     i1ToMainLow_sendmsg@msgtype:
   692                           	opt stack 0
   693  000017                     i1recv_msg@qmsg:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x16
   697  000017                     	ds	1
   698  000018                     i1ToMainLow_sendmsg@data:
   699                           	opt stack 0
   700                           
   701                           ; 2 bytes @ 0x17
   702  000018                     	ds	1
   703  000019                     FromMainLow_recvmsg@msgtype:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x18
   707  000019                     	ds	1
   708  00001A                     i1ToMainLow_sendmsg@length:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x19
   712  00001A                     	ds	1
   713  00001B                     ??_uart_recv_int_handler:
   714  00001B                     FromMainLow_recvmsg@data:
   715                           	opt stack 0
   716                           
   717                           ; 2 bytes @ 0x1A
   718  00001B                     	ds	2
   719  00001D                     FromMainLow_recvmsg@maxlength:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x1C
   723  00001D                     	ds	1
   724  00001E                     uart_trans_int_handler@data:
   725                           	opt stack 0
   726                           
   727                           ; 2 bytes @ 0x1D
   728  00001E                     	ds	2
   729  000020                     uart_trans_int_handler@msgtype:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x1F
   733  000020                     	ds	1
   734  000021                     uart_trans_int_handler@curIndex:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x20
   738  000021                     	ds	1
   739  000022                     uart_trans_int_handler@length:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0x21
   743  000022                     	ds	1
   744  000023                     ??_InterruptHandlerLow:
   745                           
   746                           ; 0 bytes @ 0x22
   747  000023                     	ds	17
   748  000034                     ?i2_in_high_int:
   749                           	opt stack 0
   750  000034                     handle_start@data_read:
   751                           	opt stack 0
   752  000034                     i2check_msg@qptr:
   753                           	opt stack 0
   754  000034                     i2memcpy@d1:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x33
   758  000034                     	ds	2
   759  000036                     ??i2_check_msg:
   760  000036                     ?i2_in_low_int:
   761                           	opt stack 0
   762  000036                     i2memcpy@s1:
   763                           	opt stack 0
   764                           
   765                           ; 2 bytes @ 0x35
   766  000036                     	ds	2
   767  000038                     i2memcpy@n:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x37
   771  000038                     	ds	2
   772  00003A                     i2memcpy@d:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0x39
   776  00003A                     	ds	2
   777  00003C                     i2memcpy@s:
   778                           	opt stack 0
   779                           
   780                           ; 2 bytes @ 0x3B
   781  00003C                     	ds	2
   782  00003E                     i2send_msg@qptr:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x3D
   786  00003E                     	ds	2
   787  000040                     i2send_msg@length:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x3F
   791  000040                     	ds	1
   792  000041                     i2send_msg@msgtype:
   793                           	opt stack 0
   794                           
   795                           ; 1 bytes @ 0x40
   796  000041                     	ds	1
   797  000042                     i2send_msg@data:
   798                           	opt stack 0
   799                           
   800                           ; 2 bytes @ 0x41
   801  000042                     	ds	2
   802  000044                     ??i2_send_msg:
   803                           
   804                           ; 0 bytes @ 0x43
   805  000044                     	ds	1
   806  000045                     ToMainHigh_sendmsg@msgtype:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x44
   810  000045                     	ds	1
   811  000046                     ToMainHigh_sendmsg@data:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x45
   815  000046                     	ds	2
   816  000048                     ToMainHigh_sendmsg@length:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x47
   820  000048                     	ds	1
   821                           tblptru	equ	0xFF8
   822                           postinc0	equ	0xFEE
   823                           wreg	equ	0xFE8
   824                           
   825 ;;
   826 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   827 ;;
   828 ;; *************** function _main *****************
   829 ;; Defined at:
   830 ;;		line 28 in file "src/main.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  ic             28   51[BANK2 ] struct __i2c_comm
   835 ;;  msgbuffer      11    0[BANK2 ] unsigned char [11]
   836 ;;  t1thread_dat   11   31[BANK2 ] struct __timer1_thread_s
   837 ;;  uthread_data   10   14[BANK2 ] struct __uart_thread_str
   838 ;;  t0thread_dat    9   42[BANK2 ] struct __timer0_thread_s
   839 ;;  uc              5   24[BANK2 ] struct __uart_comm
   840 ;;  length          1   30[BANK2 ] char 
   841 ;;  msgtype         1   29[BANK2 ] unsigned char 
   842 ;;  last_reg_rec    1   13[BANK2 ] unsigned char 
   843 ;;  UARTConfig      1   12[BANK2 ] unsigned char 
   844 ;;  baud            1   11[BANK2 ] unsigned char 
   845 ;; Return value:  Size  Location     Type
   846 ;;		None               void
   847 ;; Registers used:
   848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0      79       0
   856 ;;      Temps:          0       0       0       0       0
   857 ;;      Totals:         0       0       0      79       0
   858 ;;Total ram usage:       79 bytes
   859 ;; Hardware stack levels required when called:   15
   860 ;; This function calls:
   861 ;;		_OpenTimer0
   862 ;;		_OpenTimer1
   863 ;;		_OpenUSART
   864 ;;		_ToMainHigh_recvmsg
   865 ;;		_ToMainLow_recvmsg
   866 ;;		_block_on_To_msgqueues
   867 ;;		_enable_interrupts
   868 ;;		_i2c_configure_slave
   869 ;;		_init_i2c
   870 ;;		_init_queues
   871 ;;		_init_timer0_lthread
   872 ;;		_init_timer1_lthread
   873 ;;		_init_uart_lthread
   874 ;;		_init_uart_recv
   875 ;;		_move
   876 ;;		_start_i2c_slave_reply
   877 ;;		_stop
   878 ;;		_timer0_lthread
   879 ;;		_timer1_lthread
   880 ;;		_turn
   881 ;;		_uart_lthread
   882 ;; This function is called by:
   883 ;;		Startup code after reset
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text0
   888  000634                     __ptext0:
   889                           	opt stack 0
   890  000634                     _main:
   891                           	opt stack 16
   892                           
   893                           ;main.c: 29: signed char length;
   894                           ;main.c: 30: unsigned char msgtype;
   895                           ;main.c: 31: unsigned char last_reg_recvd;
   896                           ;main.c: 32: unsigned char baud, UARTConfig;
   897                           ;main.c: 33: uart_comm uc;
   898                           ;main.c: 34: i2c_comm ic;
   899                           ;main.c: 35: unsigned char msgbuffer[10 + 1];
   900                           ;main.c: 36: uart_thread_struct uthread_data;
   901                           ;main.c: 37: timer1_thread_struct t1thread_data;
   902                           ;main.c: 38: timer0_thread_struct t0thread_data;
   903                           ;main.c: 41: PORTA = 0x0;
   904                           
   905                           ;incstack = 0
   906  000634  0E00               	movlw	0
   907  000636  6E80               	movwf	3968,c	;volatile
   908                           
   909                           ;main.c: 42: LATA = 0x0;
   910  000638  0E00               	movlw	0
   911  00063A  6E89               	movwf	3977,c	;volatile
   912                           
   913                           ;main.c: 43: ADCON1 = 0x0F;
   914  00063C  0E0F               	movlw	15
   915  00063E  6EC1               	movwf	4033,c	;volatile
   916                           
   917                           ;main.c: 44: CMCON = 0x07;
   918  000640  0E07               	movlw	7
   919  000642  6EB4               	movwf	4020,c	;volatile
   920                           
   921                           ;main.c: 45: TRISA = 0x00;
   922  000644  0E00               	movlw	0
   923  000646  6E92               	movwf	3986,c	;volatile
   924                           
   925                           ;main.c: 48: PORTB = 0x0;
   926  000648  0E00               	movlw	0
   927  00064A  6E81               	movwf	3969,c	;volatile
   928                           
   929                           ;main.c: 49: LATB = 0x0;
   930  00064C  0E00               	movlw	0
   931  00064E  6E8A               	movwf	3978,c	;volatile
   932                           
   933                           ;main.c: 50: TRISB = 0xFF;
   934  000650  6893               	setf	3987,c	;volatile
   935                           
   936                           ;main.c: 52: OSCCON = 0x82;
   937  000652  0E82               	movlw	130
   938  000654  6ED3               	movwf	4051,c	;volatile
   939                           
   940                           ;main.c: 53: OSCTUNEbits.PLLEN = 1;
   941  000656  8C9B               	bsf	3995,6,c	;volatile
   942                           
   943                           ;main.c: 56: init_uart_recv(&uc);
   944  000658  0102               	movlb	2	; () banked
   945  00065A  0E02               	movlw	high main@uc
   946  00065C  0100               	movlb	0	; () banked
   947  00065E  6FDA               	movwf	(init_uart_recv@uc+1)& (0+255),b
   948  000660  0102               	movlb	2	; () banked
   949  000662  0E18               	movlw	low main@uc
   950  000664  0100               	movlb	0	; () banked
   951  000666  6FD9               	movwf	init_uart_recv@uc& (0+255),b
   952  000668  ECFE  F00D         	call	_init_uart_recv	;wreg free
   953                           
   954                           ;main.c: 59: init_i2c(&ic);
   955  00066C  0102               	movlb	2	; () banked
   956  00066E  0E02               	movlw	high main@ic
   957  000670  0100               	movlb	0	; () banked
   958  000672  6FDA               	movwf	(init_i2c@ic+1)& (0+255),b
   959  000674  0102               	movlb	2	; () banked
   960  000676  0E33               	movlw	low main@ic
   961  000678  0100               	movlb	0	; () banked
   962  00067A  6FD9               	movwf	init_i2c@ic& (0+255),b
   963  00067C  EC86  F00A         	call	_init_i2c	;wreg free
   964                           
   965                           ;main.c: 62: init_timer1_lthread(&t1thread_data);
   966  000680  0102               	movlb	2	; () banked
   967  000682  0E02               	movlw	high main@t1thread_data
   968  000684  0100               	movlb	0	; () banked
   969  000686  6FDA               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
   970  000688  0102               	movlb	2	; () banked
   971  00068A  0E1F               	movlw	low main@t1thread_data
   972  00068C  0100               	movlb	0	; () banked
   973  00068E  6FD9               	movwf	init_timer1_lthread@tptr& (0+255),b
   974  000690  ECBD  F009         	call	_init_timer1_lthread	;wreg free
   975                           
   976                           ;main.c: 65: init_timer0_lthread(&t0thread_data);
   977  000694  0102               	movlb	2	; () banked
   978  000696  0E02               	movlw	high main@t0thread_data
   979  000698  0100               	movlb	0	; () banked
   980  00069A  6FDA               	movwf	(init_timer0_lthread@tptr+1)& (0+255),b
   981  00069C  0102               	movlb	2	; () banked
   982  00069E  0E2A               	movlw	low main@t0thread_data
   983  0006A0  0100               	movlb	0	; () banked
   984  0006A2  6FD9               	movwf	init_timer0_lthread@tptr& (0+255),b
   985  0006A4  EC01  F00A         	call	_init_timer0_lthread	;wreg free
   986                           
   987                           ;main.c: 68: init_uart_lthread(&uthread_data);
   988  0006A8  0102               	movlb	2	; () banked
   989  0006AA  0E02               	movlw	high main@uthread_data
   990  0006AC  0100               	movlb	0	; () banked
   991  0006AE  6FDA               	movwf	(init_uart_lthread@uptr+1)& (0+255),b
   992  0006B0  0102               	movlb	2	; () banked
   993  0006B2  0E0E               	movlw	low main@uthread_data
   994  0006B4  0100               	movlb	0	; () banked
   995  0006B6  6FD9               	movwf	init_uart_lthread@uptr& (0+255),b
   996  0006B8  EC4D  F00E         	call	_init_uart_lthread	;wreg free
   997                           
   998                           ;main.c: 71: init_queues();
   999  0006BC  EC75  F00B         	call	_init_queues	;wreg free
  1000                           
  1001                           ;main.c: 75: OpenTimer0(0b11111111 & 0b10111111 & 0b11111111 & 0b11101111 & 0b11111111);
  1002  0006C0  0EAF               	movlw	175
  1003  0006C2  ECA2  F00D         	call	_OpenTimer0
  1004                           
  1005                           ;main.c: 76: OpenTimer1(0b11111111 & 0b11001111 & 0b11111111 & 0b11111111 & 0b11110111);
  1006  0006C6  0EC7               	movlw	199
  1007  0006C8  EC06  F00D         	call	_OpenTimer1
  1008                           
  1009                           ;main.c: 77: T0CONbits.TMR0ON = 0;;
  1010  0006CC  9ED5               	bcf	4053,7,c	;volatile
  1011                           
  1012                           ;main.c: 78: T1CONbits.TMR1ON = 0;;
  1013  0006CE  90CD               	bcf	4045,0,c	;volatile
  1014                           
  1015                           ;main.c: 81: UARTConfig = 0b11111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11101111
      +                          ;
  1016  0006D0  0EEC               	movlw	236
  1017  0006D2  0102               	movlb	2	; () banked
  1018  0006D4  6F0C               	movwf	main@UARTConfig& (0+255),b
  1019                           
  1020                           ; BSR set to: 2
  1021                           ;main.c: 82: baud = 77;
  1022  0006D6  0E4D               	movlw	77
  1023  0006D8  0102               	movlb	2	; () banked
  1024  0006DA  6F0B               	movwf	main@baud& (0+255),b
  1025                           
  1026                           ; BSR set to: 2
  1027                           ;main.c: 83: OpenUSART(UARTConfig,baud);
  1028  0006DC  0102               	movlb	2	; () banked
  1029  0006DE  0100               	movlb	0	; () banked
  1030  0006E0  C20B  F0D9         	movff	main@baud,OpenUSART@spbrg
  1031  0006E4  0100               	movlb	0	; () banked
  1032  0006E6  6BDA               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  1033  0006E8  0102               	movlb	2	; () banked
  1034  0006EA  510C               	movf	main@UARTConfig& (0+255),w,b
  1035  0006EC  EC45  F00A         	call	_OpenUSART
  1036                           
  1037                           ;main.c: 88: IPR1bits.TMR1IP = 0;
  1038  0006F0  909F               	bcf	3999,0,c	;volatile
  1039                           
  1040                           ;main.c: 90: IPR1bits.RCIP = 0;
  1041  0006F2  9A9F               	bcf	3999,5,c	;volatile
  1042                           
  1043                           ;main.c: 92: IPR1bits.TXIP = 0;
  1044  0006F4  989F               	bcf	3999,4,c	;volatile
  1045                           
  1046                           ;main.c: 94: IPR1bits.SSPIP = 1;
  1047  0006F6  869F               	bsf	3999,3,c	;volatile
  1048                           
  1049                           ;main.c: 97: i2c_configure_slave(0x9A);
  1050  0006F8  0E9A               	movlw	154
  1051  0006FA  EC7B  F00D         	call	_i2c_configure_slave
  1052                           
  1053                           ;main.c: 100: PIE1bits.SSPIE = 1;
  1054  0006FE  869D               	bsf	3997,3,c	;volatile
  1055                           
  1056                           ;main.c: 104: enable_interrupts();
  1057  000700  EC46  F00E         	call	_enable_interrupts	;wreg free
  1058  000704                     l125:
  1059                           
  1060                           ;main.c: 113: block_on_To_msgqueues();
  1061  000704  EC1B  F00B         	call	_block_on_To_msgqueues	;wreg free
  1062                           
  1063                           ;main.c: 116: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1064  000708  0102               	movlb	2	; () banked
  1065  00070A  0E02               	movlw	high main@msgtype
  1066  00070C  0101               	movlb	1	; () banked
  1067  00070E  6FB3               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1068  000710  0102               	movlb	2	; () banked
  1069  000712  0E1D               	movlw	low main@msgtype
  1070  000714  0101               	movlb	1	; () banked
  1071  000716  6FB2               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1072  000718  0102               	movlb	2	; () banked
  1073  00071A  0E02               	movlw	high main@msgbuffer
  1074  00071C  0101               	movlb	1	; () banked
  1075  00071E  6FB5               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1076  000720  0102               	movlb	2	; () banked
  1077  000722  0E00               	movlw	low main@msgbuffer
  1078  000724  0101               	movlb	1	; () banked
  1079  000726  6FB4               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1080  000728  0E0A               	movlw	10
  1081  00072A  ECD2  F00C         	call	_ToMainHigh_recvmsg
  1082  00072E  0102               	movlb	2	; () banked
  1083  000730  6F1E               	movwf	main@length& (0+255),b
  1084                           
  1085                           ; BSR set to: 2
  1086                           ;main.c: 117: if (length < 0) {
  1087  000732  0102               	movlb	2	; () banked
  1088  000734  BF1E               	btfsc	main@length& (0+255),7,b
  1089  000736  D095               	goto	l3948
  1090  000738  D086               	goto	l3946
  1091  00073A                     l3918:
  1092                           
  1093                           ; BSR set to: 2
  1094                           ;main.c: 125: {
  1095                           ;main.c: 126: timer0_lthread(&t0thread_data);
  1096  00073A  0102               	movlb	2	; () banked
  1097  00073C  0E02               	movlw	high main@t0thread_data
  1098  00073E  0101               	movlb	1	; () banked
  1099  000740  6FB9               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1100  000742  0102               	movlb	2	; () banked
  1101  000744  0E2A               	movlw	low main@t0thread_data
  1102  000746  0101               	movlb	1	; () banked
  1103  000748  6FB8               	movwf	timer0_lthread@tptr& (0+255),b
  1104  00074A  EC86  F006         	call	_timer0_lthread	;wreg free
  1105                           
  1106                           ;main.c: 127: break;
  1107  00074E  D089               	goto	l3948
  1108  000750                     l132:
  1109                           
  1110                           ; BSR set to: 2
  1111                           ;main.c: 130: {
  1112                           ;main.c: 131: last_reg_recvd = msgbuffer[0];
  1113  000750  C200  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1114                           
  1115                           ;main.c: 132: switch(last_reg_recvd){
  1116  000754  D038               	goto	l3930
  1117  000756                     l3920:
  1118                           
  1119                           ; BSR set to: 2
  1120                           ;main.c: 134: {
  1121                           ;main.c: 135: move(&t1thread_data);
  1122  000756  0102               	movlb	2	; () banked
  1123  000758  0E02               	movlw	high main@t1thread_data
  1124  00075A  0101               	movlb	1	; () banked
  1125  00075C  6FB9               	movwf	(move@tptr+1)& (0+255),b
  1126  00075E  0102               	movlb	2	; () banked
  1127  000760  0E1F               	movlw	low main@t1thread_data
  1128  000762  0101               	movlb	1	; () banked
  1129  000764  6FB8               	movwf	move@tptr& (0+255),b
  1130  000766  ECF2  F00B         	call	_move	;wreg free
  1131                           
  1132                           ;main.c: 136: break;
  1133  00076A  D07B               	goto	l3948
  1134  00076C                     l3922:
  1135                           
  1136                           ;main.c: 139: {
  1137                           ;main.c: 140: turn(&t0thread_data, 270);
  1138  00076C  0102               	movlb	2	; () banked
  1139  00076E  0E02               	movlw	high main@t0thread_data
  1140  000770  0101               	movlb	1	; () banked
  1141  000772  6FB9               	movwf	(turn@tptr+1)& (0+255),b
  1142  000774  0102               	movlb	2	; () banked
  1143  000776  0E2A               	movlw	low main@t0thread_data
  1144  000778  0101               	movlb	1	; () banked
  1145  00077A  6FB8               	movwf	turn@tptr& (0+255),b
  1146  00077C  0E01               	movlw	1
  1147  00077E  0101               	movlb	1	; () banked
  1148  000780  6FBB               	movwf	(turn@angle+1)& (0+255),b
  1149  000782  0E0E               	movlw	14
  1150  000784  0101               	movlb	1	; () banked
  1151  000786  6FBA               	movwf	turn@angle& (0+255),b
  1152  000788  ECDD  F008         	call	_turn	;wreg free
  1153                           
  1154                           ;main.c: 141: break;
  1155  00078C  D06A               	goto	l3948
  1156  00078E                     l3924:
  1157                           
  1158                           ;main.c: 144: {
  1159                           ;main.c: 145: turn(&t0thread_data, 90);
  1160  00078E  0102               	movlb	2	; () banked
  1161  000790  0E02               	movlw	high main@t0thread_data
  1162  000792  0101               	movlb	1	; () banked
  1163  000794  6FB9               	movwf	(turn@tptr+1)& (0+255),b
  1164  000796  0102               	movlb	2	; () banked
  1165  000798  0E2A               	movlw	low main@t0thread_data
  1166  00079A  0101               	movlb	1	; () banked
  1167  00079C  6FB8               	movwf	turn@tptr& (0+255),b
  1168  00079E  0E00               	movlw	0
  1169  0007A0  0101               	movlb	1	; () banked
  1170  0007A2  6FBB               	movwf	(turn@angle+1)& (0+255),b
  1171  0007A4  0E5A               	movlw	90
  1172  0007A6  0101               	movlb	1	; () banked
  1173  0007A8  6FBA               	movwf	turn@angle& (0+255),b
  1174  0007AA  ECDD  F008         	call	_turn	;wreg free
  1175                           
  1176                           ;main.c: 146: break;
  1177  0007AE  D059               	goto	l3948
  1178  0007B0                     l3926:
  1179                           
  1180                           ;main.c: 149: {
  1181                           ;main.c: 150: stop(&t1thread_data);
  1182  0007B0  0102               	movlb	2	; () banked
  1183  0007B2  0E02               	movlw	high main@t1thread_data
  1184  0007B4  0101               	movlb	1	; () banked
  1185  0007B6  6FB9               	movwf	(stop@tptr+1)& (0+255),b
  1186  0007B8  0102               	movlb	2	; () banked
  1187  0007BA  0E1F               	movlw	low main@t1thread_data
  1188  0007BC  0101               	movlb	1	; () banked
  1189  0007BE  6FB8               	movwf	stop@tptr& (0+255),b
  1190  0007C0  EC17  F00C         	call	_stop	;wreg free
  1191                           
  1192                           ;main.c: 151: break;
  1193  0007C4  D04E               	goto	l3948
  1194  0007C6                     l3930:
  1195  0007C6  0102               	movlb	2	; () banked
  1196  0007C8  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1197                           
  1198                           ; Switch size 1, requested type "space"
  1199                           ; Number of cases is 4, Range of values is 1 to 4
  1200                           ; switch strategies available:
  1201                           ; Name         Instructions Cycles
  1202                           ; simple_byte           13     7 (average)
  1203                           ;	Chosen strategy is simple_byte
  1204  0007CA  0A01               	xorlw	1	; case 1
  1205  0007CC  B4D8               	btfsc	status,2,c
  1206  0007CE  D7C3               	goto	l3920
  1207  0007D0  0A03               	xorlw	3	; case 2
  1208  0007D2  B4D8               	btfsc	status,2,c
  1209  0007D4  D7CB               	goto	l3922
  1210  0007D6  0A01               	xorlw	1	; case 3
  1211  0007D8  B4D8               	btfsc	status,2,c
  1212  0007DA  D7D9               	goto	l3924
  1213  0007DC  0A07               	xorlw	7	; case 4
  1214  0007DE  B4D8               	btfsc	status,2,c
  1215  0007E0  D7E7               	goto	l3926
  1216  0007E2  D03F               	goto	l3948
  1217  0007E4                     l139:
  1218                           
  1219                           ; BSR set to: 2
  1220                           ;main.c: 157: {
  1221                           ;main.c: 160: last_reg_recvd = msgbuffer[0];
  1222  0007E4  C200  F20D         	movff	main@msgbuffer,main@last_reg_recvd
  1223                           
  1224                           ;main.c: 161: break;
  1225  0007E8  D03C               	goto	l3948
  1226  0007EA                     l3932:
  1227                           
  1228                           ; BSR set to: 2
  1229                           ;main.c: 174: {
  1230                           ;main.c: 175: length = 2;
  1231  0007EA  0E02               	movlw	2
  1232  0007EC  0102               	movlb	2	; () banked
  1233  0007EE  6F1E               	movwf	main@length& (0+255),b
  1234                           
  1235                           ;main.c: 176: msgbuffer[0] = 0x55;
  1236  0007F0  0E55               	movlw	85
  1237  0007F2  0102               	movlb	2	; () banked
  1238  0007F4  6F00               	movwf	main@msgbuffer& (0+255),b
  1239                           
  1240                           ;main.c: 177: msgbuffer[1] = 0xAA;
  1241  0007F6  0EAA               	movlw	170
  1242  0007F8  0102               	movlb	2	; () banked
  1243  0007FA  6F01               	movwf	(main@msgbuffer+1)& (0+255),b
  1244                           
  1245                           ;main.c: 178: break;
  1246  0007FC  D017               	goto	l3942
  1247  0007FE                     l3934:
  1248                           
  1249                           ; BSR set to: 2
  1250                           ;main.c: 181: {
  1251                           ;main.c: 182: length = 1;
  1252  0007FE  0E01               	movlw	1
  1253  000800  0102               	movlb	2	; () banked
  1254  000802  6F1E               	movwf	main@length& (0+255),b
  1255                           
  1256                           ;main.c: 183: msgbuffer[0] = 0x3A;
  1257  000804  0E3A               	movlw	58
  1258  000806  D004               	goto	L1
  1259  000808                     l3936:
  1260                           
  1261                           ; BSR set to: 2
  1262                           ;main.c: 187: {
  1263                           ;main.c: 188: length = 1;
  1264  000808  0E01               	movlw	1
  1265  00080A  0102               	movlb	2	; () banked
  1266  00080C  6F1E               	movwf	main@length& (0+255),b
  1267                           
  1268                           ;main.c: 189: msgbuffer[0] = 0xA3;
  1269  00080E  0EA3               	movlw	163
  1270  000810                     L1:
  1271  000810  0102               	movlb	2	; () banked
  1272  000812  6F00               	movwf	main@msgbuffer& (0+255),b
  1273                           
  1274                           ;main.c: 190: break;
  1275  000814  D00B               	goto	l3942
  1276  000816                     l3940:
  1277                           
  1278                           ; BSR set to: 2
  1279  000816  0102               	movlb	2	; () banked
  1280  000818  510D               	movf	main@last_reg_recvd& (0+255),w,b
  1281                           
  1282                           ; Switch size 1, requested type "space"
  1283                           ; Number of cases is 3, Range of values is 168 to 170
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte           10     6 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288  00081A  0AA8               	xorlw	168	; case 168
  1289  00081C  B4D8               	btfsc	status,2,c
  1290  00081E  D7EF               	goto	l3934
  1291  000820  0A01               	xorlw	1	; case 169
  1292  000822  B4D8               	btfsc	status,2,c
  1293  000824  D7F1               	goto	l3936
  1294  000826  0A03               	xorlw	3	; case 170
  1295  000828  B4D8               	btfsc	status,2,c
  1296  00082A  D7DF               	goto	l3932
  1297  00082C                     l3942:
  1298                           
  1299                           ; BSR set to: 2
  1300                           ;main.c: 193: start_i2c_slave_reply(length, msgbuffer);
  1301  00082C  0102               	movlb	2	; () banked
  1302  00082E  0E02               	movlw	high main@msgbuffer
  1303  000830  0100               	movlb	0	; () banked
  1304  000832  6FDA               	movwf	(start_i2c_slave_reply@msg+1)& (0+255),b
  1305  000834  0102               	movlb	2	; () banked
  1306  000836  0E00               	movlw	low main@msgbuffer
  1307  000838  0100               	movlb	0	; () banked
  1308  00083A  6FD9               	movwf	start_i2c_slave_reply@msg& (0+255),b
  1309  00083C  0102               	movlb	2	; () banked
  1310  00083E  511E               	movf	main@length& (0+255),w,b
  1311  000840  EC17  F005         	call	_start_i2c_slave_reply
  1312                           
  1313                           ;main.c: 194: break;
  1314  000844  D00E               	goto	l3948
  1315  000846                     l3946:
  1316  000846  0102               	movlb	2	; () banked
  1317  000848  511D               	movf	main@msgtype& (0+255),w,b
  1318                           
  1319                           ; Switch size 1, requested type "space"
  1320                           ; Number of cases is 4, Range of values is 10 to 42
  1321                           ; switch strategies available:
  1322                           ; Name         Instructions Cycles
  1323                           ; simple_byte           13     7 (average)
  1324                           ;	Chosen strategy is simple_byte
  1325  00084A  0A0A               	xorlw	10	; case 10
  1326  00084C  B4D8               	btfsc	status,2,c
  1327  00084E  D775               	goto	l3918
  1328  000850  0A22               	xorlw	34	; case 40
  1329  000852  B4D8               	btfsc	status,2,c
  1330  000854  D77D               	goto	l132
  1331  000856  0A01               	xorlw	1	; case 41
  1332  000858  B4D8               	btfsc	status,2,c
  1333  00085A  D7C4               	goto	l139
  1334  00085C  0A03               	xorlw	3	; case 42
  1335  00085E  B4D8               	btfsc	status,2,c
  1336  000860  D7DA               	goto	l3940
  1337  000862                     l3948:
  1338                           
  1339                           ;main.c: 202: }
  1340                           ;main.c: 205: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1341  000862  0102               	movlb	2	; () banked
  1342  000864  0E02               	movlw	high main@msgtype
  1343  000866  0101               	movlb	1	; () banked
  1344  000868  6FB3               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1345  00086A  0102               	movlb	2	; () banked
  1346  00086C  0E1D               	movlw	low main@msgtype
  1347  00086E  0101               	movlb	1	; () banked
  1348  000870  6FB2               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1349  000872  0102               	movlb	2	; () banked
  1350  000874  0E02               	movlw	high main@msgbuffer
  1351  000876  0101               	movlb	1	; () banked
  1352  000878  6FB5               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1353  00087A  0102               	movlb	2	; () banked
  1354  00087C  0E00               	movlw	low main@msgbuffer
  1355  00087E  0101               	movlb	1	; () banked
  1356  000880  6FB4               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1357  000882  0E0A               	movlw	10
  1358  000884  ECB7  F00C         	call	_ToMainLow_recvmsg
  1359  000888  0102               	movlb	2	; () banked
  1360  00088A  6F1E               	movwf	main@length& (0+255),b
  1361                           
  1362                           ; BSR set to: 2
  1363                           ;main.c: 206: if (length < 0) {
  1364  00088C  0102               	movlb	2	; () banked
  1365  00088E  BF1E               	btfsc	main@length& (0+255),7,b
  1366  000890  D739               	goto	l125
  1367  000892  D02D               	goto	l3960
  1368  000894                     l3954:
  1369                           
  1370                           ; BSR set to: 2
  1371                           ;main.c: 214: {
  1372                           ;main.c: 215: timer1_lthread(&t1thread_data);
  1373  000894  0102               	movlb	2	; () banked
  1374  000896  0E02               	movlw	high main@t1thread_data
  1375  000898  0101               	movlb	1	; () banked
  1376  00089A  6FB9               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1377  00089C  0102               	movlb	2	; () banked
  1378  00089E  0E1F               	movlw	low main@t1thread_data
  1379  0008A0  0101               	movlb	1	; () banked
  1380  0008A2  6FB8               	movwf	timer1_lthread@tptr& (0+255),b
  1381  0008A4  EC11  F006         	call	_timer1_lthread	;wreg free
  1382                           
  1383                           ;main.c: 216: break;
  1384  0008A8  D72D               	goto	l125
  1385  0008AA                     l3956:
  1386                           
  1387                           ;main.c: 219: case 31:
  1388                           ;main.c: 220: case 32:
  1389                           ;main.c: 221: {
  1390                           ;main.c: 222: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1391  0008AA  0102               	movlb	2	; () banked
  1392  0008AC  0E02               	movlw	high main@uthread_data
  1393  0008AE  0101               	movlb	1	; () banked
  1394  0008B0  6FB5               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1395  0008B2  0102               	movlb	2	; () banked
  1396  0008B4  0E0E               	movlw	low main@uthread_data
  1397  0008B6  0101               	movlb	1	; () banked
  1398  0008B8  6FB4               	movwf	uart_lthread@uptr& (0+255),b
  1399  0008BA  0102               	movlb	2	; () banked
  1400  0008BC  0101               	movlb	1	; () banked
  1401  0008BE  C21D  F1B6         	movff	main@msgtype,uart_lthread@msgtype
  1402  0008C2  0101               	movlb	1	; () banked
  1403  0008C4  6BB7               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1404  0008C6  0102               	movlb	2	; () banked
  1405  0008C8  511E               	movf	main@length& (0+255),w,b
  1406  0008CA  0101               	movlb	1	; () banked
  1407  0008CC  6FB8               	movwf	uart_lthread@length& (0+255),b
  1408  0008CE  0101               	movlb	1	; () banked
  1409  0008D0  6BB9               	clrf	(uart_lthread@length+1)& (0+255),b
  1410  0008D2  0101               	movlb	1	; () banked
  1411  0008D4  BFB8               	btfsc	uart_lthread@length& (0+255),7,b
  1412  0008D6  07B9               	decf	(uart_lthread@length+1)& (0+255),f,b
  1413  0008D8  0102               	movlb	2	; () banked
  1414  0008DA  0E02               	movlw	high main@msgbuffer
  1415  0008DC  0101               	movlb	1	; () banked
  1416  0008DE  6FBB               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1417  0008E0  0102               	movlb	2	; () banked
  1418  0008E2  0E00               	movlw	low main@msgbuffer
  1419  0008E4  0101               	movlb	1	; () banked
  1420  0008E6  6FBA               	movwf	uart_lthread@msgbuffer& (0+255),b
  1421  0008E8  EC2A  F008         	call	_uart_lthread	;wreg free
  1422                           
  1423                           ;main.c: 223: break;
  1424  0008EC  D70B               	goto	l125
  1425  0008EE                     l3960:
  1426  0008EE  0102               	movlb	2	; () banked
  1427  0008F0  511D               	movf	main@msgtype& (0+255),w,b
  1428                           
  1429                           ; Switch size 1, requested type "space"
  1430                           ; Number of cases is 4, Range of values is 11 to 32
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte           13     7 (average)
  1434                           ;	Chosen strategy is simple_byte
  1435  0008F2  0A0B               	xorlw	11	; case 11
  1436  0008F4  B4D8               	btfsc	status,2,c
  1437  0008F6  D7CE               	goto	l3954
  1438  0008F8  0A15               	xorlw	21	; case 30
  1439  0008FA  B4D8               	btfsc	status,2,c
  1440  0008FC  D7D6               	goto	l3956
  1441  0008FE  0A01               	xorlw	1	; case 31
  1442  000900  B4D8               	btfsc	status,2,c
  1443  000902  D7D3               	goto	l3956
  1444  000904  0A3F               	xorlw	63	; case 32
  1445  000906  B4D8               	btfsc	status,2,c
  1446  000908  D7D0               	goto	l3956
  1447  00090A  D6FC               	goto	l125
  1448  00090C                     __end_of_main:
  1449                           	opt stack 0
  1450                           tblptru	equ	0xFF8
  1451                           postinc0	equ	0xFEE
  1452                           wreg	equ	0xFE8
  1453                           status	equ	0xFD8
  1454                           
  1455 ;; *************** function _uart_lthread *****************
  1456 ;; Defined at:
  1457 ;;		line 12 in file "src/uart_thread.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  uptr            2   18[BANK1 ] PTR struct __uart_thread
  1460 ;;		 -> main@uthread_data(10), 
  1461 ;;  msgtype         2   20[BANK1 ] int 
  1462 ;;  length          2   22[BANK1 ] int 
  1463 ;;  msgbuffer       2   24[BANK1 ] PTR unsigned char 
  1464 ;;		 -> main@msgbuffer(11), 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  index           2   27[BANK1 ] int 
  1467 ;;  status          1   26[BANK1 ] char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  2   18[BANK1 ] int 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1477 ;;      Params:         0       0       8       0       0
  1478 ;;      Locals:         0       0       3       0       0
  1479 ;;      Temps:          0       0       0       0       0
  1480 ;;      Totals:         0       0      11       0       0
  1481 ;;Total ram usage:       11 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:   13
  1484 ;; This function calls:
  1485 ;;		_FromMainLow_sendmsg
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text1
  1492  001054                     __ptext1:
  1493                           	opt stack 0
  1494  001054                     _uart_lthread:
  1495                           	opt stack 17
  1496                           
  1497                           ;uart_thread.c: 13: if (msgtype == 30) {
  1498                           
  1499                           ; BSR set to: 2
  1500                           ;incstack = 0
  1501  001054  0101               	movlb	1	; () banked
  1502  001056  51B6               	movf	uart_lthread@msgtype& (0+255),w,b
  1503  001058  0A1E               	xorlw	30
  1504  00105A  11B7               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1505  00105C  B4D8               	btfsc	status,2,c
  1506  00105E  0012               	return	
  1507                           
  1508                           ; BSR set to: 1
  1509                           ;uart_thread.c: 16: else if(msgtype == 31){
  1510                           
  1511                           ; BSR set to: 1
  1512                           
  1513                           ; BSR set to: 1
  1514                           ;uart_thread.c: 15: }
  1515  001060  0101               	movlb	1	; () banked
  1516  001062  51B6               	movf	uart_lthread@msgtype& (0+255),w,b
  1517  001064  0A1F               	xorlw	31
  1518  001066  11B7               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1519  001068  A4D8               	btfss	status,2,c
  1520  00106A  D03F               	goto	l3830
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;uart_thread.c: 18: int index = 0;
  1524  00106C  0E00               	movlw	0
  1525  00106E  0101               	movlb	1	; () banked
  1526  001070  6FBE               	movwf	(uart_lthread@index+1)& (0+255),b
  1527  001072  0E00               	movlw	0
  1528  001074  0101               	movlb	1	; () banked
  1529  001076  6FBD               	movwf	uart_lthread@index& (0+255),b
  1530                           
  1531                           ;uart_thread.c: 19: for(index = 0; index < 10; index++) uptr->data[index] = msgbuffer[in
      +                          dex];
  1532  001078  0E00               	movlw	0
  1533  00107A  0101               	movlb	1	; () banked
  1534  00107C  6FBE               	movwf	(uart_lthread@index+1)& (0+255),b
  1535  00107E  0E00               	movlw	0
  1536  001080  0101               	movlb	1	; () banked
  1537  001082  6FBD               	movwf	uart_lthread@index& (0+255),b
  1538  001084                     
  1539                           ; BSR set to: 1
  1540  001084  0101               	movlb	1	; () banked
  1541  001086  51BE               	movf	(uart_lthread@index+1)& (0+255),w,b
  1542  001088  0A80               	xorlw	128
  1543  00108A  0F80               	addlw	-128
  1544  00108C  0E0A               	movlw	10
  1545  00108E  B4D8               	btfsc	status,2,c
  1546  001090  5DBD               	subwf	uart_lthread@index& (0+255),w,b
  1547  001092  B0D8               	btfsc	status,0,c
  1548  001094  D01A               	goto	l3826
  1549                           
  1550                           ; BSR set to: 1
  1551                           
  1552                           ; BSR set to: 1
  1553                           
  1554                           ; BSR set to: 1
  1555  001096  0101               	movlb	1	; () banked
  1556  001098  51BD               	movf	uart_lthread@index& (0+255),w,b
  1557  00109A  0101               	movlb	1	; () banked
  1558  00109C  25BA               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1559  00109E  6ED9               	movwf	fsr2l,c
  1560  0010A0  0101               	movlb	1	; () banked
  1561  0010A2  51BE               	movf	(uart_lthread@index+1)& (0+255),w,b
  1562  0010A4  0101               	movlb	1	; () banked
  1563  0010A6  21BB               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1564  0010A8  6EDA               	movwf	fsr2h,c
  1565  0010AA  0101               	movlb	1	; () banked
  1566  0010AC  51BD               	movf	uart_lthread@index& (0+255),w,b
  1567  0010AE  0101               	movlb	1	; () banked
  1568  0010B0  25B4               	addwf	uart_lthread@uptr& (0+255),w,b
  1569  0010B2  6EE1               	movwf	fsr1l,c
  1570  0010B4  0101               	movlb	1	; () banked
  1571  0010B6  51BE               	movf	(uart_lthread@index+1)& (0+255),w,b
  1572  0010B8  0101               	movlb	1	; () banked
  1573  0010BA  21B5               	addwfc	(uart_lthread@uptr+1)& (0+255),w,b
  1574  0010BC  6EE2               	movwf	fsr1h,c
  1575  0010BE  CFDF FFE7          	movff	indf2,indf1
  1576                           
  1577                           ; BSR set to: 1
  1578  0010C2  0101               	movlb	1	; () banked
  1579  0010C4  4BBD               	infsnz	uart_lthread@index& (0+255),f,b
  1580  0010C6  2BBE               	incf	(uart_lthread@index+1)& (0+255),f,b
  1581  0010C8  D7DD               	goto	L2
  1582  0010CA                     l3826:
  1583                           
  1584                           ; BSR set to: 1
  1585                           ;uart_thread.c: 22: signed char status = FromMainLow_sendmsg(length, msgtype, (void*)upt
      +                          r->data);
  1586  0010CA  C1B6  F1B1         	movff	uart_lthread@msgtype,FromMainLow_sendmsg@msgtype
  1587  0010CE  0101               	movlb	1	; () banked
  1588  0010D0  C1B5  F1B3         	movff	uart_lthread@uptr+1,FromMainLow_sendmsg@data+1
  1589  0010D4  0101               	movlb	1	; () banked
  1590  0010D6  C1B4  F1B2         	movff	uart_lthread@uptr,FromMainLow_sendmsg@data
  1591  0010DA  0101               	movlb	1	; () banked
  1592  0010DC  51B8               	movf	uart_lthread@length& (0+255),w,b
  1593  0010DE  EC1F  F00D         	call	_FromMainLow_sendmsg
  1594  0010E2  0101               	movlb	1	; () banked
  1595  0010E4  6FBC               	movwf	uart_lthread@status& (0+255),b
  1596                           
  1597                           ; BSR set to: 1
  1598                           ;uart_thread.c: 25: }
  1599                           ;uart_thread.c: 28: PIE1bits.TXIE = 1;
  1600                           
  1601                           ; BSR set to: 1
  1602  0010E6  889D               	bsf	3997,4,c	;volatile
  1603                           
  1604                           ;uart_thread.c: 29: }
  1605  0010E8  0012               	return	
  1606  0010EA                     l3830:
  1607                           
  1608                           ; BSR set to: 1
  1609                           ;uart_thread.c: 30: else if(msgtype == 32){
  1610  0010EA  0101               	movlb	1	; () banked
  1611  0010EC  51B6               	movf	uart_lthread@msgtype& (0+255),w,b
  1612  0010EE  0A20               	xorlw	32
  1613  0010F0  11B7               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1614  0010F2  A4D8               	btfss	status,2,c
  1615  0010F4  0012               	return	
  1616                           
  1617                           ; BSR set to: 1
  1618                           ;uart_thread.c: 34: msgbuffer[length] = '\0';
  1619  0010F6  0101               	movlb	1	; () banked
  1620  0010F8  51B8               	movf	uart_lthread@length& (0+255),w,b
  1621  0010FA  0101               	movlb	1	; () banked
  1622  0010FC  25BA               	addwf	uart_lthread@msgbuffer& (0+255),w,b
  1623  0010FE  6ED9               	movwf	fsr2l,c
  1624  001100  0101               	movlb	1	; () banked
  1625  001102  51B9               	movf	(uart_lthread@length+1)& (0+255),w,b
  1626  001104  0101               	movlb	1	; () banked
  1627  001106  21BB               	addwfc	(uart_lthread@msgbuffer+1)& (0+255),w,b
  1628  001108  6EDA               	movwf	fsr2h,c
  1629  00110A  0E00               	movlw	0
  1630  00110C  6EDF               	movwf	indf2,c
  1631  00110E  0012               	return	
  1632  001110                     __end_of_uart_lthread:
  1633                           	opt stack 0
  1634                           tblptru	equ	0xFF8
  1635                           postinc0	equ	0xFEE
  1636                           wreg	equ	0xFE8
  1637                           indf1	equ	0xFE7
  1638                           fsr1h	equ	0xFE2
  1639                           fsr1l	equ	0xFE1
  1640                           indf2	equ	0xFDF
  1641                           fsr2h	equ	0xFDA
  1642                           fsr2l	equ	0xFD9
  1643                           status	equ	0xFD8
  1644                           
  1645 ;; *************** function _FromMainLow_sendmsg *****************
  1646 ;; Defined at:
  1647 ;;		line 150 in file "src/messages.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  length          1    wreg     unsigned char 
  1650 ;;  msgtype         1   15[BANK1 ] unsigned char 
  1651 ;;  data            2   16[BANK1 ] PTR void 
  1652 ;;		 -> main@uthread_data(10), 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  length          1   36[BANK0 ] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      char 
  1657 ;; Registers used:
  1658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1664 ;;      Params:         0       0       3       0       0
  1665 ;;      Locals:         0       1       0       0       0
  1666 ;;      Temps:          0       0       0       0       0
  1667 ;;      Totals:         0       1       3       0       0
  1668 ;;Total ram usage:        4 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:   12
  1671 ;; This function calls:
  1672 ;;		_send_msg
  1673 ;; This function is called by:
  1674 ;;		_uart_lthread
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text2
  1679  001A3E                     __ptext2:
  1680                           	opt stack 0
  1681  001A3E                     _FromMainLow_sendmsg:
  1682                           	opt stack 17
  1683                           
  1684                           ; BSR set to: 1
  1685                           ;incstack = 0
  1686                           ;FromMainLow_sendmsg@length stored from wreg
  1687  001A3E  0100               	movlb	0	; () banked
  1688  001A40  6FE0               	movwf	FromMainLow_sendmsg@length& (0+255),b
  1689                           
  1690                           ; BSR set to: 0
  1691                           ;messages.c: 156: return (send_msg(&FromMainLow_MQ, length, msgtype, data));
  1692  001A42  0101               	movlb	1	; () banked
  1693  001A44  0E01               	movlw	high _FromMainLow_MQ
  1694  001A46  0101               	movlb	1	; () banked
  1695  001A48  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  1696  001A4A  0101               	movlb	1	; () banked
  1697  001A4C  0E36               	movlw	low _FromMainLow_MQ
  1698  001A4E  0101               	movlb	1	; () banked
  1699  001A50  6FA6               	movwf	send_msg@qptr& (0+255),b
  1700  001A52  C0E0  F1A8         	movff	FromMainLow_sendmsg@length,send_msg@length
  1701  001A56  C1B1  F1A9         	movff	FromMainLow_sendmsg@msgtype,send_msg@msgtype
  1702  001A5A  0101               	movlb	1	; () banked
  1703  001A5C  C1B3  F1AB         	movff	FromMainLow_sendmsg@data+1,send_msg@data+1
  1704  001A60  0101               	movlb	1	; () banked
  1705  001A62  C1B2  F1AA         	movff	FromMainLow_sendmsg@data,send_msg@data
  1706  001A66  EC99  F005         	call	_send_msg	;wreg free
  1707  001A6A  0012               	return	
  1708  001A6C                     __end_of_FromMainLow_sendmsg:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           indf1	equ	0xFE7
  1714                           fsr1h	equ	0xFE2
  1715                           fsr1l	equ	0xFE1
  1716                           indf2	equ	0xFDF
  1717                           fsr2h	equ	0xFDA
  1718                           fsr2l	equ	0xFD9
  1719                           status	equ	0xFD8
  1720                           
  1721 ;; *************** function _turn *****************
  1722 ;; Defined at:
  1723 ;;		line 26 in file "src/motors.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  tptr            2   22[BANK1 ] PTR struct __timer0_thre
  1726 ;;		 -> main@t0thread_data(9), 
  1727 ;;  angle           2   24[BANK1 ] int 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  test            2   26[BANK1 ] unsigned char [2]
  1730 ;; Return value:  Size  Location     Type
  1731 ;;		None               void
  1732 ;; Registers used:
  1733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1739 ;;      Params:         0       0       4       0       0
  1740 ;;      Locals:         0       0       2       0       0
  1741 ;;      Temps:          0       0       0       0       0
  1742 ;;      Totals:         0       0       6       0       0
  1743 ;;Total ram usage:        6 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:   14
  1746 ;; This function calls:
  1747 ;;		_WriteTimer0
  1748 ;;		_sendUARTarr
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text3
  1755  0011BA                     __ptext3:
  1756                           	opt stack 0
  1757  0011BA                     _turn:
  1758                           	opt stack 16
  1759                           
  1760                           ;motors.c: 27: tptr->curMove = angle;
  1761                           
  1762                           ;incstack = 0
  1763  0011BA  0101               	movlb	1	; () banked
  1764  0011BC  EE20 F006          	lfsr	2,6
  1765  0011C0  0101               	movlb	1	; () banked
  1766  0011C2  51B8               	movf	turn@tptr& (0+255),w,b
  1767  0011C4  26D9               	addwf	fsr2l,f,c
  1768  0011C6  0101               	movlb	1	; () banked
  1769  0011C8  51B9               	movf	(turn@tptr+1)& (0+255),w,b
  1770  0011CA  22DA               	addwfc	fsr2h,f,c
  1771  0011CC  0101               	movlb	1	; () banked
  1772  0011CE  C1BA  FFDE         	movff	turn@angle,postinc2
  1773  0011D2  0101               	movlb	1	; () banked
  1774  0011D4  C1BB  FFDD         	movff	turn@angle+1,postdec2
  1775                           
  1776                           ;motors.c: 28: tptr->distLim = true;
  1777  0011D8  0101               	movlb	1	; () banked
  1778  0011DA  EE20 F008          	lfsr	2,8
  1779  0011DE  0101               	movlb	1	; () banked
  1780  0011E0  51B8               	movf	turn@tptr& (0+255),w,b
  1781  0011E2  26D9               	addwf	fsr2l,f,c
  1782  0011E4  0101               	movlb	1	; () banked
  1783  0011E6  51B9               	movf	(turn@tptr+1)& (0+255),w,b
  1784  0011E8  22DA               	addwfc	fsr2h,f,c
  1785  0011EA  0E01               	movlw	1
  1786  0011EC  6EDF               	movwf	indf2,c
  1787                           
  1788                           ; BSR set to: 1
  1789                           ;motors.c: 29: T0CONbits.TMR0ON = 1;;
  1790  0011EE  8ED5               	bsf	4053,7,c	;volatile
  1791                           
  1792                           ;motors.c: 30: unsigned char test[2];
  1793                           ;motors.c: 31: test[0] = tptr->ctrl[0];
  1794  0011F0  0101               	movlb	1	; () banked
  1795  0011F2  EE20 F002          	lfsr	2,2
  1796  0011F6  0101               	movlb	1	; () banked
  1797  0011F8  51B8               	movf	turn@tptr& (0+255),w,b
  1798  0011FA  26D9               	addwf	fsr2l,f,c
  1799  0011FC  0101               	movlb	1	; () banked
  1800  0011FE  51B9               	movf	(turn@tptr+1)& (0+255),w,b
  1801  001200  22DA               	addwfc	fsr2h,f,c
  1802  001202  50DF               	movf	indf2,w,c
  1803  001204  0101               	movlb	1	; () banked
  1804  001206  6FBC               	movwf	turn@test& (0+255),b
  1805                           
  1806                           ;motors.c: 32: test[1] = tptr->ctrl[1];
  1807  001208  0101               	movlb	1	; () banked
  1808  00120A  EE20 F003          	lfsr	2,3
  1809  00120E  0101               	movlb	1	; () banked
  1810  001210  51B8               	movf	turn@tptr& (0+255),w,b
  1811  001212  26D9               	addwf	fsr2l,f,c
  1812  001214  0101               	movlb	1	; () banked
  1813  001216  51B9               	movf	(turn@tptr+1)& (0+255),w,b
  1814  001218  22DA               	addwfc	fsr2h,f,c
  1815  00121A  50DF               	movf	indf2,w,c
  1816  00121C  0101               	movlb	1	; () banked
  1817  00121E  6FBD               	movwf	(turn@test+1)& (0+255),b
  1818                           
  1819                           ; BSR set to: 1
  1820                           ;motors.c: 33: sendUARTarr(2,test);
  1821  001220  0101               	movlb	1	; () banked
  1822  001222  0E01               	movlw	high turn@test
  1823  001224  0101               	movlb	1	; () banked
  1824  001226  6FB5               	movwf	(sendUARTarr@data+1)& (0+255),b
  1825  001228  0101               	movlb	1	; () banked
  1826  00122A  0EBC               	movlw	low turn@test
  1827  00122C  0101               	movlb	1	; () banked
  1828  00122E  6FB4               	movwf	sendUARTarr@data& (0+255),b
  1829  001230  0E02               	movlw	2
  1830  001232  EC36  F00D         	call	_sendUARTarr
  1831                           
  1832                           ;motors.c: 34: WriteTimer0(tptr->cmDist);
  1833  001236  0101               	movlb	1	; () banked
  1834  001238  EE20 F004          	lfsr	2,4
  1835  00123C  0101               	movlb	1	; () banked
  1836  00123E  51B8               	movf	turn@tptr& (0+255),w,b
  1837  001240  26D9               	addwf	fsr2l,f,c
  1838  001242  0101               	movlb	1	; () banked
  1839  001244  51B9               	movf	(turn@tptr+1)& (0+255),w,b
  1840  001246  22DA               	addwfc	fsr2h,f,c
  1841  001248  0100               	movlb	0	; () banked
  1842  00124A  CFDE F0D9          	movff	postinc2,WriteTimer0@timer0
  1843  00124E  0100               	movlb	0	; () banked
  1844  001250  CFDD F0DA          	movff	postdec2,WriteTimer0@timer0+1
  1845  001254  EC26  F00E         	call	_WriteTimer0	;wreg free
  1846  001258  0012               	return	
  1847  00125A                     __end_of_turn:
  1848                           	opt stack 0
  1849                           tblptru	equ	0xFF8
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           indf1	equ	0xFE7
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           indf2	equ	0xFDF
  1856                           postinc2	equ	0xFDE
  1857                           postdec2	equ	0xFDD
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function _timer1_lthread *****************
  1863 ;; Defined at:
  1864 ;;		line 16 in file "src/timer1_thread.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  tptr            2   22[BANK1 ] PTR struct __timer1_thre
  1867 ;;		 -> main@t1thread_data(11), 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  temp            2   28[BANK1 ] unsigned char [2]
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2   22[BANK1 ] int 
  1872 ;; Registers used:
  1873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1879 ;;      Params:         0       0       2       0       0
  1880 ;;      Locals:         0       0       2       0       0
  1881 ;;      Temps:          0       0       4       0       0
  1882 ;;      Totals:         0       0       8       0       0
  1883 ;;Total ram usage:        8 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:   14
  1886 ;; This function calls:
  1887 ;;		_WriteTimer1
  1888 ;;		___lwmod
  1889 ;;		_sendUARTarr
  1890 ;; This function is called by:
  1891 ;;		_main
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           	psect	text4
  1896  000C22                     __ptext4:
  1897                           	opt stack 0
  1898  000C22                     _timer1_lthread:
  1899                           	opt stack 16
  1900                           
  1901                           ;timer1_thread.c: 17: tptr->cmCount++;
  1902                           
  1903                           ;incstack = 0
  1904  000C22  C1B8  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1905  000C26  C1B9  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1906  000C2A  2ADE               	incf	postinc2,f,c
  1907  000C2C  0E00               	movlw	0
  1908  000C2E  22DD               	addwfc	postdec2,f,c
  1909                           
  1910                           ;timer1_thread.c: 19: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  1911  000C30  0101               	movlb	1	; () banked
  1912  000C32  EE20 F00A          	lfsr	2,10
  1913  000C36  0101               	movlb	1	; () banked
  1914  000C38  51B8               	movf	timer1_lthread@tptr& (0+255),w,b
  1915  000C3A  26D9               	addwf	fsr2l,f,c
  1916  000C3C  0101               	movlb	1	; () banked
  1917  000C3E  51B9               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1918  000C40  22DA               	addwfc	fsr2h,f,c
  1919  000C42  50DF               	movf	indf2,w,c
  1920  000C44  B4D8               	btfsc	status,2,c
  1921  000C46  D050               	goto	l3806
  1922                           
  1923                           ; BSR set to: 1
  1924  000C48  C1B8  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1925  000C4C  C1B9  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1926  000C50  0100               	movlb	0	; () banked
  1927  000C52  CFDE F0D9          	movff	postinc2,___lwmod@dividend
  1928  000C56  0100               	movlb	0	; () banked
  1929  000C58  CFDD F0DA          	movff	postdec2,___lwmod@dividend+1
  1930  000C5C  0101               	movlb	1	; () banked
  1931  000C5E  EE20 F006          	lfsr	2,6
  1932  000C62  0101               	movlb	1	; () banked
  1933  000C64  51B8               	movf	timer1_lthread@tptr& (0+255),w,b
  1934  000C66  26D9               	addwf	fsr2l,f,c
  1935  000C68  0101               	movlb	1	; () banked
  1936  000C6A  51B9               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1937  000C6C  22DA               	addwfc	fsr2h,f,c
  1938  000C6E  0100               	movlb	0	; () banked
  1939  000C70  CFDE F0DB          	movff	postinc2,___lwmod@divisor
  1940  000C74  0100               	movlb	0	; () banked
  1941  000C76  CFDD F0DC          	movff	postdec2,___lwmod@divisor+1
  1942  000C7A  ECEB  F00A         	call	___lwmod	;wreg free
  1943  000C7E  0EFF               	movlw	255
  1944  000C80  0101               	movlb	1	; () banked
  1945  000C82  6FBA               	movwf	??_timer1_lthread& (0+255),b
  1946  000C84  0EFF               	movlw	255
  1947  000C86  6FBB               	movwf	(??_timer1_lthread+1)& (0+255),b
  1948  000C88  0101               	movlb	1	; () banked
  1949  000C8A  EE20 F006          	lfsr	2,6
  1950  000C8E  0101               	movlb	1	; () banked
  1951  000C90  51B8               	movf	timer1_lthread@tptr& (0+255),w,b
  1952  000C92  26D9               	addwf	fsr2l,f,c
  1953  000C94  0101               	movlb	1	; () banked
  1954  000C96  51B9               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  1955  000C98  22DA               	addwfc	fsr2h,f,c
  1956  000C9A  CFDE F1BC          	movff	postinc2,??_timer1_lthread+2
  1957  000C9E  CFDD F1BD          	movff	postdec2,??_timer1_lthread+3
  1958  000CA2  0101               	movlb	1	; () banked
  1959  000CA4  51BA               	movf	??_timer1_lthread& (0+255),w,b
  1960  000CA6  0101               	movlb	1	; () banked
  1961  000CA8  27BC               	addwf	(??_timer1_lthread+2)& (0+255),f,b
  1962  000CAA  0101               	movlb	1	; () banked
  1963  000CAC  51BB               	movf	(??_timer1_lthread+1)& (0+255),w,b
  1964  000CAE  0101               	movlb	1	; () banked
  1965  000CB0  23BD               	addwfc	(??_timer1_lthread+3)& (0+255),f,b
  1966  000CB2  0100               	movlb	0	; () banked
  1967  000CB4  51DA               	movf	(?___lwmod+1)& (0+255),w,b
  1968  000CB6  0101               	movlb	1	; () banked
  1969  000CB8  19BD               	xorwf	(??_timer1_lthread+3)& (0+255),w,b
  1970  000CBA  E104               	bnz	u2815
  1971  000CBC  0100               	movlb	0	; () banked
  1972  000CBE  51D9               	movf	?___lwmod& (0+255),w,b
  1973  000CC0  0101               	movlb	1	; () banked
  1974  000CC2  19BC               	xorwf	(??_timer1_lthread+2)& (0+255),w,b
  1975  000CC4                     u2815:
  1976  000CC4  A4D8               	btfss	status,2,c
  1977  000CC6  D010               	goto	l3806
  1978                           
  1979                           ; BSR set to: 1
  1980                           ;timer1_thread.c: 20: unsigned char temp[2] = {0,0};
  1981  000CC8  C084  F1BE         	movff	timer1_lthread@F5146,timer1_lthread@temp
  1982  000CCC  C085  F1BF         	movff	timer1_lthread@F5146+1,timer1_lthread@temp+1
  1983                           
  1984                           ; BSR set to: 1
  1985                           ;timer1_thread.c: 21: sendUARTarr(2,temp);
  1986  000CD0  0101               	movlb	1	; () banked
  1987  000CD2  0E01               	movlw	high timer1_lthread@temp
  1988  000CD4  0101               	movlb	1	; () banked
  1989  000CD6  6FB5               	movwf	(sendUARTarr@data+1)& (0+255),b
  1990  000CD8  0101               	movlb	1	; () banked
  1991  000CDA  0EBE               	movlw	low timer1_lthread@temp
  1992  000CDC  0101               	movlb	1	; () banked
  1993  000CDE  6FB4               	movwf	sendUARTarr@data& (0+255),b
  1994  000CE0  0E02               	movlw	2
  1995  000CE2  EC36  F00D         	call	_sendUARTarr
  1996                           
  1997                           ;timer1_thread.c: 22: T1CONbits.TMR1ON = 0;;
  1998  000CE6  90CD               	bcf	4045,0,c	;volatile
  1999  000CE8                     l3806:
  2000                           
  2001                           ;timer1_thread.c: 23: }
  2002                           ;timer1_thread.c: 25: WriteTimer1(tptr->cmDist);
  2003  000CE8  0101               	movlb	1	; () banked
  2004  000CEA  EE20 F004          	lfsr	2,4
  2005  000CEE  0101               	movlb	1	; () banked
  2006  000CF0  51B8               	movf	timer1_lthread@tptr& (0+255),w,b
  2007  000CF2  26D9               	addwf	fsr2l,f,c
  2008  000CF4  0101               	movlb	1	; () banked
  2009  000CF6  51B9               	movf	(timer1_lthread@tptr+1)& (0+255),w,b
  2010  000CF8  22DA               	addwfc	fsr2h,f,c
  2011  000CFA  0100               	movlb	0	; () banked
  2012  000CFC  CFDE F0D9          	movff	postinc2,WriteTimer1@timer1
  2013  000D00  0100               	movlb	0	; () banked
  2014  000D02  CFDD F0DA          	movff	postdec2,WriteTimer1@timer1+1
  2015  000D06  EC2F  F00E         	call	_WriteTimer1	;wreg free
  2016  000D0A  0012               	return	
  2017  000D0C                     __end_of_timer1_lthread:
  2018                           	opt stack 0
  2019                           tblptru	equ	0xFF8
  2020                           postinc0	equ	0xFEE
  2021                           wreg	equ	0xFE8
  2022                           indf1	equ	0xFE7
  2023                           fsr1h	equ	0xFE2
  2024                           fsr1l	equ	0xFE1
  2025                           indf2	equ	0xFDF
  2026                           postinc2	equ	0xFDE
  2027                           postdec2	equ	0xFDD
  2028                           fsr2h	equ	0xFDA
  2029                           fsr2l	equ	0xFD9
  2030                           status	equ	0xFD8
  2031                           
  2032 ;; *************** function _timer0_lthread *****************
  2033 ;; Defined at:
  2034 ;;		line 16 in file "src/timer0_thread.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  tptr            2   22[BANK1 ] PTR struct __timer0_thre
  2037 ;;		 -> main@t0thread_data(9), 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  temp            2   28[BANK1 ] unsigned char [2]
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2   22[BANK1 ] int 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2049 ;;      Params:         0       0       2       0       0
  2050 ;;      Locals:         0       0       2       0       0
  2051 ;;      Temps:          0       0       4       0       0
  2052 ;;      Totals:         0       0       8       0       0
  2053 ;;Total ram usage:        8 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:   14
  2056 ;; This function calls:
  2057 ;;		_WriteTimer0
  2058 ;;		___lwmod
  2059 ;;		_sendUARTarr
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text5
  2066  000D0C                     __ptext5:
  2067                           	opt stack 0
  2068  000D0C                     _timer0_lthread:
  2069                           	opt stack 16
  2070                           
  2071                           ;timer0_thread.c: 17: tptr->cmCount++;
  2072                           
  2073                           ;incstack = 0
  2074  000D0C  C1B8  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2075  000D10  C1B9  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2076  000D14  2ADE               	incf	postinc2,f,c
  2077  000D16  0E00               	movlw	0
  2078  000D18  22DD               	addwfc	postdec2,f,c
  2079                           
  2080                           ;timer0_thread.c: 19: if (tptr->distLim && ((tptr->cmCount % tptr->curMove) == (tptr->cu
      +                          rMove-1))){
  2081  000D1A  0101               	movlb	1	; () banked
  2082  000D1C  EE20 F008          	lfsr	2,8
  2083  000D20  0101               	movlb	1	; () banked
  2084  000D22  51B8               	movf	timer0_lthread@tptr& (0+255),w,b
  2085  000D24  26D9               	addwf	fsr2l,f,c
  2086  000D26  0101               	movlb	1	; () banked
  2087  000D28  51B9               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2088  000D2A  22DA               	addwfc	fsr2h,f,c
  2089  000D2C  50DF               	movf	indf2,w,c
  2090  000D2E  B4D8               	btfsc	status,2,c
  2091  000D30  D050               	goto	l3754
  2092                           
  2093                           ; BSR set to: 1
  2094  000D32  C1B8  FFD9         	movff	timer0_lthread@tptr,fsr2l
  2095  000D36  C1B9  FFDA         	movff	timer0_lthread@tptr+1,fsr2h
  2096  000D3A  0100               	movlb	0	; () banked
  2097  000D3C  CFDE F0D9          	movff	postinc2,___lwmod@dividend
  2098  000D40  0100               	movlb	0	; () banked
  2099  000D42  CFDD F0DA          	movff	postdec2,___lwmod@dividend+1
  2100  000D46  0101               	movlb	1	; () banked
  2101  000D48  EE20 F006          	lfsr	2,6
  2102  000D4C  0101               	movlb	1	; () banked
  2103  000D4E  51B8               	movf	timer0_lthread@tptr& (0+255),w,b
  2104  000D50  26D9               	addwf	fsr2l,f,c
  2105  000D52  0101               	movlb	1	; () banked
  2106  000D54  51B9               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2107  000D56  22DA               	addwfc	fsr2h,f,c
  2108  000D58  0100               	movlb	0	; () banked
  2109  000D5A  CFDE F0DB          	movff	postinc2,___lwmod@divisor
  2110  000D5E  0100               	movlb	0	; () banked
  2111  000D60  CFDD F0DC          	movff	postdec2,___lwmod@divisor+1
  2112  000D64  ECEB  F00A         	call	___lwmod	;wreg free
  2113  000D68  0EFF               	movlw	255
  2114  000D6A  0101               	movlb	1	; () banked
  2115  000D6C  6FBA               	movwf	??_timer0_lthread& (0+255),b
  2116  000D6E  0EFF               	movlw	255
  2117  000D70  6FBB               	movwf	(??_timer0_lthread+1)& (0+255),b
  2118  000D72  0101               	movlb	1	; () banked
  2119  000D74  EE20 F006          	lfsr	2,6
  2120  000D78  0101               	movlb	1	; () banked
  2121  000D7A  51B8               	movf	timer0_lthread@tptr& (0+255),w,b
  2122  000D7C  26D9               	addwf	fsr2l,f,c
  2123  000D7E  0101               	movlb	1	; () banked
  2124  000D80  51B9               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2125  000D82  22DA               	addwfc	fsr2h,f,c
  2126  000D84  CFDE F1BC          	movff	postinc2,??_timer0_lthread+2
  2127  000D88  CFDD F1BD          	movff	postdec2,??_timer0_lthread+3
  2128  000D8C  0101               	movlb	1	; () banked
  2129  000D8E  51BA               	movf	??_timer0_lthread& (0+255),w,b
  2130  000D90  0101               	movlb	1	; () banked
  2131  000D92  27BC               	addwf	(??_timer0_lthread+2)& (0+255),f,b
  2132  000D94  0101               	movlb	1	; () banked
  2133  000D96  51BB               	movf	(??_timer0_lthread+1)& (0+255),w,b
  2134  000D98  0101               	movlb	1	; () banked
  2135  000D9A  23BD               	addwfc	(??_timer0_lthread+3)& (0+255),f,b
  2136  000D9C  0100               	movlb	0	; () banked
  2137  000D9E  51DA               	movf	(?___lwmod+1)& (0+255),w,b
  2138  000DA0  0101               	movlb	1	; () banked
  2139  000DA2  19BD               	xorwf	(??_timer0_lthread+3)& (0+255),w,b
  2140  000DA4  E104               	bnz	u2785
  2141  000DA6  0100               	movlb	0	; () banked
  2142  000DA8  51D9               	movf	?___lwmod& (0+255),w,b
  2143  000DAA  0101               	movlb	1	; () banked
  2144  000DAC  19BC               	xorwf	(??_timer0_lthread+2)& (0+255),w,b
  2145  000DAE                     u2785:
  2146  000DAE  A4D8               	btfss	status,2,c
  2147  000DB0  D010               	goto	l3754
  2148                           
  2149                           ; BSR set to: 1
  2150                           ;timer0_thread.c: 20: unsigned char temp[2] = {0,0};
  2151  000DB2  C082  F1BE         	movff	timer0_lthread@F5145,timer0_lthread@temp
  2152  000DB6  C083  F1BF         	movff	timer0_lthread@F5145+1,timer0_lthread@temp+1
  2153                           
  2154                           ; BSR set to: 1
  2155                           ;timer0_thread.c: 21: sendUARTarr(2,temp);
  2156  000DBA  0101               	movlb	1	; () banked
  2157  000DBC  0E01               	movlw	high timer0_lthread@temp
  2158  000DBE  0101               	movlb	1	; () banked
  2159  000DC0  6FB5               	movwf	(sendUARTarr@data+1)& (0+255),b
  2160  000DC2  0101               	movlb	1	; () banked
  2161  000DC4  0EBE               	movlw	low timer0_lthread@temp
  2162  000DC6  0101               	movlb	1	; () banked
  2163  000DC8  6FB4               	movwf	sendUARTarr@data& (0+255),b
  2164  000DCA  0E02               	movlw	2
  2165  000DCC  EC36  F00D         	call	_sendUARTarr
  2166                           
  2167                           ;timer0_thread.c: 22: T0CONbits.TMR0ON = 0;;
  2168  000DD0  9ED5               	bcf	4053,7,c	;volatile
  2169  000DD2                     l3754:
  2170                           
  2171                           ;timer0_thread.c: 23: }
  2172                           ;timer0_thread.c: 25: WriteTimer0(tptr->cmDist);
  2173  000DD2  0101               	movlb	1	; () banked
  2174  000DD4  EE20 F004          	lfsr	2,4
  2175  000DD8  0101               	movlb	1	; () banked
  2176  000DDA  51B8               	movf	timer0_lthread@tptr& (0+255),w,b
  2177  000DDC  26D9               	addwf	fsr2l,f,c
  2178  000DDE  0101               	movlb	1	; () banked
  2179  000DE0  51B9               	movf	(timer0_lthread@tptr+1)& (0+255),w,b
  2180  000DE2  22DA               	addwfc	fsr2h,f,c
  2181  000DE4  0100               	movlb	0	; () banked
  2182  000DE6  CFDE F0D9          	movff	postinc2,WriteTimer0@timer0
  2183  000DEA  0100               	movlb	0	; () banked
  2184  000DEC  CFDD F0DA          	movff	postdec2,WriteTimer0@timer0+1
  2185  000DF0  EC26  F00E         	call	_WriteTimer0	;wreg free
  2186  000DF4  0012               	return	
  2187  000DF6                     __end_of_timer0_lthread:
  2188                           	opt stack 0
  2189                           tblptru	equ	0xFF8
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           indf1	equ	0xFE7
  2193                           fsr1h	equ	0xFE2
  2194                           fsr1l	equ	0xFE1
  2195                           indf2	equ	0xFDF
  2196                           postinc2	equ	0xFDE
  2197                           postdec2	equ	0xFDD
  2198                           fsr2h	equ	0xFDA
  2199                           fsr2l	equ	0xFD9
  2200                           status	equ	0xFD8
  2201                           
  2202 ;; *************** function ___lwmod *****************
  2203 ;; Defined at:
  2204 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  dividend        2   29[BANK0 ] unsigned int 
  2207 ;;  divisor         2   31[BANK0 ] unsigned int 
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  counter         1   33[BANK0 ] unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  2   29[BANK0 ] unsigned int 
  2212 ;; Registers used:
  2213 ;;		wreg, status,2, status,0
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2219 ;;      Params:         0       4       0       0       0
  2220 ;;      Locals:         0       1       0       0       0
  2221 ;;      Temps:          0       0       0       0       0
  2222 ;;      Totals:         0       5       0       0       0
  2223 ;;Total ram usage:        5 bytes
  2224 ;; Hardware stack levels used:    1
  2225 ;; Hardware stack levels required when called:   10
  2226 ;; This function calls:
  2227 ;;		Nothing
  2228 ;; This function is called by:
  2229 ;;		_timer0_lthread
  2230 ;;		_timer1_lthread
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text6
  2235  0015D6                     __ptext6:
  2236                           	opt stack 0
  2237  0015D6                     ___lwmod:
  2238                           	opt stack 19
  2239                           
  2240                           ;incstack = 0
  2241  0015D6  0100               	movlb	0	; () banked
  2242  0015D8  51DC               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2243  0015DA  11DB               	iorwf	___lwmod@divisor& (0+255),w,b
  2244  0015DC  B4D8               	btfsc	status,2,c
  2245  0015DE  D026               	goto	l1105
  2246                           
  2247                           ; BSR set to: 0
  2248  0015E0  0E01               	movlw	1
  2249  0015E2  0100               	movlb	0	; () banked
  2250  0015E4  6FDD               	movwf	___lwmod@counter& (0+255),b
  2251  0015E6  D006               	goto	l3380
  2252  0015E8                     l3378:
  2253                           
  2254                           ; BSR set to: 0
  2255  0015E8  0100               	movlb	0	; () banked
  2256  0015EA  90D8               	bcf	status,0,c
  2257  0015EC  37DB               	rlcf	___lwmod@divisor& (0+255),f,b
  2258  0015EE  37DC               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2259  0015F0  0100               	movlb	0	; () banked
  2260  0015F2  2BDD               	incf	___lwmod@counter& (0+255),f,b
  2261  0015F4                     l3380:
  2262                           
  2263                           ; BSR set to: 0
  2264  0015F4  0100               	movlb	0	; () banked
  2265  0015F6  AFDC               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2266  0015F8  D7F7               	goto	l3378
  2267  0015FA                     l3382:
  2268                           
  2269                           ; BSR set to: 0
  2270  0015FA  0100               	movlb	0	; () banked
  2271  0015FC  51DB               	movf	___lwmod@divisor& (0+255),w,b
  2272  0015FE  0100               	movlb	0	; () banked
  2273  001600  5DD9               	subwf	___lwmod@dividend& (0+255),w,b
  2274  001602  0100               	movlb	0	; () banked
  2275  001604  51DC               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2276  001606  0100               	movlb	0	; () banked
  2277  001608  59DA               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2278  00160A  A0D8               	btfss	status,0,c
  2279  00160C  D008               	goto	l3386
  2280                           
  2281                           ; BSR set to: 0
  2282  00160E  0100               	movlb	0	; () banked
  2283  001610  51DB               	movf	___lwmod@divisor& (0+255),w,b
  2284  001612  0100               	movlb	0	; () banked
  2285  001614  5FD9               	subwf	___lwmod@dividend& (0+255),f,b
  2286  001616  0100               	movlb	0	; () banked
  2287  001618  51DC               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2288  00161A  0100               	movlb	0	; () banked
  2289  00161C  5BDA               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2290  00161E                     l3386:
  2291                           
  2292                           ; BSR set to: 0
  2293  00161E  0100               	movlb	0	; () banked
  2294  001620  90D8               	bcf	status,0,c
  2295  001622  33DC               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2296  001624  33DB               	rrcf	___lwmod@divisor& (0+255),f,b
  2297                           
  2298                           ; BSR set to: 0
  2299  001626  0100               	movlb	0	; () banked
  2300  001628  2FDD               	decfsz	___lwmod@counter& (0+255),f,b
  2301  00162A  D7E7               	goto	l3382
  2302  00162C                     l1105:
  2303                           
  2304                           ; BSR set to: 0
  2305  00162C  C0D9  F0D9         	movff	___lwmod@dividend,?___lwmod
  2306  001630  C0DA  F0DA         	movff	___lwmod@dividend+1,?___lwmod+1
  2307                           
  2308                           ; BSR set to: 0
  2309  001634  0012               	return	
  2310  001636                     __end_of___lwmod:
  2311                           	opt stack 0
  2312                           tblptru	equ	0xFF8
  2313                           postinc0	equ	0xFEE
  2314                           wreg	equ	0xFE8
  2315                           indf1	equ	0xFE7
  2316                           fsr1h	equ	0xFE2
  2317                           fsr1l	equ	0xFE1
  2318                           indf2	equ	0xFDF
  2319                           postinc2	equ	0xFDE
  2320                           postdec2	equ	0xFDD
  2321                           fsr2h	equ	0xFDA
  2322                           fsr2l	equ	0xFD9
  2323                           status	equ	0xFD8
  2324                           
  2325 ;; *************** function _WriteTimer0 *****************
  2326 ;; Defined at:
  2327 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0write.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  timer0          2   29[BANK0 ] unsigned int 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  timer           2   31[BANK0 ] struct Timers
  2332 ;; Return value:  Size  Location     Type
  2333 ;;		None               void
  2334 ;; Registers used:
  2335 ;;		None
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2341 ;;      Params:         0       2       0       0       0
  2342 ;;      Locals:         0       2       0       0       0
  2343 ;;      Temps:          0       0       0       0       0
  2344 ;;      Totals:         0       4       0       0       0
  2345 ;;Total ram usage:        4 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; Hardware stack levels required when called:   10
  2348 ;; This function calls:
  2349 ;;		Nothing
  2350 ;; This function is called by:
  2351 ;;		_turn
  2352 ;;		_timer0_lthread
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           	psect	text7
  2357  001C4C                     __ptext7:
  2358                           	opt stack 0
  2359  001C4C                     _WriteTimer0:
  2360                           	opt stack 19
  2361                           
  2362                           ; BSR set to: 0
  2363                           ;incstack = 0
  2364  001C4C  C0D9  F0DB         	movff	WriteTimer0@timer0,WriteTimer0@timer
  2365  001C50  C0DA  F0DC         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  2366  001C54  C0DC  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  2367  001C58  C0DB  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  2368  001C5C  0012               	return	
  2369  001C5E                     __end_of_WriteTimer0:
  2370                           	opt stack 0
  2371                           tblptru	equ	0xFF8
  2372                           postinc0	equ	0xFEE
  2373                           wreg	equ	0xFE8
  2374                           indf1	equ	0xFE7
  2375                           fsr1h	equ	0xFE2
  2376                           fsr1l	equ	0xFE1
  2377                           indf2	equ	0xFDF
  2378                           postinc2	equ	0xFDE
  2379                           postdec2	equ	0xFDD
  2380                           fsr2h	equ	0xFDA
  2381                           fsr2l	equ	0xFD9
  2382                           status	equ	0xFD8
  2383                           
  2384 ;; *************** function _stop *****************
  2385 ;; Defined at:
  2386 ;;		line 40 in file "src/motors.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  tptr            2   22[BANK1 ] PTR struct __timer1_thre
  2389 ;;		 -> main@t1thread_data(11), 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  test            2   24[BANK1 ] unsigned char [2]
  2392 ;; Return value:  Size  Location     Type
  2393 ;;		None               void
  2394 ;; Registers used:
  2395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2401 ;;      Params:         0       0       2       0       0
  2402 ;;      Locals:         0       0       2       0       0
  2403 ;;      Temps:          0       0       0       0       0
  2404 ;;      Totals:         0       0       4       0       0
  2405 ;;Total ram usage:        4 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:   14
  2408 ;; This function calls:
  2409 ;;		_WriteTimer1
  2410 ;;		_sendUARTarr
  2411 ;; This function is called by:
  2412 ;;		_main
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text8
  2417  00182E                     __ptext8:
  2418                           	opt stack 0
  2419  00182E                     _stop:
  2420                           	opt stack 16
  2421                           
  2422                           ;motors.c: 41: unsigned char test[2] = {0,0};
  2423                           
  2424                           ;incstack = 0
  2425  00182E  C080  F1BA         	movff	stop@F5114,stop@test
  2426  001832  C081  F1BB         	movff	stop@F5114+1,stop@test+1
  2427                           
  2428                           ;motors.c: 42: sendUARTarr(2,test);
  2429  001836  0101               	movlb	1	; () banked
  2430  001838  0E01               	movlw	high stop@test
  2431  00183A  0101               	movlb	1	; () banked
  2432  00183C  6FB5               	movwf	(sendUARTarr@data+1)& (0+255),b
  2433  00183E  0101               	movlb	1	; () banked
  2434  001840  0EBA               	movlw	low stop@test
  2435  001842  0101               	movlb	1	; () banked
  2436  001844  6FB4               	movwf	sendUARTarr@data& (0+255),b
  2437  001846  0E02               	movlw	2
  2438  001848  EC36  F00D         	call	_sendUARTarr
  2439                           
  2440                           ;motors.c: 43: WriteTimer1(tptr->cmDist);
  2441  00184C  0101               	movlb	1	; () banked
  2442  00184E  EE20 F004          	lfsr	2,4
  2443  001852  0101               	movlb	1	; () banked
  2444  001854  51B8               	movf	stop@tptr& (0+255),w,b
  2445  001856  26D9               	addwf	fsr2l,f,c
  2446  001858  0101               	movlb	1	; () banked
  2447  00185A  51B9               	movf	(stop@tptr+1)& (0+255),w,b
  2448  00185C  22DA               	addwfc	fsr2h,f,c
  2449  00185E  0100               	movlb	0	; () banked
  2450  001860  CFDE F0D9          	movff	postinc2,WriteTimer1@timer1
  2451  001864  0100               	movlb	0	; () banked
  2452  001866  CFDD F0DA          	movff	postdec2,WriteTimer1@timer1+1
  2453  00186A  EC2F  F00E         	call	_WriteTimer1	;wreg free
  2454                           
  2455                           ;motors.c: 44: T0CONbits.TMR0ON = 0;;
  2456  00186E  9ED5               	bcf	4053,7,c	;volatile
  2457                           
  2458                           ;motors.c: 45: T1CONbits.TMR1ON = 0;;
  2459  001870  90CD               	bcf	4045,0,c	;volatile
  2460  001872  0012               	return	
  2461  001874                     __end_of_stop:
  2462                           	opt stack 0
  2463                           tblptru	equ	0xFF8
  2464                           postinc0	equ	0xFEE
  2465                           wreg	equ	0xFE8
  2466                           indf1	equ	0xFE7
  2467                           fsr1h	equ	0xFE2
  2468                           fsr1l	equ	0xFE1
  2469                           indf2	equ	0xFDF
  2470                           postinc2	equ	0xFDE
  2471                           postdec2	equ	0xFDD
  2472                           fsr2h	equ	0xFDA
  2473                           fsr2l	equ	0xFD9
  2474                           status	equ	0xFD8
  2475                           
  2476 ;; *************** function _WriteTimer1 *****************
  2477 ;; Defined at:
  2478 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1write.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  timer1          2   29[BANK0 ] unsigned int 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  timer           2   31[BANK0 ] struct Timers
  2483 ;; Return value:  Size  Location     Type
  2484 ;;		None               void
  2485 ;; Registers used:
  2486 ;;		None
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2492 ;;      Params:         0       2       0       0       0
  2493 ;;      Locals:         0       2       0       0       0
  2494 ;;      Temps:          0       0       0       0       0
  2495 ;;      Totals:         0       4       0       0       0
  2496 ;;Total ram usage:        4 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; Hardware stack levels required when called:   10
  2499 ;; This function calls:
  2500 ;;		Nothing
  2501 ;; This function is called by:
  2502 ;;		_stop
  2503 ;;		_timer1_lthread
  2504 ;;		_moveDist
  2505 ;; This function uses a non-reentrant model
  2506 ;;
  2507                           
  2508                           	psect	text9
  2509  001C5E                     __ptext9:
  2510                           	opt stack 0
  2511  001C5E                     _WriteTimer1:
  2512                           	opt stack 19
  2513                           
  2514                           ;incstack = 0
  2515  001C5E  C0D9  F0DB         	movff	WriteTimer1@timer1,WriteTimer1@timer
  2516  001C62  C0DA  F0DC         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  2517  001C66  C0DC  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  2518  001C6A  C0DB  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  2519  001C6E  0012               	return	
  2520  001C70                     __end_of_WriteTimer1:
  2521                           	opt stack 0
  2522                           tblptru	equ	0xFF8
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           indf1	equ	0xFE7
  2526                           fsr1h	equ	0xFE2
  2527                           fsr1l	equ	0xFE1
  2528                           indf2	equ	0xFDF
  2529                           postinc2	equ	0xFDE
  2530                           postdec2	equ	0xFDD
  2531                           fsr2h	equ	0xFDA
  2532                           fsr2l	equ	0xFD9
  2533                           status	equ	0xFD8
  2534                           
  2535 ;; *************** function _start_i2c_slave_reply *****************
  2536 ;; Defined at:
  2537 ;;		line 53 in file "src/my_i2c.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  length          1    wreg     unsigned char 
  2540 ;;  msg             2   29[BANK0 ] PTR unsigned char 
  2541 ;;		 -> main@msgbuffer(11), 
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  length          1   33[BANK0 ] unsigned char 
  2544 ;; Return value:  Size  Location     Type
  2545 ;;		None               void
  2546 ;; Registers used:
  2547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2553 ;;      Params:         0       2       0       0       0
  2554 ;;      Locals:         0       1       0       0       0
  2555 ;;      Temps:          0       2       0       0       0
  2556 ;;      Totals:         0       5       0       0       0
  2557 ;;Total ram usage:        5 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:   10
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text10
  2568  000A2E                     __ptext10:
  2569                           	opt stack 0
  2570  000A2E                     _start_i2c_slave_reply:
  2571                           	opt stack 20
  2572                           
  2573                           ;incstack = 0
  2574                           ;start_i2c_slave_reply@length stored from wreg
  2575  000A2E  0100               	movlb	0	; () banked
  2576  000A30  6FDD               	movwf	start_i2c_slave_reply@length& (0+255),b
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;my_i2c.c: 55: for (ic_ptr->outbuflen = 0; ic_ptr->outbuflen < length; ic_ptr->outbuflen
      +                          ++) {
  2580  000A32  0100               	movlb	0	; () banked
  2581  000A34  EE20 F019          	lfsr	2,25
  2582  000A38  0100               	movlb	0	; () banked
  2583  000A3A  51E1               	movf	_ic_ptr& (0+255),w,b
  2584  000A3C  26D9               	addwf	fsr2l,f,c
  2585  000A3E  0100               	movlb	0	; () banked
  2586  000A40  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2587  000A42  22DA               	addwfc	fsr2h,f,c
  2588  000A44  0E00               	movlw	0
  2589  000A46  6EDF               	movwf	indf2,c
  2590  000A48  D03E               	goto	l3786
  2591  000A4A                     l3782:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;my_i2c.c: 56: ic_ptr->outbuffer[ic_ptr->outbuflen] = msg[ic_ptr->outbuflen];
  2595  000A4A  0100               	movlb	0	; () banked
  2596  000A4C  EE20 F019          	lfsr	2,25
  2597  000A50  0100               	movlb	0	; () banked
  2598  000A52  51E1               	movf	_ic_ptr& (0+255),w,b
  2599  000A54  26D9               	addwf	fsr2l,f,c
  2600  000A56  0100               	movlb	0	; () banked
  2601  000A58  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2602  000A5A  22DA               	addwfc	fsr2h,f,c
  2603  000A5C  50DF               	movf	indf2,w,c
  2604  000A5E  0100               	movlb	0	; () banked
  2605  000A60  6FDB               	movwf	??_start_i2c_slave_reply& (0+255),b
  2606  000A62  0100               	movlb	0	; () banked
  2607  000A64  51DB               	movf	??_start_i2c_slave_reply& (0+255),w,b
  2608  000A66  0D01               	mullw	1
  2609  000A68  50F3               	movf	prodl,w,c
  2610  000A6A  0100               	movlb	0	; () banked
  2611  000A6C  25D9               	addwf	start_i2c_slave_reply@msg& (0+255),w,b
  2612  000A6E  6ED9               	movwf	fsr2l,c
  2613  000A70  50F4               	movf	prodh,w,c
  2614  000A72  0100               	movlb	0	; () banked
  2615  000A74  21DA               	addwfc	(start_i2c_slave_reply@msg+1)& (0+255),w,b
  2616  000A76  6EDA               	movwf	fsr2h,c
  2617  000A78  0100               	movlb	0	; () banked
  2618  000A7A  EE10 F019          	lfsr	1,25
  2619  000A7E  0100               	movlb	0	; () banked
  2620  000A80  51E1               	movf	_ic_ptr& (0+255),w,b
  2621  000A82  26E1               	addwf	fsr1l,f,c
  2622  000A84  0100               	movlb	0	; () banked
  2623  000A86  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2624  000A88  22E2               	addwfc	fsr1h,f,c
  2625  000A8A  50E7               	movf	indf1,w,c
  2626  000A8C  0100               	movlb	0	; () banked
  2627  000A8E  6FDC               	movwf	(??_start_i2c_slave_reply+1)& (0+255),b
  2628  000A90  0100               	movlb	0	; () banked
  2629  000A92  51DC               	movf	(??_start_i2c_slave_reply+1)& (0+255),w,b
  2630  000A94  0D01               	mullw	1
  2631  000A96  0E0F               	movlw	15
  2632  000A98  26F3               	addwf	prodl,f,c
  2633  000A9A  0E00               	movlw	0
  2634  000A9C  22F4               	addwfc	prodh,f,c
  2635  000A9E  50F3               	movf	prodl,w,c
  2636  000AA0  0100               	movlb	0	; () banked
  2637  000AA2  25E1               	addwf	_ic_ptr& (0+255),w,b
  2638  000AA4  6EE1               	movwf	fsr1l,c
  2639  000AA6  50F4               	movf	prodh,w,c
  2640  000AA8  0100               	movlb	0	; () banked
  2641  000AAA  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2642  000AAC  6EE2               	movwf	fsr1h,c
  2643  000AAE  CFDF FFE7          	movff	indf2,indf1
  2644                           
  2645                           ; BSR set to: 0
  2646  000AB2  0100               	movlb	0	; () banked
  2647  000AB4  EE20 F019          	lfsr	2,25
  2648  000AB8  0100               	movlb	0	; () banked
  2649  000ABA  51E1               	movf	_ic_ptr& (0+255),w,b
  2650  000ABC  26D9               	addwf	fsr2l,f,c
  2651  000ABE  0100               	movlb	0	; () banked
  2652  000AC0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2653  000AC2  22DA               	addwfc	fsr2h,f,c
  2654  000AC4  2ADF               	incf	indf2,f,c
  2655  000AC6                     l3786:
  2656                           
  2657                           ; BSR set to: 0
  2658  000AC6  0100               	movlb	0	; () banked
  2659  000AC8  EE20 F019          	lfsr	2,25
  2660  000ACC  0100               	movlb	0	; () banked
  2661  000ACE  51E1               	movf	_ic_ptr& (0+255),w,b
  2662  000AD0  26D9               	addwf	fsr2l,f,c
  2663  000AD2  0100               	movlb	0	; () banked
  2664  000AD4  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2665  000AD6  22DA               	addwfc	fsr2h,f,c
  2666  000AD8  50DF               	movf	indf2,w,c
  2667  000ADA  0100               	movlb	0	; () banked
  2668  000ADC  6FDB               	movwf	??_start_i2c_slave_reply& (0+255),b
  2669  000ADE  0100               	movlb	0	; () banked
  2670  000AE0  51DD               	movf	start_i2c_slave_reply@length& (0+255),w,b
  2671  000AE2  0100               	movlb	0	; () banked
  2672  000AE4  5DDB               	subwf	??_start_i2c_slave_reply& (0+255),w,b
  2673  000AE6  A0D8               	btfss	status,0,c
  2674  000AE8  D7B0               	goto	l3782
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;my_i2c.c: 57: }
  2678                           ;my_i2c.c: 58: ic_ptr->outbuflen = length;
  2679                           
  2680                           ; BSR set to: 0
  2681  000AEA  0100               	movlb	0	; () banked
  2682  000AEC  EE20 F019          	lfsr	2,25
  2683  000AF0  0100               	movlb	0	; () banked
  2684  000AF2  51E1               	movf	_ic_ptr& (0+255),w,b
  2685  000AF4  26D9               	addwf	fsr2l,f,c
  2686  000AF6  0100               	movlb	0	; () banked
  2687  000AF8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2688  000AFA  22DA               	addwfc	fsr2h,f,c
  2689  000AFC  0100               	movlb	0	; () banked
  2690  000AFE  C0DD  FFDF         	movff	start_i2c_slave_reply@length,indf2
  2691                           
  2692                           ;my_i2c.c: 59: ic_ptr->outbufind = 1;
  2693  000B02  0100               	movlb	0	; () banked
  2694  000B04  EE20 F01A          	lfsr	2,26
  2695  000B08  0100               	movlb	0	; () banked
  2696  000B0A  51E1               	movf	_ic_ptr& (0+255),w,b
  2697  000B0C  26D9               	addwf	fsr2l,f,c
  2698  000B0E  0100               	movlb	0	; () banked
  2699  000B10  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2700  000B12  22DA               	addwfc	fsr2h,f,c
  2701  000B14  0E01               	movlw	1
  2702  000B16  6EDF               	movwf	indf2,c
  2703                           
  2704                           ;my_i2c.c: 62: SSPBUF = ic_ptr->outbuffer[0];
  2705  000B18  0100               	movlb	0	; () banked
  2706  000B1A  EE20 F00F          	lfsr	2,15
  2707  000B1E  0100               	movlb	0	; () banked
  2708  000B20  51E1               	movf	_ic_ptr& (0+255),w,b
  2709  000B22  26D9               	addwf	fsr2l,f,c
  2710  000B24  0100               	movlb	0	; () banked
  2711  000B26  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  2712  000B28  22DA               	addwfc	fsr2h,f,c
  2713  000B2A  50DF               	movf	indf2,w,c
  2714  000B2C  6EC9               	movwf	4041,c	;volatile
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;my_i2c.c: 65: SSPCON1bits.CKP = 1;
  2718  000B2E  88C6               	bsf	4038,4,c	;volatile
  2719                           
  2720                           ; BSR set to: 0
  2721  000B30  0012               	return	
  2722  000B32                     __end_of_start_i2c_slave_reply:
  2723                           	opt stack 0
  2724                           tblptru	equ	0xFF8
  2725                           prodh	equ	0xFF4
  2726                           prodl	equ	0xFF3
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           indf1	equ	0xFE7
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           postinc2	equ	0xFDE
  2734                           postdec2	equ	0xFDD
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function _move *****************
  2740 ;; Defined at:
  2741 ;;		line 7 in file "src/motors.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  tptr            2   22[BANK1 ] PTR struct __timer1_thre
  2744 ;;		 -> main@t1thread_data(11), 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  test            2   24[BANK1 ] unsigned char [2]
  2747 ;; Return value:  Size  Location     Type
  2748 ;;		None               void
  2749 ;; Registers used:
  2750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2756 ;;      Params:         0       0       2       0       0
  2757 ;;      Locals:         0       0       2       0       0
  2758 ;;      Temps:          0       0       0       0       0
  2759 ;;      Totals:         0       0       4       0       0
  2760 ;;Total ram usage:        4 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:   14
  2763 ;; This function calls:
  2764 ;;		_sendUARTarr
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text11
  2771  0017E4                     __ptext11:
  2772                           	opt stack 0
  2773  0017E4                     _move:
  2774                           	opt stack 16
  2775                           
  2776                           ;motors.c: 8: unsigned char test[2];
  2777                           ;motors.c: 9: test[0] = tptr->ctrl[0];
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;incstack = 0
  2781  0017E4  0101               	movlb	1	; () banked
  2782  0017E6  EE20 F002          	lfsr	2,2
  2783  0017EA  0101               	movlb	1	; () banked
  2784  0017EC  51B8               	movf	move@tptr& (0+255),w,b
  2785  0017EE  26D9               	addwf	fsr2l,f,c
  2786  0017F0  0101               	movlb	1	; () banked
  2787  0017F2  51B9               	movf	(move@tptr+1)& (0+255),w,b
  2788  0017F4  22DA               	addwfc	fsr2h,f,c
  2789  0017F6  50DF               	movf	indf2,w,c
  2790  0017F8  0101               	movlb	1	; () banked
  2791  0017FA  6FBA               	movwf	move@test& (0+255),b
  2792                           
  2793                           ;motors.c: 10: test[1] = tptr->ctrl[1];
  2794  0017FC  0101               	movlb	1	; () banked
  2795  0017FE  EE20 F003          	lfsr	2,3
  2796  001802  0101               	movlb	1	; () banked
  2797  001804  51B8               	movf	move@tptr& (0+255),w,b
  2798  001806  26D9               	addwf	fsr2l,f,c
  2799  001808  0101               	movlb	1	; () banked
  2800  00180A  51B9               	movf	(move@tptr+1)& (0+255),w,b
  2801  00180C  22DA               	addwfc	fsr2h,f,c
  2802  00180E  50DF               	movf	indf2,w,c
  2803  001810  0101               	movlb	1	; () banked
  2804  001812  6FBB               	movwf	(move@test+1)& (0+255),b
  2805                           
  2806                           ; BSR set to: 1
  2807                           ;motors.c: 11: T1CONbits.TMR1ON = 1;;
  2808  001814  80CD               	bsf	4045,0,c	;volatile
  2809                           
  2810                           ; BSR set to: 1
  2811                           ;motors.c: 12: sendUARTarr(2,test);
  2812  001816  0101               	movlb	1	; () banked
  2813  001818  0E01               	movlw	high move@test
  2814  00181A  0101               	movlb	1	; () banked
  2815  00181C  6FB5               	movwf	(sendUARTarr@data+1)& (0+255),b
  2816  00181E  0101               	movlb	1	; () banked
  2817  001820  0EBA               	movlw	low move@test
  2818  001822  0101               	movlb	1	; () banked
  2819  001824  6FB4               	movwf	sendUARTarr@data& (0+255),b
  2820  001826  0E02               	movlw	2
  2821  001828  EC36  F00D         	call	_sendUARTarr
  2822  00182C  0012               	return	
  2823  00182E                     __end_of_move:
  2824                           	opt stack 0
  2825                           tblptru	equ	0xFF8
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           postinc0	equ	0xFEE
  2829                           wreg	equ	0xFE8
  2830                           indf1	equ	0xFE7
  2831                           fsr1h	equ	0xFE2
  2832                           fsr1l	equ	0xFE1
  2833                           indf2	equ	0xFDF
  2834                           postinc2	equ	0xFDE
  2835                           postdec2	equ	0xFDD
  2836                           fsr2h	equ	0xFDA
  2837                           fsr2l	equ	0xFD9
  2838                           status	equ	0xFD8
  2839                           
  2840 ;; *************** function _sendUARTarr *****************
  2841 ;; Defined at:
  2842 ;;		line 85 in file "src/my_uart.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  length          1    wreg     unsigned char 
  2845 ;;  data            2   18[BANK1 ] PTR unsigned char 
  2846 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), stop@test(2), turn@test(2), 
  2847 ;;		 -> moveDist@test(2), move@test(2), 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  length          1   21[BANK1 ] unsigned char 
  2850 ;;  retval          1   20[BANK1 ] char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      enum E4333
  2853 ;; Registers used:
  2854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2860 ;;      Params:         0       0       2       0       0
  2861 ;;      Locals:         0       0       2       0       0
  2862 ;;      Temps:          0       0       0       0       0
  2863 ;;      Totals:         0       0       4       0       0
  2864 ;;Total ram usage:        4 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:   13
  2867 ;; This function calls:
  2868 ;;		_ToMainLow_sendmsg
  2869 ;; This function is called by:
  2870 ;;		_move
  2871 ;;		_turn
  2872 ;;		_stop
  2873 ;;		_timer0_lthread
  2874 ;;		_timer1_lthread
  2875 ;;		_moveDist
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text12
  2880  001A6C                     __ptext12:
  2881                           	opt stack 0
  2882  001A6C                     _sendUARTarr:
  2883                           	opt stack 16
  2884                           
  2885                           ;incstack = 0
  2886                           ;sendUARTarr@length stored from wreg
  2887  001A6C  0101               	movlb	1	; () banked
  2888  001A6E  6FB7               	movwf	sendUARTarr@length& (0+255),b
  2889                           
  2890                           ; BSR set to: 1
  2891                           ;my_uart.c: 86: if(length > 10){
  2892  001A70  0E0A               	movlw	10
  2893  001A72  0101               	movlb	1	; () banked
  2894  001A74  65B7               	cpfsgt	sendUARTarr@length& (0+255),b
  2895  001A76  D001               	goto	l3334
  2896  001A78  0012               	return	
  2897  001A7A                     l3334:
  2898                           
  2899                           ; BSR set to: 1
  2900                           ;my_uart.c: 89: }
  2901                           ;my_uart.c: 91: signed char retval = ToMainLow_sendmsg(length, 31, (void *)data);
  2902  001A7A  0E1F               	movlw	31
  2903  001A7C  0101               	movlb	1	; () banked
  2904  001A7E  6FB1               	movwf	ToMainLow_sendmsg@msgtype& (0+255),b
  2905  001A80  0101               	movlb	1	; () banked
  2906  001A82  C1B5  F1B3         	movff	sendUARTarr@data+1,ToMainLow_sendmsg@data+1
  2907  001A86  0101               	movlb	1	; () banked
  2908  001A88  C1B4  F1B2         	movff	sendUARTarr@data,ToMainLow_sendmsg@data
  2909  001A8C  0101               	movlb	1	; () banked
  2910  001A8E  51B7               	movf	sendUARTarr@length& (0+255),w,b
  2911  001A90  EC4D  F00D         	call	_ToMainLow_sendmsg
  2912  001A94  0101               	movlb	1	; () banked
  2913  001A96  6FB6               	movwf	sendUARTarr@retval& (0+255),b
  2914  001A98  0012               	return	
  2915  001A9A                     __end_of_sendUARTarr:
  2916                           	opt stack 0
  2917                           tblptru	equ	0xFF8
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           indf1	equ	0xFE7
  2923                           fsr1h	equ	0xFE2
  2924                           fsr1l	equ	0xFE1
  2925                           indf2	equ	0xFDF
  2926                           postinc2	equ	0xFDE
  2927                           postdec2	equ	0xFDD
  2928                           fsr2h	equ	0xFDA
  2929                           fsr2l	equ	0xFD9
  2930                           status	equ	0xFD8
  2931                           
  2932 ;; *************** function _ToMainLow_sendmsg *****************
  2933 ;; Defined at:
  2934 ;;		line 103 in file "src/messages.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  length          1    wreg     unsigned char 
  2937 ;;  msgtype         1   15[BANK1 ] unsigned char 
  2938 ;;  data            2   16[BANK1 ] PTR void 
  2939 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  2940 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@uc(5), 
  2941 ;;		 -> NULL(0), 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  length          1   36[BANK0 ] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      char 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2953 ;;      Params:         0       0       3       0       0
  2954 ;;      Locals:         0       1       0       0       0
  2955 ;;      Temps:          0       0       0       0       0
  2956 ;;      Totals:         0       1       3       0       0
  2957 ;;Total ram usage:        4 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:   12
  2960 ;; This function calls:
  2961 ;;		_send_msg
  2962 ;; This function is called by:
  2963 ;;		_sendUARTarr
  2964 ;;		_sendUARTbyte
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text13
  2969  001A9A                     __ptext13:
  2970                           	opt stack 0
  2971  001A9A                     _ToMainLow_sendmsg:
  2972                           	opt stack 16
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;incstack = 0
  2976                           ;ToMainLow_sendmsg@length stored from wreg
  2977  001A9A  0100               	movlb	0	; () banked
  2978  001A9C  6FE0               	movwf	ToMainLow_sendmsg@length& (0+255),b
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  2982  001A9E  0100               	movlb	0	; () banked
  2983  001AA0  0E00               	movlw	high _ToMainLow_MQ
  2984  001AA2  0101               	movlb	1	; () banked
  2985  001AA4  6FA7               	movwf	(send_msg@qptr+1)& (0+255),b
  2986  001AA6  0100               	movlb	0	; () banked
  2987  001AA8  0E86               	movlw	low _ToMainLow_MQ
  2988  001AAA  0101               	movlb	1	; () banked
  2989  001AAC  6FA6               	movwf	send_msg@qptr& (0+255),b
  2990  001AAE  C0E0  F1A8         	movff	ToMainLow_sendmsg@length,send_msg@length
  2991  001AB2  C1B1  F1A9         	movff	ToMainLow_sendmsg@msgtype,send_msg@msgtype
  2992  001AB6  0101               	movlb	1	; () banked
  2993  001AB8  C1B3  F1AB         	movff	ToMainLow_sendmsg@data+1,send_msg@data+1
  2994  001ABC  0101               	movlb	1	; () banked
  2995  001ABE  C1B2  F1AA         	movff	ToMainLow_sendmsg@data,send_msg@data
  2996  001AC2  EC99  F005         	call	_send_msg	;wreg free
  2997  001AC6  0012               	return	
  2998  001AC8                     __end_of_ToMainLow_sendmsg:
  2999                           	opt stack 0
  3000                           tblptru	equ	0xFF8
  3001                           prodh	equ	0xFF4
  3002                           prodl	equ	0xFF3
  3003                           postinc0	equ	0xFEE
  3004                           wreg	equ	0xFE8
  3005                           indf1	equ	0xFE7
  3006                           fsr1h	equ	0xFE2
  3007                           fsr1l	equ	0xFE1
  3008                           indf2	equ	0xFDF
  3009                           postinc2	equ	0xFDE
  3010                           postdec2	equ	0xFDD
  3011                           fsr2h	equ	0xFDA
  3012                           fsr2l	equ	0xFD9
  3013                           status	equ	0xFD8
  3014                           
  3015 ;; *************** function _send_msg *****************
  3016 ;; Defined at:
  3017 ;;		line 24 in file "src/messages.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  3020 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3021 ;;  length          1    6[BANK1 ] unsigned char 
  3022 ;;  msgtype         1    7[BANK1 ] unsigned char 
  3023 ;;  data            2    8[BANK1 ] PTR void 
  3024 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  3025 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  3026 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  qmsg            2   13[BANK1 ] PTR struct __msg
  3029 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3030 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3031 ;;  tlength         2   10[BANK1 ] unsigned int 
  3032 ;;  slot            1   12[BANK1 ] unsigned char 
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      char 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3042 ;;      Params:         0       0       6       0       0
  3043 ;;      Locals:         0       0       5       0       0
  3044 ;;      Temps:          0       1       0       0       0
  3045 ;;      Totals:         0       1      11       0       0
  3046 ;;Total ram usage:       12 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:   11
  3049 ;; This function calls:
  3050 ;;		_memcpy
  3051 ;; This function is called by:
  3052 ;;		_ToMainLow_sendmsg
  3053 ;;		_FromMainLow_sendmsg
  3054 ;;		_FromMainHigh_sendmsg
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           	psect	text14
  3059  000B32                     __ptext14:
  3060                           	opt stack 0
  3061  000B32                     _send_msg:
  3062                           	opt stack 17
  3063                           
  3064                           ;messages.c: 25: unsigned char slot;
  3065                           ;messages.c: 27: msg *qmsg;
  3066                           ;messages.c: 28: size_t tlength = length;
  3067                           
  3068                           ;incstack = 0
  3069  000B32  0101               	movlb	1	; () banked
  3070  000B34  C1A8  F1AC         	movff	send_msg@length,send_msg@tlength
  3071  000B38  0101               	movlb	1	; () banked
  3072  000B3A  6BAD               	clrf	(send_msg@tlength+1)& (0+255),b
  3073                           
  3074                           ; BSR set to: 1
  3075                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3076  000B3C  0101               	movlb	1	; () banked
  3077  000B3E  EE20 F034          	lfsr	2,52
  3078  000B42  0101               	movlb	1	; () banked
  3079  000B44  51A6               	movf	send_msg@qptr& (0+255),w,b
  3080  000B46  26D9               	addwf	fsr2l,f,c
  3081  000B48  0101               	movlb	1	; () banked
  3082  000B4A  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  3083  000B4C  22DA               	addwfc	fsr2h,f,c
  3084  000B4E  50DF               	movf	indf2,w,c
  3085  000B50  0101               	movlb	1	; () banked
  3086  000B52  6FAE               	movwf	send_msg@slot& (0+255),b
  3087                           
  3088                           ; BSR set to: 1
  3089                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3090  000B54  0101               	movlb	1	; () banked
  3091  000B56  51AE               	movf	send_msg@slot& (0+255),w,b
  3092  000B58  0D0D               	mullw	13
  3093  000B5A  50F3               	movf	prodl,w,c
  3094  000B5C  0101               	movlb	1	; () banked
  3095  000B5E  25A6               	addwf	send_msg@qptr& (0+255),w,b
  3096  000B60  0101               	movlb	1	; () banked
  3097  000B62  6FAF               	movwf	send_msg@qmsg& (0+255),b
  3098  000B64  50F4               	movf	prodh,w,c
  3099  000B66  0101               	movlb	1	; () banked
  3100  000B68  21A7               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3101  000B6A  0101               	movlb	1	; () banked
  3102  000B6C  6FB0               	movwf	(send_msg@qmsg+1)& (0+255),b
  3103                           
  3104                           ; BSR set to: 1
  3105                           ;messages.c: 41: if (qmsg->full != 0) {
  3106  000B6E  C1AF  FFD9         	movff	send_msg@qmsg,fsr2l
  3107  000B72  C1B0  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3108  000B76  50DF               	movf	indf2,w,c
  3109  000B78  B4D8               	btfsc	status,2,c
  3110  000B7A  D002               	goto	l3114
  3111                           
  3112                           ; BSR set to: 1
  3113                           ;messages.c: 42: return (-1);
  3114  000B7C  0EFF               	movlw	255
  3115  000B7E  0012               	return	
  3116  000B80                     l3114:
  3117                           
  3118                           ; BSR set to: 1
  3119                           ;messages.c: 43: }
  3120                           ;messages.c: 46: qmsg->length = length;
  3121  000B80  0101               	movlb	1	; () banked
  3122  000B82  EE20 F001          	lfsr	2,1
  3123  000B86  0101               	movlb	1	; () banked
  3124  000B88  51AF               	movf	send_msg@qmsg& (0+255),w,b
  3125  000B8A  26D9               	addwf	fsr2l,f,c
  3126  000B8C  0101               	movlb	1	; () banked
  3127  000B8E  51B0               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3128  000B90  22DA               	addwfc	fsr2h,f,c
  3129  000B92  0101               	movlb	1	; () banked
  3130  000B94  C1A8  FFDF         	movff	send_msg@length,indf2
  3131                           
  3132                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3133  000B98  0101               	movlb	1	; () banked
  3134  000B9A  EE20 F002          	lfsr	2,2
  3135  000B9E  0101               	movlb	1	; () banked
  3136  000BA0  51AF               	movf	send_msg@qmsg& (0+255),w,b
  3137  000BA2  26D9               	addwf	fsr2l,f,c
  3138  000BA4  0101               	movlb	1	; () banked
  3139  000BA6  51B0               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3140  000BA8  22DA               	addwfc	fsr2h,f,c
  3141  000BAA  0101               	movlb	1	; () banked
  3142  000BAC  C1A9  FFDF         	movff	send_msg@msgtype,indf2
  3143                           
  3144                           ; BSR set to: 1
  3145                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3146  000BB0  0E03               	movlw	3
  3147  000BB2  0101               	movlb	1	; () banked
  3148  000BB4  25AF               	addwf	send_msg@qmsg& (0+255),w,b
  3149  000BB6  0100               	movlb	0	; () banked
  3150  000BB8  6FD9               	movwf	memcpy@d1& (0+255),b
  3151  000BBA  0E00               	movlw	0
  3152  000BBC  0101               	movlb	1	; () banked
  3153  000BBE  21B0               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3154  000BC0  0100               	movlb	0	; () banked
  3155  000BC2  6FDA               	movwf	(memcpy@d1+1)& (0+255),b
  3156  000BC4  0101               	movlb	1	; () banked
  3157  000BC6  0100               	movlb	0	; () banked
  3158  000BC8  C1AB  F0DC         	movff	send_msg@data+1,memcpy@s1+1
  3159  000BCC  0101               	movlb	1	; () banked
  3160  000BCE  0100               	movlb	0	; () banked
  3161  000BD0  C1AA  F0DB         	movff	send_msg@data,memcpy@s1
  3162  000BD4  C1AC  F0DD         	movff	send_msg@tlength,memcpy@n
  3163  000BD8  C1AD  F0DE         	movff	send_msg@tlength+1,memcpy@n+1
  3164  000BDC  EC49  F00B         	call	_memcpy	;wreg free
  3165                           
  3166                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3167  000BE0  0101               	movlb	1	; () banked
  3168  000BE2  EE20 F034          	lfsr	2,52
  3169  000BE6  0101               	movlb	1	; () banked
  3170  000BE8  51A6               	movf	send_msg@qptr& (0+255),w,b
  3171  000BEA  26D9               	addwf	fsr2l,f,c
  3172  000BEC  0101               	movlb	1	; () banked
  3173  000BEE  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  3174  000BF0  22DA               	addwfc	fsr2h,f,c
  3175  000BF2  0101               	movlb	1	; () banked
  3176  000BF4  EE10 F034          	lfsr	1,52
  3177  000BF8  0101               	movlb	1	; () banked
  3178  000BFA  51A6               	movf	send_msg@qptr& (0+255),w,b
  3179  000BFC  26E1               	addwf	fsr1l,f,c
  3180  000BFE  0101               	movlb	1	; () banked
  3181  000C00  51A7               	movf	(send_msg@qptr+1)& (0+255),w,b
  3182  000C02  22E2               	addwfc	fsr1h,f,c
  3183  000C04  50E7               	movf	indf1,w,c
  3184  000C06  0100               	movlb	0	; () banked
  3185  000C08  6FDF               	movwf	??_send_msg& (0+255),b
  3186  000C0A  0100               	movlb	0	; () banked
  3187  000C0C  29DF               	incf	??_send_msg& (0+255),w,b
  3188  000C0E  0B03               	andlw	3
  3189  000C10  6EDF               	movwf	indf2,c
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;messages.c: 59: qmsg->full = 1;
  3193  000C12  C1AF  FFD9         	movff	send_msg@qmsg,fsr2l
  3194  000C16  C1B0  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3195  000C1A  0E01               	movlw	1
  3196  000C1C  6EDF               	movwf	indf2,c
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;messages.c: 60: return (1);
  3200  000C1E  0E01               	movlw	1
  3201  000C20  0012               	return	
  3202  000C22                     __end_of_send_msg:
  3203                           	opt stack 0
  3204                           tblptru	equ	0xFF8
  3205                           prodh	equ	0xFF4
  3206                           prodl	equ	0xFF3
  3207                           postinc0	equ	0xFEE
  3208                           wreg	equ	0xFE8
  3209                           indf1	equ	0xFE7
  3210                           fsr1h	equ	0xFE2
  3211                           fsr1l	equ	0xFE1
  3212                           indf2	equ	0xFDF
  3213                           postinc2	equ	0xFDE
  3214                           postdec2	equ	0xFDD
  3215                           fsr2h	equ	0xFDA
  3216                           fsr2l	equ	0xFD9
  3217                           status	equ	0xFD8
  3218                           
  3219 ;; *************** function _init_uart_recv *****************
  3220 ;; Defined at:
  3221 ;;		line 80 in file "src/my_uart.c"
  3222 ;; Parameters:    Size  Location     Type
  3223 ;;  uc              2   29[BANK0 ] PTR struct __uart_comm
  3224 ;;		 -> main@uc(5), 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;		None               void
  3229 ;; Registers used:
  3230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3236 ;;      Params:         0       2       0       0       0
  3237 ;;      Locals:         0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0
  3239 ;;      Totals:         0       2       0       0       0
  3240 ;;Total ram usage:        2 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:   10
  3243 ;; This function calls:
  3244 ;;		Nothing
  3245 ;; This function is called by:
  3246 ;;		_main
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text15
  3251  001BFC                     __ptext15:
  3252                           	opt stack 0
  3253  001BFC                     _init_uart_recv:
  3254                           	opt stack 20
  3255                           
  3256                           ;my_uart.c: 81: uc_ptr = uc;
  3257                           
  3258                           ;incstack = 0
  3259  001BFC  0100               	movlb	0	; () banked
  3260  001BFE  C0DA  F04A         	movff	init_uart_recv@uc+1,_uc_ptr+1
  3261  001C02  0100               	movlb	0	; () banked
  3262  001C04  C0D9  F049         	movff	init_uart_recv@uc,_uc_ptr
  3263                           
  3264                           ; BSR set to: 0
  3265                           ;my_uart.c: 82: uc_ptr->buflen = 0;
  3266  001C08  EE20 F004          	lfsr	2,4
  3267  001C0C  5049               	movf	_uc_ptr,w,c
  3268  001C0E  26D9               	addwf	fsr2l,f,c
  3269  001C10  504A               	movf	_uc_ptr+1,w,c
  3270  001C12  22DA               	addwfc	fsr2h,f,c
  3271  001C14  0E00               	movlw	0
  3272  001C16  6EDF               	movwf	indf2,c
  3273                           
  3274                           ; BSR set to: 0
  3275  001C18  0012               	return	
  3276  001C1A                     __end_of_init_uart_recv:
  3277                           	opt stack 0
  3278                           tblptru	equ	0xFF8
  3279                           prodh	equ	0xFF4
  3280                           prodl	equ	0xFF3
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           indf1	equ	0xFE7
  3284                           fsr1h	equ	0xFE2
  3285                           fsr1l	equ	0xFE1
  3286                           indf2	equ	0xFDF
  3287                           postinc2	equ	0xFDE
  3288                           postdec2	equ	0xFDD
  3289                           fsr2h	equ	0xFDA
  3290                           fsr2l	equ	0xFD9
  3291                           status	equ	0xFD8
  3292                           
  3293 ;; *************** function _init_uart_lthread *****************
  3294 ;; Defined at:
  3295 ;;		line 7 in file "src/uart_thread.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;  uptr            2   29[BANK0 ] PTR struct __uart_thread
  3298 ;;		 -> main@uthread_data(10), 
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;		None               void
  3303 ;; Registers used:
  3304 ;;		None
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3310 ;;      Params:         0       2       0       0       0
  3311 ;;      Locals:         0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0
  3313 ;;      Totals:         0       2       0       0       0
  3314 ;;Total ram usage:        2 bytes
  3315 ;; Hardware stack levels used:    1
  3316 ;; Hardware stack levels required when called:   10
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_main
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text16
  3325  001C9A                     __ptext16:
  3326                           	opt stack 0
  3327  001C9A                     _init_uart_lthread:
  3328                           	opt stack 20
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;incstack = 0
  3332  001C9A  0012               	return	
  3333  001C9C                     __end_of_init_uart_lthread:
  3334                           	opt stack 0
  3335                           tblptru	equ	0xFF8
  3336                           prodh	equ	0xFF4
  3337                           prodl	equ	0xFF3
  3338                           postinc0	equ	0xFEE
  3339                           wreg	equ	0xFE8
  3340                           indf1	equ	0xFE7
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           indf2	equ	0xFDF
  3344                           postinc2	equ	0xFDE
  3345                           postdec2	equ	0xFDD
  3346                           fsr2h	equ	0xFDA
  3347                           fsr2l	equ	0xFD9
  3348                           status	equ	0xFD8
  3349                           
  3350 ;; *************** function _init_timer1_lthread *****************
  3351 ;; Defined at:
  3352 ;;		line 7 in file "src/timer1_thread.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  tptr            2   29[BANK0 ] PTR struct __timer1_thre
  3355 ;;		 -> main@t1thread_data(11), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3367 ;;      Params:         0       2       0       0       0
  3368 ;;      Locals:         0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0
  3370 ;;      Totals:         0       2       0       0       0
  3371 ;;Total ram usage:        2 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:   10
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_main
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text17
  3382  00137A                     __ptext17:
  3383                           	opt stack 0
  3384  00137A                     _init_timer1_lthread:
  3385                           	opt stack 20
  3386                           
  3387                           ;timer1_thread.c: 8: tptr->cmCount = 0;
  3388                           
  3389                           ;incstack = 0
  3390  00137A  C0D9  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  3391  00137E  C0DA  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  3392  001382  0E00               	movlw	0
  3393  001384  6EDE               	movwf	postinc2,c
  3394  001386  0E00               	movlw	0
  3395  001388  6EDD               	movwf	postdec2,c
  3396                           
  3397                           ;timer1_thread.c: 9: tptr->ctrl[0] = 80;
  3398  00138A  0100               	movlb	0	; () banked
  3399  00138C  EE20 F002          	lfsr	2,2
  3400  001390  0100               	movlb	0	; () banked
  3401  001392  51D9               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3402  001394  26D9               	addwf	fsr2l,f,c
  3403  001396  0100               	movlb	0	; () banked
  3404  001398  51DA               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3405  00139A  22DA               	addwfc	fsr2h,f,c
  3406  00139C  0E50               	movlw	80
  3407  00139E  6EDF               	movwf	indf2,c
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;timer1_thread.c: 10: tptr->ctrl[1] = 205;
  3411  0013A0  0100               	movlb	0	; () banked
  3412  0013A2  EE20 F003          	lfsr	2,3
  3413  0013A6  0100               	movlb	0	; () banked
  3414  0013A8  51D9               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3415  0013AA  26D9               	addwf	fsr2l,f,c
  3416  0013AC  0100               	movlb	0	; () banked
  3417  0013AE  51DA               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3418  0013B0  22DA               	addwfc	fsr2h,f,c
  3419  0013B2  0ECD               	movlw	205
  3420  0013B4  6EDF               	movwf	indf2,c
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;timer1_thread.c: 11: tptr->cmDist = 65458;
  3424  0013B6  0100               	movlb	0	; () banked
  3425  0013B8  EE20 F004          	lfsr	2,4
  3426  0013BC  0100               	movlb	0	; () banked
  3427  0013BE  51D9               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3428  0013C0  26D9               	addwf	fsr2l,f,c
  3429  0013C2  0100               	movlb	0	; () banked
  3430  0013C4  51DA               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3431  0013C6  22DA               	addwfc	fsr2h,f,c
  3432  0013C8  0EB2               	movlw	178
  3433  0013CA  6EDE               	movwf	postinc2,c
  3434  0013CC  0EFF               	movlw	255
  3435  0013CE  6EDD               	movwf	postdec2,c
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;timer1_thread.c: 12: tptr->curMove = 0;
  3439  0013D0  0100               	movlb	0	; () banked
  3440  0013D2  EE20 F006          	lfsr	2,6
  3441  0013D6  0100               	movlb	0	; () banked
  3442  0013D8  51D9               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3443  0013DA  26D9               	addwf	fsr2l,f,c
  3444  0013DC  0100               	movlb	0	; () banked
  3445  0013DE  51DA               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3446  0013E0  22DA               	addwfc	fsr2h,f,c
  3447  0013E2  0E00               	movlw	0
  3448  0013E4  6EDE               	movwf	postinc2,c
  3449  0013E6  0E00               	movlw	0
  3450  0013E8  6EDD               	movwf	postdec2,c
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;timer1_thread.c: 13: tptr->distLim = false;
  3454  0013EA  0100               	movlb	0	; () banked
  3455  0013EC  EE20 F00A          	lfsr	2,10
  3456  0013F0  0100               	movlb	0	; () banked
  3457  0013F2  51D9               	movf	init_timer1_lthread@tptr& (0+255),w,b
  3458  0013F4  26D9               	addwf	fsr2l,f,c
  3459  0013F6  0100               	movlb	0	; () banked
  3460  0013F8  51DA               	movf	(init_timer1_lthread@tptr+1)& (0+255),w,b
  3461  0013FA  22DA               	addwfc	fsr2h,f,c
  3462  0013FC  0E00               	movlw	0
  3463  0013FE  6EDF               	movwf	indf2,c
  3464                           
  3465                           ; BSR set to: 0
  3466  001400  0012               	return	
  3467  001402                     __end_of_init_timer1_lthread:
  3468                           	opt stack 0
  3469                           tblptru	equ	0xFF8
  3470                           prodh	equ	0xFF4
  3471                           prodl	equ	0xFF3
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           indf1	equ	0xFE7
  3475                           fsr1h	equ	0xFE2
  3476                           fsr1l	equ	0xFE1
  3477                           indf2	equ	0xFDF
  3478                           postinc2	equ	0xFDE
  3479                           postdec2	equ	0xFDD
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _init_timer0_lthread *****************
  3485 ;; Defined at:
  3486 ;;		line 7 in file "src/timer0_thread.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  tptr            2   29[BANK0 ] PTR struct __timer0_thre
  3489 ;;		 -> main@t0thread_data(9), 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;		None               void
  3494 ;; Registers used:
  3495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3501 ;;      Params:         0       2       0       0       0
  3502 ;;      Locals:         0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0
  3504 ;;      Totals:         0       2       0       0       0
  3505 ;;Total ram usage:        2 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:   10
  3508 ;; This function calls:
  3509 ;;		Nothing
  3510 ;; This function is called by:
  3511 ;;		_main
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text18
  3516  001402                     __ptext18:
  3517                           	opt stack 0
  3518  001402                     _init_timer0_lthread:
  3519                           	opt stack 20
  3520                           
  3521                           ;timer0_thread.c: 8: tptr->cmCount = 0;
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;incstack = 0
  3525  001402  C0D9  FFD9         	movff	init_timer0_lthread@tptr,fsr2l
  3526  001406  C0DA  FFDA         	movff	init_timer0_lthread@tptr+1,fsr2h
  3527  00140A  0E00               	movlw	0
  3528  00140C  6EDE               	movwf	postinc2,c
  3529  00140E  0E00               	movlw	0
  3530  001410  6EDD               	movwf	postdec2,c
  3531                           
  3532                           ;timer0_thread.c: 9: tptr->ctrl[0] = 30;
  3533  001412  0100               	movlb	0	; () banked
  3534  001414  EE20 F002          	lfsr	2,2
  3535  001418  0100               	movlb	0	; () banked
  3536  00141A  51D9               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3537  00141C  26D9               	addwf	fsr2l,f,c
  3538  00141E  0100               	movlb	0	; () banked
  3539  001420  51DA               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3540  001422  22DA               	addwfc	fsr2h,f,c
  3541  001424  0E1E               	movlw	30
  3542  001426  6EDF               	movwf	indf2,c
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;timer0_thread.c: 10: tptr->ctrl[1] = 223;
  3546  001428  0100               	movlb	0	; () banked
  3547  00142A  EE20 F003          	lfsr	2,3
  3548  00142E  0100               	movlb	0	; () banked
  3549  001430  51D9               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3550  001432  26D9               	addwf	fsr2l,f,c
  3551  001434  0100               	movlb	0	; () banked
  3552  001436  51DA               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3553  001438  22DA               	addwfc	fsr2h,f,c
  3554  00143A  0EDF               	movlw	223
  3555  00143C  6EDF               	movwf	indf2,c
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;timer0_thread.c: 11: tptr->cmDist = 65507;
  3559  00143E  0100               	movlb	0	; () banked
  3560  001440  EE20 F004          	lfsr	2,4
  3561  001444  0100               	movlb	0	; () banked
  3562  001446  51D9               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3563  001448  26D9               	addwf	fsr2l,f,c
  3564  00144A  0100               	movlb	0	; () banked
  3565  00144C  51DA               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3566  00144E  22DA               	addwfc	fsr2h,f,c
  3567  001450  0EE3               	movlw	227
  3568  001452  6EDE               	movwf	postinc2,c
  3569  001454  0EFF               	movlw	255
  3570  001456  6EDD               	movwf	postdec2,c
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;timer0_thread.c: 12: tptr->curMove = 0;
  3574  001458  0100               	movlb	0	; () banked
  3575  00145A  EE20 F006          	lfsr	2,6
  3576  00145E  0100               	movlb	0	; () banked
  3577  001460  51D9               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3578  001462  26D9               	addwf	fsr2l,f,c
  3579  001464  0100               	movlb	0	; () banked
  3580  001466  51DA               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3581  001468  22DA               	addwfc	fsr2h,f,c
  3582  00146A  0E00               	movlw	0
  3583  00146C  6EDE               	movwf	postinc2,c
  3584  00146E  0E00               	movlw	0
  3585  001470  6EDD               	movwf	postdec2,c
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;timer0_thread.c: 13: tptr->distLim = false;
  3589  001472  0100               	movlb	0	; () banked
  3590  001474  EE20 F008          	lfsr	2,8
  3591  001478  0100               	movlb	0	; () banked
  3592  00147A  51D9               	movf	init_timer0_lthread@tptr& (0+255),w,b
  3593  00147C  26D9               	addwf	fsr2l,f,c
  3594  00147E  0100               	movlb	0	; () banked
  3595  001480  51DA               	movf	(init_timer0_lthread@tptr+1)& (0+255),w,b
  3596  001482  22DA               	addwfc	fsr2h,f,c
  3597  001484  0E00               	movlw	0
  3598  001486  6EDF               	movwf	indf2,c
  3599                           
  3600                           ; BSR set to: 0
  3601  001488  0012               	return	
  3602  00148A                     __end_of_init_timer0_lthread:
  3603                           	opt stack 0
  3604                           tblptru	equ	0xFF8
  3605                           prodh	equ	0xFF4
  3606                           prodl	equ	0xFF3
  3607                           postinc0	equ	0xFEE
  3608                           wreg	equ	0xFE8
  3609                           indf1	equ	0xFE7
  3610                           fsr1h	equ	0xFE2
  3611                           fsr1l	equ	0xFE1
  3612                           indf2	equ	0xFDF
  3613                           postinc2	equ	0xFDE
  3614                           postdec2	equ	0xFDD
  3615                           fsr2h	equ	0xFDA
  3616                           fsr2l	equ	0xFD9
  3617                           status	equ	0xFD8
  3618                           
  3619 ;; *************** function _init_queues *****************
  3620 ;; Defined at:
  3621 ;;		line 194 in file "src/messages.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;		None               void
  3628 ;; Registers used:
  3629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3635 ;;      Params:         0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:   11
  3642 ;; This function calls:
  3643 ;;		_init_queue
  3644 ;; This function is called by:
  3645 ;;		_main
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text19
  3650  0016EA                     __ptext19:
  3651                           	opt stack 0
  3652  0016EA                     _init_queues:
  3653                           	opt stack 19
  3654                           
  3655                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;incstack = 0
  3659  0016EA  0E00               	movlw	0
  3660  0016EC  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  3661                           
  3662                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  3663  0016EE  0100               	movlb	0	; () banked
  3664  0016F0  0E00               	movlw	high _ToMainLow_MQ
  3665  0016F2  0100               	movlb	0	; () banked
  3666  0016F4  6FDA               	movwf	(init_queue@qptr+1)& (0+255),b
  3667  0016F6  0100               	movlb	0	; () banked
  3668  0016F8  0E86               	movlw	low _ToMainLow_MQ
  3669  0016FA  0100               	movlb	0	; () banked
  3670  0016FC  6FD9               	movwf	init_queue@qptr& (0+255),b
  3671  0016FE  ECB9  F00A         	call	_init_queue	;wreg free
  3672                           
  3673                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  3674  001702  0101               	movlb	1	; () banked
  3675  001704  0E01               	movlw	high _ToMainHigh_MQ
  3676  001706  0100               	movlb	0	; () banked
  3677  001708  6FDA               	movwf	(init_queue@qptr+1)& (0+255),b
  3678  00170A  0101               	movlb	1	; () banked
  3679  00170C  0E6C               	movlw	low _ToMainHigh_MQ
  3680  00170E  0100               	movlb	0	; () banked
  3681  001710  6FD9               	movwf	init_queue@qptr& (0+255),b
  3682  001712  ECB9  F00A         	call	_init_queue	;wreg free
  3683                           
  3684                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  3685  001716  0101               	movlb	1	; () banked
  3686  001718  0E01               	movlw	high _FromMainLow_MQ
  3687  00171A  0100               	movlb	0	; () banked
  3688  00171C  6FDA               	movwf	(init_queue@qptr+1)& (0+255),b
  3689  00171E  0101               	movlb	1	; () banked
  3690  001720  0E36               	movlw	low _FromMainLow_MQ
  3691  001722  0100               	movlb	0	; () banked
  3692  001724  6FD9               	movwf	init_queue@qptr& (0+255),b
  3693  001726  ECB9  F00A         	call	_init_queue	;wreg free
  3694                           
  3695                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  3696  00172A  0101               	movlb	1	; () banked
  3697  00172C  0E01               	movlw	high _FromMainHigh_MQ
  3698  00172E  0100               	movlb	0	; () banked
  3699  001730  6FDA               	movwf	(init_queue@qptr+1)& (0+255),b
  3700  001732  0101               	movlb	1	; () banked
  3701  001734  0E00               	movlw	low _FromMainHigh_MQ
  3702  001736  0100               	movlb	0	; () banked
  3703  001738  6FD9               	movwf	init_queue@qptr& (0+255),b
  3704  00173A  ECB9  F00A         	call	_init_queue	;wreg free
  3705  00173E  0012               	return	
  3706  001740                     __end_of_init_queues:
  3707                           	opt stack 0
  3708                           tblptru	equ	0xFF8
  3709                           prodh	equ	0xFF4
  3710                           prodl	equ	0xFF3
  3711                           postinc0	equ	0xFEE
  3712                           wreg	equ	0xFE8
  3713                           indf1	equ	0xFE7
  3714                           fsr1h	equ	0xFE2
  3715                           fsr1l	equ	0xFE1
  3716                           indf2	equ	0xFDF
  3717                           postinc2	equ	0xFDE
  3718                           postdec2	equ	0xFDD
  3719                           fsr2h	equ	0xFDA
  3720                           fsr2l	equ	0xFD9
  3721                           status	equ	0xFD8
  3722                           
  3723 ;; *************** function _init_queue *****************
  3724 ;; Defined at:
  3725 ;;		line 14 in file "src/messages.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  3728 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  i               1   31[BANK0 ] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;		None               void
  3733 ;; Registers used:
  3734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3740 ;;      Params:         0       2       0       0       0
  3741 ;;      Locals:         0       1       0       0       0
  3742 ;;      Temps:          0       0       0       0       0
  3743 ;;      Totals:         0       3       0       0       0
  3744 ;;Total ram usage:        3 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:   10
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_init_queues
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text20
  3755  001572                     __ptext20:
  3756                           	opt stack 0
  3757  001572                     _init_queue:
  3758                           	opt stack 19
  3759                           
  3760                           ;messages.c: 15: unsigned char i;
  3761                           ;messages.c: 17: qptr->cur_write_ind = 0;
  3762                           
  3763                           ;incstack = 0
  3764  001572  0100               	movlb	0	; () banked
  3765  001574  EE20 F034          	lfsr	2,52
  3766  001578  0100               	movlb	0	; () banked
  3767  00157A  51D9               	movf	init_queue@qptr& (0+255),w,b
  3768  00157C  26D9               	addwf	fsr2l,f,c
  3769  00157E  0100               	movlb	0	; () banked
  3770  001580  51DA               	movf	(init_queue@qptr+1)& (0+255),w,b
  3771  001582  22DA               	addwfc	fsr2h,f,c
  3772  001584  0E00               	movlw	0
  3773  001586  6EDF               	movwf	indf2,c
  3774                           
  3775                           ;messages.c: 18: qptr->cur_read_ind = 0;
  3776  001588  0100               	movlb	0	; () banked
  3777  00158A  EE20 F035          	lfsr	2,53
  3778  00158E  0100               	movlb	0	; () banked
  3779  001590  51D9               	movf	init_queue@qptr& (0+255),w,b
  3780  001592  26D9               	addwf	fsr2l,f,c
  3781  001594  0100               	movlb	0	; () banked
  3782  001596  51DA               	movf	(init_queue@qptr+1)& (0+255),w,b
  3783  001598  22DA               	addwfc	fsr2h,f,c
  3784  00159A  0E00               	movlw	0
  3785  00159C  6EDF               	movwf	indf2,c
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  3789  00159E  0E00               	movlw	0
  3790  0015A0  0100               	movlb	0	; () banked
  3791  0015A2  6FDB               	movwf	init_queue@i& (0+255),b
  3792                           
  3793                           ; BSR set to: 0
  3794  0015A4  0E03               	movlw	3
  3795  0015A6  0100               	movlb	0	; () banked
  3796  0015A8  65DB               	cpfsgt	init_queue@i& (0+255),b
  3797  0015AA  D001               	goto	l3276
  3798  0015AC  0012               	return	
  3799  0015AE                     l3276:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;messages.c: 20: qptr->queue[i].full = 0;
  3803  0015AE  0100               	movlb	0	; () banked
  3804  0015B0  51DB               	movf	init_queue@i& (0+255),w,b
  3805  0015B2  0D0D               	mullw	13
  3806  0015B4  50F3               	movf	prodl,w,c
  3807  0015B6  0100               	movlb	0	; () banked
  3808  0015B8  25D9               	addwf	init_queue@qptr& (0+255),w,b
  3809  0015BA  6ED9               	movwf	fsr2l,c
  3810  0015BC  50F4               	movf	prodh,w,c
  3811  0015BE  0100               	movlb	0	; () banked
  3812  0015C0  21DA               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3813  0015C2  6EDA               	movwf	fsr2h,c
  3814  0015C4  0E00               	movlw	0
  3815  0015C6  6EDF               	movwf	indf2,c
  3816                           
  3817                           ; BSR set to: 0
  3818  0015C8  0100               	movlb	0	; () banked
  3819  0015CA  2BDB               	incf	init_queue@i& (0+255),f,b
  3820                           
  3821                           ; BSR set to: 0
  3822  0015CC  0E03               	movlw	3
  3823  0015CE  0100               	movlb	0	; () banked
  3824  0015D0  65DB               	cpfsgt	init_queue@i& (0+255),b
  3825  0015D2  D7ED               	goto	l3276
  3826  0015D4  0012               	return	
  3827  0015D6                     __end_of_init_queue:
  3828                           	opt stack 0
  3829                           tblptru	equ	0xFF8
  3830                           prodh	equ	0xFF4
  3831                           prodl	equ	0xFF3
  3832                           postinc0	equ	0xFEE
  3833                           wreg	equ	0xFE8
  3834                           indf1	equ	0xFE7
  3835                           fsr1h	equ	0xFE2
  3836                           fsr1l	equ	0xFE1
  3837                           indf2	equ	0xFDF
  3838                           postinc2	equ	0xFDE
  3839                           postdec2	equ	0xFDD
  3840                           fsr2h	equ	0xFDA
  3841                           fsr2l	equ	0xFD9
  3842                           status	equ	0xFD8
  3843                           
  3844 ;; *************** function _init_i2c *****************
  3845 ;; Defined at:
  3846 ;;		line 268 in file "src/my_i2c.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  ic              2   29[BANK0 ] PTR struct __i2c_comm
  3849 ;;		 -> main@ic(28), 
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;		None               void
  3854 ;; Registers used:
  3855 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3861 ;;      Params:         0       2       0       0       0
  3862 ;;      Locals:         0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0
  3864 ;;      Totals:         0       2       0       0       0
  3865 ;;Total ram usage:        2 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:   10
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           	psect	text21
  3876  00150C                     __ptext21:
  3877                           	opt stack 0
  3878  00150C                     _init_i2c:
  3879                           	opt stack 20
  3880                           
  3881                           ;my_i2c.c: 269: ic_ptr = ic;
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;incstack = 0
  3885  00150C  0100               	movlb	0	; () banked
  3886  00150E  C0DA  F0E2         	movff	init_i2c@ic+1,_ic_ptr+1
  3887  001512  0100               	movlb	0	; () banked
  3888  001514  C0D9  F0E1         	movff	init_i2c@ic,_ic_ptr
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;my_i2c.c: 270: ic_ptr->buflen = 0;
  3892  001518  0100               	movlb	0	; () banked
  3893  00151A  EE20 F00A          	lfsr	2,10
  3894  00151E  0100               	movlb	0	; () banked
  3895  001520  51E1               	movf	_ic_ptr& (0+255),w,b
  3896  001522  26D9               	addwf	fsr2l,f,c
  3897  001524  0100               	movlb	0	; () banked
  3898  001526  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3899  001528  22DA               	addwfc	fsr2h,f,c
  3900  00152A  0E00               	movlw	0
  3901  00152C  6EDF               	movwf	indf2,c
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;my_i2c.c: 271: ic_ptr->event_count = 0;
  3905  00152E  0100               	movlb	0	; () banked
  3906  001530  EE20 F00B          	lfsr	2,11
  3907  001534  0100               	movlb	0	; () banked
  3908  001536  51E1               	movf	_ic_ptr& (0+255),w,b
  3909  001538  26D9               	addwf	fsr2l,f,c
  3910  00153A  0100               	movlb	0	; () banked
  3911  00153C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3912  00153E  22DA               	addwfc	fsr2h,f,c
  3913  001540  0E00               	movlw	0
  3914  001542  6EDF               	movwf	indf2,c
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;my_i2c.c: 272: ic_ptr->status = 0x5;
  3918  001544  0100               	movlb	0	; () banked
  3919  001546  EE20 F00C          	lfsr	2,12
  3920  00154A  0100               	movlb	0	; () banked
  3921  00154C  51E1               	movf	_ic_ptr& (0+255),w,b
  3922  00154E  26D9               	addwf	fsr2l,f,c
  3923  001550  0100               	movlb	0	; () banked
  3924  001552  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3925  001554  22DA               	addwfc	fsr2h,f,c
  3926  001556  0E05               	movlw	5
  3927  001558  6EDF               	movwf	indf2,c
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;my_i2c.c: 273: ic_ptr->error_count = 0;
  3931  00155A  0100               	movlb	0	; () banked
  3932  00155C  EE20 F00E          	lfsr	2,14
  3933  001560  0100               	movlb	0	; () banked
  3934  001562  51E1               	movf	_ic_ptr& (0+255),w,b
  3935  001564  26D9               	addwf	fsr2l,f,c
  3936  001566  0100               	movlb	0	; () banked
  3937  001568  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  3938  00156A  22DA               	addwfc	fsr2h,f,c
  3939  00156C  0E00               	movlw	0
  3940  00156E  6EDF               	movwf	indf2,c
  3941                           
  3942                           ; BSR set to: 0
  3943  001570  0012               	return	
  3944  001572                     __end_of_init_i2c:
  3945                           	opt stack 0
  3946                           tblptru	equ	0xFF8
  3947                           prodh	equ	0xFF4
  3948                           prodl	equ	0xFF3
  3949                           postinc0	equ	0xFEE
  3950                           wreg	equ	0xFE8
  3951                           indf1	equ	0xFE7
  3952                           fsr1h	equ	0xFE2
  3953                           fsr1l	equ	0xFE1
  3954                           indf2	equ	0xFDF
  3955                           postinc2	equ	0xFDE
  3956                           postdec2	equ	0xFDD
  3957                           fsr2h	equ	0xFDA
  3958                           fsr2l	equ	0xFD9
  3959                           status	equ	0xFD8
  3960                           
  3961 ;; *************** function _i2c_configure_slave *****************
  3962 ;; Defined at:
  3963 ;;		line 279 in file "src/my_i2c.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  addr            1    wreg     unsigned char 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;  addr            1   29[BANK0 ] unsigned char 
  3968 ;; Return value:  Size  Location     Type
  3969 ;;		None               void
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3977 ;;      Params:         0       0       0       0       0
  3978 ;;      Locals:         0       1       0       0       0
  3979 ;;      Temps:          0       0       0       0       0
  3980 ;;      Totals:         0       1       0       0       0
  3981 ;;Total ram usage:        1 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:   10
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_main
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text22
  3992  001AF6                     __ptext22:
  3993                           	opt stack 0
  3994  001AF6                     _i2c_configure_slave:
  3995                           	opt stack 20
  3996                           
  3997                           ; BSR set to: 0
  3998                           ;incstack = 0
  3999                           ;i2c_configure_slave@addr stored from wreg
  4000  001AF6  0100               	movlb	0	; () banked
  4001  001AF8  6FD9               	movwf	i2c_configure_slave@addr& (0+255),b
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;my_i2c.c: 291: TRISCbits.TRISC3 = 1;
  4005  001AFA  8694               	bsf	3988,3,c	;volatile
  4006                           
  4007                           ;my_i2c.c: 292: TRISCbits.TRISC4 = 1;
  4008  001AFC  8894               	bsf	3988,4,c	;volatile
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;my_i2c.c: 297: SSPADD = addr;
  4012  001AFE  C0D9  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;my_i2c.c: 299: SSPSTAT = 0x0;
  4016  001B02  0E00               	movlw	0
  4017  001B04  6EC7               	movwf	4039,c	;volatile
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;my_i2c.c: 300: SSPCON1 = 0x0;
  4021  001B06  0E00               	movlw	0
  4022  001B08  6EC6               	movwf	4038,c	;volatile
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;my_i2c.c: 301: SSPCON2 = 0x0;
  4026  001B0A  0E00               	movlw	0
  4027  001B0C  6EC5               	movwf	4037,c	;volatile
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;my_i2c.c: 302: SSPCON1 |= 0x0E;
  4031  001B0E  0E0E               	movlw	14
  4032  001B10  12C6               	iorwf	4038,f,c	;volatile
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;my_i2c.c: 303: SSPSTAT |= 0b10000000;
  4036  001B12  8EC7               	bsf	4039,7,c	;volatile
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;my_i2c.c: 306: TRISCbits.TRISC3 = 1;
  4040  001B14  8694               	bsf	3988,3,c	;volatile
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;my_i2c.c: 307: TRISCbits.TRISC4 = 1;
  4044  001B16  8894               	bsf	3988,4,c	;volatile
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;my_i2c.c: 328: SSPCON2bits.SEN = 1;
  4048  001B18  80C5               	bsf	4037,0,c	;volatile
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;my_i2c.c: 329: SSPCON1 |= 0b00100000;
  4052  001B1A  8AC6               	bsf	4038,5,c	;volatile
  4053                           
  4054                           ; BSR set to: 0
  4055  001B1C  0012               	return	
  4056  001B1E                     __end_of_i2c_configure_slave:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           prodh	equ	0xFF4
  4060                           prodl	equ	0xFF3
  4061                           postinc0	equ	0xFEE
  4062                           wreg	equ	0xFE8
  4063                           indf1	equ	0xFE7
  4064                           fsr1h	equ	0xFE2
  4065                           fsr1l	equ	0xFE1
  4066                           indf2	equ	0xFDF
  4067                           postinc2	equ	0xFDE
  4068                           postdec2	equ	0xFDD
  4069                           fsr2h	equ	0xFDA
  4070                           fsr2l	equ	0xFD9
  4071                           status	equ	0xFD8
  4072                           
  4073 ;; *************** function _enable_interrupts *****************
  4074 ;; Defined at:
  4075 ;;		line 15 in file "src/interrupts.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;		None
  4080 ;; Return value:  Size  Location     Type
  4081 ;;		None               void
  4082 ;; Registers used:
  4083 ;;		None
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4089 ;;      Params:         0       0       0       0       0
  4090 ;;      Locals:         0       0       0       0       0
  4091 ;;      Temps:          0       0       0       0       0
  4092 ;;      Totals:         0       0       0       0       0
  4093 ;;Total ram usage:        0 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:   10
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_main
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text23
  4104  001C8C                     __ptext23:
  4105                           	opt stack 0
  4106  001C8C                     _enable_interrupts:
  4107                           	opt stack 20
  4108                           
  4109                           ;interrupts.c: 18: RCONbits.IPEN = 1;
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;incstack = 0
  4113  001C8C  8ED0               	bsf	4048,7,c	;volatile
  4114                           
  4115                           ;interrupts.c: 19: INTCONbits.GIEH = 1;
  4116  001C8E  8EF2               	bsf	intcon,7,c	;volatile
  4117                           
  4118                           ;interrupts.c: 20: INTCONbits.GIEL = 1;
  4119  001C90  8CF2               	bsf	intcon,6,c	;volatile
  4120  001C92  0012               	return	
  4121  001C94                     __end_of_enable_interrupts:
  4122                           	opt stack 0
  4123                           tblptru	equ	0xFF8
  4124                           prodh	equ	0xFF4
  4125                           prodl	equ	0xFF3
  4126                           intcon	equ	0xFF2
  4127                           postinc0	equ	0xFEE
  4128                           wreg	equ	0xFE8
  4129                           indf1	equ	0xFE7
  4130                           fsr1h	equ	0xFE2
  4131                           fsr1l	equ	0xFE1
  4132                           indf2	equ	0xFDF
  4133                           postinc2	equ	0xFDE
  4134                           postdec2	equ	0xFDD
  4135                           fsr2h	equ	0xFDA
  4136                           fsr2l	equ	0xFD9
  4137                           status	equ	0xFD8
  4138                           
  4139 ;; *************** function _block_on_To_msgqueues *****************
  4140 ;; Defined at:
  4141 ;;		line 256 in file "src/messages.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;		None
  4146 ;; Return value:  Size  Location     Type
  4147 ;;		None               void
  4148 ;; Registers used:
  4149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4155 ;;      Params:         0       0       0       0       0
  4156 ;;      Locals:         0       0       0       0       0
  4157 ;;      Temps:          0       0       0       0       0
  4158 ;;      Totals:         0       0       0       0       0
  4159 ;;Total ram usage:        0 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:   13
  4162 ;; This function calls:
  4163 ;;		_Delay1KTCYx
  4164 ;;		_check_msg
  4165 ;;		_in_main
  4166 ;; This function is called by:
  4167 ;;		_main
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text24
  4172  001636                     __ptext24:
  4173                           	opt stack 0
  4174  001636                     _block_on_To_msgqueues:
  4175                           	opt stack 17
  4176                           
  4177                           ;messages.c: 257: if (!in_main()) {
  4178                           
  4179                           ;incstack = 0
  4180  001636  EC99  F00C         	call	_in_main	;wreg free
  4181  00163A  0100               	movlb	0	; () banked
  4182  00163C  51DE               	movf	(?_in_main+1)& (0+255),w,b
  4183  00163E  0100               	movlb	0	; () banked
  4184  001640  11DD               	iorwf	?_in_main& (0+255),w,b
  4185  001642  B4D8               	btfsc	status,2,c
  4186  001644  0012               	return	
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;messages.c: 259: }
  4190                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  4191                           
  4192                           ; BSR set to: 0
  4193                           
  4194                           ; BSR set to: 0
  4195                           ;messages.c: 258: return;
  4196  001646  0E01               	movlw	1
  4197  001648  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4198  00164A                     l3726:
  4199                           
  4200                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  4201  00164A  0101               	movlb	1	; () banked
  4202  00164C  0E01               	movlw	high _ToMainHigh_MQ
  4203  00164E  0100               	movlb	0	; () banked
  4204  001650  6FDA               	movwf	(check_msg@qptr+1)& (0+255),b
  4205  001652  0101               	movlb	1	; () banked
  4206  001654  0E6C               	movlw	low _ToMainHigh_MQ
  4207  001656  0100               	movlb	0	; () banked
  4208  001658  6FD9               	movwf	check_msg@qptr& (0+255),b
  4209  00165A  ECED  F00C         	call	_check_msg	;wreg free
  4210  00165E  0900               	iorlw	0
  4211  001660  B4D8               	btfsc	status,2,c
  4212  001662  D003               	goto	l3732
  4213                           
  4214                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  4215  001664  0E00               	movlw	0
  4216  001666  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4217  001668  0012               	return	
  4218  00166A                     l3732:
  4219                           
  4220                           ;messages.c: 271: }
  4221                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  4222  00166A  0100               	movlb	0	; () banked
  4223  00166C  0E00               	movlw	high _ToMainLow_MQ
  4224  00166E  0100               	movlb	0	; () banked
  4225  001670  6FDA               	movwf	(check_msg@qptr+1)& (0+255),b
  4226  001672  0100               	movlb	0	; () banked
  4227  001674  0E86               	movlw	low _ToMainLow_MQ
  4228  001676  0100               	movlb	0	; () banked
  4229  001678  6FD9               	movwf	check_msg@qptr& (0+255),b
  4230  00167A  ECED  F00C         	call	_check_msg	;wreg free
  4231  00167E  0900               	iorlw	0
  4232  001680  B4D8               	btfsc	status,2,c
  4233  001682  D003               	goto	l3738
  4234                           
  4235                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  4236  001684  0E00               	movlw	0
  4237  001686  6E4B               	movwf	_MQ_Main_Willing_to_block,c
  4238  001688  0012               	return	
  4239  00168A                     l3738:
  4240                           
  4241                           ;messages.c: 278: }
  4242                           ;messages.c: 279: Delay1KTCYx(10);
  4243  00168A  0E0A               	movlw	10
  4244  00168C  EC1C  F00E         	call	_Delay1KTCYx
  4245  001690  D7DC               	goto	l3726
  4246  001692                     __end_of_block_on_To_msgqueues:
  4247                           	opt stack 0
  4248                           tblptru	equ	0xFF8
  4249                           prodh	equ	0xFF4
  4250                           prodl	equ	0xFF3
  4251                           intcon	equ	0xFF2
  4252                           postinc0	equ	0xFEE
  4253                           wreg	equ	0xFE8
  4254                           indf1	equ	0xFE7
  4255                           fsr1h	equ	0xFE2
  4256                           fsr1l	equ	0xFE1
  4257                           indf2	equ	0xFDF
  4258                           postinc2	equ	0xFDE
  4259                           postdec2	equ	0xFDD
  4260                           fsr2h	equ	0xFDA
  4261                           fsr2l	equ	0xFD9
  4262                           status	equ	0xFD8
  4263                           
  4264 ;; *************** function _in_main *****************
  4265 ;; Defined at:
  4266 ;;		line 41 in file "src/interrupts.c"
  4267 ;; Parameters:    Size  Location     Type
  4268 ;;		None
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;		None
  4271 ;; Return value:  Size  Location     Type
  4272 ;;                  2   33[BANK0 ] int 
  4273 ;; Registers used:
  4274 ;;		wreg, status,2, status,0, cstack
  4275 ;; Tracked objects:
  4276 ;;		On entry : 0/0
  4277 ;;		On exit  : 0/0
  4278 ;;		Unchanged: 0/0
  4279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4280 ;;      Params:         0       2       0       0       0
  4281 ;;      Locals:         0       0       0       0       0
  4282 ;;      Temps:          0       0       0       0       0
  4283 ;;      Totals:         0       2       0       0       0
  4284 ;;Total ram usage:        2 bytes
  4285 ;; Hardware stack levels used:    1
  4286 ;; Hardware stack levels required when called:   12
  4287 ;; This function calls:
  4288 ;;		_in_high_int
  4289 ;;		_in_low_int
  4290 ;; This function is called by:
  4291 ;;		_block_on_To_msgqueues
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           	psect	text25
  4296  001932                     __ptext25:
  4297                           	opt stack 0
  4298  001932                     _in_main:
  4299                           	opt stack 17
  4300                           
  4301                           ;interrupts.c: 42: if ((!in_low_int()) && (!in_high_int())) {
  4302                           
  4303                           ;incstack = 0
  4304  001932  EC7A  F00C         	call	_in_low_int	;wreg free
  4305  001936  0100               	movlb	0	; () banked
  4306  001938  51DC               	movf	(?_in_low_int+1)& (0+255),w,b
  4307  00193A  0100               	movlb	0	; () banked
  4308  00193C  11DB               	iorwf	?_in_low_int& (0+255),w,b
  4309  00193E  A4D8               	btfss	status,2,c
  4310  001940  D00F               	goto	l3260
  4311                           
  4312                           ; BSR set to: 0
  4313  001942  EC38  F00E         	call	_in_high_int	;wreg free
  4314  001946  0100               	movlb	0	; () banked
  4315  001948  51DA               	movf	(?_in_high_int+1)& (0+255),w,b
  4316  00194A  0100               	movlb	0	; () banked
  4317  00194C  11D9               	iorwf	?_in_high_int& (0+255),w,b
  4318  00194E  A4D8               	btfss	status,2,c
  4319  001950  D007               	goto	l3260
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;interrupts.c: 43: return (1);
  4323  001952  0E00               	movlw	0
  4324  001954  0100               	movlb	0	; () banked
  4325  001956  6FDE               	movwf	(?_in_main+1)& (0+255),b
  4326  001958  0E01               	movlw	1
  4327  00195A  0100               	movlb	0	; () banked
  4328  00195C  6FDD               	movwf	?_in_main& (0+255),b
  4329  00195E  0012               	return	
  4330  001960                     l3260:
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;interrupts.c: 45: return (0);
  4334  001960  0E00               	movlw	0
  4335  001962  0100               	movlb	0	; () banked
  4336  001964  6FDE               	movwf	(?_in_main+1)& (0+255),b
  4337  001966  0E00               	movlw	0
  4338  001968  0100               	movlb	0	; () banked
  4339  00196A  6FDD               	movwf	?_in_main& (0+255),b
  4340  00196C  0012               	return	
  4341  00196E                     __end_of_in_main:
  4342                           	opt stack 0
  4343                           tblptru	equ	0xFF8
  4344                           prodh	equ	0xFF4
  4345                           prodl	equ	0xFF3
  4346                           intcon	equ	0xFF2
  4347                           postinc0	equ	0xFEE
  4348                           wreg	equ	0xFE8
  4349                           indf1	equ	0xFE7
  4350                           fsr1h	equ	0xFE2
  4351                           fsr1l	equ	0xFE1
  4352                           indf2	equ	0xFDF
  4353                           postinc2	equ	0xFDE
  4354                           postdec2	equ	0xFDD
  4355                           fsr2h	equ	0xFDA
  4356                           fsr2l	equ	0xFD9
  4357                           status	equ	0xFD8
  4358                           
  4359 ;; *************** function _in_low_int *****************
  4360 ;; Defined at:
  4361 ;;		line 31 in file "src/interrupts.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;		None
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;		None
  4366 ;; Return value:  Size  Location     Type
  4367 ;;                  2   31[BANK0 ] int 
  4368 ;; Registers used:
  4369 ;;		wreg, status,2, status,0, cstack
  4370 ;; Tracked objects:
  4371 ;;		On entry : 0/0
  4372 ;;		On exit  : 0/0
  4373 ;;		Unchanged: 0/0
  4374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4375 ;;      Params:         0       2       0       0       0
  4376 ;;      Locals:         0       0       0       0       0
  4377 ;;      Temps:          0       0       0       0       0
  4378 ;;      Totals:         0       2       0       0       0
  4379 ;;Total ram usage:        2 bytes
  4380 ;; Hardware stack levels used:    1
  4381 ;; Hardware stack levels required when called:   11
  4382 ;; This function calls:
  4383 ;;		_in_high_int
  4384 ;; This function is called by:
  4385 ;;		_in_main
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text26
  4390  0018F4                     __ptext26:
  4391                           	opt stack 0
  4392  0018F4                     _in_low_int:
  4393                           	opt stack 17
  4394                           
  4395                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;incstack = 0
  4399  0018F4  ACF2               	btfss	intcon,6,c	;volatile
  4400  0018F6  D007               	goto	l3154
  4401                           
  4402                           ;interrupts.c: 33: return (0);
  4403  0018F8  0E00               	movlw	0
  4404  0018FA  0100               	movlb	0	; () banked
  4405  0018FC  6FDC               	movwf	(?_in_low_int+1)& (0+255),b
  4406  0018FE  0E00               	movlw	0
  4407  001900  0100               	movlb	0	; () banked
  4408  001902  6FDB               	movwf	?_in_low_int& (0+255),b
  4409  001904  0012               	return	
  4410  001906                     l3154:
  4411  001906  EC38  F00E         	call	_in_high_int	;wreg free
  4412  00190A  0100               	movlb	0	; () banked
  4413  00190C  51DA               	movf	(?_in_high_int+1)& (0+255),w,b
  4414  00190E  0100               	movlb	0	; () banked
  4415  001910  11D9               	iorwf	?_in_high_int& (0+255),w,b
  4416  001912  B4D8               	btfsc	status,2,c
  4417  001914  D007               	goto	l3162
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;interrupts.c: 35: return (0);
  4421  001916  0E00               	movlw	0
  4422  001918  0100               	movlb	0	; () banked
  4423  00191A  6FDC               	movwf	(?_in_low_int+1)& (0+255),b
  4424  00191C  0E00               	movlw	0
  4425  00191E  0100               	movlb	0	; () banked
  4426  001920  6FDB               	movwf	?_in_low_int& (0+255),b
  4427  001922  0012               	return	
  4428  001924                     l3162:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;interrupts.c: 37: return (1);
  4432  001924  0E00               	movlw	0
  4433  001926  0100               	movlb	0	; () banked
  4434  001928  6FDC               	movwf	(?_in_low_int+1)& (0+255),b
  4435  00192A  0E01               	movlw	1
  4436  00192C  0100               	movlb	0	; () banked
  4437  00192E  6FDB               	movwf	?_in_low_int& (0+255),b
  4438  001930  0012               	return	
  4439  001932                     __end_of_in_low_int:
  4440                           	opt stack 0
  4441                           tblptru	equ	0xFF8
  4442                           prodh	equ	0xFF4
  4443                           prodl	equ	0xFF3
  4444                           intcon	equ	0xFF2
  4445                           postinc0	equ	0xFEE
  4446                           wreg	equ	0xFE8
  4447                           indf1	equ	0xFE7
  4448                           fsr1h	equ	0xFE2
  4449                           fsr1l	equ	0xFE1
  4450                           indf2	equ	0xFDF
  4451                           postinc2	equ	0xFDE
  4452                           postdec2	equ	0xFDD
  4453                           fsr2h	equ	0xFDA
  4454                           fsr2l	equ	0xFD9
  4455                           status	equ	0xFD8
  4456                           
  4457 ;; *************** function _in_high_int *****************
  4458 ;; Defined at:
  4459 ;;		line 23 in file "src/interrupts.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;		None
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;		None
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  2   29[BANK0 ] int 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4473 ;;      Params:         0       2       0       0       0
  4474 ;;      Locals:         0       0       0       0       0
  4475 ;;      Temps:          0       0       0       0       0
  4476 ;;      Totals:         0       2       0       0       0
  4477 ;;Total ram usage:        2 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; Hardware stack levels required when called:   10
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_in_low_int
  4484 ;;		_in_main
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text27
  4489  001C70                     __ptext27:
  4490                           	opt stack 0
  4491  001C70                     _in_high_int:
  4492                           	opt stack 17
  4493                           
  4494                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;incstack = 0
  4498  001C70  0E00               	movlw	0
  4499  001C72  AEF2               	btfss	intcon,7,c	;volatile
  4500  001C74  0E01               	movlw	1
  4501  001C76  0100               	movlb	0	; () banked
  4502  001C78  6FD9               	movwf	?_in_high_int& (0+255),b
  4503  001C7A  0100               	movlb	0	; () banked
  4504  001C7C  6BDA               	clrf	(?_in_high_int+1)& (0+255),b
  4505  001C7E  0012               	return	
  4506  001C80                     __end_of_in_high_int:
  4507                           	opt stack 0
  4508                           tblptru	equ	0xFF8
  4509                           prodh	equ	0xFF4
  4510                           prodl	equ	0xFF3
  4511                           intcon	equ	0xFF2
  4512                           postinc0	equ	0xFEE
  4513                           wreg	equ	0xFE8
  4514                           indf1	equ	0xFE7
  4515                           fsr1h	equ	0xFE2
  4516                           fsr1l	equ	0xFE1
  4517                           indf2	equ	0xFDF
  4518                           postinc2	equ	0xFDE
  4519                           postdec2	equ	0xFDD
  4520                           fsr2h	equ	0xFDA
  4521                           fsr2l	equ	0xFD9
  4522                           status	equ	0xFD8
  4523                           
  4524 ;; *************** function _check_msg *****************
  4525 ;; Defined at:
  4526 ;;		line 220 in file "src/messages.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  qptr            2   29[BANK0 ] PTR struct __msg_queue
  4529 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      unsigned char 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4541 ;;      Params:         0       2       0       0       0
  4542 ;;      Locals:         0       0       0       0       0
  4543 ;;      Temps:          0       1       0       0       0
  4544 ;;      Totals:         0       3       0       0       0
  4545 ;;Total ram usage:        3 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:   10
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_block_on_To_msgqueues
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text28
  4556  0019DA                     __ptext28:
  4557                           	opt stack 0
  4558  0019DA                     _check_msg:
  4559                           	opt stack 19
  4560                           
  4561                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;incstack = 0
  4565  0019DA  0100               	movlb	0	; () banked
  4566  0019DC  EE20 F035          	lfsr	2,53
  4567  0019E0  0100               	movlb	0	; () banked
  4568  0019E2  51D9               	movf	check_msg@qptr& (0+255),w,b
  4569  0019E4  26D9               	addwf	fsr2l,f,c
  4570  0019E6  0100               	movlb	0	; () banked
  4571  0019E8  51DA               	movf	(check_msg@qptr+1)& (0+255),w,b
  4572  0019EA  22DA               	addwfc	fsr2h,f,c
  4573  0019EC  50DF               	movf	indf2,w,c
  4574  0019EE  0100               	movlb	0	; () banked
  4575  0019F0  6FDB               	movwf	??_check_msg& (0+255),b
  4576  0019F2  0100               	movlb	0	; () banked
  4577  0019F4  51DB               	movf	??_check_msg& (0+255),w,b
  4578  0019F6  0D0D               	mullw	13
  4579  0019F8  50F3               	movf	prodl,w,c
  4580  0019FA  0100               	movlb	0	; () banked
  4581  0019FC  25D9               	addwf	check_msg@qptr& (0+255),w,b
  4582  0019FE  6ED9               	movwf	fsr2l,c
  4583  001A00  50F4               	movf	prodh,w,c
  4584  001A02  0100               	movlb	0	; () banked
  4585  001A04  21DA               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4586  001A06  6EDA               	movwf	fsr2h,c
  4587  001A08  50DF               	movf	indf2,w,c
  4588  001A0A  0012               	return	
  4589  001A0C                     __end_of_check_msg:
  4590                           	opt stack 0
  4591                           tblptru	equ	0xFF8
  4592                           prodh	equ	0xFF4
  4593                           prodl	equ	0xFF3
  4594                           intcon	equ	0xFF2
  4595                           postinc0	equ	0xFEE
  4596                           wreg	equ	0xFE8
  4597                           indf1	equ	0xFE7
  4598                           fsr1h	equ	0xFE2
  4599                           fsr1l	equ	0xFE1
  4600                           indf2	equ	0xFDF
  4601                           postinc2	equ	0xFDE
  4602                           postdec2	equ	0xFDD
  4603                           fsr2h	equ	0xFDA
  4604                           fsr2l	equ	0xFD9
  4605                           status	equ	0xFD8
  4606                           
  4607 ;; *************** function _Delay1KTCYx *****************
  4608 ;; Defined at:
  4609 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  unit            1    wreg     unsigned char 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  unit            1   29[BANK0 ] unsigned char 
  4614 ;; Return value:  Size  Location     Type
  4615 ;;		None               void
  4616 ;; Registers used:
  4617 ;;		wreg
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4623 ;;      Params:         0       0       0       0       0
  4624 ;;      Locals:         0       1       0       0       0
  4625 ;;      Temps:          0       0       0       0       0
  4626 ;;      Totals:         0       1       0       0       0
  4627 ;;Total ram usage:        1 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:   10
  4630 ;; This function calls:
  4631 ;;		Nothing
  4632 ;; This function is called by:
  4633 ;;		_block_on_To_msgqueues
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text29
  4638  001C38                     __ptext29:
  4639                           	opt stack 0
  4640  001C38                     _Delay1KTCYx:
  4641                           	opt stack 19
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;incstack = 0
  4645                           ;Delay1KTCYx@unit stored from wreg
  4646  001C38  0100               	movlb	0	; () banked
  4647  001C3A  6FD9               	movwf	Delay1KTCYx@unit& (0+255),b
  4648  001C3C                     l799:
  4649                           
  4650                           ; BSR set to: 0
  4651                           
  4652                           ; BSR set to: 0
  4653  001C3C  0EFA               	movlw	250
  4654  001C3E                     u2957:
  4655  001C3E  F000               	nop	
  4656  001C40  2EE8               	decfsz	wreg,f,c
  4657  001C42  D7FD               	goto	u2957
  4658  001C44  0100               	movlb	0	; () banked
  4659  001C46  2FD9               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4660  001C48  D7F9               	goto	l799
  4661  001C4A  0012               	return	
  4662  001C4C                     __end_of_Delay1KTCYx:
  4663                           	opt stack 0
  4664                           tblptru	equ	0xFF8
  4665                           prodh	equ	0xFF4
  4666                           prodl	equ	0xFF3
  4667                           intcon	equ	0xFF2
  4668                           postinc0	equ	0xFEE
  4669                           wreg	equ	0xFE8
  4670                           indf1	equ	0xFE7
  4671                           fsr1h	equ	0xFE2
  4672                           fsr1l	equ	0xFE1
  4673                           indf2	equ	0xFDF
  4674                           postinc2	equ	0xFDE
  4675                           postdec2	equ	0xFDD
  4676                           fsr2h	equ	0xFDA
  4677                           fsr2l	equ	0xFD9
  4678                           status	equ	0xFD8
  4679                           
  4680 ;; *************** function _ToMainLow_recvmsg *****************
  4681 ;; Defined at:
  4682 ;;		line 112 in file "src/messages.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  maxlength       1    wreg     unsigned char 
  4685 ;;  msgtype         2   16[BANK1 ] PTR unsigned char 
  4686 ;;		 -> main@msgtype(1), 
  4687 ;;  data            2   18[BANK1 ] PTR void 
  4688 ;;		 -> main@msgbuffer(11), 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  maxlength       1   20[BANK1 ] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  1    wreg      char 
  4693 ;; Registers used:
  4694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4700 ;;      Params:         0       0       4       0       0
  4701 ;;      Locals:         0       0       1       0       0
  4702 ;;      Temps:          0       0       0       0       0
  4703 ;;      Totals:         0       0       5       0       0
  4704 ;;Total ram usage:        5 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:   12
  4707 ;; This function calls:
  4708 ;;		_recv_msg
  4709 ;; This function is called by:
  4710 ;;		_main
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text30
  4715  00196E                     __ptext30:
  4716                           	opt stack 0
  4717  00196E                     _ToMainLow_recvmsg:
  4718                           	opt stack 18
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;incstack = 0
  4722                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4723  00196E  0101               	movlb	1	; () banked
  4724  001970  6FB6               	movwf	ToMainLow_recvmsg@maxlength& (0+255),b
  4725                           
  4726                           ; BSR set to: 1
  4727                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4728  001972  0100               	movlb	0	; () banked
  4729  001974  0E00               	movlw	high _ToMainLow_MQ
  4730  001976  0101               	movlb	1	; () banked
  4731  001978  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  4732  00197A  0100               	movlb	0	; () banked
  4733  00197C  0E86               	movlw	low _ToMainLow_MQ
  4734  00197E  0101               	movlb	1	; () banked
  4735  001980  6FA6               	movwf	recv_msg@qptr& (0+255),b
  4736  001982  C1B6  F1A8         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4737  001986  0101               	movlb	1	; () banked
  4738  001988  C1B3  F1AA         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4739  00198C  0101               	movlb	1	; () banked
  4740  00198E  C1B2  F1A9         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4741  001992  0101               	movlb	1	; () banked
  4742  001994  C1B5  F1AC         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4743  001998  0101               	movlb	1	; () banked
  4744  00199A  C1B4  F1AB         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4745  00199E  EC86  F004         	call	_recv_msg	;wreg free
  4746  0019A2  0012               	return	
  4747  0019A4                     __end_of_ToMainLow_recvmsg:
  4748                           	opt stack 0
  4749                           tblptru	equ	0xFF8
  4750                           prodh	equ	0xFF4
  4751                           prodl	equ	0xFF3
  4752                           intcon	equ	0xFF2
  4753                           postinc0	equ	0xFEE
  4754                           wreg	equ	0xFE8
  4755                           indf1	equ	0xFE7
  4756                           fsr1h	equ	0xFE2
  4757                           fsr1l	equ	0xFE1
  4758                           indf2	equ	0xFDF
  4759                           postinc2	equ	0xFDE
  4760                           postdec2	equ	0xFDD
  4761                           fsr2h	equ	0xFDA
  4762                           fsr2l	equ	0xFD9
  4763                           status	equ	0xFD8
  4764                           
  4765 ;; *************** function _ToMainHigh_recvmsg *****************
  4766 ;; Defined at:
  4767 ;;		line 135 in file "src/messages.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  maxlength       1    wreg     unsigned char 
  4770 ;;  msgtype         2   16[BANK1 ] PTR unsigned char 
  4771 ;;		 -> main@msgtype(1), 
  4772 ;;  data            2   18[BANK1 ] PTR void 
  4773 ;;		 -> main@msgbuffer(11), 
  4774 ;; Auto vars:     Size  Location     Type
  4775 ;;  maxlength       1   20[BANK1 ] unsigned char 
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      char 
  4778 ;; Registers used:
  4779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4785 ;;      Params:         0       0       4       0       0
  4786 ;;      Locals:         0       0       1       0       0
  4787 ;;      Temps:          0       0       0       0       0
  4788 ;;      Totals:         0       0       5       0       0
  4789 ;;Total ram usage:        5 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:   12
  4792 ;; This function calls:
  4793 ;;		_recv_msg
  4794 ;; This function is called by:
  4795 ;;		_main
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           	psect	text31
  4800  0019A4                     __ptext31:
  4801                           	opt stack 0
  4802  0019A4                     _ToMainHigh_recvmsg:
  4803                           	opt stack 18
  4804                           
  4805                           ;incstack = 0
  4806                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4807  0019A4  0101               	movlb	1	; () banked
  4808  0019A6  6FB6               	movwf	ToMainHigh_recvmsg@maxlength& (0+255),b
  4809                           
  4810                           ; BSR set to: 1
  4811                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4812  0019A8  0101               	movlb	1	; () banked
  4813  0019AA  0E01               	movlw	high _ToMainHigh_MQ
  4814  0019AC  0101               	movlb	1	; () banked
  4815  0019AE  6FA7               	movwf	(recv_msg@qptr+1)& (0+255),b
  4816  0019B0  0101               	movlb	1	; () banked
  4817  0019B2  0E6C               	movlw	low _ToMainHigh_MQ
  4818  0019B4  0101               	movlb	1	; () banked
  4819  0019B6  6FA6               	movwf	recv_msg@qptr& (0+255),b
  4820  0019B8  C1B6  F1A8         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4821  0019BC  0101               	movlb	1	; () banked
  4822  0019BE  C1B3  F1AA         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4823  0019C2  0101               	movlb	1	; () banked
  4824  0019C4  C1B2  F1A9         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4825  0019C8  0101               	movlb	1	; () banked
  4826  0019CA  C1B5  F1AC         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4827  0019CE  0101               	movlb	1	; () banked
  4828  0019D0  C1B4  F1AB         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4829  0019D4  EC86  F004         	call	_recv_msg	;wreg free
  4830  0019D8  0012               	return	
  4831  0019DA                     __end_of_ToMainHigh_recvmsg:
  4832                           	opt stack 0
  4833                           tblptru	equ	0xFF8
  4834                           prodh	equ	0xFF4
  4835                           prodl	equ	0xFF3
  4836                           intcon	equ	0xFF2
  4837                           postinc0	equ	0xFEE
  4838                           wreg	equ	0xFE8
  4839                           indf1	equ	0xFE7
  4840                           fsr1h	equ	0xFE2
  4841                           fsr1l	equ	0xFE1
  4842                           indf2	equ	0xFDF
  4843                           postinc2	equ	0xFDE
  4844                           postdec2	equ	0xFDD
  4845                           fsr2h	equ	0xFDA
  4846                           fsr2l	equ	0xFD9
  4847                           status	equ	0xFD8
  4848                           
  4849 ;; *************** function _recv_msg *****************
  4850 ;; Defined at:
  4851 ;;		line 63 in file "src/messages.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  qptr            2    4[BANK1 ] PTR struct __msg_queue
  4854 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4855 ;;  maxlength       1    6[BANK1 ] unsigned char 
  4856 ;;  msgtype         2    7[BANK1 ] PTR unsigned char 
  4857 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  4858 ;;  data            2    9[BANK1 ] PTR void 
  4859 ;;		 -> main@msgbuffer(11), NULL(0), 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  qmsg            2   14[BANK1 ] PTR struct __msg
  4862 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4863 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4864 ;;  tlength         2   12[BANK1 ] unsigned int 
  4865 ;;  slot            1   11[BANK1 ] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      char 
  4868 ;; Registers used:
  4869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4875 ;;      Params:         0       0       7       0       0
  4876 ;;      Locals:         0       0       5       0       0
  4877 ;;      Temps:          0       2       0       0       0
  4878 ;;      Totals:         0       2      12       0       0
  4879 ;;Total ram usage:       14 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:   11
  4882 ;; This function calls:
  4883 ;;		_memcpy
  4884 ;; This function is called by:
  4885 ;;		_ToMainLow_recvmsg
  4886 ;;		_ToMainHigh_recvmsg
  4887 ;;		_FromMainHigh_recvmsg
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text32
  4892  00090C                     __ptext32:
  4893                           	opt stack 0
  4894  00090C                     _recv_msg:
  4895                           	opt stack 18
  4896                           
  4897                           ;messages.c: 64: unsigned char slot;
  4898                           ;messages.c: 68: msg *qmsg;
  4899                           ;messages.c: 69: size_t tlength;
  4900                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4901                           
  4902                           ;incstack = 0
  4903  00090C  0101               	movlb	1	; () banked
  4904  00090E  EE20 F035          	lfsr	2,53
  4905  000912  0101               	movlb	1	; () banked
  4906  000914  51A6               	movf	recv_msg@qptr& (0+255),w,b
  4907  000916  26D9               	addwf	fsr2l,f,c
  4908  000918  0101               	movlb	1	; () banked
  4909  00091A  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4910  00091C  22DA               	addwfc	fsr2h,f,c
  4911  00091E  50DF               	movf	indf2,w,c
  4912  000920  0101               	movlb	1	; () banked
  4913  000922  6FAD               	movwf	recv_msg@slot& (0+255),b
  4914                           
  4915                           ; BSR set to: 1
  4916                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4917  000924  0101               	movlb	1	; () banked
  4918  000926  51AD               	movf	recv_msg@slot& (0+255),w,b
  4919  000928  0D0D               	mullw	13
  4920  00092A  50F3               	movf	prodl,w,c
  4921  00092C  0101               	movlb	1	; () banked
  4922  00092E  25A6               	addwf	recv_msg@qptr& (0+255),w,b
  4923  000930  0101               	movlb	1	; () banked
  4924  000932  6FB0               	movwf	recv_msg@qmsg& (0+255),b
  4925  000934  50F4               	movf	prodh,w,c
  4926  000936  0101               	movlb	1	; () banked
  4927  000938  21A7               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4928  00093A  0101               	movlb	1	; () banked
  4929  00093C  6FB1               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4930                           
  4931                           ; BSR set to: 1
  4932                           ;messages.c: 74: if (qmsg->full == 1) {
  4933  00093E  0E01               	movlw	1
  4934  000940  C1B0  FFD9         	movff	recv_msg@qmsg,fsr2l
  4935  000944  C1B1  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4936  000948  62DF               	cpfseq	indf2,c
  4937  00094A  D06F               	goto	l3310
  4938                           
  4939                           ; BSR set to: 1
  4940                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4941  00094C  0101               	movlb	1	; () banked
  4942  00094E  EE20 F001          	lfsr	2,1
  4943  000952  0101               	movlb	1	; () banked
  4944  000954  51B0               	movf	recv_msg@qmsg& (0+255),w,b
  4945  000956  26D9               	addwf	fsr2l,f,c
  4946  000958  0101               	movlb	1	; () banked
  4947  00095A  51B1               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4948  00095C  22DA               	addwfc	fsr2h,f,c
  4949  00095E  50DF               	movf	indf2,w,c
  4950  000960  0101               	movlb	1	; () banked
  4951  000962  5DA8               	subwf	recv_msg@maxlength& (0+255),w,b
  4952  000964  B0D8               	btfsc	status,0,c
  4953  000966  D002               	goto	l3294
  4954                           
  4955                           ; BSR set to: 1
  4956                           ;messages.c: 77: return (-3);
  4957  000968  0EFD               	movlw	253
  4958  00096A  0012               	return	
  4959  00096C                     l3294:
  4960                           
  4961                           ; BSR set to: 1
  4962                           ;messages.c: 78: }
  4963                           ;messages.c: 80: tlength = qmsg->length;
  4964  00096C  0101               	movlb	1	; () banked
  4965  00096E  EE20 F001          	lfsr	2,1
  4966  000972  0101               	movlb	1	; () banked
  4967  000974  51B0               	movf	recv_msg@qmsg& (0+255),w,b
  4968  000976  26D9               	addwf	fsr2l,f,c
  4969  000978  0101               	movlb	1	; () banked
  4970  00097A  51B1               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4971  00097C  22DA               	addwfc	fsr2h,f,c
  4972  00097E  50DF               	movf	indf2,w,c
  4973  000980  0100               	movlb	0	; () banked
  4974  000982  6FDF               	movwf	??_recv_msg& (0+255),b
  4975  000984  0100               	movlb	0	; () banked
  4976  000986  51DF               	movf	??_recv_msg& (0+255),w,b
  4977  000988  0101               	movlb	1	; () banked
  4978  00098A  6FAE               	movwf	recv_msg@tlength& (0+255),b
  4979  00098C  0101               	movlb	1	; () banked
  4980  00098E  6BAF               	clrf	(recv_msg@tlength+1)& (0+255),b
  4981                           
  4982                           ; BSR set to: 1
  4983                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4984  000990  0101               	movlb	1	; () banked
  4985  000992  0100               	movlb	0	; () banked
  4986  000994  C1AC  F0DA         	movff	recv_msg@data+1,memcpy@d1+1
  4987  000998  0101               	movlb	1	; () banked
  4988  00099A  0100               	movlb	0	; () banked
  4989  00099C  C1AB  F0D9         	movff	recv_msg@data,memcpy@d1
  4990  0009A0  0E03               	movlw	3
  4991  0009A2  0101               	movlb	1	; () banked
  4992  0009A4  25B0               	addwf	recv_msg@qmsg& (0+255),w,b
  4993  0009A6  0100               	movlb	0	; () banked
  4994  0009A8  6FDF               	movwf	??_recv_msg& (0+255),b
  4995  0009AA  0E00               	movlw	0
  4996  0009AC  0101               	movlb	1	; () banked
  4997  0009AE  21B1               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4998  0009B0  0100               	movlb	0	; () banked
  4999  0009B2  6FE0               	movwf	(??_recv_msg+1)& (0+255),b
  5000  0009B4  C0DF  F0DB         	movff	??_recv_msg,memcpy@s1
  5001  0009B8  C0E0  F0DC         	movff	??_recv_msg+1,memcpy@s1+1
  5002  0009BC  C1AE  F0DD         	movff	recv_msg@tlength,memcpy@n
  5003  0009C0  C1AF  F0DE         	movff	recv_msg@tlength+1,memcpy@n+1
  5004  0009C4  EC49  F00B         	call	_memcpy	;wreg free
  5005                           
  5006                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  5007  0009C8  0101               	movlb	1	; () banked
  5008  0009CA  EE20 F035          	lfsr	2,53
  5009  0009CE  0101               	movlb	1	; () banked
  5010  0009D0  51A6               	movf	recv_msg@qptr& (0+255),w,b
  5011  0009D2  26D9               	addwf	fsr2l,f,c
  5012  0009D4  0101               	movlb	1	; () banked
  5013  0009D6  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5014  0009D8  22DA               	addwfc	fsr2h,f,c
  5015  0009DA  0101               	movlb	1	; () banked
  5016  0009DC  EE10 F035          	lfsr	1,53
  5017  0009E0  0101               	movlb	1	; () banked
  5018  0009E2  51A6               	movf	recv_msg@qptr& (0+255),w,b
  5019  0009E4  26E1               	addwf	fsr1l,f,c
  5020  0009E6  0101               	movlb	1	; () banked
  5021  0009E8  51A7               	movf	(recv_msg@qptr+1)& (0+255),w,b
  5022  0009EA  22E2               	addwfc	fsr1h,f,c
  5023  0009EC  50E7               	movf	indf1,w,c
  5024  0009EE  0100               	movlb	0	; () banked
  5025  0009F0  6FDF               	movwf	??_recv_msg& (0+255),b
  5026  0009F2  0100               	movlb	0	; () banked
  5027  0009F4  29DF               	incf	??_recv_msg& (0+255),w,b
  5028  0009F6  0B03               	andlw	3
  5029  0009F8  6EDF               	movwf	indf2,c
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  5033  0009FA  0101               	movlb	1	; () banked
  5034  0009FC  EE20 F002          	lfsr	2,2
  5035  000A00  0101               	movlb	1	; () banked
  5036  000A02  51B0               	movf	recv_msg@qmsg& (0+255),w,b
  5037  000A04  26D9               	addwf	fsr2l,f,c
  5038  000A06  0101               	movlb	1	; () banked
  5039  000A08  51B1               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  5040  000A0A  22DA               	addwfc	fsr2h,f,c
  5041  000A0C  C1A9  FFE1         	movff	recv_msg@msgtype,fsr1l
  5042  000A10  C1AA  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  5043  000A14  CFDF FFE7          	movff	indf2,indf1
  5044                           
  5045                           ; BSR set to: 1
  5046                           ;messages.c: 91: qmsg->full = 0;
  5047  000A18  C1B0  FFD9         	movff	recv_msg@qmsg,fsr2l
  5048  000A1C  C1B1  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  5049  000A20  0E00               	movlw	0
  5050  000A22  6EDF               	movwf	indf2,c
  5051                           
  5052                           ; BSR set to: 1
  5053                           ;messages.c: 92: return (tlength);
  5054  000A24  0101               	movlb	1	; () banked
  5055  000A26  51AE               	movf	recv_msg@tlength& (0+255),w,b
  5056  000A28  0012               	return	
  5057  000A2A                     l3310:
  5058                           
  5059                           ; BSR set to: 1
  5060                           ;messages.c: 94: return (-4);
  5061  000A2A  0EFC               	movlw	252
  5062  000A2C  0012               	return	
  5063  000A2E                     __end_of_recv_msg:
  5064                           	opt stack 0
  5065                           tblptru	equ	0xFF8
  5066                           prodh	equ	0xFF4
  5067                           prodl	equ	0xFF3
  5068                           intcon	equ	0xFF2
  5069                           postinc0	equ	0xFEE
  5070                           wreg	equ	0xFE8
  5071                           indf1	equ	0xFE7
  5072                           fsr1h	equ	0xFE2
  5073                           fsr1l	equ	0xFE1
  5074                           indf2	equ	0xFDF
  5075                           postinc2	equ	0xFDE
  5076                           postdec2	equ	0xFDD
  5077                           fsr2h	equ	0xFDA
  5078                           fsr2l	equ	0xFD9
  5079                           status	equ	0xFD8
  5080                           
  5081 ;; *************** function _memcpy *****************
  5082 ;; Defined at:
  5083 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  d1              2   29[BANK0 ] PTR void 
  5086 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5087 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5088 ;;		 -> main@msgbuffer(11), NULL(0), 
  5089 ;;  s1              2   31[BANK0 ] PTR const void 
  5090 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5091 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5092 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  5093 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  5094 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5095 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  5096 ;;  n               2   33[BANK0 ] unsigned int 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  s               2    2[BANK1 ] PTR const unsigned char 
  5099 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5100 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5101 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  5102 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  5103 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5104 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  5105 ;;  d               2    0[BANK1 ] PTR unsigned char 
  5106 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5107 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5108 ;;		 -> main@msgbuffer(11), NULL(0), 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  2   29[BANK0 ] PTR void 
  5111 ;; Registers used:
  5112 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5118 ;;      Params:         0       6       0       0       0
  5119 ;;      Locals:         0       0       4       0       0
  5120 ;;      Temps:          0       0       0       0       0
  5121 ;;      Totals:         0       6       4       0       0
  5122 ;;Total ram usage:       10 bytes
  5123 ;; Hardware stack levels used:    1
  5124 ;; Hardware stack levels required when called:   10
  5125 ;; This function calls:
  5126 ;;		Nothing
  5127 ;; This function is called by:
  5128 ;;		_send_msg
  5129 ;;		_recv_msg
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text33
  5134  001692                     __ptext33:
  5135                           	opt stack 0
  5136  001692                     _memcpy:
  5137                           	opt stack 17
  5138                           
  5139                           ; BSR set to: 1
  5140                           ;incstack = 0
  5141  001692  0100               	movlb	0	; () banked
  5142  001694  0101               	movlb	1	; () banked
  5143  001696  C0DC  F1A5         	movff	memcpy@s1+1,memcpy@s+1
  5144  00169A  0100               	movlb	0	; () banked
  5145  00169C  0101               	movlb	1	; () banked
  5146  00169E  C0DB  F1A4         	movff	memcpy@s1,memcpy@s
  5147  0016A2  0100               	movlb	0	; () banked
  5148  0016A4  0101               	movlb	1	; () banked
  5149  0016A6  C0DA  F1A3         	movff	memcpy@d1+1,memcpy@d+1
  5150  0016AA  0100               	movlb	0	; () banked
  5151  0016AC  0101               	movlb	1	; () banked
  5152  0016AE  C0D9  F1A2         	movff	memcpy@d1,memcpy@d
  5153  0016B2  D010               	goto	l3096
  5154  0016B4                     l3090:
  5155  0016B4  C1A4  FFD9         	movff	memcpy@s,fsr2l
  5156  0016B8  C1A5  FFDA         	movff	memcpy@s+1,fsr2h
  5157  0016BC  C1A2  FFE1         	movff	memcpy@d,fsr1l
  5158  0016C0  C1A3  FFE2         	movff	memcpy@d+1,fsr1h
  5159  0016C4  CFDF FFE7          	movff	indf2,indf1
  5160  0016C8  0101               	movlb	1	; () banked
  5161  0016CA  4BA4               	infsnz	memcpy@s& (0+255),f,b
  5162  0016CC  2BA5               	incf	(memcpy@s+1)& (0+255),f,b
  5163                           
  5164                           ; BSR set to: 1
  5165  0016CE  0101               	movlb	1	; () banked
  5166  0016D0  4BA2               	infsnz	memcpy@d& (0+255),f,b
  5167  0016D2  2BA3               	incf	(memcpy@d+1)& (0+255),f,b
  5168  0016D4                     l3096:
  5169                           
  5170                           ; BSR set to: 1
  5171  0016D4  0100               	movlb	0	; () banked
  5172  0016D6  07DD               	decf	memcpy@n& (0+255),f,b
  5173  0016D8  A0D8               	btfss	status,0,c
  5174  0016DA  07DE               	decf	(memcpy@n+1)& (0+255),f,b
  5175  0016DC  0100               	movlb	0	; () banked
  5176  0016DE  29DD               	incf	memcpy@n& (0+255),w,b
  5177  0016E0  B4D8               	btfsc	status,2,c
  5178  0016E2  29DE               	incf	(memcpy@n+1)& (0+255),w,b
  5179  0016E4  B4D8               	btfsc	status,2,c
  5180                           
  5181                           ; BSR set to: 0
  5182                           
  5183                           ; BSR set to: 0
  5184                           ;	Return value of _memcpy is never used
  5185  0016E6  0012               	return	
  5186  0016E8  D7E5               	goto	l3090
  5187  0016EA                     __end_of_memcpy:
  5188                           	opt stack 0
  5189                           tblptru	equ	0xFF8
  5190                           prodh	equ	0xFF4
  5191                           prodl	equ	0xFF3
  5192                           intcon	equ	0xFF2
  5193                           postinc0	equ	0xFEE
  5194                           wreg	equ	0xFE8
  5195                           indf1	equ	0xFE7
  5196                           fsr1h	equ	0xFE2
  5197                           fsr1l	equ	0xFE1
  5198                           indf2	equ	0xFDF
  5199                           postinc2	equ	0xFDE
  5200                           postdec2	equ	0xFDD
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function _OpenUSART *****************
  5206 ;; Defined at:
  5207 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uopen.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  config          1    wreg     unsigned char 
  5210 ;;  spbrg           2   29[BANK0 ] unsigned int 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  config          1   34[BANK0 ] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;		None               void
  5215 ;; Registers used:
  5216 ;;		wreg, status,2
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5222 ;;      Params:         0       2       0       0       0
  5223 ;;      Locals:         0       1       0       0       0
  5224 ;;      Temps:          0       3       0       0       0
  5225 ;;      Totals:         0       6       0       0       0
  5226 ;;Total ram usage:        6 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:   10
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_main
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           	psect	text34
  5237  00148A                     __ptext34:
  5238                           	opt stack 0
  5239  00148A                     _OpenUSART:
  5240                           	opt stack 20
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;incstack = 0
  5244                           ;OpenUSART@config stored from wreg
  5245  00148A  0100               	movlb	0	; () banked
  5246  00148C  6FDE               	movwf	OpenUSART@config& (0+255),b
  5247                           
  5248                           ; BSR set to: 0
  5249  00148E  0E00               	movlw	0
  5250  001490  6EAC               	movwf	4012,c	;volatile
  5251  001492  0E00               	movlw	0
  5252  001494  6EAB               	movwf	4011,c	;volatile
  5253                           
  5254                           ; BSR set to: 0
  5255  001496  0100               	movlb	0	; () banked
  5256  001498  B1DE               	btfsc	OpenUSART@config& (0+255),0,b
  5257                           
  5258                           ; BSR set to: 0
  5259  00149A  88AC               	bsf	4012,4,c	;volatile
  5260                           
  5261                           ; BSR set to: 0
  5262                           
  5263                           ; BSR set to: 0
  5264  00149C  0100               	movlb	0	; () banked
  5265  00149E  A3DE               	btfss	OpenUSART@config& (0+255),1,b
  5266  0014A0  D002               	goto	l3658
  5267                           
  5268                           ; BSR set to: 0
  5269  0014A2  8CAC               	bsf	4012,6,c	;volatile
  5270  0014A4  8CAB               	bsf	4011,6,c	;volatile
  5271  0014A6                     l3658:
  5272                           
  5273                           ; BSR set to: 0
  5274  0014A6  0100               	movlb	0	; () banked
  5275  0014A8  B5DE               	btfsc	OpenUSART@config& (0+255),2,b
  5276                           
  5277                           ; BSR set to: 0
  5278  0014AA  8EAC               	bsf	4012,7,c	;volatile
  5279                           
  5280                           ; BSR set to: 0
  5281                           
  5282                           ; BSR set to: 0
  5283  0014AC  0100               	movlb	0	; () banked
  5284  0014AE  A7DE               	btfss	OpenUSART@config& (0+255),3,b
  5285  0014B0  D002               	goto	l551
  5286                           
  5287                           ; BSR set to: 0
  5288  0014B2  88AB               	bsf	4011,4,c	;volatile
  5289  0014B4  D001               	goto	l3666
  5290  0014B6                     l551:
  5291                           
  5292                           ; BSR set to: 0
  5293  0014B6  8AAB               	bsf	4011,5,c	;volatile
  5294  0014B8                     l3666:
  5295                           
  5296                           ; BSR set to: 0
  5297  0014B8  0100               	movlb	0	; () banked
  5298  0014BA  B9DE               	btfsc	OpenUSART@config& (0+255),4,b
  5299                           
  5300                           ; BSR set to: 0
  5301  0014BC  84AC               	bsf	4012,2,c	;volatile
  5302                           
  5303                           ; BSR set to: 0
  5304  0014BE  989E               	bcf	3998,4,c	;volatile
  5305                           
  5306                           ; BSR set to: 0
  5307  0014C0  0100               	movlb	0	; () banked
  5308  0014C2  BBDE               	btfsc	OpenUSART@config& (0+255),5,b
  5309                           
  5310                           ; BSR set to: 0
  5311  0014C4  86AB               	bsf	4011,3,c	;volatile
  5312                           
  5313                           ; BSR set to: 0
  5314                           
  5315                           ; BSR set to: 0
  5316  0014C6  0100               	movlb	0	; () banked
  5317  0014C8  ADDE               	btfss	OpenUSART@config& (0+255),6,b
  5318  0014CA  D002               	goto	l555
  5319                           
  5320                           ; BSR set to: 0
  5321  0014CC  8A9D               	bsf	3997,5,c	;volatile
  5322  0014CE  D001               	goto	l556
  5323  0014D0                     l555:
  5324                           
  5325                           ; BSR set to: 0
  5326  0014D0  9A9D               	bcf	3997,5,c	;volatile
  5327  0014D2                     l556:
  5328                           
  5329                           ; BSR set to: 0
  5330  0014D2  9A9E               	bcf	3998,5,c	;volatile
  5331                           
  5332                           ; BSR set to: 0
  5333  0014D4  0100               	movlb	0	; () banked
  5334  0014D6  AFDE               	btfss	OpenUSART@config& (0+255),7,b
  5335  0014D8  D002               	goto	l557
  5336                           
  5337                           ; BSR set to: 0
  5338  0014DA  889D               	bsf	3997,4,c	;volatile
  5339  0014DC  D001               	goto	l558
  5340  0014DE                     l557:
  5341                           
  5342                           ; BSR set to: 0
  5343  0014DE  989D               	bcf	3997,4,c	;volatile
  5344  0014E0                     l558:
  5345                           
  5346                           ; BSR set to: 0
  5347  0014E0  C0D9  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5348                           
  5349                           ; BSR set to: 0
  5350  0014E4  0100               	movlb	0	; () banked
  5351  0014E6  C0DA  F0DB         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5352  0014EA  C0DB  F0DC         	movff	??_OpenUSART,??_OpenUSART+1
  5353  0014EE  0100               	movlb	0	; () banked
  5354  0014F0  6BDD               	clrf	(??_OpenUSART+2)& (0+255),b
  5355  0014F2  0100               	movlb	0	; () banked
  5356  0014F4  51DC               	movf	(??_OpenUSART+1)& (0+255),w,b
  5357  0014F6  6EB0               	movwf	4016,c	;volatile
  5358                           
  5359                           ; BSR set to: 0
  5360  0014F8  8AAC               	bsf	4012,5,c	;volatile
  5361                           
  5362                           ; BSR set to: 0
  5363  0014FA  8EAB               	bsf	4011,7,c	;volatile
  5364                           
  5365                           ; BSR set to: 0
  5366  0014FC  9C94               	bcf	3988,6,c	;volatile
  5367                           
  5368                           ; BSR set to: 0
  5369  0014FE  8E94               	bsf	3988,7,c	;volatile
  5370                           
  5371                           ; BSR set to: 0
  5372  001500  A8AC               	btfss	4012,4,c	;volatile
  5373  001502  0012               	return	
  5374                           
  5375                           ; BSR set to: 0
  5376  001504  BEAC               	btfsc	4012,7,c	;volatile
  5377  001506  0012               	return	
  5378                           
  5379                           ; BSR set to: 0
  5380  001508  8C94               	bsf	3988,6,c	;volatile
  5381  00150A  0012               	return	
  5382  00150C                     __end_of_OpenUSART:
  5383                           	opt stack 0
  5384                           tblptru	equ	0xFF8
  5385                           prodh	equ	0xFF4
  5386                           prodl	equ	0xFF3
  5387                           intcon	equ	0xFF2
  5388                           postinc0	equ	0xFEE
  5389                           wreg	equ	0xFE8
  5390                           indf1	equ	0xFE7
  5391                           fsr1h	equ	0xFE2
  5392                           fsr1l	equ	0xFE1
  5393                           indf2	equ	0xFDF
  5394                           postinc2	equ	0xFDE
  5395                           postdec2	equ	0xFDD
  5396                           fsr2h	equ	0xFDA
  5397                           fsr2l	equ	0xFD9
  5398                           status	equ	0xFD8
  5399                           
  5400 ;; *************** function _OpenTimer1 *****************
  5401 ;; Defined at:
  5402 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t1open.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  config          1    wreg     unsigned char 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  config          1   29[BANK0 ] unsigned char 
  5407 ;; Return value:  Size  Location     Type
  5408 ;;		None               void
  5409 ;; Registers used:
  5410 ;;		wreg, status,2, status,0
  5411 ;; Tracked objects:
  5412 ;;		On entry : 0/0
  5413 ;;		On exit  : 0/0
  5414 ;;		Unchanged: 0/0
  5415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5416 ;;      Params:         0       0       0       0       0
  5417 ;;      Locals:         0       1       0       0       0
  5418 ;;      Temps:          0       0       0       0       0
  5419 ;;      Totals:         0       1       0       0       0
  5420 ;;Total ram usage:        1 bytes
  5421 ;; Hardware stack levels used:    1
  5422 ;; Hardware stack levels required when called:   10
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_main
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text35
  5431  001A0C                     __ptext35:
  5432                           	opt stack 0
  5433  001A0C                     _OpenTimer1:
  5434                           	opt stack 20
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;incstack = 0
  5438                           ;OpenTimer1@config stored from wreg
  5439  001A0C  0100               	movlb	0	; () banked
  5440  001A0E  6FD9               	movwf	OpenTimer1@config& (0+255),b
  5441                           
  5442                           ; BSR set to: 0
  5443  001A10  0100               	movlb	0	; () banked
  5444  001A12  51D9               	movf	OpenTimer1@config& (0+255),w,b
  5445  001A14  0B7E               	andlw	126
  5446  001A16  6ECD               	movwf	4045,c	;volatile
  5447                           
  5448                           ; BSR set to: 0
  5449  001A18  0100               	movlb	0	; () banked
  5450  001A1A  ADD9               	btfss	OpenTimer1@config& (0+255),6,b
  5451  001A1C  D002               	goto	l514
  5452                           
  5453                           ; BSR set to: 0
  5454  001A1E  8ECD               	bsf	4045,7,c	;volatile
  5455  001A20  D001               	goto	l3640
  5456  001A22                     l514:
  5457                           
  5458                           ; BSR set to: 0
  5459  001A22  9ECD               	bcf	4045,7,c	;volatile
  5460  001A24                     l3640:
  5461                           
  5462                           ; BSR set to: 0
  5463  001A24  0E00               	movlw	0
  5464  001A26  6ECF               	movwf	4047,c	;volatile
  5465  001A28  0E00               	movlw	0
  5466  001A2A  6ECE               	movwf	4046,c	;volatile
  5467                           
  5468                           ; BSR set to: 0
  5469  001A2C  909E               	bcf	3998,0,c	;volatile
  5470                           
  5471                           ; BSR set to: 0
  5472  001A2E  0100               	movlb	0	; () banked
  5473  001A30  AFD9               	btfss	OpenTimer1@config& (0+255),7,b
  5474  001A32  D002               	goto	l516
  5475                           
  5476                           ; BSR set to: 0
  5477  001A34  809D               	bsf	3997,0,c	;volatile
  5478  001A36  D001               	goto	l517
  5479  001A38                     l516:
  5480                           
  5481                           ; BSR set to: 0
  5482  001A38  909D               	bcf	3997,0,c	;volatile
  5483  001A3A                     l517:
  5484                           
  5485                           ; BSR set to: 0
  5486  001A3A  80CD               	bsf	4045,0,c	;volatile
  5487                           
  5488                           ; BSR set to: 0
  5489  001A3C  0012               	return	
  5490  001A3E                     __end_of_OpenTimer1:
  5491                           	opt stack 0
  5492                           tblptru	equ	0xFF8
  5493                           prodh	equ	0xFF4
  5494                           prodl	equ	0xFF3
  5495                           intcon	equ	0xFF2
  5496                           postinc0	equ	0xFEE
  5497                           wreg	equ	0xFE8
  5498                           indf1	equ	0xFE7
  5499                           fsr1h	equ	0xFE2
  5500                           fsr1l	equ	0xFE1
  5501                           indf2	equ	0xFDF
  5502                           postinc2	equ	0xFDE
  5503                           postdec2	equ	0xFDD
  5504                           fsr2h	equ	0xFDA
  5505                           fsr2l	equ	0xFD9
  5506                           status	equ	0xFD8
  5507                           
  5508 ;; *************** function _OpenTimer0 *****************
  5509 ;; Defined at:
  5510 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\Timers\t0open.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  config          1    wreg     unsigned char 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  config          1   29[BANK0 ] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5524 ;;      Params:         0       0       0       0       0
  5525 ;;      Locals:         0       1       0       0       0
  5526 ;;      Temps:          0       0       0       0       0
  5527 ;;      Totals:         0       1       0       0       0
  5528 ;;Total ram usage:        1 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:   10
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_main
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text36
  5539  001B44                     __ptext36:
  5540                           	opt stack 0
  5541  001B44                     _OpenTimer0:
  5542                           	opt stack 20
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;incstack = 0
  5546                           ;OpenTimer0@config stored from wreg
  5547  001B44  0100               	movlb	0	; () banked
  5548  001B46  6FD9               	movwf	OpenTimer0@config& (0+255),b
  5549                           
  5550                           ; BSR set to: 0
  5551  001B48  0100               	movlb	0	; () banked
  5552  001B4A  51D9               	movf	OpenTimer0@config& (0+255),w,b
  5553  001B4C  0B7F               	andlw	127
  5554  001B4E  6ED5               	movwf	4053,c	;volatile
  5555                           
  5556                           ; BSR set to: 0
  5557  001B50  0E00               	movlw	0
  5558  001B52  6ED7               	movwf	4055,c	;volatile
  5559                           
  5560                           ; BSR set to: 0
  5561  001B54  0E00               	movlw	0
  5562  001B56  6ED6               	movwf	4054,c	;volatile
  5563                           
  5564                           ; BSR set to: 0
  5565  001B58  94F2               	bcf	intcon,2,c	;volatile
  5566                           
  5567                           ; BSR set to: 0
  5568  001B5A  0100               	movlb	0	; () banked
  5569  001B5C  AFD9               	btfss	OpenTimer0@config& (0+255),7,b
  5570  001B5E  D002               	goto	l490
  5571                           
  5572                           ; BSR set to: 0
  5573  001B60  8AF2               	bsf	intcon,5,c	;volatile
  5574  001B62  D001               	goto	l491
  5575  001B64                     l490:
  5576                           
  5577                           ; BSR set to: 0
  5578  001B64  9AF2               	bcf	intcon,5,c	;volatile
  5579  001B66                     l491:
  5580                           
  5581                           ; BSR set to: 0
  5582  001B66  8ED5               	bsf	4053,7,c	;volatile
  5583                           
  5584                           ; BSR set to: 0
  5585  001B68  0012               	return	
  5586  001B6A                     __end_of_OpenTimer0:
  5587                           	opt stack 0
  5588                           tblptru	equ	0xFF8
  5589                           prodh	equ	0xFF4
  5590                           prodl	equ	0xFF3
  5591                           intcon	equ	0xFF2
  5592                           postinc0	equ	0xFEE
  5593                           wreg	equ	0xFE8
  5594                           indf1	equ	0xFE7
  5595                           fsr1h	equ	0xFE2
  5596                           fsr1l	equ	0xFE1
  5597                           indf2	equ	0xFDF
  5598                           postinc2	equ	0xFDE
  5599                           postdec2	equ	0xFDD
  5600                           fsr2h	equ	0xFDA
  5601                           fsr2l	equ	0xFD9
  5602                           status	equ	0xFD8
  5603                           
  5604 ;; *************** function _InterruptHandlerLow *****************
  5605 ;; Defined at:
  5606 ;;		line 116 in file "src/interrupts.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;		None
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;		None
  5611 ;; Return value:  Size  Location     Type
  5612 ;;		None               void
  5613 ;; Registers used:
  5614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5620 ;;      Params:         0       0       0       0       0
  5621 ;;      Locals:         0       0       0       0       0
  5622 ;;      Temps:         17       0       0       0       0
  5623 ;;      Totals:        17       0       0       0       0
  5624 ;;Total ram usage:       17 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    9
  5627 ;; This function calls:
  5628 ;;		_uart_recv_int_handler
  5629 ;;		_uart_trans_int_handler
  5630 ;;		i1_ToMainLow_sendmsg
  5631 ;; This function is called by:
  5632 ;;		Interrupt level 1
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	intcodelo
  5637  000018                     __pintcodelo:
  5638                           	opt stack 0
  5639  000018                     _InterruptHandlerLow:
  5640                           	opt stack 16
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;incstack = 0
  5644  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  5645  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  5646  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  5647  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  5648  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  5649  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  5650  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  5651  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  5652  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  5653  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  5654  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  5655  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  5656  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  5657  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  5658  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  5659  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  5660  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  5661                           
  5662                           ;interrupts.c: 118: if (PIR1bits.TMR1IF) {
  5663  00005C  A09E               	btfss	3998,0,c	;volatile
  5664  00005E  D00A               	goto	i1l3854
  5665                           
  5666                           ;interrupts.c: 119: PIR1bits.TMR1IF = 0;
  5667  000060  909E               	bcf	3998,0,c	;volatile
  5668                           
  5669                           ;interrupts.c: 120: ToMainLow_sendmsg(0, 11, (void *)0);
  5670  000062  0E0B               	movlw	11
  5671  000064  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  5672  000066  0E00               	movlw	0
  5673  000068  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  5674  00006A  0E00               	movlw	0
  5675  00006C  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  5676  00006E  0E00               	movlw	0
  5677  000070  ECC8  F00D         	call	i1_ToMainLow_sendmsg
  5678  000074                     i1l3854:
  5679                           
  5680                           ;interrupts.c: 121: }
  5681                           ;interrupts.c: 124: if (PIR1bits.RCIF) {
  5682  000074  AA9E               	btfss	3998,5,c	;volatile
  5683  000076  D003               	goto	i1l3860
  5684                           
  5685                           ;interrupts.c: 125: PIR1bits.RCIF = 0;
  5686  000078  9A9E               	bcf	3998,5,c	;volatile
  5687                           
  5688                           ;interrupts.c: 126: uart_recv_int_handler();
  5689  00007A  EC2D  F009         	call	_uart_recv_int_handler	;wreg free
  5690  00007E                     i1l3860:
  5691                           
  5692                           ;interrupts.c: 127: }
  5693                           ;interrupts.c: 130: if (PIR1bits.TXIF && PIE1bits.TXIE) {
  5694  00007E  B89E               	btfsc	3998,4,c	;volatile
  5695  000080  A89D               	btfss	3997,4,c	;volatile
  5696  000082  D002               	goto	i1l52
  5697                           
  5698                           ;interrupts.c: 131: uart_trans_int_handler();
  5699  000084  ECA0  F00B         	call	_uart_trans_int_handler	;wreg free
  5700  000088                     i1l52:
  5701  000088  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5702  00008C  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5703  000090  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5704  000094  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5705  000098  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5706  00009C  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5707  0000A0  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5708  0000A4  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5709  0000A8  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5710  0000AC  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5711  0000B0  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5712  0000B4  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5713  0000B8  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5714  0000BC  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5715  0000C0  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5716  0000C4  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5717  0000C8  C023  FFD8         	movff	??_InterruptHandlerLow,status
  5718  0000CC  0010               	retfie	
  5719  0000CE                     __end_of_InterruptHandlerLow:
  5720                           	opt stack 0
  5721                           pclatu	equ	0xFFB
  5722                           pclath	equ	0xFFA
  5723                           tblptru	equ	0xFF8
  5724                           tblptrh	equ	0xFF7
  5725                           tblptrl	equ	0xFF6
  5726                           tablat	equ	0xFF5
  5727                           prodh	equ	0xFF4
  5728                           prodl	equ	0xFF3
  5729                           intcon	equ	0xFF2
  5730                           postinc0	equ	0xFEE
  5731                           fsr0h	equ	0xFEA
  5732                           fsr0l	equ	0xFE9
  5733                           wreg	equ	0xFE8
  5734                           indf1	equ	0xFE7
  5735                           fsr1h	equ	0xFE2
  5736                           fsr1l	equ	0xFE1
  5737                           bsr	equ	0xFE0
  5738                           indf2	equ	0xFDF
  5739                           postinc2	equ	0xFDE
  5740                           postdec2	equ	0xFDD
  5741                           fsr2h	equ	0xFDA
  5742                           fsr2l	equ	0xFD9
  5743                           status	equ	0xFD8
  5744                           
  5745 ;; *************** function _uart_trans_int_handler *****************
  5746 ;; Defined at:
  5747 ;;		line 11 in file "src/my_uart.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;		None
  5750 ;; Auto vars:     Size  Location     Type
  5751 ;;  data            2   29[COMRAM] PTR unsigned char 
  5752 ;;		 -> NULL(0), 
  5753 ;;  length          1   33[COMRAM] char 
  5754 ;;  curIndex        1   32[COMRAM] unsigned char 
  5755 ;;  msgtype         1   31[COMRAM] unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5765 ;;      Params:         0       0       0       0       0
  5766 ;;      Locals:         5       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0
  5768 ;;      Totals:         5       0       0       0       0
  5769 ;;Total ram usage:        5 bytes
  5770 ;; Hardware stack levels used:    1
  5771 ;; Hardware stack levels required when called:    8
  5772 ;; This function calls:
  5773 ;;		_FromMainLow_recvmsg
  5774 ;; This function is called by:
  5775 ;;		_InterruptHandlerLow
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text38
  5780  001740                     __ptext38:
  5781                           	opt stack 0
  5782  001740                     _uart_trans_int_handler:
  5783                           	opt stack 16
  5784                           
  5785                           ;my_uart.c: 13: unsigned char* data = (0);
  5786                           
  5787                           ;incstack = 0
  5788  001740  0E00               	movlw	0
  5789  001742  6E1F               	movwf	uart_trans_int_handler@data+1,c
  5790  001744  0E00               	movlw	0
  5791  001746  6E1E               	movwf	uart_trans_int_handler@data,c
  5792                           
  5793                           ;my_uart.c: 14: unsigned char msgtype;
  5794                           ;my_uart.c: 15: unsigned char curIndex;
  5795                           ;my_uart.c: 16: signed char length = FromMainLow_recvmsg(10, &msgtype, (void *) data);
  5796  001748  0E00               	movlw	high uart_trans_int_handler@msgtype
  5797  00174A  6E1A               	movwf	FromMainLow_recvmsg@msgtype+1,c
  5798  00174C  0E20               	movlw	low uart_trans_int_handler@msgtype
  5799  00174E  6E19               	movwf	FromMainLow_recvmsg@msgtype,c
  5800  001750  C01F  F01C         	movff	uart_trans_int_handler@data+1,FromMainLow_recvmsg@data+1
  5801  001754  C01E  F01B         	movff	uart_trans_int_handler@data,FromMainLow_recvmsg@data
  5802  001758  0E0A               	movlw	10
  5803  00175A  ECB5  F00D         	call	_FromMainLow_recvmsg
  5804  00175E  6E22               	movwf	uart_trans_int_handler@length,c
  5805                           
  5806                           ;my_uart.c: 17: if (length < 0) {
  5807  001760  BE22               	btfsc	uart_trans_int_handler@length,7,c
  5808  001762  D017               	goto	i1l394
  5809                           
  5810                           ;my_uart.c: 26: curIndex = 0;
  5811                           
  5812                           ;my_uart.c: 24: }
  5813                           ;my_uart.c: 25: } else {
  5814                           
  5815                           ;my_uart.c: 22: else{
  5816                           
  5817                           ;my_uart.c: 21: }
  5818  001764  0E00               	movlw	0
  5819  001766  6E21               	movwf	uart_trans_int_handler@curIndex,c
  5820                           
  5821                           ;my_uart.c: 27: while(curIndex < length){
  5822  001768  D00D               	goto	i1l3572
  5823  00176A                     i1l397:
  5824  00176A  A2AC               	btfss	4012,1,c	;volatile
  5825  00176C  D7FE               	goto	i1l397
  5826                           
  5827                           ;my_uart.c: 33: TXREG = data[curIndex];
  5828  00176E  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5829  001770  0D01               	mullw	1
  5830  001772  50F3               	movf	prodl,w,c
  5831  001774  241E               	addwf	uart_trans_int_handler@data,w,c
  5832  001776  6ED9               	movwf	fsr2l,c
  5833  001778  50F4               	movf	prodh,w,c
  5834  00177A  201F               	addwfc	uart_trans_int_handler@data+1,w,c
  5835  00177C  6EDA               	movwf	fsr2h,c
  5836  00177E  50DF               	movf	indf2,w,c
  5837  001780  6EAD               	movwf	4013,c	;volatile
  5838                           
  5839                           ;my_uart.c: 35: curIndex++;
  5840  001782  2A21               	incf	uart_trans_int_handler@curIndex,f,c
  5841  001784                     i1l3572:
  5842  001784  5021               	movf	uart_trans_int_handler@curIndex,w,c
  5843  001786  BE22               	btfsc	uart_trans_int_handler@length,7,c
  5844  001788  D004               	goto	i1l394
  5845  00178A  0AFF               	xorlw	255
  5846  00178C  2422               	addwf	uart_trans_int_handler@length,w,c
  5847  00178E  B0D8               	btfsc	status,0,c
  5848  001790  D7EC               	goto	i1l397
  5849  001792                     i1l394:
  5850                           
  5851                           ;my_uart.c: 36: }
  5852                           ;my_uart.c: 37: }
  5853                           ;my_uart.c: 39: PIE1bits.TXIE = 0;
  5854  001792  989D               	bcf	3997,4,c	;volatile
  5855  001794  0012               	return	
  5856  001796                     __end_of_uart_trans_int_handler:
  5857                           	opt stack 0
  5858                           pclatu	equ	0xFFB
  5859                           pclath	equ	0xFFA
  5860                           tblptru	equ	0xFF8
  5861                           tblptrh	equ	0xFF7
  5862                           tblptrl	equ	0xFF6
  5863                           tablat	equ	0xFF5
  5864                           prodh	equ	0xFF4
  5865                           prodl	equ	0xFF3
  5866                           intcon	equ	0xFF2
  5867                           postinc0	equ	0xFEE
  5868                           fsr0h	equ	0xFEA
  5869                           fsr0l	equ	0xFE9
  5870                           wreg	equ	0xFE8
  5871                           indf1	equ	0xFE7
  5872                           fsr1h	equ	0xFE2
  5873                           fsr1l	equ	0xFE1
  5874                           bsr	equ	0xFE0
  5875                           indf2	equ	0xFDF
  5876                           postinc2	equ	0xFDE
  5877                           postdec2	equ	0xFDD
  5878                           fsr2h	equ	0xFDA
  5879                           fsr2l	equ	0xFD9
  5880                           status	equ	0xFD8
  5881                           
  5882 ;; *************** function _FromMainLow_recvmsg *****************
  5883 ;; Defined at:
  5884 ;;		line 159 in file "src/messages.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  maxlength       1    wreg     unsigned char 
  5887 ;;  msgtype         2   24[COMRAM] PTR unsigned char 
  5888 ;;		 -> uart_trans_int_handler@msgtype(1), 
  5889 ;;  data            2   26[COMRAM] PTR void 
  5890 ;;		 -> NULL(0), 
  5891 ;; Auto vars:     Size  Location     Type
  5892 ;;  maxlength       1   28[COMRAM] unsigned char 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  1    wreg      char 
  5895 ;; Registers used:
  5896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5902 ;;      Params:         4       0       0       0       0
  5903 ;;      Locals:         1       0       0       0       0
  5904 ;;      Temps:          0       0       0       0       0
  5905 ;;      Totals:         5       0       0       0       0
  5906 ;;Total ram usage:        5 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    7
  5909 ;; This function calls:
  5910 ;;		i1_recv_msg
  5911 ;; This function is called by:
  5912 ;;		_uart_trans_int_handler
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text39
  5917  001B6A                     __ptext39:
  5918                           	opt stack 0
  5919  001B6A                     _FromMainLow_recvmsg:
  5920                           	opt stack 16
  5921                           
  5922                           ;incstack = 0
  5923                           ;FromMainLow_recvmsg@maxlength stored from wreg
  5924  001B6A  6E1D               	movwf	FromMainLow_recvmsg@maxlength,c
  5925                           
  5926                           ;messages.c: 165: return (recv_msg(&FromMainLow_MQ, maxlength, msgtype, data));
  5927  001B6C  0101               	movlb	1	; () banked
  5928  001B6E  0E01               	movlw	high _FromMainLow_MQ
  5929  001B70  6E0C               	movwf	i1recv_msg@qptr+1,c
  5930  001B72  0101               	movlb	1	; () banked
  5931  001B74  0E36               	movlw	low _FromMainLow_MQ
  5932  001B76  6E0B               	movwf	i1recv_msg@qptr,c
  5933  001B78  C01D  F00D         	movff	FromMainLow_recvmsg@maxlength,i1recv_msg@maxlength
  5934  001B7C  C01A  F00F         	movff	FromMainLow_recvmsg@msgtype+1,i1recv_msg@msgtype+1
  5935  001B80  C019  F00E         	movff	FromMainLow_recvmsg@msgtype,i1recv_msg@msgtype
  5936  001B84  6A11               	clrf	i1recv_msg@data+1,c
  5937  001B86  C01B  F010         	movff	FromMainLow_recvmsg@data,i1recv_msg@data
  5938  001B8A  ECFB  F006         	call	i1_recv_msg	;wreg free
  5939  001B8E  0012               	return	
  5940  001B90                     __end_of_FromMainLow_recvmsg:
  5941                           	opt stack 0
  5942                           pclatu	equ	0xFFB
  5943                           pclath	equ	0xFFA
  5944                           tblptru	equ	0xFF8
  5945                           tblptrh	equ	0xFF7
  5946                           tblptrl	equ	0xFF6
  5947                           tablat	equ	0xFF5
  5948                           prodh	equ	0xFF4
  5949                           prodl	equ	0xFF3
  5950                           intcon	equ	0xFF2
  5951                           postinc0	equ	0xFEE
  5952                           fsr0h	equ	0xFEA
  5953                           fsr0l	equ	0xFE9
  5954                           wreg	equ	0xFE8
  5955                           indf1	equ	0xFE7
  5956                           fsr1h	equ	0xFE2
  5957                           fsr1l	equ	0xFE1
  5958                           bsr	equ	0xFE0
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           postdec2	equ	0xFDD
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function i1_recv_msg *****************
  5967 ;; Defined at:
  5968 ;;		line 63 in file "src/messages.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5971 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5972 ;;  maxlength       1   12[COMRAM] unsigned char 
  5973 ;;  msgtype         2   13[COMRAM] PTR unsigned char 
  5974 ;;		 -> uart_trans_int_handler@msgtype(1), main@msgtype(1), 
  5975 ;;  data            2   15[COMRAM] PTR void 
  5976 ;;		 -> main@msgbuffer(11), NULL(0), 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  recv_msg        2   22[COMRAM] PTR struct __msg
  5979 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5980 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5981 ;;  recv_msg        2   20[COMRAM] unsigned int 
  5982 ;;  recv_msg        1   19[COMRAM] unsigned char 
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      char 
  5985 ;; Registers used:
  5986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5992 ;;      Params:         7       0       0       0       0
  5993 ;;      Locals:         5       0       0       0       0
  5994 ;;      Temps:          2       0       0       0       0
  5995 ;;      Totals:        14       0       0       0       0
  5996 ;;Total ram usage:       14 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    6
  5999 ;; This function calls:
  6000 ;;		i1_memcpy
  6001 ;; This function is called by:
  6002 ;;		_FromMainLow_recvmsg
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text40
  6007  000DF6                     __ptext40:
  6008                           	opt stack 0
  6009  000DF6                     i1_recv_msg:
  6010                           	opt stack 16
  6011                           
  6012                           ;messages.c: 64: unsigned char slot;
  6013                           ;messages.c: 68: msg *qmsg;
  6014                           ;messages.c: 69: size_t tlength;
  6015                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6016                           
  6017                           ;incstack = 0
  6018  000DF6  EE20 F035          	lfsr	2,53
  6019  000DFA  500B               	movf	i1recv_msg@qptr,w,c
  6020  000DFC  26D9               	addwf	fsr2l,f,c
  6021  000DFE  500C               	movf	i1recv_msg@qptr+1,w,c
  6022  000E00  22DA               	addwfc	fsr2h,f,c
  6023  000E02  50DF               	movf	indf2,w,c
  6024  000E04  6E14               	movwf	i1recv_msg@slot,c
  6025                           
  6026                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6027  000E06  5014               	movf	i1recv_msg@slot,w,c
  6028  000E08  0D0D               	mullw	13
  6029  000E0A  50F3               	movf	prodl,w,c
  6030  000E0C  240B               	addwf	i1recv_msg@qptr,w,c
  6031  000E0E  6E17               	movwf	i1recv_msg@qmsg,c
  6032  000E10  50F4               	movf	prodh,w,c
  6033  000E12  200C               	addwfc	i1recv_msg@qptr+1,w,c
  6034  000E14  6E18               	movwf	i1recv_msg@qmsg+1,c
  6035                           
  6036                           ;messages.c: 74: if (qmsg->full == 1) {
  6037  000E16  0E01               	movlw	1
  6038  000E18  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6039  000E1C  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6040  000E20  62DF               	cpfseq	indf2,c
  6041  000E22  D050               	goto	i1l3246
  6042                           
  6043                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6044  000E24  EE20 F001          	lfsr	2,1
  6045  000E28  5017               	movf	i1recv_msg@qmsg,w,c
  6046  000E2A  26D9               	addwf	fsr2l,f,c
  6047  000E2C  5018               	movf	i1recv_msg@qmsg+1,w,c
  6048  000E2E  22DA               	addwfc	fsr2h,f,c
  6049  000E30  50DF               	movf	indf2,w,c
  6050  000E32  5C0D               	subwf	i1recv_msg@maxlength,w,c
  6051  000E34  B0D8               	btfsc	status,0,c
  6052  000E36  D002               	goto	i1l3230
  6053                           
  6054                           ;messages.c: 77: return (-3);
  6055  000E38  0EFD               	movlw	253
  6056  000E3A  0012               	return	
  6057  000E3C                     i1l3230:
  6058                           
  6059                           ;messages.c: 78: }
  6060                           ;messages.c: 80: tlength = qmsg->length;
  6061  000E3C  EE20 F001          	lfsr	2,1
  6062  000E40  5017               	movf	i1recv_msg@qmsg,w,c
  6063  000E42  26D9               	addwf	fsr2l,f,c
  6064  000E44  5018               	movf	i1recv_msg@qmsg+1,w,c
  6065  000E46  22DA               	addwfc	fsr2h,f,c
  6066  000E48  50DF               	movf	indf2,w,c
  6067  000E4A  6E12               	movwf	??i1_recv_msg& (0+255),c
  6068  000E4C  5012               	movf	??i1_recv_msg,w,c
  6069  000E4E  6E15               	movwf	i1recv_msg@tlength,c
  6070  000E50  6A16               	clrf	i1recv_msg@tlength+1,c
  6071                           
  6072                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6073  000E52  C011  F002         	movff	i1recv_msg@data+1,i1memcpy@d1+1
  6074  000E56  C010  F001         	movff	i1recv_msg@data,i1memcpy@d1
  6075  000E5A  0E03               	movlw	3
  6076  000E5C  2417               	addwf	i1recv_msg@qmsg,w,c
  6077  000E5E  6E12               	movwf	??i1_recv_msg& (0+255),c
  6078  000E60  0E00               	movlw	0
  6079  000E62  2018               	addwfc	i1recv_msg@qmsg+1,w,c
  6080  000E64  6E13               	movwf	(??i1_recv_msg+1)& (0+255),c
  6081  000E66  C012  F003         	movff	??i1_recv_msg,i1memcpy@s1
  6082  000E6A  C013  F004         	movff	??i1_recv_msg+1,i1memcpy@s1+1
  6083  000E6E  C015  F005         	movff	i1recv_msg@tlength,i1memcpy@n
  6084  000E72  C016  F006         	movff	i1recv_msg@tlength+1,i1memcpy@n+1
  6085  000E76  EC3A  F00C         	call	i1_memcpy	;wreg free
  6086                           
  6087                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6088  000E7A  EE20 F035          	lfsr	2,53
  6089  000E7E  500B               	movf	i1recv_msg@qptr,w,c
  6090  000E80  26D9               	addwf	fsr2l,f,c
  6091  000E82  500C               	movf	i1recv_msg@qptr+1,w,c
  6092  000E84  22DA               	addwfc	fsr2h,f,c
  6093  000E86  EE10 F035          	lfsr	1,53
  6094  000E8A  500B               	movf	i1recv_msg@qptr,w,c
  6095  000E8C  26E1               	addwf	fsr1l,f,c
  6096  000E8E  500C               	movf	i1recv_msg@qptr+1,w,c
  6097  000E90  22E2               	addwfc	fsr1h,f,c
  6098  000E92  50E7               	movf	indf1,w,c
  6099  000E94  6E12               	movwf	??i1_recv_msg& (0+255),c
  6100  000E96  2812               	incf	??i1_recv_msg,w,c
  6101  000E98  0B03               	andlw	3
  6102  000E9A  6EDF               	movwf	indf2,c
  6103                           
  6104                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6105  000E9C  EE20 F002          	lfsr	2,2
  6106  000EA0  5017               	movf	i1recv_msg@qmsg,w,c
  6107  000EA2  26D9               	addwf	fsr2l,f,c
  6108  000EA4  5018               	movf	i1recv_msg@qmsg+1,w,c
  6109  000EA6  22DA               	addwfc	fsr2h,f,c
  6110  000EA8  C00E  FFE1         	movff	i1recv_msg@msgtype,fsr1l
  6111  000EAC  C00F  FFE2         	movff	i1recv_msg@msgtype+1,fsr1h
  6112  000EB0  CFDF FFE7          	movff	indf2,indf1
  6113                           
  6114                           ;messages.c: 91: qmsg->full = 0;
  6115  000EB4  C017  FFD9         	movff	i1recv_msg@qmsg,fsr2l
  6116  000EB8  C018  FFDA         	movff	i1recv_msg@qmsg+1,fsr2h
  6117  000EBC  0E00               	movlw	0
  6118  000EBE  6EDF               	movwf	indf2,c
  6119                           
  6120                           ;messages.c: 92: return (tlength);
  6121  000EC0  5015               	movf	i1recv_msg@tlength,w,c
  6122  000EC2  0012               	return	
  6123  000EC4                     i1l3246:
  6124                           
  6125                           ;messages.c: 94: return (-4);
  6126  000EC4  0EFC               	movlw	252
  6127  000EC6  0012               	return	
  6128  000EC8                     __end_ofi1_recv_msg:
  6129                           	opt stack 0
  6130                           pclatu	equ	0xFFB
  6131                           pclath	equ	0xFFA
  6132                           tblptru	equ	0xFF8
  6133                           tblptrh	equ	0xFF7
  6134                           tblptrl	equ	0xFF6
  6135                           tablat	equ	0xFF5
  6136                           prodh	equ	0xFF4
  6137                           prodl	equ	0xFF3
  6138                           intcon	equ	0xFF2
  6139                           postinc0	equ	0xFEE
  6140                           fsr0h	equ	0xFEA
  6141                           fsr0l	equ	0xFE9
  6142                           wreg	equ	0xFE8
  6143                           indf1	equ	0xFE7
  6144                           fsr1h	equ	0xFE2
  6145                           fsr1l	equ	0xFE1
  6146                           bsr	equ	0xFE0
  6147                           indf2	equ	0xFDF
  6148                           postinc2	equ	0xFDE
  6149                           postdec2	equ	0xFDD
  6150                           fsr2h	equ	0xFDA
  6151                           fsr2l	equ	0xFD9
  6152                           status	equ	0xFD8
  6153                           
  6154 ;; *************** function _uart_recv_int_handler *****************
  6155 ;; Defined at:
  6156 ;;		line 42 in file "src/my_uart.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;		None
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;		None               void
  6163 ;; Registers used:
  6164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6170 ;;      Params:         0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0
  6172 ;;      Temps:          1       0       0       0       0
  6173 ;;      Totals:         1       0       0       0       0
  6174 ;;Total ram usage:        1 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; Hardware stack levels required when called:    8
  6177 ;; This function calls:
  6178 ;;		_ReadUSART
  6179 ;;		i1_ToMainLow_sendmsg
  6180 ;; This function is called by:
  6181 ;;		_InterruptHandlerLow
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text41
  6186  00125A                     __ptext41:
  6187                           	opt stack 0
  6188  00125A                     _uart_recv_int_handler:
  6189                           	opt stack 16
  6190                           
  6191                           ;my_uart.c: 51: if ((PIR1bits.RCIF)) {
  6192                           
  6193                           ;incstack = 0
  6194  00125A  AA9E               	btfss	3998,5,c	;volatile
  6195  00125C  D03A               	goto	i1l3550
  6196                           
  6197                           ;my_uart.c: 52: uc_ptr->buffer[uc_ptr->buflen] = ReadUSART();
  6198  00125E  EE20 F004          	lfsr	2,4
  6199  001262  5049               	movf	_uc_ptr,w,c
  6200  001264  26D9               	addwf	fsr2l,f,c
  6201  001266  504A               	movf	_uc_ptr+1,w,c
  6202  001268  22DA               	addwfc	fsr2h,f,c
  6203  00126A  50DF               	movf	indf2,w,c
  6204  00126C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6205  00126E  501B               	movf	??_uart_recv_int_handler,w,c
  6206  001270  0D01               	mullw	1
  6207  001272  50F3               	movf	prodl,w,c
  6208  001274  2449               	addwf	_uc_ptr,w,c
  6209  001276  6ED9               	movwf	fsr2l,c
  6210  001278  50F4               	movf	prodh,w,c
  6211  00127A  204A               	addwfc	_uc_ptr+1,w,c
  6212  00127C  6EDA               	movwf	fsr2h,c
  6213  00127E  EC0D  F00E         	call	_ReadUSART	;wreg free
  6214  001282  6EDF               	movwf	indf2,c
  6215                           
  6216                           ;my_uart.c: 56: uc_ptr->buflen++;
  6217  001284  EE20 F004          	lfsr	2,4
  6218  001288  5049               	movf	_uc_ptr,w,c
  6219  00128A  26D9               	addwf	fsr2l,f,c
  6220  00128C  504A               	movf	_uc_ptr+1,w,c
  6221  00128E  22DA               	addwfc	fsr2h,f,c
  6222  001290  2ADF               	incf	indf2,f,c
  6223                           
  6224                           ;my_uart.c: 58: if (uc_ptr->buflen == 4) {
  6225  001292  EE20 F004          	lfsr	2,4
  6226  001296  5049               	movf	_uc_ptr,w,c
  6227  001298  26D9               	addwf	fsr2l,f,c
  6228  00129A  504A               	movf	_uc_ptr+1,w,c
  6229  00129C  22DA               	addwfc	fsr2h,f,c
  6230  00129E  0E04               	movlw	4
  6231  0012A0  62DF               	cpfseq	indf2,c
  6232  0012A2  D017               	goto	i1l3550
  6233                           
  6234                           ;my_uart.c: 59: ToMainLow_sendmsg(uc_ptr->buflen, 32, (void *) uc_ptr->buffer);
  6235  0012A4  0E20               	movlw	32
  6236  0012A6  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6237  0012A8  C04A  F019         	movff	_uc_ptr+1,i1ToMainLow_sendmsg@data+1
  6238  0012AC  C049  F018         	movff	_uc_ptr,i1ToMainLow_sendmsg@data
  6239  0012B0  EE20 F004          	lfsr	2,4
  6240  0012B4  5049               	movf	_uc_ptr,w,c
  6241  0012B6  26D9               	addwf	fsr2l,f,c
  6242  0012B8  504A               	movf	_uc_ptr+1,w,c
  6243  0012BA  22DA               	addwfc	fsr2h,f,c
  6244  0012BC  50DF               	movf	indf2,w,c
  6245  0012BE  ECC8  F00D         	call	i1_ToMainLow_sendmsg
  6246                           
  6247                           ;my_uart.c: 60: uc_ptr->buflen = 0;
  6248  0012C2  EE20 F004          	lfsr	2,4
  6249  0012C6  5049               	movf	_uc_ptr,w,c
  6250  0012C8  26D9               	addwf	fsr2l,f,c
  6251  0012CA  504A               	movf	_uc_ptr+1,w,c
  6252  0012CC  22DA               	addwfc	fsr2h,f,c
  6253  0012CE  0E00               	movlw	0
  6254  0012D0  6EDF               	movwf	indf2,c
  6255  0012D2                     i1l3550:
  6256                           
  6257                           ;my_uart.c: 61: }
  6258                           ;my_uart.c: 62: }
  6259                           ;my_uart.c: 69: if (USART_Status.OVERRUN_ERROR == 1) {
  6260  0012D2  A64C               	btfss	_USART_Status,3,c
  6261  0012D4  0012               	return	
  6262                           
  6263                           ;my_uart.c: 74: RCSTAbits.CREN = 0;
  6264  0012D6  98AB               	bcf	4011,4,c	;volatile
  6265                           
  6266                           ;my_uart.c: 75: RCSTAbits.CREN = 1;
  6267  0012D8  88AB               	bsf	4011,4,c	;volatile
  6268                           
  6269                           ;my_uart.c: 76: ToMainLow_sendmsg(0, 30, (void *) 0);
  6270  0012DA  0E1E               	movlw	30
  6271  0012DC  6E17               	movwf	i1ToMainLow_sendmsg@msgtype,c
  6272  0012DE  0E00               	movlw	0
  6273  0012E0  6E19               	movwf	i1ToMainLow_sendmsg@data+1,c
  6274  0012E2  0E00               	movlw	0
  6275  0012E4  6E18               	movwf	i1ToMainLow_sendmsg@data,c
  6276  0012E6  0E00               	movlw	0
  6277  0012E8  ECC8  F00D         	call	i1_ToMainLow_sendmsg
  6278  0012EC  0012               	return	
  6279  0012EE                     __end_of_uart_recv_int_handler:
  6280                           	opt stack 0
  6281                           pclatu	equ	0xFFB
  6282                           pclath	equ	0xFFA
  6283                           tblptru	equ	0xFF8
  6284                           tblptrh	equ	0xFF7
  6285                           tblptrl	equ	0xFF6
  6286                           tablat	equ	0xFF5
  6287                           prodh	equ	0xFF4
  6288                           prodl	equ	0xFF3
  6289                           intcon	equ	0xFF2
  6290                           postinc0	equ	0xFEE
  6291                           fsr0h	equ	0xFEA
  6292                           fsr0l	equ	0xFE9
  6293                           wreg	equ	0xFE8
  6294                           indf1	equ	0xFE7
  6295                           fsr1h	equ	0xFE2
  6296                           fsr1l	equ	0xFE1
  6297                           bsr	equ	0xFE0
  6298                           indf2	equ	0xFDF
  6299                           postinc2	equ	0xFDE
  6300                           postdec2	equ	0xFDD
  6301                           fsr2h	equ	0xFDA
  6302                           fsr2l	equ	0xFD9
  6303                           status	equ	0xFD8
  6304                           
  6305 ;; *************** function i1_ToMainLow_sendmsg *****************
  6306 ;; Defined at:
  6307 ;;		line 103 in file "src/messages.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;  length          1    wreg     unsigned char 
  6310 ;;  msgtype         1   22[COMRAM] unsigned char 
  6311 ;;  data            2   23[COMRAM] PTR void 
  6312 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), stop@test(2), 
  6313 ;;		 -> turn@test(2), moveDist@test(2), move@test(2), main@uc(5), 
  6314 ;;		 -> NULL(0), 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  length          1   25[COMRAM] unsigned char 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      char 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6326 ;;      Params:         3       0       0       0       0
  6327 ;;      Locals:         1       0       0       0       0
  6328 ;;      Temps:          0       0       0       0       0
  6329 ;;      Totals:         4       0       0       0       0
  6330 ;;Total ram usage:        4 bytes
  6331 ;; Hardware stack levels used:    1
  6332 ;; Hardware stack levels required when called:    7
  6333 ;; This function calls:
  6334 ;;		i1_send_msg
  6335 ;; This function is called by:
  6336 ;;		_InterruptHandlerLow
  6337 ;;		_uart_recv_int_handler
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text42
  6342  001B90                     __ptext42:
  6343                           	opt stack 0
  6344  001B90                     i1_ToMainLow_sendmsg:
  6345                           	opt stack 17
  6346                           
  6347                           ;incstack = 0
  6348                           ;i1ToMainLow_sendmsg@length stored from wreg
  6349  001B90  6E1A               	movwf	i1ToMainLow_sendmsg@length,c
  6350                           
  6351                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6352                           ;	Return value of i1_ToMainLow_sendmsg is never used
  6353  001B92  0100               	movlb	0	; () banked
  6354  001B94  0E00               	movlw	high _ToMainLow_MQ
  6355  001B96  6E0C               	movwf	i1send_msg@qptr+1,c
  6356  001B98  0100               	movlb	0	; () banked
  6357  001B9A  0E86               	movlw	low _ToMainLow_MQ
  6358  001B9C  6E0B               	movwf	i1send_msg@qptr,c
  6359  001B9E  C01A  F00D         	movff	i1ToMainLow_sendmsg@length,i1send_msg@length
  6360  001BA2  C017  F00E         	movff	i1ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6361  001BA6  C019  F010         	movff	i1ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6362  001BAA  C018  F00F         	movff	i1ToMainLow_sendmsg@data,i1send_msg@data
  6363  001BAE  EC88  F008         	call	i1_send_msg	;wreg free
  6364  001BB2  0012               	return	
  6365  001BB4                     __end_ofi1_ToMainLow_sendmsg:
  6366                           	opt stack 0
  6367                           pclatu	equ	0xFFB
  6368                           pclath	equ	0xFFA
  6369                           tblptru	equ	0xFF8
  6370                           tblptrh	equ	0xFF7
  6371                           tblptrl	equ	0xFF6
  6372                           tablat	equ	0xFF5
  6373                           prodh	equ	0xFF4
  6374                           prodl	equ	0xFF3
  6375                           intcon	equ	0xFF2
  6376                           postinc0	equ	0xFEE
  6377                           fsr0h	equ	0xFEA
  6378                           fsr0l	equ	0xFE9
  6379                           wreg	equ	0xFE8
  6380                           indf1	equ	0xFE7
  6381                           fsr1h	equ	0xFE2
  6382                           fsr1l	equ	0xFE1
  6383                           bsr	equ	0xFE0
  6384                           indf2	equ	0xFDF
  6385                           postinc2	equ	0xFDE
  6386                           postdec2	equ	0xFDD
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function i1_send_msg *****************
  6392 ;; Defined at:
  6393 ;;		line 24 in file "src/messages.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6396 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6397 ;;  length          1   12[COMRAM] unsigned char 
  6398 ;;  msgtype         1   13[COMRAM] unsigned char 
  6399 ;;  data            2   14[COMRAM] PTR void 
  6400 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  6401 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  6402 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6405 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6406 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6407 ;;  send_msg        2   17[COMRAM] unsigned int 
  6408 ;;  send_msg        1   19[COMRAM] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      char 
  6411 ;; Registers used:
  6412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6418 ;;      Params:         6       0       0       0       0
  6419 ;;      Locals:         5       0       0       0       0
  6420 ;;      Temps:          1       0       0       0       0
  6421 ;;      Totals:        12       0       0       0       0
  6422 ;;Total ram usage:       12 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    6
  6425 ;; This function calls:
  6426 ;;		i1_memcpy
  6427 ;; This function is called by:
  6428 ;;		i1_ToMainLow_sendmsg
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text43
  6433  001110                     __ptext43:
  6434                           	opt stack 0
  6435  001110                     i1_send_msg:
  6436                           	opt stack 17
  6437                           
  6438                           ;messages.c: 25: unsigned char slot;
  6439                           ;messages.c: 27: msg *qmsg;
  6440                           ;messages.c: 28: size_t tlength = length;
  6441                           
  6442                           ;incstack = 0
  6443  001110  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6444  001114  6A13               	clrf	i1send_msg@tlength+1,c
  6445                           
  6446                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6447  001116  EE20 F034          	lfsr	2,52
  6448  00111A  500B               	movf	i1send_msg@qptr,w,c
  6449  00111C  26D9               	addwf	fsr2l,f,c
  6450  00111E  500C               	movf	i1send_msg@qptr+1,w,c
  6451  001120  22DA               	addwfc	fsr2h,f,c
  6452  001122  50DF               	movf	indf2,w,c
  6453  001124  6E14               	movwf	i1send_msg@slot,c
  6454                           
  6455                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6456  001126  5014               	movf	i1send_msg@slot,w,c
  6457  001128  0D0D               	mullw	13
  6458  00112A  50F3               	movf	prodl,w,c
  6459  00112C  240B               	addwf	i1send_msg@qptr,w,c
  6460  00112E  6E15               	movwf	i1send_msg@qmsg,c
  6461  001130  50F4               	movf	prodh,w,c
  6462  001132  200C               	addwfc	i1send_msg@qptr+1,w,c
  6463  001134  6E16               	movwf	i1send_msg@qmsg+1,c
  6464                           
  6465                           ;messages.c: 41: if (qmsg->full != 0) {
  6466  001136  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6467  00113A  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6468  00113E  50DF               	movf	indf2,w,c
  6469  001140  B4D8               	btfsc	status,2,c
  6470  001142  D002               	goto	i1l3182
  6471                           
  6472                           ;messages.c: 42: return (-1);
  6473  001144  0EFF               	movlw	255
  6474  001146  0012               	return	
  6475  001148                     i1l3182:
  6476                           
  6477                           ;messages.c: 43: }
  6478                           ;messages.c: 46: qmsg->length = length;
  6479  001148  EE20 F001          	lfsr	2,1
  6480  00114C  5015               	movf	i1send_msg@qmsg,w,c
  6481  00114E  26D9               	addwf	fsr2l,f,c
  6482  001150  5016               	movf	i1send_msg@qmsg+1,w,c
  6483  001152  22DA               	addwfc	fsr2h,f,c
  6484  001154  C00D  FFDF         	movff	i1send_msg@length,indf2
  6485                           
  6486                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6487  001158  EE20 F002          	lfsr	2,2
  6488  00115C  5015               	movf	i1send_msg@qmsg,w,c
  6489  00115E  26D9               	addwf	fsr2l,f,c
  6490  001160  5016               	movf	i1send_msg@qmsg+1,w,c
  6491  001162  22DA               	addwfc	fsr2h,f,c
  6492  001164  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6493                           
  6494                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6495  001168  0E03               	movlw	3
  6496  00116A  2415               	addwf	i1send_msg@qmsg,w,c
  6497  00116C  6E01               	movwf	i1memcpy@d1,c
  6498  00116E  0E00               	movlw	0
  6499  001170  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6500  001172  6E02               	movwf	i1memcpy@d1+1,c
  6501  001174  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6502  001178  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6503  00117C  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6504  001180  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6505  001184  EC3A  F00C         	call	i1_memcpy	;wreg free
  6506                           
  6507                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6508  001188  EE20 F034          	lfsr	2,52
  6509  00118C  500B               	movf	i1send_msg@qptr,w,c
  6510  00118E  26D9               	addwf	fsr2l,f,c
  6511  001190  500C               	movf	i1send_msg@qptr+1,w,c
  6512  001192  22DA               	addwfc	fsr2h,f,c
  6513  001194  EE10 F034          	lfsr	1,52
  6514  001198  500B               	movf	i1send_msg@qptr,w,c
  6515  00119A  26E1               	addwf	fsr1l,f,c
  6516  00119C  500C               	movf	i1send_msg@qptr+1,w,c
  6517  00119E  22E2               	addwfc	fsr1h,f,c
  6518  0011A0  50E7               	movf	indf1,w,c
  6519  0011A2  6E11               	movwf	??i1_send_msg& (0+255),c
  6520  0011A4  2811               	incf	??i1_send_msg,w,c
  6521  0011A6  0B03               	andlw	3
  6522  0011A8  6EDF               	movwf	indf2,c
  6523                           
  6524                           ;messages.c: 59: qmsg->full = 1;
  6525  0011AA  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6526  0011AE  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6527  0011B2  0E01               	movlw	1
  6528  0011B4  6EDF               	movwf	indf2,c
  6529                           
  6530                           ;messages.c: 60: return (1);
  6531  0011B6  0E01               	movlw	1
  6532  0011B8  0012               	return	
  6533  0011BA                     __end_ofi1_send_msg:
  6534                           	opt stack 0
  6535                           pclatu	equ	0xFFB
  6536                           pclath	equ	0xFFA
  6537                           tblptru	equ	0xFF8
  6538                           tblptrh	equ	0xFF7
  6539                           tblptrl	equ	0xFF6
  6540                           tablat	equ	0xFF5
  6541                           prodh	equ	0xFF4
  6542                           prodl	equ	0xFF3
  6543                           intcon	equ	0xFF2
  6544                           postinc0	equ	0xFEE
  6545                           fsr0h	equ	0xFEA
  6546                           fsr0l	equ	0xFE9
  6547                           wreg	equ	0xFE8
  6548                           indf1	equ	0xFE7
  6549                           fsr1h	equ	0xFE2
  6550                           fsr1l	equ	0xFE1
  6551                           bsr	equ	0xFE0
  6552                           indf2	equ	0xFDF
  6553                           postinc2	equ	0xFDE
  6554                           postdec2	equ	0xFDD
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8
  6558                           
  6559 ;; *************** function i1_memcpy *****************
  6560 ;; Defined at:
  6561 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  d1              2    0[COMRAM] PTR void 
  6564 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6565 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6566 ;;		 -> main@msgbuffer(11), NULL(0), 
  6567 ;;  s1              2    2[COMRAM] PTR const void 
  6568 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6569 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6570 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  6571 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  6572 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6573 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  6574 ;;  n               2    4[COMRAM] unsigned int 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6577 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6578 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6579 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  6580 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  6581 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6582 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  6583 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6584 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6585 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6586 ;;		 -> main@msgbuffer(11), NULL(0), 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;                  2    0[COMRAM] PTR void 
  6589 ;; Registers used:
  6590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6596 ;;      Params:         6       0       0       0       0
  6597 ;;      Locals:         4       0       0       0       0
  6598 ;;      Temps:          0       0       0       0       0
  6599 ;;      Totals:        10       0       0       0       0
  6600 ;;Total ram usage:       10 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; Hardware stack levels required when called:    5
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		i1_send_msg
  6607 ;;		i1_recv_msg
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610                           
  6611                           	psect	text44
  6612  001874                     __ptext44:
  6613                           	opt stack 0
  6614  001874                     i1_memcpy:
  6615                           	opt stack 17
  6616                           
  6617                           ;incstack = 0
  6618  001874  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6619  001878  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6620  00187C  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6621  001880  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6622  001884  D00E               	goto	i1l3134
  6623  001886                     i1l3128:
  6624  001886  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6625  00188A  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6626  00188E  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6627  001892  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6628  001896  CFDF FFE7          	movff	indf2,indf1
  6629  00189A  4A09               	infsnz	i1memcpy@s,f,c
  6630  00189C  2A0A               	incf	i1memcpy@s+1,f,c
  6631  00189E  4A07               	infsnz	i1memcpy@d,f,c
  6632  0018A0  2A08               	incf	i1memcpy@d+1,f,c
  6633  0018A2                     i1l3134:
  6634  0018A2  0605               	decf	i1memcpy@n,f,c
  6635  0018A4  A0D8               	btfss	status,0,c
  6636  0018A6  0606               	decf	i1memcpy@n+1,f,c
  6637  0018A8  2805               	incf	i1memcpy@n& (0+255),w,c
  6638  0018AA  B4D8               	btfsc	status,2,c
  6639  0018AC  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6640  0018AE  B4D8               	btfsc	status,2,c
  6641                           
  6642                           ;	Return value of i1_memcpy is never used
  6643  0018B0  0012               	return	
  6644  0018B2  D7E9               	goto	i1l3128
  6645  0018B4                     __end_ofi1_memcpy:
  6646                           	opt stack 0
  6647                           pclatu	equ	0xFFB
  6648                           pclath	equ	0xFFA
  6649                           tblptru	equ	0xFF8
  6650                           tblptrh	equ	0xFF7
  6651                           tblptrl	equ	0xFF6
  6652                           tablat	equ	0xFF5
  6653                           prodh	equ	0xFF4
  6654                           prodl	equ	0xFF3
  6655                           intcon	equ	0xFF2
  6656                           postinc0	equ	0xFEE
  6657                           fsr0h	equ	0xFEA
  6658                           fsr0l	equ	0xFE9
  6659                           wreg	equ	0xFE8
  6660                           indf1	equ	0xFE7
  6661                           fsr1h	equ	0xFE2
  6662                           fsr1l	equ	0xFE1
  6663                           bsr	equ	0xFE0
  6664                           indf2	equ	0xFDF
  6665                           postinc2	equ	0xFDE
  6666                           postdec2	equ	0xFDD
  6667                           fsr2h	equ	0xFDA
  6668                           fsr2l	equ	0xFD9
  6669                           status	equ	0xFD8
  6670                           
  6671 ;; *************** function _ReadUSART *****************
  6672 ;; Defined at:
  6673 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\USART\uread.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;		None
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;  data            1    0[COMRAM] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  1    wreg      unsigned char 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6687 ;;      Params:         0       0       0       0       0
  6688 ;;      Locals:         1       0       0       0       0
  6689 ;;      Temps:          0       0       0       0       0
  6690 ;;      Totals:         1       0       0       0       0
  6691 ;;Total ram usage:        1 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    5
  6694 ;; This function calls:
  6695 ;;		Nothing
  6696 ;; This function is called by:
  6697 ;;		_uart_recv_int_handler
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           	psect	text45
  6702  001C1A                     __ptext45:
  6703                           	opt stack 0
  6704  001C1A                     _ReadUSART:
  6705                           	opt stack 18
  6706                           
  6707                           ;incstack = 0
  6708  001C1A  0EF2               	movlw	242
  6709  001C1C  164C               	andwf	_USART_Status,f,c
  6710  001C1E  ACAB               	btfss	4011,6,c	;volatile
  6711  001C20  D003               	goto	i1l569
  6712  001C22  904C               	bcf	_USART_Status,0,c
  6713  001C24  B0AB               	btfsc	4011,0,c	;volatile
  6714  001C26  804C               	bsf	_USART_Status,0,c
  6715  001C28                     i1l569:
  6716  001C28  B4AB               	btfsc	4011,2,c	;volatile
  6717  001C2A  844C               	bsf	_USART_Status,2,c
  6718  001C2C  B2AB               	btfsc	4011,1,c	;volatile
  6719  001C2E  864C               	bsf	_USART_Status,3,c
  6720  001C30  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6721  001C34  5001               	movf	ReadUSART@data,w,c
  6722  001C36  0012               	return	
  6723  001C38                     __end_of_ReadUSART:
  6724                           	opt stack 0
  6725                           pclatu	equ	0xFFB
  6726                           pclath	equ	0xFFA
  6727                           tblptru	equ	0xFF8
  6728                           tblptrh	equ	0xFF7
  6729                           tblptrl	equ	0xFF6
  6730                           tablat	equ	0xFF5
  6731                           prodh	equ	0xFF4
  6732                           prodl	equ	0xFF3
  6733                           intcon	equ	0xFF2
  6734                           postinc0	equ	0xFEE
  6735                           fsr0h	equ	0xFEA
  6736                           fsr0l	equ	0xFE9
  6737                           wreg	equ	0xFE8
  6738                           indf1	equ	0xFE7
  6739                           fsr1h	equ	0xFE2
  6740                           fsr1l	equ	0xFE1
  6741                           bsr	equ	0xFE0
  6742                           indf2	equ	0xFDF
  6743                           postinc2	equ	0xFDE
  6744                           postdec2	equ	0xFDD
  6745                           fsr2h	equ	0xFDA
  6746                           fsr2l	equ	0xFD9
  6747                           status	equ	0xFD8
  6748                           
  6749 ;; *************** function _InterruptHandlerHigh *****************
  6750 ;; Defined at:
  6751 ;;		line 84 in file "src/interrupts.c"
  6752 ;; Parameters:    Size  Location     Type
  6753 ;;		None
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;		None
  6756 ;; Return value:  Size  Location     Type
  6757 ;;		None               void
  6758 ;; Registers used:
  6759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6765 ;;      Params:         0       0       0       0       0
  6766 ;;      Locals:         0       0       0       0       0
  6767 ;;      Temps:          0      14       0       0       0
  6768 ;;      Totals:         0      14       0       0       0
  6769 ;;Total ram usage:       14 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:    4
  6772 ;; This function calls:
  6773 ;;		_SleepIfOkay
  6774 ;;		_ToMainHigh_sendmsg
  6775 ;;		_i2c_int_handler
  6776 ;; This function is called by:
  6777 ;;		Interrupt level 2
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	intcode
  6782  000008                     __pintcode:
  6783                           	opt stack 0
  6784  000008                     _InterruptHandlerHigh:
  6785                           	opt stack 16
  6786                           
  6787                           ;incstack = 0
  6788  000008  CFFA F0CB          	movff	pclath,??_InterruptHandlerHigh
  6789  00000C  CFFB F0CC          	movff	pclatu,??_InterruptHandlerHigh+1
  6790  000010  CFE9 F0CD          	movff	fsr0l,??_InterruptHandlerHigh+2
  6791  000014  EF77  F009         	goto	int_func
  6792                           pclatu	equ	0xFFB
  6793                           pclath	equ	0xFFA
  6794                           tblptru	equ	0xFF8
  6795                           tblptrh	equ	0xFF7
  6796                           tblptrl	equ	0xFF6
  6797                           tablat	equ	0xFF5
  6798                           prodh	equ	0xFF4
  6799                           prodl	equ	0xFF3
  6800                           intcon	equ	0xFF2
  6801                           postinc0	equ	0xFEE
  6802                           fsr0h	equ	0xFEA
  6803                           fsr0l	equ	0xFE9
  6804                           wreg	equ	0xFE8
  6805                           indf1	equ	0xFE7
  6806                           fsr1h	equ	0xFE2
  6807                           fsr1l	equ	0xFE1
  6808                           bsr	equ	0xFE0
  6809                           indf2	equ	0xFDF
  6810                           postinc2	equ	0xFDE
  6811                           postdec2	equ	0xFDD
  6812                           fsr2h	equ	0xFDA
  6813                           fsr2l	equ	0xFD9
  6814                           status	equ	0xFD8
  6815                           
  6816                           	psect	intcode_body
  6817  0012EE                     __pintcode_body:
  6818                           	opt stack 16
  6819  0012EE                     int_func:
  6820                           	opt stack 16
  6821  0012EE  CFEA F0CE          	movff	fsr0h,??_InterruptHandlerHigh+3
  6822  0012F2  CFE1 F0CF          	movff	fsr1l,??_InterruptHandlerHigh+4
  6823  0012F6  CFE2 F0D0          	movff	fsr1h,??_InterruptHandlerHigh+5
  6824  0012FA  CFD9 F0D1          	movff	fsr2l,??_InterruptHandlerHigh+6
  6825  0012FE  CFDA F0D2          	movff	fsr2h,??_InterruptHandlerHigh+7
  6826  001302  CFF3 F0D3          	movff	prodl,??_InterruptHandlerHigh+8
  6827  001306  CFF4 F0D4          	movff	prodh,??_InterruptHandlerHigh+9
  6828  00130A  CFF6 F0D5          	movff	tblptrl,??_InterruptHandlerHigh+10
  6829  00130E  CFF7 F0D6          	movff	tblptrh,??_InterruptHandlerHigh+11
  6830  001312  CFF8 F0D7          	movff	tblptru,??_InterruptHandlerHigh+12
  6831  001316  CFF5 F0D8          	movff	tablat,??_InterruptHandlerHigh+13
  6832                           
  6833                           ;interrupts.c: 89: if (PIR1bits.SSPIF) {
  6834  00131A  A69E               	btfss	3998,3,c	;volatile
  6835  00131C  D003               	goto	i2l3840
  6836                           
  6837                           ;interrupts.c: 91: PIR1bits.SSPIF = 0;
  6838  00131E  969E               	bcf	3998,3,c	;volatile
  6839                           
  6840                           ;interrupts.c: 93: i2c_int_handler();
  6841  001320  EC69  F000         	call	_i2c_int_handler	;wreg free
  6842  001324                     i2l3840:
  6843                           
  6844                           ;interrupts.c: 94: }
  6845                           ;interrupts.c: 97: if (INTCONbits.TMR0IF) {
  6846  001324  A4F2               	btfss	intcon,2,c	;volatile
  6847  001326  D00A               	goto	i2l3846
  6848                           
  6849                           ;interrupts.c: 98: INTCONbits.TMR0IF = 0;
  6850  001328  94F2               	bcf	intcon,2,c	;volatile
  6851                           
  6852                           ;interrupts.c: 99: ToMainHigh_sendmsg(0, 10, (void *)0);
  6853  00132A  0E0A               	movlw	10
  6854  00132C  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  6855  00132E  0E00               	movlw	0
  6856  001330  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  6857  001332  0E00               	movlw	0
  6858  001334  6E46               	movwf	ToMainHigh_sendmsg@data,c
  6859  001336  0E00               	movlw	0
  6860  001338  ECDA  F00D         	call	_ToMainHigh_sendmsg
  6861  00133C                     i2l3846:
  6862                           
  6863                           ;interrupts.c: 100: }
  6864                           ;interrupts.c: 103: SleepIfOkay();
  6865  00133C  ECCB  F00B         	call	_SleepIfOkay	;wreg free
  6866  001340  C0D8  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6867  001344  C0D7  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6868  001348  C0D6  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6869  00134C  C0D5  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6870  001350  C0D4  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6871  001354  C0D3  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6872  001358  C0D2  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6873  00135C  C0D1  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6874  001360  C0D0  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6875  001364  C0CF  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6876  001368  C0CE  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6877  00136C  C0CD  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6878  001370  C0CC  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6879  001374  C0CB  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6880  001378  0011               	retfie		f
  6881  00137A                     __end_of_InterruptHandlerHigh:
  6882                           	opt stack 0
  6883                           pclatu	equ	0xFFB
  6884                           pclath	equ	0xFFA
  6885                           tblptru	equ	0xFF8
  6886                           tblptrh	equ	0xFF7
  6887                           tblptrl	equ	0xFF6
  6888                           tablat	equ	0xFF5
  6889                           prodh	equ	0xFF4
  6890                           prodl	equ	0xFF3
  6891                           intcon	equ	0xFF2
  6892                           postinc0	equ	0xFEE
  6893                           fsr0h	equ	0xFEA
  6894                           fsr0l	equ	0xFE9
  6895                           wreg	equ	0xFE8
  6896                           indf1	equ	0xFE7
  6897                           fsr1h	equ	0xFE2
  6898                           fsr1l	equ	0xFE1
  6899                           bsr	equ	0xFE0
  6900                           indf2	equ	0xFDF
  6901                           postinc2	equ	0xFDE
  6902                           postdec2	equ	0xFDD
  6903                           fsr2h	equ	0xFDA
  6904                           fsr2l	equ	0xFD9
  6905                           status	equ	0xFD8
  6906                           
  6907 ;; *************** function _i2c_int_handler *****************
  6908 ;; Defined at:
  6909 ;;		line 100 in file "src/my_i2c.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  error_buf       3    6[BANK0 ] unsigned char [3]
  6914 ;;  data_read       1   14[BANK0 ] unsigned char 
  6915 ;;  msg_ready       1   13[BANK0 ] unsigned char 
  6916 ;;  msg_to_send     1   12[BANK0 ] unsigned char 
  6917 ;;  i2c_data        1   11[BANK0 ] unsigned char 
  6918 ;;  overrun_erro    1   10[BANK0 ] unsigned char 
  6919 ;;  data_written    1    9[BANK0 ] unsigned char 
  6920 ;; Return value:  Size  Location     Type
  6921 ;;		None               void
  6922 ;; Registers used:
  6923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6924 ;; Tracked objects:
  6925 ;;		On entry : 0/0
  6926 ;;		On exit  : 0/0
  6927 ;;		Unchanged: 0/0
  6928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6929 ;;      Params:         0       0       0       0       0
  6930 ;;      Locals:         0       9       0       0       0
  6931 ;;      Temps:          0       1       0       0       0
  6932 ;;      Totals:         0      10       0       0       0
  6933 ;;Total ram usage:       10 bytes
  6934 ;; Hardware stack levels used:    1
  6935 ;; Hardware stack levels required when called:    3
  6936 ;; This function calls:
  6937 ;;		_ToMainHigh_sendmsg
  6938 ;;		_handle_start
  6939 ;; This function is called by:
  6940 ;;		_InterruptHandlerHigh
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text47
  6945  0000D2                     __ptext47:
  6946                           	opt stack 0
  6947  0000D2                     _i2c_int_handler:
  6948                           	opt stack 16
  6949                           
  6950                           ;my_i2c.c: 101: unsigned char i2c_data;
  6951                           ;my_i2c.c: 102: unsigned char data_read = 0;
  6952                           
  6953                           ;incstack = 0
  6954  0000D2  0E00               	movlw	0
  6955  0000D4  0100               	movlb	0	; () banked
  6956  0000D6  6FCA               	movwf	i2c_int_handler@data_read& (0+255),b
  6957                           
  6958                           ;my_i2c.c: 103: unsigned char data_written = 0;
  6959  0000D8  0E00               	movlw	0
  6960  0000DA  0100               	movlb	0	; () banked
  6961  0000DC  6FC5               	movwf	i2c_int_handler@data_written& (0+255),b
  6962                           
  6963                           ;my_i2c.c: 104: unsigned char msg_ready = 0;
  6964  0000DE  0E00               	movlw	0
  6965  0000E0  0100               	movlb	0	; () banked
  6966  0000E2  6FC9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  6967                           
  6968                           ;my_i2c.c: 105: unsigned char msg_to_send = 0;
  6969  0000E4  0E00               	movlw	0
  6970  0000E6  0100               	movlb	0	; () banked
  6971  0000E8  6FC8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  6972                           
  6973                           ;my_i2c.c: 106: unsigned char overrun_error = 0;
  6974  0000EA  0E00               	movlw	0
  6975  0000EC  0100               	movlb	0	; () banked
  6976  0000EE  6FC6               	movwf	i2c_int_handler@overrun_error& (0+255),b
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;my_i2c.c: 107: unsigned char error_buf[3];
  6980                           ;my_i2c.c: 110: if (SSPCON1bits.SSPOV == 1) {
  6981  0000F0  ACC6               	btfss	4038,6,c	;volatile
  6982  0000F2  D024               	goto	i2l3410
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;my_i2c.c: 111: SSPCON1bits.SSPOV = 0;
  6986  0000F4  9CC6               	bcf	4038,6,c	;volatile
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;my_i2c.c: 115: ic_ptr->status = 0x5;
  6990  0000F6  0100               	movlb	0	; () banked
  6991  0000F8  EE20 F00C          	lfsr	2,12
  6992  0000FC  0100               	movlb	0	; () banked
  6993  0000FE  51E1               	movf	_ic_ptr& (0+255),w,b
  6994  000100  26D9               	addwf	fsr2l,f,c
  6995  000102  0100               	movlb	0	; () banked
  6996  000104  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  6997  000106  22DA               	addwfc	fsr2h,f,c
  6998  000108  0E05               	movlw	5
  6999  00010A  6EDF               	movwf	indf2,c
  7000                           
  7001                           ; BSR set to: 0
  7002                           ;my_i2c.c: 116: overrun_error = 1;
  7003  00010C  0E01               	movlw	1
  7004  00010E  0100               	movlb	0	; () banked
  7005  000110  6FC6               	movwf	i2c_int_handler@overrun_error& (0+255),b
  7006                           
  7007                           ; BSR set to: 0
  7008                           ;my_i2c.c: 117: ic_ptr->error_count++;
  7009  000112  0100               	movlb	0	; () banked
  7010  000114  EE20 F00E          	lfsr	2,14
  7011  000118  0100               	movlb	0	; () banked
  7012  00011A  51E1               	movf	_ic_ptr& (0+255),w,b
  7013  00011C  26D9               	addwf	fsr2l,f,c
  7014  00011E  0100               	movlb	0	; () banked
  7015  000120  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7016  000122  22DA               	addwfc	fsr2h,f,c
  7017  000124  2ADF               	incf	indf2,f,c
  7018                           
  7019                           ; BSR set to: 0
  7020                           ;my_i2c.c: 118: ic_ptr->error_code = 0x4;
  7021  000126  0100               	movlb	0	; () banked
  7022  000128  EE20 F00D          	lfsr	2,13
  7023  00012C  0100               	movlb	0	; () banked
  7024  00012E  51E1               	movf	_ic_ptr& (0+255),w,b
  7025  000130  26D9               	addwf	fsr2l,f,c
  7026  000132  0100               	movlb	0	; () banked
  7027  000134  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7028  000136  22DA               	addwfc	fsr2h,f,c
  7029  000138  0E04               	movlw	4
  7030  00013A  6EDF               	movwf	indf2,c
  7031  00013C                     i2l3410:
  7032                           
  7033                           ; BSR set to: 0
  7034                           ;my_i2c.c: 119: }
  7035                           ;my_i2c.c: 121: if (SSPSTATbits.BF == 1) {
  7036  00013C  A0C7               	btfss	4039,0,c	;volatile
  7037  00013E  D005               	goto	i2l3416
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;my_i2c.c: 122: i2c_data = SSPBUF;
  7041  000140  CFC9 F0C7          	movff	4041,i2c_int_handler@i2c_data	;volatile
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;my_i2c.c: 123: data_read = 1;
  7045  000144  0E01               	movlw	1
  7046  000146  0100               	movlb	0	; () banked
  7047  000148  6FCA               	movwf	i2c_int_handler@data_read& (0+255),b
  7048  00014A                     i2l3416:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;my_i2c.c: 124: }
  7052                           ;my_i2c.c: 126: if (!overrun_error) {
  7053  00014A  0100               	movlb	0	; () banked
  7054  00014C  67C6               	tstfsz	i2c_int_handler@overrun_error& (0+255),b
  7055  00014E  D19F               	goto	i2l321
  7056  000150  D188               	goto	i2l3504
  7057  000152                     i2l323:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;my_i2c.c: 129: {
  7061                           ;my_i2c.c: 131: if (SSPSTATbits.S == 1) {
  7062  000152  A6C7               	btfss	4039,3,c	;volatile
  7063  000154  D19C               	goto	i2l321
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;my_i2c.c: 132: handle_start(data_read);
  7067  000156  0100               	movlb	0	; () banked
  7068  000158  51CA               	movf	i2c_int_handler@data_read& (0+255),w,b
  7069  00015A  EC64  F007         	call	_handle_start
  7070                           
  7071                           ;my_i2c.c: 134: if (ic_ptr->status == 0x8) {
  7072  00015E  0100               	movlb	0	; () banked
  7073  000160  EE20 F00C          	lfsr	2,12
  7074  000164  0100               	movlb	0	; () banked
  7075  000166  51E1               	movf	_ic_ptr& (0+255),w,b
  7076  000168  26D9               	addwf	fsr2l,f,c
  7077  00016A  0100               	movlb	0	; () banked
  7078  00016C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7079  00016E  22DA               	addwfc	fsr2h,f,c
  7080  000170  0E08               	movlw	8
  7081  000172  62DF               	cpfseq	indf2,c
  7082  000174  D18C               	goto	i2l321
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;my_i2c.c: 135: data_read = 0;
  7086  000176  0E00               	movlw	0
  7087  000178  0100               	movlb	0	; () banked
  7088  00017A  6FCA               	movwf	i2c_int_handler@data_read& (0+255),b
  7089                           
  7090                           ;my_i2c.c: 136: msg_to_send = 1;
  7091  00017C  0E01               	movlw	1
  7092  00017E  0100               	movlb	0	; () banked
  7093  000180  6FC8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7094  000182  D185               	goto	i2l321
  7095  000184                     i2l327:
  7096                           
  7097                           ; BSR set to: 0
  7098                           ;my_i2c.c: 142: {
  7099                           ;my_i2c.c: 144: if (SSPSTATbits.P == 1) {
  7100  000184  A8C7               	btfss	4039,4,c	;volatile
  7101  000186  D02A               	goto	i2l3436
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;my_i2c.c: 147: ic_ptr->event_count++;
  7105  000188  0100               	movlb	0	; () banked
  7106  00018A  EE20 F00B          	lfsr	2,11
  7107  00018E  0100               	movlb	0	; () banked
  7108  000190  51E1               	movf	_ic_ptr& (0+255),w,b
  7109  000192  26D9               	addwf	fsr2l,f,c
  7110  000194  0100               	movlb	0	; () banked
  7111  000196  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7112  000198  22DA               	addwfc	fsr2h,f,c
  7113  00019A  2ADF               	incf	indf2,f,c
  7114                           
  7115                           ; BSR set to: 0
  7116                           ;my_i2c.c: 148: if (data_read) {
  7117  00019C  0100               	movlb	0	; () banked
  7118  00019E  51CA               	movf	i2c_int_handler@data_read& (0+255),w,b
  7119  0001A0  B4D8               	btfsc	status,2,c
  7120  0001A2  D154               	goto	L8
  7121                           
  7122                           ; BSR set to: 0
  7123                           ;my_i2c.c: 149: if (SSPSTATbits.D_A == 0) {
  7124  0001A4  BAC7               	btfsc	4039,5,c	;volatile
  7125  0001A6  D004               	goto	i2l3434
  7126                           
  7127                           ; BSR set to: 0
  7128                           ;my_i2c.c: 150: msg_ready = 1;
  7129  0001A8  0E01               	movlw	1
  7130  0001AA  0100               	movlb	0	; () banked
  7131  0001AC  6FC9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7132                           
  7133                           ;my_i2c.c: 151: } else {
  7134  0001AE  D14E               	goto	L8
  7135  0001B0                     i2l3434:
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;my_i2c.c: 152: ic_ptr->error_count++;
  7139  0001B0  0100               	movlb	0	; () banked
  7140  0001B2  EE20 F00E          	lfsr	2,14
  7141  0001B6  0100               	movlb	0	; () banked
  7142  0001B8  51E1               	movf	_ic_ptr& (0+255),w,b
  7143  0001BA  26D9               	addwf	fsr2l,f,c
  7144  0001BC  0100               	movlb	0	; () banked
  7145  0001BE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7146  0001C0  22DA               	addwfc	fsr2h,f,c
  7147  0001C2  2ADF               	incf	indf2,f,c
  7148                           
  7149                           ;my_i2c.c: 153: ic_ptr->error_code = 0x6;
  7150  0001C4  0100               	movlb	0	; () banked
  7151  0001C6  EE20 F00D          	lfsr	2,13
  7152  0001CA  0100               	movlb	0	; () banked
  7153  0001CC  51E1               	movf	_ic_ptr& (0+255),w,b
  7154  0001CE  26D9               	addwf	fsr2l,f,c
  7155  0001D0  0100               	movlb	0	; () banked
  7156  0001D2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7157  0001D4  22DA               	addwfc	fsr2h,f,c
  7158  0001D6  0E06               	movlw	6
  7159  0001D8  6EDF               	movwf	indf2,c
  7160                           
  7161                           ; BSR set to: 0
  7162  0001DA  D138               	goto	L8
  7163  0001DC                     i2l3436:
  7164                           
  7165                           ; BSR set to: 0
  7166  0001DC  0100               	movlb	0	; () banked
  7167  0001DE  51CA               	movf	i2c_int_handler@data_read& (0+255),w,b
  7168  0001E0  B4D8               	btfsc	status,2,c
  7169  0001E2  D155               	goto	i2l321
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;my_i2c.c: 158: ic_ptr->event_count++;
  7173  0001E4  0100               	movlb	0	; () banked
  7174  0001E6  EE20 F00B          	lfsr	2,11
  7175  0001EA  0100               	movlb	0	; () banked
  7176  0001EC  51E1               	movf	_ic_ptr& (0+255),w,b
  7177  0001EE  26D9               	addwf	fsr2l,f,c
  7178  0001F0  0100               	movlb	0	; () banked
  7179  0001F2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7180  0001F4  22DA               	addwfc	fsr2h,f,c
  7181  0001F6  2ADF               	incf	indf2,f,c
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;my_i2c.c: 159: if (SSPSTATbits.D_A == 0) {
  7185  0001F8  BAC7               	btfsc	4039,5,c	;volatile
  7186  0001FA  D019               	goto	i2l3452
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;my_i2c.c: 160: if (SSPSTATbits.R_W == 0) {
  7190  0001FC  B4C7               	btfsc	4039,2,c	;volatile
  7191  0001FE  D00B               	goto	i2l3446
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;my_i2c.c: 161: ic_ptr->status = 0x7;
  7195  000200  0100               	movlb	0	; () banked
  7196  000202  EE20 F00C          	lfsr	2,12
  7197  000206  0100               	movlb	0	; () banked
  7198  000208  51E1               	movf	_ic_ptr& (0+255),w,b
  7199  00020A  26D9               	addwf	fsr2l,f,c
  7200  00020C  0100               	movlb	0	; () banked
  7201  00020E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7202  000210  22DA               	addwfc	fsr2h,f,c
  7203  000212  0E07               	movlw	7
  7204  000214  D071               	goto	L6
  7205  000216                     i2l3446:
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;my_i2c.c: 163: ic_ptr->status = 0x8;
  7209  000216  0100               	movlb	0	; () banked
  7210  000218  EE20 F00C          	lfsr	2,12
  7211  00021C  0100               	movlb	0	; () banked
  7212  00021E  51E1               	movf	_ic_ptr& (0+255),w,b
  7213  000220  26D9               	addwf	fsr2l,f,c
  7214  000222  0100               	movlb	0	; () banked
  7215  000224  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7216  000226  22DA               	addwfc	fsr2h,f,c
  7217  000228  0E08               	movlw	8
  7218  00022A  6EDF               	movwf	indf2,c
  7219  00022C  D108               	goto	L5
  7220  00022E                     i2l3452:
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;my_i2c.c: 169: ic_ptr->error_count++;
  7224  00022E  0100               	movlb	0	; () banked
  7225  000230  EE20 F00E          	lfsr	2,14
  7226  000234  0100               	movlb	0	; () banked
  7227  000236  51E1               	movf	_ic_ptr& (0+255),w,b
  7228  000238  26D9               	addwf	fsr2l,f,c
  7229  00023A  0100               	movlb	0	; () banked
  7230  00023C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7231  00023E  22DA               	addwfc	fsr2h,f,c
  7232  000240  2ADF               	incf	indf2,f,c
  7233                           
  7234                           ;my_i2c.c: 170: ic_ptr->status = 0x5;
  7235  000242  0100               	movlb	0	; () banked
  7236  000244  EE20 F00C          	lfsr	2,12
  7237  000248  0100               	movlb	0	; () banked
  7238  00024A  51E1               	movf	_ic_ptr& (0+255),w,b
  7239  00024C  26D9               	addwf	fsr2l,f,c
  7240  00024E  0100               	movlb	0	; () banked
  7241  000250  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7242  000252  22DA               	addwfc	fsr2h,f,c
  7243  000254  0E05               	movlw	5
  7244  000256  6EDF               	movwf	indf2,c
  7245                           
  7246                           ;my_i2c.c: 171: ic_ptr->error_code = 0x6;
  7247  000258  0100               	movlb	0	; () banked
  7248  00025A  EE20 F00D          	lfsr	2,13
  7249  00025E  0100               	movlb	0	; () banked
  7250  000260  51E1               	movf	_ic_ptr& (0+255),w,b
  7251  000262  26D9               	addwf	fsr2l,f,c
  7252  000264  0100               	movlb	0	; () banked
  7253  000266  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7254  000268  22DA               	addwfc	fsr2h,f,c
  7255  00026A  0E06               	movlw	6
  7256  00026C  D045               	goto	L6
  7257  00026E                     i2l3454:
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;my_i2c.c: 177: {
  7261                           ;my_i2c.c: 178: if (ic_ptr->outbufind < ic_ptr->outbuflen) {
  7262  00026E  0100               	movlb	0	; () banked
  7263  000270  EE20 F01A          	lfsr	2,26
  7264  000274  0100               	movlb	0	; () banked
  7265  000276  51E1               	movf	_ic_ptr& (0+255),w,b
  7266  000278  26D9               	addwf	fsr2l,f,c
  7267  00027A  0100               	movlb	0	; () banked
  7268  00027C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7269  00027E  22DA               	addwfc	fsr2h,f,c
  7270  000280  50DF               	movf	indf2,w,c
  7271  000282  0100               	movlb	0	; () banked
  7272  000284  6FC1               	movwf	??_i2c_int_handler& (0+255),b
  7273  000286  0100               	movlb	0	; () banked
  7274  000288  EE20 F019          	lfsr	2,25
  7275  00028C  0100               	movlb	0	; () banked
  7276  00028E  51E1               	movf	_ic_ptr& (0+255),w,b
  7277  000290  26D9               	addwf	fsr2l,f,c
  7278  000292  0100               	movlb	0	; () banked
  7279  000294  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7280  000296  22DA               	addwfc	fsr2h,f,c
  7281  000298  50DF               	movf	indf2,w,c
  7282  00029A  0100               	movlb	0	; () banked
  7283  00029C  5DC1               	subwf	??_i2c_int_handler& (0+255),w,b
  7284  00029E  B0D8               	btfsc	status,0,c
  7285  0002A0  D0D5               	goto	L8
  7286                           
  7287                           ; BSR set to: 0
  7288                           ;my_i2c.c: 179: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7289  0002A2  0100               	movlb	0	; () banked
  7290  0002A4  EE20 F01A          	lfsr	2,26
  7291  0002A8  0100               	movlb	0	; () banked
  7292  0002AA  51E1               	movf	_ic_ptr& (0+255),w,b
  7293  0002AC  26D9               	addwf	fsr2l,f,c
  7294  0002AE  0100               	movlb	0	; () banked
  7295  0002B0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7296  0002B2  22DA               	addwfc	fsr2h,f,c
  7297  0002B4  50DF               	movf	indf2,w,c
  7298  0002B6  0100               	movlb	0	; () banked
  7299  0002B8  6FC1               	movwf	??_i2c_int_handler& (0+255),b
  7300  0002BA  0100               	movlb	0	; () banked
  7301  0002BC  51C1               	movf	??_i2c_int_handler& (0+255),w,b
  7302  0002BE  0D01               	mullw	1
  7303  0002C0  0E0F               	movlw	15
  7304  0002C2  26F3               	addwf	prodl,f,c
  7305  0002C4  0E00               	movlw	0
  7306  0002C6  22F4               	addwfc	prodh,f,c
  7307  0002C8  50F3               	movf	prodl,w,c
  7308  0002CA  0100               	movlb	0	; () banked
  7309  0002CC  25E1               	addwf	_ic_ptr& (0+255),w,b
  7310  0002CE  6ED9               	movwf	fsr2l,c
  7311  0002D0  50F4               	movf	prodh,w,c
  7312  0002D2  0100               	movlb	0	; () banked
  7313  0002D4  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7314  0002D6  6EDA               	movwf	fsr2h,c
  7315  0002D8  50DF               	movf	indf2,w,c
  7316  0002DA  6EC9               	movwf	4041,c	;volatile
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;my_i2c.c: 180: ic_ptr->outbufind++;
  7320  0002DC  0100               	movlb	0	; () banked
  7321  0002DE  EE20 F01A          	lfsr	2,26
  7322  0002E2  0100               	movlb	0	; () banked
  7323  0002E4  51E1               	movf	_ic_ptr& (0+255),w,b
  7324  0002E6  26D9               	addwf	fsr2l,f,c
  7325  0002E8  0100               	movlb	0	; () banked
  7326  0002EA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7327  0002EC  22DA               	addwfc	fsr2h,f,c
  7328  0002EE  2ADF               	incf	indf2,f,c
  7329                           
  7330                           ; BSR set to: 0
  7331                           ;my_i2c.c: 181: data_written = 1;
  7332  0002F0  0E01               	movlw	1
  7333  0002F2  0100               	movlb	0	; () banked
  7334  0002F4  6FC5               	movwf	i2c_int_handler@data_written& (0+255),b
  7335                           
  7336                           ;my_i2c.c: 182: } else {
  7337  0002F6  D0CB               	goto	i2l321
  7338  0002F8                     L6:
  7339  0002F8  6EDF               	movwf	indf2,c
  7340  0002FA  D0C9               	goto	i2l321
  7341  0002FC                     i2l341:
  7342                           
  7343                           ; BSR set to: 0
  7344                           ;my_i2c.c: 189: {
  7345                           ;my_i2c.c: 191: if (SSPSTATbits.P == 1) {
  7346  0002FC  A8C7               	btfss	4039,4,c	;volatile
  7347  0002FE  D05A               	goto	i2l3482
  7348                           
  7349                           ; BSR set to: 0
  7350                           ;my_i2c.c: 193: ic_ptr->event_count++;
  7351  000300  0100               	movlb	0	; () banked
  7352  000302  EE20 F00B          	lfsr	2,11
  7353  000306  0100               	movlb	0	; () banked
  7354  000308  51E1               	movf	_ic_ptr& (0+255),w,b
  7355  00030A  26D9               	addwf	fsr2l,f,c
  7356  00030C  0100               	movlb	0	; () banked
  7357  00030E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7358  000310  22DA               	addwfc	fsr2h,f,c
  7359  000312  2ADF               	incf	indf2,f,c
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;my_i2c.c: 194: if (data_read) {
  7363  000314  0100               	movlb	0	; () banked
  7364  000316  51CA               	movf	i2c_int_handler@data_read& (0+255),w,b
  7365  000318  B4D8               	btfsc	status,2,c
  7366  00031A  D048               	goto	i2l3478
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;my_i2c.c: 195: if (SSPSTATbits.D_A == 1) {
  7370  00031C  AAC7               	btfss	4039,5,c	;volatile
  7371  00031E  D025               	goto	i2l3476
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;my_i2c.c: 196: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7375  000320  0100               	movlb	0	; () banked
  7376  000322  EE20 F00A          	lfsr	2,10
  7377  000326  0100               	movlb	0	; () banked
  7378  000328  51E1               	movf	_ic_ptr& (0+255),w,b
  7379  00032A  26D9               	addwf	fsr2l,f,c
  7380  00032C  0100               	movlb	0	; () banked
  7381  00032E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7382  000330  22DA               	addwfc	fsr2h,f,c
  7383  000332  50DF               	movf	indf2,w,c
  7384  000334  0100               	movlb	0	; () banked
  7385  000336  6FC1               	movwf	??_i2c_int_handler& (0+255),b
  7386  000338  0100               	movlb	0	; () banked
  7387  00033A  51C1               	movf	??_i2c_int_handler& (0+255),w,b
  7388  00033C  0D01               	mullw	1
  7389  00033E  50F3               	movf	prodl,w,c
  7390  000340  0100               	movlb	0	; () banked
  7391  000342  25E1               	addwf	_ic_ptr& (0+255),w,b
  7392  000344  6ED9               	movwf	fsr2l,c
  7393  000346  50F4               	movf	prodh,w,c
  7394  000348  0100               	movlb	0	; () banked
  7395  00034A  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7396  00034C  6EDA               	movwf	fsr2h,c
  7397  00034E  0100               	movlb	0	; () banked
  7398  000350  C0C7  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;my_i2c.c: 197: ic_ptr->buflen++;
  7402  000354  0100               	movlb	0	; () banked
  7403  000356  EE20 F00A          	lfsr	2,10
  7404  00035A  0100               	movlb	0	; () banked
  7405  00035C  51E1               	movf	_ic_ptr& (0+255),w,b
  7406  00035E  26D9               	addwf	fsr2l,f,c
  7407  000360  0100               	movlb	0	; () banked
  7408  000362  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7409  000364  22DA               	addwfc	fsr2h,f,c
  7410  000366  2ADF               	incf	indf2,f,c
  7411  000368  D021               	goto	i2l3478
  7412  00036A                     i2l3476:
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;my_i2c.c: 200: ic_ptr->error_count++;
  7416  00036A  0100               	movlb	0	; () banked
  7417  00036C  EE20 F00E          	lfsr	2,14
  7418  000370  0100               	movlb	0	; () banked
  7419  000372  51E1               	movf	_ic_ptr& (0+255),w,b
  7420  000374  26D9               	addwf	fsr2l,f,c
  7421  000376  0100               	movlb	0	; () banked
  7422  000378  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7423  00037A  22DA               	addwfc	fsr2h,f,c
  7424  00037C  2ADF               	incf	indf2,f,c
  7425                           
  7426                           ;my_i2c.c: 201: ic_ptr->error_code = 0x6;
  7427  00037E  0100               	movlb	0	; () banked
  7428  000380  EE20 F00D          	lfsr	2,13
  7429  000384  0100               	movlb	0	; () banked
  7430  000386  51E1               	movf	_ic_ptr& (0+255),w,b
  7431  000388  26D9               	addwf	fsr2l,f,c
  7432  00038A  0100               	movlb	0	; () banked
  7433  00038C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7434  00038E  22DA               	addwfc	fsr2h,f,c
  7435  000390  0E06               	movlw	6
  7436  000392  6EDF               	movwf	indf2,c
  7437                           
  7438                           ;my_i2c.c: 202: ic_ptr->status = 0x5;
  7439  000394  0100               	movlb	0	; () banked
  7440  000396  EE20 F00C          	lfsr	2,12
  7441  00039A  0100               	movlb	0	; () banked
  7442  00039C  51E1               	movf	_ic_ptr& (0+255),w,b
  7443  00039E  26D9               	addwf	fsr2l,f,c
  7444  0003A0  0100               	movlb	0	; () banked
  7445  0003A2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7446  0003A4  22DA               	addwfc	fsr2h,f,c
  7447  0003A6  0E05               	movlw	5
  7448  0003A8  6EDF               	movwf	indf2,c
  7449  0003AA  D050               	goto	L8
  7450  0003AC                     i2l3478:
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;my_i2c.c: 205: msg_ready = 1;
  7454  0003AC  0E01               	movlw	1
  7455  0003AE  0100               	movlb	0	; () banked
  7456  0003B0  6FC9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7457                           
  7458                           ; BSR set to: 0
  7459  0003B2  D04C               	goto	L8
  7460  0003B4                     i2l3482:
  7461                           
  7462                           ; BSR set to: 0
  7463  0003B4  0100               	movlb	0	; () banked
  7464  0003B6  51CA               	movf	i2c_int_handler@data_read& (0+255),w,b
  7465  0003B8  B4D8               	btfsc	status,2,c
  7466  0003BA  D069               	goto	i2l321
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;my_i2c.c: 209: ic_ptr->event_count++;
  7470  0003BC  0100               	movlb	0	; () banked
  7471  0003BE  EE20 F00B          	lfsr	2,11
  7472  0003C2  0100               	movlb	0	; () banked
  7473  0003C4  51E1               	movf	_ic_ptr& (0+255),w,b
  7474  0003C6  26D9               	addwf	fsr2l,f,c
  7475  0003C8  0100               	movlb	0	; () banked
  7476  0003CA  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7477  0003CC  22DA               	addwfc	fsr2h,f,c
  7478  0003CE  2ADF               	incf	indf2,f,c
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;my_i2c.c: 210: if (SSPSTATbits.D_A == 1) {
  7482  0003D0  AAC7               	btfss	4039,5,c	;volatile
  7483  0003D2  D025               	goto	i2l349
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;my_i2c.c: 211: ic_ptr->buffer[ic_ptr->buflen] = i2c_data;
  7487  0003D4  0100               	movlb	0	; () banked
  7488  0003D6  EE20 F00A          	lfsr	2,10
  7489  0003DA  0100               	movlb	0	; () banked
  7490  0003DC  51E1               	movf	_ic_ptr& (0+255),w,b
  7491  0003DE  26D9               	addwf	fsr2l,f,c
  7492  0003E0  0100               	movlb	0	; () banked
  7493  0003E2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7494  0003E4  22DA               	addwfc	fsr2h,f,c
  7495  0003E6  50DF               	movf	indf2,w,c
  7496  0003E8  0100               	movlb	0	; () banked
  7497  0003EA  6FC1               	movwf	??_i2c_int_handler& (0+255),b
  7498  0003EC  0100               	movlb	0	; () banked
  7499  0003EE  51C1               	movf	??_i2c_int_handler& (0+255),w,b
  7500  0003F0  0D01               	mullw	1
  7501  0003F2  50F3               	movf	prodl,w,c
  7502  0003F4  0100               	movlb	0	; () banked
  7503  0003F6  25E1               	addwf	_ic_ptr& (0+255),w,b
  7504  0003F8  6ED9               	movwf	fsr2l,c
  7505  0003FA  50F4               	movf	prodh,w,c
  7506  0003FC  0100               	movlb	0	; () banked
  7507  0003FE  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7508  000400  6EDA               	movwf	fsr2h,c
  7509  000402  0100               	movlb	0	; () banked
  7510  000404  C0C7  FFDF         	movff	i2c_int_handler@i2c_data,indf2
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;my_i2c.c: 212: ic_ptr->buflen++;
  7514  000408  0100               	movlb	0	; () banked
  7515  00040A  EE20 F00A          	lfsr	2,10
  7516  00040E  0100               	movlb	0	; () banked
  7517  000410  51E1               	movf	_ic_ptr& (0+255),w,b
  7518  000412  26D9               	addwf	fsr2l,f,c
  7519  000414  0100               	movlb	0	; () banked
  7520  000416  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7521  000418  22DA               	addwfc	fsr2h,f,c
  7522  00041A  2ADF               	incf	indf2,f,c
  7523                           
  7524                           ;my_i2c.c: 213: } else {
  7525  00041C  D038               	goto	i2l321
  7526  00041E                     i2l349:
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;my_i2c.c: 214: if (SSPSTATbits.R_W == 1) {
  7530  00041E  A4C7               	btfss	4039,2,c	;volatile
  7531  000420  D6C7               	goto	i2l3434
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;my_i2c.c: 215: ic_ptr->status = 0x8;
  7535  000422  0100               	movlb	0	; () banked
  7536  000424  EE20 F00C          	lfsr	2,12
  7537  000428  0100               	movlb	0	; () banked
  7538  00042A  51E1               	movf	_ic_ptr& (0+255),w,b
  7539  00042C  26D9               	addwf	fsr2l,f,c
  7540  00042E  0100               	movlb	0	; () banked
  7541  000430  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7542  000432  22DA               	addwfc	fsr2h,f,c
  7543  000434  0E08               	movlw	8
  7544  000436  6EDF               	movwf	indf2,c
  7545                           
  7546                           ; BSR set to: 0
  7547                           ;my_i2c.c: 216: msg_ready = 1;
  7548  000438  0E01               	movlw	1
  7549  00043A  0100               	movlb	0	; () banked
  7550  00043C  6FC9               	movwf	i2c_int_handler@msg_ready& (0+255),b
  7551  00043E                     L5:
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;my_i2c.c: 217: msg_to_send = 1;
  7555  00043E  0E01               	movlw	1
  7556  000440  0100               	movlb	0	; () banked
  7557  000442  6FC8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;my_i2c.c: 219: data_read = 0;
  7561  000444  0E00               	movlw	0
  7562  000446  0100               	movlb	0	; () banked
  7563  000448  6FCA               	movwf	i2c_int_handler@data_read& (0+255),b
  7564                           
  7565                           ;my_i2c.c: 220: } else {
  7566  00044A  D021               	goto	i2l321
  7567  00044C                     L8:
  7568                           
  7569                           ;my_i2c.c: 223: ic_ptr->status = 0x5;
  7570  00044C  0100               	movlb	0	; () banked
  7571  00044E  EE20 F00C          	lfsr	2,12
  7572  000452  0100               	movlb	0	; () banked
  7573  000454  51E1               	movf	_ic_ptr& (0+255),w,b
  7574  000456  26D9               	addwf	fsr2l,f,c
  7575  000458  0100               	movlb	0	; () banked
  7576  00045A  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7577  00045C  22DA               	addwfc	fsr2h,f,c
  7578  00045E  0E05               	movlw	5
  7579  000460  D74B               	goto	L6
  7580  000462                     i2l3504:
  7581                           
  7582                           ; BSR set to: 0
  7583  000462  0100               	movlb	0	; () banked
  7584  000464  EE20 F00C          	lfsr	2,12
  7585  000468  0100               	movlb	0	; () banked
  7586  00046A  51E1               	movf	_ic_ptr& (0+255),w,b
  7587  00046C  26D9               	addwf	fsr2l,f,c
  7588  00046E  0100               	movlb	0	; () banked
  7589  000470  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7590  000472  22DA               	addwfc	fsr2h,f,c
  7591  000474  50DF               	movf	indf2,w,c
  7592                           
  7593                           ; Switch size 1, requested type "space"
  7594                           ; Number of cases is 4, Range of values is 5 to 8
  7595                           ; switch strategies available:
  7596                           ; Name         Instructions Cycles
  7597                           ; simple_byte           13     7 (average)
  7598                           ;	Chosen strategy is simple_byte
  7599  000476  0A05               	xorlw	5	; case 5
  7600  000478  B4D8               	btfsc	status,2,c
  7601  00047A  D66B               	goto	i2l323
  7602  00047C  0A03               	xorlw	3	; case 6
  7603  00047E  B4D8               	btfsc	status,2,c
  7604  000480  D681               	goto	i2l327
  7605  000482  0A01               	xorlw	1	; case 7
  7606  000484  B4D8               	btfsc	status,2,c
  7607  000486  D73A               	goto	i2l341
  7608  000488  0A0F               	xorlw	15	; case 8
  7609  00048A  B4D8               	btfsc	status,2,c
  7610  00048C  D6F0               	goto	i2l3454
  7611  00048E                     i2l321:
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;my_i2c.c: 230: }
  7615                           ;my_i2c.c: 233: if (data_read || data_written) {
  7616  00048E  0100               	movlb	0	; () banked
  7617  000490  67CA               	tstfsz	i2c_int_handler@data_read& (0+255),b
  7618  000492  D004               	goto	i2l355
  7619                           
  7620                           ; BSR set to: 0
  7621  000494  0100               	movlb	0	; () banked
  7622  000496  51C5               	movf	i2c_int_handler@data_written& (0+255),w,b
  7623  000498  B4D8               	btfsc	status,2,c
  7624  00049A  D002               	goto	i2l3510
  7625  00049C                     i2l355:
  7626                           
  7627                           ; BSR set to: 0
  7628                           ;my_i2c.c: 235: if (SSPCON1bits.CKP == 0) {
  7629  00049C  A8C6               	btfss	4038,4,c	;volatile
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;my_i2c.c: 236: SSPCON1bits.CKP = 1;
  7633  00049E  88C6               	bsf	4038,4,c	;volatile
  7634  0004A0                     i2l3510:
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;my_i2c.c: 237: }
  7638                           ;my_i2c.c: 238: }
  7639                           ;my_i2c.c: 241: if ((ic_ptr->buflen > 10 - 2) && (!msg_ready)) {
  7640  0004A0  0100               	movlb	0	; () banked
  7641  0004A2  EE20 F00A          	lfsr	2,10
  7642  0004A6  0100               	movlb	0	; () banked
  7643  0004A8  51E1               	movf	_ic_ptr& (0+255),w,b
  7644  0004AA  26D9               	addwf	fsr2l,f,c
  7645  0004AC  0100               	movlb	0	; () banked
  7646  0004AE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7647  0004B0  22DA               	addwfc	fsr2h,f,c
  7648  0004B2  0E08               	movlw	8
  7649  0004B4  64DF               	cpfsgt	indf2,c
  7650  0004B6  D023               	goto	i2l3516
  7651                           
  7652                           ; BSR set to: 0
  7653  0004B8  0100               	movlb	0	; () banked
  7654  0004BA  67C9               	tstfsz	i2c_int_handler@msg_ready& (0+255),b
  7655  0004BC  D020               	goto	i2l3516
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;my_i2c.c: 242: ic_ptr->status = 0x5;
  7659  0004BE  0100               	movlb	0	; () banked
  7660  0004C0  EE20 F00C          	lfsr	2,12
  7661  0004C4  0100               	movlb	0	; () banked
  7662  0004C6  51E1               	movf	_ic_ptr& (0+255),w,b
  7663  0004C8  26D9               	addwf	fsr2l,f,c
  7664  0004CA  0100               	movlb	0	; () banked
  7665  0004CC  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7666  0004CE  22DA               	addwfc	fsr2h,f,c
  7667  0004D0  0E05               	movlw	5
  7668  0004D2  6EDF               	movwf	indf2,c
  7669                           
  7670                           ;my_i2c.c: 243: ic_ptr->error_count++;
  7671  0004D4  0100               	movlb	0	; () banked
  7672  0004D6  EE20 F00E          	lfsr	2,14
  7673  0004DA  0100               	movlb	0	; () banked
  7674  0004DC  51E1               	movf	_ic_ptr& (0+255),w,b
  7675  0004DE  26D9               	addwf	fsr2l,f,c
  7676  0004E0  0100               	movlb	0	; () banked
  7677  0004E2  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7678  0004E4  22DA               	addwfc	fsr2h,f,c
  7679  0004E6  2ADF               	incf	indf2,f,c
  7680                           
  7681                           ;my_i2c.c: 244: ic_ptr->error_code = 0x7;
  7682  0004E8  0100               	movlb	0	; () banked
  7683  0004EA  EE20 F00D          	lfsr	2,13
  7684  0004EE  0100               	movlb	0	; () banked
  7685  0004F0  51E1               	movf	_ic_ptr& (0+255),w,b
  7686  0004F2  26D9               	addwf	fsr2l,f,c
  7687  0004F4  0100               	movlb	0	; () banked
  7688  0004F6  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7689  0004F8  22DA               	addwfc	fsr2h,f,c
  7690  0004FA  0E07               	movlw	7
  7691  0004FC  6EDF               	movwf	indf2,c
  7692  0004FE                     i2l3516:
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;my_i2c.c: 245: }
  7696                           ;my_i2c.c: 247: if (msg_ready) {
  7697  0004FE  0100               	movlb	0	; () banked
  7698  000500  51C9               	movf	i2c_int_handler@msg_ready& (0+255),w,b
  7699  000502  B4D8               	btfsc	status,2,c
  7700  000504  D03E               	goto	i2l3524
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;my_i2c.c: 248: ic_ptr->buffer[ic_ptr->buflen] = ic_ptr->event_count;
  7704  000506  0100               	movlb	0	; () banked
  7705  000508  EE20 F00B          	lfsr	2,11
  7706  00050C  0100               	movlb	0	; () banked
  7707  00050E  51E1               	movf	_ic_ptr& (0+255),w,b
  7708  000510  26D9               	addwf	fsr2l,f,c
  7709  000512  0100               	movlb	0	; () banked
  7710  000514  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7711  000516  22DA               	addwfc	fsr2h,f,c
  7712  000518  0100               	movlb	0	; () banked
  7713  00051A  EE10 F00A          	lfsr	1,10
  7714  00051E  0100               	movlb	0	; () banked
  7715  000520  51E1               	movf	_ic_ptr& (0+255),w,b
  7716  000522  26E1               	addwf	fsr1l,f,c
  7717  000524  0100               	movlb	0	; () banked
  7718  000526  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7719  000528  22E2               	addwfc	fsr1h,f,c
  7720  00052A  50E7               	movf	indf1,w,c
  7721  00052C  0100               	movlb	0	; () banked
  7722  00052E  6FC1               	movwf	??_i2c_int_handler& (0+255),b
  7723  000530  0100               	movlb	0	; () banked
  7724  000532  51C1               	movf	??_i2c_int_handler& (0+255),w,b
  7725  000534  0D01               	mullw	1
  7726  000536  50F3               	movf	prodl,w,c
  7727  000538  0100               	movlb	0	; () banked
  7728  00053A  25E1               	addwf	_ic_ptr& (0+255),w,b
  7729  00053C  6EE1               	movwf	fsr1l,c
  7730  00053E  50F4               	movf	prodh,w,c
  7731  000540  0100               	movlb	0	; () banked
  7732  000542  21E2               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7733  000544  6EE2               	movwf	fsr1h,c
  7734  000546  CFDF FFE7          	movff	indf2,indf1
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;my_i2c.c: 249: ToMainHigh_sendmsg(ic_ptr->buflen + 1, 40, (void *) ic_ptr->buffer);
  7738  00054A  0E28               	movlw	40
  7739  00054C  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7740  00054E  0100               	movlb	0	; () banked
  7741  000550  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7742  000554  0100               	movlb	0	; () banked
  7743  000556  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7744  00055A  0100               	movlb	0	; () banked
  7745  00055C  EE20 F00A          	lfsr	2,10
  7746  000560  0100               	movlb	0	; () banked
  7747  000562  51E1               	movf	_ic_ptr& (0+255),w,b
  7748  000564  26D9               	addwf	fsr2l,f,c
  7749  000566  0100               	movlb	0	; () banked
  7750  000568  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7751  00056A  22DA               	addwfc	fsr2h,f,c
  7752  00056C  50DF               	movf	indf2,w,c
  7753  00056E  0100               	movlb	0	; () banked
  7754  000570  6FC1               	movwf	??_i2c_int_handler& (0+255),b
  7755  000572  0100               	movlb	0	; () banked
  7756  000574  29C1               	incf	??_i2c_int_handler& (0+255),w,b
  7757  000576  ECDA  F00D         	call	_ToMainHigh_sendmsg
  7758                           
  7759                           ;my_i2c.c: 250: ic_ptr->buflen = 0;
  7760  00057A  0100               	movlb	0	; () banked
  7761  00057C  EE20 F00A          	lfsr	2,10
  7762  000580  D03E               	goto	L7
  7763  000582                     i2l3524:
  7764                           
  7765                           ; BSR set to: 0
  7766  000582  0100               	movlb	0	; () banked
  7767  000584  EE20 F00E          	lfsr	2,14
  7768  000588  0100               	movlb	0	; () banked
  7769  00058A  51E1               	movf	_ic_ptr& (0+255),w,b
  7770  00058C  26D9               	addwf	fsr2l,f,c
  7771  00058E  0100               	movlb	0	; () banked
  7772  000590  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7773  000592  22DA               	addwfc	fsr2h,f,c
  7774  000594  50DF               	movf	indf2,w,c
  7775  000596  B4D8               	btfsc	status,2,c
  7776  000598  D03A               	goto	i2l3532
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;my_i2c.c: 252: error_buf[0] = ic_ptr->error_count;
  7780  00059A  0100               	movlb	0	; () banked
  7781  00059C  EE20 F00E          	lfsr	2,14
  7782  0005A0  0100               	movlb	0	; () banked
  7783  0005A2  51E1               	movf	_ic_ptr& (0+255),w,b
  7784  0005A4  26D9               	addwf	fsr2l,f,c
  7785  0005A6  0100               	movlb	0	; () banked
  7786  0005A8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7787  0005AA  22DA               	addwfc	fsr2h,f,c
  7788  0005AC  50DF               	movf	indf2,w,c
  7789  0005AE  0100               	movlb	0	; () banked
  7790  0005B0  6FC2               	movwf	i2c_int_handler@error_buf& (0+255),b
  7791                           
  7792                           ;my_i2c.c: 253: error_buf[1] = ic_ptr->error_code;
  7793  0005B2  0100               	movlb	0	; () banked
  7794  0005B4  EE20 F00D          	lfsr	2,13
  7795  0005B8  0100               	movlb	0	; () banked
  7796  0005BA  51E1               	movf	_ic_ptr& (0+255),w,b
  7797  0005BC  26D9               	addwf	fsr2l,f,c
  7798  0005BE  0100               	movlb	0	; () banked
  7799  0005C0  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7800  0005C2  22DA               	addwfc	fsr2h,f,c
  7801  0005C4  50DF               	movf	indf2,w,c
  7802  0005C6  0100               	movlb	0	; () banked
  7803  0005C8  6FC3               	movwf	(i2c_int_handler@error_buf+1)& (0+255),b
  7804                           
  7805                           ;my_i2c.c: 254: error_buf[2] = ic_ptr->event_count;
  7806  0005CA  0100               	movlb	0	; () banked
  7807  0005CC  EE20 F00B          	lfsr	2,11
  7808  0005D0  0100               	movlb	0	; () banked
  7809  0005D2  51E1               	movf	_ic_ptr& (0+255),w,b
  7810  0005D4  26D9               	addwf	fsr2l,f,c
  7811  0005D6  0100               	movlb	0	; () banked
  7812  0005D8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7813  0005DA  22DA               	addwfc	fsr2h,f,c
  7814  0005DC  50DF               	movf	indf2,w,c
  7815  0005DE  0100               	movlb	0	; () banked
  7816  0005E0  6FC4               	movwf	(i2c_int_handler@error_buf+2)& (0+255),b
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;my_i2c.c: 255: ToMainHigh_sendmsg(sizeof (unsigned char) *3, 41, (void *) error_buf);
  7820  0005E2  0E29               	movlw	41
  7821  0005E4  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7822  0005E6  0100               	movlb	0	; () banked
  7823  0005E8  0E00               	movlw	high i2c_int_handler@error_buf
  7824  0005EA  6E47               	movwf	ToMainHigh_sendmsg@data+1,c
  7825  0005EC  0100               	movlb	0	; () banked
  7826  0005EE  0EC2               	movlw	low i2c_int_handler@error_buf
  7827  0005F0  6E46               	movwf	ToMainHigh_sendmsg@data,c
  7828  0005F2  0E03               	movlw	3
  7829  0005F4  ECDA  F00D         	call	_ToMainHigh_sendmsg
  7830                           
  7831                           ;my_i2c.c: 256: ic_ptr->error_count = 0;
  7832  0005F8  0100               	movlb	0	; () banked
  7833  0005FA  EE20 F00E          	lfsr	2,14
  7834  0005FE                     L7:
  7835  0005FE  0100               	movlb	0	; () banked
  7836  000600  51E1               	movf	_ic_ptr& (0+255),w,b
  7837  000602  26D9               	addwf	fsr2l,f,c
  7838  000604  0100               	movlb	0	; () banked
  7839  000606  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7840  000608  22DA               	addwfc	fsr2h,f,c
  7841  00060A  0E00               	movlw	0
  7842  00060C  6EDF               	movwf	indf2,c
  7843  00060E                     i2l3532:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;my_i2c.c: 257: }
  7847                           ;my_i2c.c: 258: if (msg_to_send) {
  7848  00060E  0100               	movlb	0	; () banked
  7849  000610  51C8               	movf	i2c_int_handler@msg_to_send& (0+255),w,b
  7850  000612  B4D8               	btfsc	status,2,c
  7851  000614  0012               	return	
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;my_i2c.c: 260: ToMainHigh_sendmsg(0, 42, (void *) ic_ptr->buffer);
  7855  000616  0E2A               	movlw	42
  7856  000618  6E45               	movwf	ToMainHigh_sendmsg@msgtype,c
  7857  00061A  0100               	movlb	0	; () banked
  7858  00061C  C0E2  F047         	movff	_ic_ptr+1,ToMainHigh_sendmsg@data+1
  7859  000620  0100               	movlb	0	; () banked
  7860  000622  C0E1  F046         	movff	_ic_ptr,ToMainHigh_sendmsg@data
  7861  000626  0E00               	movlw	0
  7862  000628  ECDA  F00D         	call	_ToMainHigh_sendmsg
  7863                           
  7864                           ;my_i2c.c: 261: msg_to_send = 0;
  7865  00062C  0E00               	movlw	0
  7866  00062E  0100               	movlb	0	; () banked
  7867  000630  6FC8               	movwf	i2c_int_handler@msg_to_send& (0+255),b
  7868  000632  0012               	return	
  7869  000634                     __end_of_i2c_int_handler:
  7870                           	opt stack 0
  7871                           pclatu	equ	0xFFB
  7872                           pclath	equ	0xFFA
  7873                           tblptru	equ	0xFF8
  7874                           tblptrh	equ	0xFF7
  7875                           tblptrl	equ	0xFF6
  7876                           tablat	equ	0xFF5
  7877                           prodh	equ	0xFF4
  7878                           prodl	equ	0xFF3
  7879                           intcon	equ	0xFF2
  7880                           postinc0	equ	0xFEE
  7881                           fsr0h	equ	0xFEA
  7882                           fsr0l	equ	0xFE9
  7883                           wreg	equ	0xFE8
  7884                           indf1	equ	0xFE7
  7885                           fsr1h	equ	0xFE2
  7886                           fsr1l	equ	0xFE1
  7887                           bsr	equ	0xFE0
  7888                           indf2	equ	0xFDF
  7889                           postinc2	equ	0xFDE
  7890                           postdec2	equ	0xFDD
  7891                           fsr2h	equ	0xFDA
  7892                           fsr2l	equ	0xFD9
  7893                           status	equ	0xFD8
  7894                           
  7895 ;; *************** function _handle_start *****************
  7896 ;; Defined at:
  7897 ;;		line 71 in file "src/my_i2c.c"
  7898 ;; Parameters:    Size  Location     Type
  7899 ;;  data_read       1    wreg     unsigned char 
  7900 ;; Auto vars:     Size  Location     Type
  7901 ;;  data_read       1   51[COMRAM] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;		None               void
  7904 ;; Registers used:
  7905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7911 ;;      Params:         0       0       0       0       0
  7912 ;;      Locals:         1       0       0       0       0
  7913 ;;      Temps:          0       0       0       0       0
  7914 ;;      Totals:         1       0       0       0       0
  7915 ;;Total ram usage:        1 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; This function calls:
  7918 ;;		Nothing
  7919 ;; This function is called by:
  7920 ;;		_i2c_int_handler
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           
  7924                           	psect	text48
  7925  000EC8                     __ptext48:
  7926                           	opt stack 0
  7927  000EC8                     _handle_start:
  7928                           	opt stack 18
  7929                           
  7930                           ; BSR set to: 0
  7931                           ;incstack = 0
  7932                           ;handle_start@data_read stored from wreg
  7933  000EC8  6E34               	movwf	handle_start@data_read,c
  7934                           
  7935                           ;my_i2c.c: 72: ic_ptr->event_count = 1;
  7936  000ECA  0100               	movlb	0	; () banked
  7937  000ECC  EE20 F00B          	lfsr	2,11
  7938  000ED0  0100               	movlb	0	; () banked
  7939  000ED2  51E1               	movf	_ic_ptr& (0+255),w,b
  7940  000ED4  26D9               	addwf	fsr2l,f,c
  7941  000ED6  0100               	movlb	0	; () banked
  7942  000ED8  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7943  000EDA  22DA               	addwfc	fsr2h,f,c
  7944  000EDC  0E01               	movlw	1
  7945  000EDE  6EDF               	movwf	indf2,c
  7946                           
  7947                           ;my_i2c.c: 73: ic_ptr->buflen = 0;
  7948  000EE0  0100               	movlb	0	; () banked
  7949  000EE2  EE20 F00A          	lfsr	2,10
  7950  000EE6  0100               	movlb	0	; () banked
  7951  000EE8  51E1               	movf	_ic_ptr& (0+255),w,b
  7952  000EEA  26D9               	addwf	fsr2l,f,c
  7953  000EEC  0100               	movlb	0	; () banked
  7954  000EEE  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7955  000EF0  22DA               	addwfc	fsr2h,f,c
  7956  000EF2  0E00               	movlw	0
  7957  000EF4  6EDF               	movwf	indf2,c
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;my_i2c.c: 75: if (data_read) {
  7961  000EF6  5034               	movf	handle_start@data_read,w,c
  7962  000EF8  B4D8               	btfsc	status,2,c
  7963  000EFA  D03D               	goto	i2l3356
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;my_i2c.c: 76: if (SSPSTATbits.D_A == 1) {
  7967  000EFC  AAC7               	btfss	4039,5,c	;volatile
  7968  000EFE  D021               	goto	i2l311
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;my_i2c.c: 79: ic_ptr->status = 0x5;
  7972  000F00  0100               	movlb	0	; () banked
  7973  000F02  EE20 F00C          	lfsr	2,12
  7974  000F06  0100               	movlb	0	; () banked
  7975  000F08  51E1               	movf	_ic_ptr& (0+255),w,b
  7976  000F0A  26D9               	addwf	fsr2l,f,c
  7977  000F0C  0100               	movlb	0	; () banked
  7978  000F0E  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7979  000F10  22DA               	addwfc	fsr2h,f,c
  7980  000F12  0E05               	movlw	5
  7981  000F14  6EDF               	movwf	indf2,c
  7982                           
  7983                           ;my_i2c.c: 80: ic_ptr->error_count++;
  7984  000F16  0100               	movlb	0	; () banked
  7985  000F18  EE20 F00E          	lfsr	2,14
  7986  000F1C  0100               	movlb	0	; () banked
  7987  000F1E  51E1               	movf	_ic_ptr& (0+255),w,b
  7988  000F20  26D9               	addwf	fsr2l,f,c
  7989  000F22  0100               	movlb	0	; () banked
  7990  000F24  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  7991  000F26  22DA               	addwfc	fsr2h,f,c
  7992  000F28  2ADF               	incf	indf2,f,c
  7993                           
  7994                           ;my_i2c.c: 81: ic_ptr->error_code = 0x5;
  7995  000F2A  0100               	movlb	0	; () banked
  7996  000F2C  EE20 F00D          	lfsr	2,13
  7997  000F30  0100               	movlb	0	; () banked
  7998  000F32  51E1               	movf	_ic_ptr& (0+255),w,b
  7999  000F34  26D9               	addwf	fsr2l,f,c
  8000  000F36  0100               	movlb	0	; () banked
  8001  000F38  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8002  000F3A  22DA               	addwfc	fsr2h,f,c
  8003  000F3C  0E05               	movlw	5
  8004  000F3E  6EDF               	movwf	indf2,c
  8005                           
  8006                           ;my_i2c.c: 82: } else {
  8007  000F40  0012               	return	
  8008  000F42                     i2l311:
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;my_i2c.c: 83: if (SSPSTATbits.R_W == 1) {
  8012  000F42  A4C7               	btfss	4039,2,c	;volatile
  8013  000F44  D00C               	goto	i2l3354
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;my_i2c.c: 84: ic_ptr->status = 0x8;
  8017  000F46  0100               	movlb	0	; () banked
  8018  000F48  EE20 F00C          	lfsr	2,12
  8019  000F4C  0100               	movlb	0	; () banked
  8020  000F4E  51E1               	movf	_ic_ptr& (0+255),w,b
  8021  000F50  26D9               	addwf	fsr2l,f,c
  8022  000F52  0100               	movlb	0	; () banked
  8023  000F54  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8024  000F56  22DA               	addwfc	fsr2h,f,c
  8025  000F58  0E08               	movlw	8
  8026  000F5A  6EDF               	movwf	indf2,c
  8027                           
  8028                           ;my_i2c.c: 85: } else {
  8029  000F5C  0012               	return	
  8030  000F5E                     i2l3354:
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;my_i2c.c: 86: ic_ptr->status = 0x7;
  8034  000F5E  0100               	movlb	0	; () banked
  8035  000F60  EE20 F00C          	lfsr	2,12
  8036  000F64  0100               	movlb	0	; () banked
  8037  000F66  51E1               	movf	_ic_ptr& (0+255),w,b
  8038  000F68  26D9               	addwf	fsr2l,f,c
  8039  000F6A  0100               	movlb	0	; () banked
  8040  000F6C  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8041  000F6E  22DA               	addwfc	fsr2h,f,c
  8042  000F70  0E07               	movlw	7
  8043  000F72  6EDF               	movwf	indf2,c
  8044  000F74  0012               	return	
  8045  000F76                     i2l3356:
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;my_i2c.c: 90: ic_ptr->status = 0x6;
  8049  000F76  0100               	movlb	0	; () banked
  8050  000F78  EE20 F00C          	lfsr	2,12
  8051  000F7C  0100               	movlb	0	; () banked
  8052  000F7E  51E1               	movf	_ic_ptr& (0+255),w,b
  8053  000F80  26D9               	addwf	fsr2l,f,c
  8054  000F82  0100               	movlb	0	; () banked
  8055  000F84  51E2               	movf	(_ic_ptr+1)& (0+255),w,b
  8056  000F86  22DA               	addwfc	fsr2h,f,c
  8057  000F88  0E06               	movlw	6
  8058  000F8A  6EDF               	movwf	indf2,c
  8059  000F8C  0012               	return	
  8060  000F8E                     __end_of_handle_start:
  8061                           	opt stack 0
  8062                           pclatu	equ	0xFFB
  8063                           pclath	equ	0xFFA
  8064                           tblptru	equ	0xFF8
  8065                           tblptrh	equ	0xFF7
  8066                           tblptrl	equ	0xFF6
  8067                           tablat	equ	0xFF5
  8068                           prodh	equ	0xFF4
  8069                           prodl	equ	0xFF3
  8070                           intcon	equ	0xFF2
  8071                           postinc0	equ	0xFEE
  8072                           fsr0h	equ	0xFEA
  8073                           fsr0l	equ	0xFE9
  8074                           wreg	equ	0xFE8
  8075                           indf1	equ	0xFE7
  8076                           fsr1h	equ	0xFE2
  8077                           fsr1l	equ	0xFE1
  8078                           bsr	equ	0xFE0
  8079                           indf2	equ	0xFDF
  8080                           postinc2	equ	0xFDE
  8081                           postdec2	equ	0xFDD
  8082                           fsr2h	equ	0xFDA
  8083                           fsr2l	equ	0xFD9
  8084                           status	equ	0xFD8
  8085                           
  8086 ;; *************** function _ToMainHigh_sendmsg *****************
  8087 ;; Defined at:
  8088 ;;		line 126 in file "src/messages.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  length          1    wreg     unsigned char 
  8091 ;;  msgtype         1   68[COMRAM] unsigned char 
  8092 ;;  data            2   69[COMRAM] PTR void 
  8093 ;;		 -> i2c_int_handler@error_buf(3), main@ic(28), NULL(0), 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  length          1   71[COMRAM] unsigned char 
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      char 
  8098 ;; Registers used:
  8099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8105 ;;      Params:         3       0       0       0       0
  8106 ;;      Locals:         1       0       0       0       0
  8107 ;;      Temps:          0       0       0       0       0
  8108 ;;      Totals:         4       0       0       0       0
  8109 ;;Total ram usage:        4 bytes
  8110 ;; Hardware stack levels used:    1
  8111 ;; Hardware stack levels required when called:    2
  8112 ;; This function calls:
  8113 ;;		i2_send_msg
  8114 ;; This function is called by:
  8115 ;;		_InterruptHandlerHigh
  8116 ;;		_i2c_int_handler
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text49
  8121  001BB4                     __ptext49:
  8122                           	opt stack 0
  8123  001BB4                     _ToMainHigh_sendmsg:
  8124                           	opt stack 16
  8125                           
  8126                           ; BSR set to: 0
  8127                           ;incstack = 0
  8128                           ;ToMainHigh_sendmsg@length stored from wreg
  8129  001BB4  6E48               	movwf	ToMainHigh_sendmsg@length,c
  8130                           
  8131                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  8132                           ;	Return value of _ToMainHigh_sendmsg is never used
  8133  001BB6  0101               	movlb	1	; () banked
  8134  001BB8  0E01               	movlw	high _ToMainHigh_MQ
  8135  001BBA  6E3F               	movwf	i2send_msg@qptr+1,c
  8136  001BBC  0101               	movlb	1	; () banked
  8137  001BBE  0E6C               	movlw	low _ToMainHigh_MQ
  8138  001BC0  6E3E               	movwf	i2send_msg@qptr,c
  8139  001BC2  C048  F040         	movff	ToMainHigh_sendmsg@length,i2send_msg@length
  8140  001BC6  C045  F041         	movff	ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  8141  001BCA  C047  F043         	movff	ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  8142  001BCE  C046  F042         	movff	ToMainHigh_sendmsg@data,i2send_msg@data
  8143  001BD2  ECC7  F007         	call	i2_send_msg	;wreg free
  8144  001BD6  0012               	return	
  8145  001BD8                     __end_of_ToMainHigh_sendmsg:
  8146                           	opt stack 0
  8147                           pclatu	equ	0xFFB
  8148                           pclath	equ	0xFFA
  8149                           tblptru	equ	0xFF8
  8150                           tblptrh	equ	0xFF7
  8151                           tblptrl	equ	0xFF6
  8152                           tablat	equ	0xFF5
  8153                           prodh	equ	0xFF4
  8154                           prodl	equ	0xFF3
  8155                           intcon	equ	0xFF2
  8156                           postinc0	equ	0xFEE
  8157                           fsr0h	equ	0xFEA
  8158                           fsr0l	equ	0xFE9
  8159                           wreg	equ	0xFE8
  8160                           indf1	equ	0xFE7
  8161                           fsr1h	equ	0xFE2
  8162                           fsr1l	equ	0xFE1
  8163                           bsr	equ	0xFE0
  8164                           indf2	equ	0xFDF
  8165                           postinc2	equ	0xFDE
  8166                           postdec2	equ	0xFDD
  8167                           fsr2h	equ	0xFDA
  8168                           fsr2l	equ	0xFD9
  8169                           status	equ	0xFD8
  8170                           
  8171 ;; *************** function i2_send_msg *****************
  8172 ;; Defined at:
  8173 ;;		line 24 in file "src/messages.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  qptr            2   61[COMRAM] PTR struct __msg_queue
  8176 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8177 ;;  length          1   63[COMRAM] unsigned char 
  8178 ;;  msgtype         1   64[COMRAM] unsigned char 
  8179 ;;  data            2   65[COMRAM] PTR void 
  8180 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  8181 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  8182 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  send_msg        2    3[BANK0 ] PTR struct __msg
  8185 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8186 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8187 ;;  send_msg        2    0[BANK0 ] unsigned int 
  8188 ;;  send_msg        1    2[BANK0 ] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      char 
  8191 ;; Registers used:
  8192 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8198 ;;      Params:         6       0       0       0       0
  8199 ;;      Locals:         0       5       0       0       0
  8200 ;;      Temps:          1       0       0       0       0
  8201 ;;      Totals:         7       5       0       0       0
  8202 ;;Total ram usage:       12 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; Hardware stack levels required when called:    1
  8205 ;; This function calls:
  8206 ;;		i2_memcpy
  8207 ;; This function is called by:
  8208 ;;		_ToMainHigh_sendmsg
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	text50
  8213  000F8E                     __ptext50:
  8214                           	opt stack 0
  8215  000F8E                     i2_send_msg:
  8216                           	opt stack 16
  8217                           
  8218                           ;messages.c: 25: unsigned char slot;
  8219                           ;messages.c: 27: msg *qmsg;
  8220                           ;messages.c: 28: size_t tlength = length;
  8221                           
  8222                           ;incstack = 0
  8223  000F8E  0100               	movlb	0	; () banked
  8224  000F90  C040  F0BC         	movff	i2send_msg@length,i2send_msg@tlength
  8225  000F94  0100               	movlb	0	; () banked
  8226  000F96  6BBD               	clrf	(i2send_msg@tlength+1)& (0+255),b
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;messages.c: 38: slot = qptr->cur_write_ind;
  8230  000F98  EE20 F034          	lfsr	2,52
  8231  000F9C  503E               	movf	i2send_msg@qptr,w,c
  8232  000F9E  26D9               	addwf	fsr2l,f,c
  8233  000FA0  503F               	movf	i2send_msg@qptr+1,w,c
  8234  000FA2  22DA               	addwfc	fsr2h,f,c
  8235  000FA4  50DF               	movf	indf2,w,c
  8236  000FA6  0100               	movlb	0	; () banked
  8237  000FA8  6FBE               	movwf	i2send_msg@slot& (0+255),b
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  8241  000FAA  0100               	movlb	0	; () banked
  8242  000FAC  51BE               	movf	i2send_msg@slot& (0+255),w,b
  8243  000FAE  0D0D               	mullw	13
  8244  000FB0  50F3               	movf	prodl,w,c
  8245  000FB2  243E               	addwf	i2send_msg@qptr,w,c
  8246  000FB4  0100               	movlb	0	; () banked
  8247  000FB6  6FBF               	movwf	i2send_msg@qmsg& (0+255),b
  8248  000FB8  50F4               	movf	prodh,w,c
  8249  000FBA  203F               	addwfc	i2send_msg@qptr+1,w,c
  8250  000FBC  0100               	movlb	0	; () banked
  8251  000FBE  6FC0               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  8252                           
  8253                           ; BSR set to: 0
  8254                           ;messages.c: 41: if (qmsg->full != 0) {
  8255  000FC0  C0BF  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8256  000FC4  C0C0  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8257  000FC8  50DF               	movf	indf2,w,c
  8258  000FCA  B4D8               	btfsc	status,2,c
  8259  000FCC  D002               	goto	i2l3206
  8260                           
  8261                           ; BSR set to: 0
  8262                           ;messages.c: 42: return (-1);
  8263  000FCE  0EFF               	movlw	255
  8264  000FD0  0012               	return	
  8265  000FD2                     i2l3206:
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;messages.c: 43: }
  8269                           ;messages.c: 46: qmsg->length = length;
  8270  000FD2  0100               	movlb	0	; () banked
  8271  000FD4  EE20 F001          	lfsr	2,1
  8272  000FD8  0100               	movlb	0	; () banked
  8273  000FDA  51BF               	movf	i2send_msg@qmsg& (0+255),w,b
  8274  000FDC  26D9               	addwf	fsr2l,f,c
  8275  000FDE  0100               	movlb	0	; () banked
  8276  000FE0  51C0               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8277  000FE2  22DA               	addwfc	fsr2h,f,c
  8278  000FE4  C040  FFDF         	movff	i2send_msg@length,indf2
  8279                           
  8280                           ;messages.c: 47: qmsg->msgtype = msgtype;
  8281  000FE8  0100               	movlb	0	; () banked
  8282  000FEA  EE20 F002          	lfsr	2,2
  8283  000FEE  0100               	movlb	0	; () banked
  8284  000FF0  51BF               	movf	i2send_msg@qmsg& (0+255),w,b
  8285  000FF2  26D9               	addwf	fsr2l,f,c
  8286  000FF4  0100               	movlb	0	; () banked
  8287  000FF6  51C0               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  8288  000FF8  22DA               	addwfc	fsr2h,f,c
  8289  000FFA  C041  FFDF         	movff	i2send_msg@msgtype,indf2
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  8293  000FFE  0E03               	movlw	3
  8294  001000  0100               	movlb	0	; () banked
  8295  001002  25BF               	addwf	i2send_msg@qmsg& (0+255),w,b
  8296  001004  6E34               	movwf	i2memcpy@d1,c
  8297  001006  0E00               	movlw	0
  8298  001008  0100               	movlb	0	; () banked
  8299  00100A  21C0               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  8300  00100C  6E35               	movwf	i2memcpy@d1+1,c
  8301  00100E  C043  F037         	movff	i2send_msg@data+1,i2memcpy@s1+1
  8302  001012  C042  F036         	movff	i2send_msg@data,i2memcpy@s1
  8303  001016  C0BC  F038         	movff	i2send_msg@tlength,i2memcpy@n
  8304  00101A  C0BD  F039         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  8305  00101E  EC5A  F00C         	call	i2_memcpy	;wreg free
  8306                           
  8307                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  8308  001022  EE20 F034          	lfsr	2,52
  8309  001026  503E               	movf	i2send_msg@qptr,w,c
  8310  001028  26D9               	addwf	fsr2l,f,c
  8311  00102A  503F               	movf	i2send_msg@qptr+1,w,c
  8312  00102C  22DA               	addwfc	fsr2h,f,c
  8313  00102E  EE10 F034          	lfsr	1,52
  8314  001032  503E               	movf	i2send_msg@qptr,w,c
  8315  001034  26E1               	addwf	fsr1l,f,c
  8316  001036  503F               	movf	i2send_msg@qptr+1,w,c
  8317  001038  22E2               	addwfc	fsr1h,f,c
  8318  00103A  50E7               	movf	indf1,w,c
  8319  00103C  6E44               	movwf	??i2_send_msg& (0+255),c
  8320  00103E  2844               	incf	??i2_send_msg,w,c
  8321  001040  0B03               	andlw	3
  8322  001042  6EDF               	movwf	indf2,c
  8323                           
  8324                           ;messages.c: 59: qmsg->full = 1;
  8325  001044  C0BF  FFD9         	movff	i2send_msg@qmsg,fsr2l
  8326  001048  C0C0  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  8327  00104C  0E01               	movlw	1
  8328  00104E  6EDF               	movwf	indf2,c
  8329                           
  8330                           ;messages.c: 60: return (1);
  8331  001050  0E01               	movlw	1
  8332  001052  0012               	return	
  8333  001054                     __end_ofi2_send_msg:
  8334                           	opt stack 0
  8335                           pclatu	equ	0xFFB
  8336                           pclath	equ	0xFFA
  8337                           tblptru	equ	0xFF8
  8338                           tblptrh	equ	0xFF7
  8339                           tblptrl	equ	0xFF6
  8340                           tablat	equ	0xFF5
  8341                           prodh	equ	0xFF4
  8342                           prodl	equ	0xFF3
  8343                           intcon	equ	0xFF2
  8344                           postinc0	equ	0xFEE
  8345                           fsr0h	equ	0xFEA
  8346                           fsr0l	equ	0xFE9
  8347                           wreg	equ	0xFE8
  8348                           indf1	equ	0xFE7
  8349                           fsr1h	equ	0xFE2
  8350                           fsr1l	equ	0xFE1
  8351                           bsr	equ	0xFE0
  8352                           indf2	equ	0xFDF
  8353                           postinc2	equ	0xFDE
  8354                           postdec2	equ	0xFDD
  8355                           fsr2h	equ	0xFDA
  8356                           fsr2l	equ	0xFD9
  8357                           status	equ	0xFD8
  8358                           
  8359 ;; *************** function i2_memcpy *****************
  8360 ;; Defined at:
  8361 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\memcpy.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  d1              2   51[COMRAM] PTR void 
  8364 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8365 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8366 ;;		 -> main@msgbuffer(11), NULL(0), 
  8367 ;;  s1              2   53[COMRAM] PTR const void 
  8368 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8369 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8370 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  8371 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  8372 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8373 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  8374 ;;  n               2   55[COMRAM] unsigned int 
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;  memcpy          2   59[COMRAM] PTR const unsigned char 
  8377 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8378 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8379 ;;		 -> timer1_lthread@temp(2), timer0_lthread@temp(2), sendUARTbyte@temp(1), i2c_int_handler@error_buf(3), 
  8380 ;;		 -> stop@test(2), turn@test(2), moveDist@test(2), move@test(2), 
  8381 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8382 ;;		 -> main@uthread_data(10), main@ic(28), main@uc(5), NULL(0), 
  8383 ;;  memcpy          2   57[COMRAM] PTR unsigned char 
  8384 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8385 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8386 ;;		 -> main@msgbuffer(11), NULL(0), 
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  2   51[COMRAM] PTR void 
  8389 ;; Registers used:
  8390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8396 ;;      Params:         6       0       0       0       0
  8397 ;;      Locals:         4       0       0       0       0
  8398 ;;      Temps:          0       0       0       0       0
  8399 ;;      Totals:        10       0       0       0       0
  8400 ;;Total ram usage:       10 bytes
  8401 ;; Hardware stack levels used:    1
  8402 ;; This function calls:
  8403 ;;		Nothing
  8404 ;; This function is called by:
  8405 ;;		i2_send_msg
  8406 ;; This function uses a non-reentrant model
  8407 ;;
  8408                           
  8409                           	psect	text51
  8410  0018B4                     __ptext51:
  8411                           	opt stack 0
  8412  0018B4                     i2_memcpy:
  8413                           	opt stack 16
  8414                           
  8415                           ;incstack = 0
  8416  0018B4  C037  F03D         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8417  0018B8  C036  F03C         	movff	i2memcpy@s1,i2memcpy@s
  8418  0018BC  C035  F03B         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8419  0018C0  C034  F03A         	movff	i2memcpy@d1,i2memcpy@d
  8420  0018C4  D00E               	goto	i2l3144
  8421  0018C6                     i2l3138:
  8422  0018C6  C03C  FFD9         	movff	i2memcpy@s,fsr2l
  8423  0018CA  C03D  FFDA         	movff	i2memcpy@s+1,fsr2h
  8424  0018CE  C03A  FFE1         	movff	i2memcpy@d,fsr1l
  8425  0018D2  C03B  FFE2         	movff	i2memcpy@d+1,fsr1h
  8426  0018D6  CFDF FFE7          	movff	indf2,indf1
  8427  0018DA  4A3C               	infsnz	i2memcpy@s,f,c
  8428  0018DC  2A3D               	incf	i2memcpy@s+1,f,c
  8429  0018DE  4A3A               	infsnz	i2memcpy@d,f,c
  8430  0018E0  2A3B               	incf	i2memcpy@d+1,f,c
  8431  0018E2                     i2l3144:
  8432  0018E2  0638               	decf	i2memcpy@n,f,c
  8433  0018E4  A0D8               	btfss	status,0,c
  8434  0018E6  0639               	decf	i2memcpy@n+1,f,c
  8435  0018E8  2838               	incf	i2memcpy@n& (0+255),w,c
  8436  0018EA  B4D8               	btfsc	status,2,c
  8437  0018EC  2839               	incf	(i2memcpy@n+1)& (0+255),w,c
  8438  0018EE  B4D8               	btfsc	status,2,c
  8439                           
  8440                           ;	Return value of i2_memcpy is never used
  8441  0018F0  0012               	return	
  8442  0018F2  D7E9               	goto	i2l3138
  8443  0018F4                     __end_ofi2_memcpy:
  8444                           	opt stack 0
  8445                           pclatu	equ	0xFFB
  8446                           pclath	equ	0xFFA
  8447                           tblptru	equ	0xFF8
  8448                           tblptrh	equ	0xFF7
  8449                           tblptrl	equ	0xFF6
  8450                           tablat	equ	0xFF5
  8451                           prodh	equ	0xFF4
  8452                           prodl	equ	0xFF3
  8453                           intcon	equ	0xFF2
  8454                           postinc0	equ	0xFEE
  8455                           fsr0h	equ	0xFEA
  8456                           fsr0l	equ	0xFE9
  8457                           wreg	equ	0xFE8
  8458                           indf1	equ	0xFE7
  8459                           fsr1h	equ	0xFE2
  8460                           fsr1l	equ	0xFE1
  8461                           bsr	equ	0xFE0
  8462                           indf2	equ	0xFDF
  8463                           postinc2	equ	0xFDE
  8464                           postdec2	equ	0xFDD
  8465                           fsr2h	equ	0xFDA
  8466                           fsr2l	equ	0xFD9
  8467                           status	equ	0xFD8
  8468                           
  8469 ;; *************** function _SleepIfOkay *****************
  8470 ;; Defined at:
  8471 ;;		line 226 in file "src/messages.c"
  8472 ;; Parameters:    Size  Location     Type
  8473 ;;		None
  8474 ;; Auto vars:     Size  Location     Type
  8475 ;;		None
  8476 ;; Return value:  Size  Location     Type
  8477 ;;		None               void
  8478 ;; Registers used:
  8479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8480 ;; Tracked objects:
  8481 ;;		On entry : 0/0
  8482 ;;		On exit  : 0/0
  8483 ;;		Unchanged: 0/0
  8484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8485 ;;      Params:         0       0       0       0       0
  8486 ;;      Locals:         0       0       0       0       0
  8487 ;;      Temps:          0       0       0       0       0
  8488 ;;      Totals:         0       0       0       0       0
  8489 ;;Total ram usage:        0 bytes
  8490 ;; Hardware stack levels used:    1
  8491 ;; Hardware stack levels required when called:    2
  8492 ;; This function calls:
  8493 ;;		_enter_sleep_mode
  8494 ;;		i2_check_msg
  8495 ;;		i2_in_high_int
  8496 ;;		i2_in_low_int
  8497 ;; This function is called by:
  8498 ;;		_InterruptHandlerHigh
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           	psect	text52
  8503  001796                     __ptext52:
  8504                           	opt stack 0
  8505  001796                     _SleepIfOkay:
  8506                           	opt stack 17
  8507                           
  8508                           ;messages.c: 228: if (MQ_Main_Willing_to_block == 0) {
  8509                           
  8510                           ;incstack = 0
  8511  001796  664B               	tstfsz	_MQ_Main_Willing_to_block,c
  8512  001798  D001               	goto	i2l2622
  8513  00179A  0012               	return	
  8514  00179C                     i2l2622:
  8515                           
  8516                           ;messages.c: 230: }
  8517                           ;messages.c: 233: if (in_low_int()) {
  8518  00179C  EC64  F00D         	call	i2_in_low_int	;wreg free
  8519  0017A0  5037               	movf	?i2_in_low_int+1,w,c
  8520  0017A2  1036               	iorwf	?i2_in_low_int,w,c
  8521  0017A4  A4D8               	btfss	status,2,c
  8522  0017A6  0012               	return	
  8523                           
  8524                           ;messages.c: 235: }
  8525                           ;messages.c: 238: if (!in_high_int()) {
  8526                           
  8527                           ;messages.c: 234: return;
  8528  0017A8  EC40  F00E         	call	i2_in_high_int	;wreg free
  8529  0017AC  5035               	movf	?i2_in_high_int+1,w,c
  8530  0017AE  1034               	iorwf	?i2_in_high_int,w,c
  8531  0017B0  B4D8               	btfsc	status,2,c
  8532  0017B2  0012               	return	
  8533                           
  8534                           ;messages.c: 240: }
  8535                           ;messages.c: 245: if (check_msg(&ToMainHigh_MQ)) {
  8536                           
  8537                           ;messages.c: 239: return;
  8538  0017B4  0101               	movlb	1	; () banked
  8539  0017B6  0E01               	movlw	high _ToMainHigh_MQ
  8540  0017B8  6E35               	movwf	i2check_msg@qptr+1,c
  8541  0017BA  0101               	movlb	1	; () banked
  8542  0017BC  0E6C               	movlw	low _ToMainHigh_MQ
  8543  0017BE  6E34               	movwf	i2check_msg@qptr,c
  8544  0017C0  ECEC  F00D         	call	i2_check_msg	;wreg free
  8545  0017C4  0900               	iorlw	0
  8546  0017C6  A4D8               	btfss	status,2,c
  8547  0017C8  0012               	return	
  8548                           
  8549                           ;messages.c: 247: }
  8550                           ;messages.c: 248: if (check_msg(&ToMainLow_MQ)) {
  8551                           
  8552                           ;messages.c: 246: return;
  8553  0017CA  0100               	movlb	0	; () banked
  8554  0017CC  0E00               	movlw	high _ToMainLow_MQ
  8555  0017CE  6E35               	movwf	i2check_msg@qptr+1,c
  8556  0017D0  0100               	movlb	0	; () banked
  8557  0017D2  0E86               	movlw	low _ToMainLow_MQ
  8558  0017D4  6E34               	movwf	i2check_msg@qptr,c
  8559  0017D6  ECEC  F00D         	call	i2_check_msg	;wreg free
  8560  0017DA  0900               	iorlw	0
  8561  0017DC  B4D8               	btfsc	status,2,c
  8562                           
  8563                           ;messages.c: 250: }
  8564                           ;messages.c: 251: enter_sleep_mode();
  8565                           
  8566                           ;messages.c: 249: return;
  8567  0017DE  EC4A  F00E         	call	_enter_sleep_mode	;wreg free
  8568  0017E2  0012               	return	
  8569  0017E4                     __end_of_SleepIfOkay:
  8570                           	opt stack 0
  8571                           pclatu	equ	0xFFB
  8572                           pclath	equ	0xFFA
  8573                           tblptru	equ	0xFF8
  8574                           tblptrh	equ	0xFF7
  8575                           tblptrl	equ	0xFF6
  8576                           tablat	equ	0xFF5
  8577                           prodh	equ	0xFF4
  8578                           prodl	equ	0xFF3
  8579                           intcon	equ	0xFF2
  8580                           postinc0	equ	0xFEE
  8581                           fsr0h	equ	0xFEA
  8582                           fsr0l	equ	0xFE9
  8583                           wreg	equ	0xFE8
  8584                           indf1	equ	0xFE7
  8585                           fsr1h	equ	0xFE2
  8586                           fsr1l	equ	0xFE1
  8587                           bsr	equ	0xFE0
  8588                           indf2	equ	0xFDF
  8589                           postinc2	equ	0xFDE
  8590                           postdec2	equ	0xFDD
  8591                           fsr2h	equ	0xFDA
  8592                           fsr2l	equ	0xFD9
  8593                           status	equ	0xFD8
  8594                           
  8595 ;; *************** function i2_in_low_int *****************
  8596 ;; Defined at:
  8597 ;;		line 31 in file "src/interrupts.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;		None
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  2   53[COMRAM] int 
  8604 ;; Registers used:
  8605 ;;		wreg, status,2, status,0, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8611 ;;      Params:         2       0       0       0       0
  8612 ;;      Locals:         0       0       0       0       0
  8613 ;;      Temps:          0       0       0       0       0
  8614 ;;      Totals:         2       0       0       0       0
  8615 ;;Total ram usage:        2 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    1
  8618 ;; This function calls:
  8619 ;;		i2_in_high_int
  8620 ;; This function is called by:
  8621 ;;		_SleepIfOkay
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           	psect	text53
  8626  001AC8                     __ptext53:
  8627                           	opt stack 0
  8628  001AC8                     i2_in_low_int:
  8629                           	opt stack 17
  8630                           
  8631                           ;interrupts.c: 32: if (INTCONbits.GIEL == 1) {
  8632                           
  8633                           ;incstack = 0
  8634  001AC8  ACF2               	btfss	intcon,6,c	;volatile
  8635  001ACA  D005               	goto	i2l2454
  8636                           
  8637                           ;interrupts.c: 33: return (0);
  8638  001ACC  0E00               	movlw	0
  8639  001ACE  6E37               	movwf	?i2_in_low_int+1,c
  8640  001AD0  0E00               	movlw	0
  8641  001AD2  6E36               	movwf	?i2_in_low_int,c
  8642  001AD4  0012               	return	
  8643  001AD6                     i2l2454:
  8644  001AD6  EC40  F00E         	call	i2_in_high_int	;wreg free
  8645  001ADA  5035               	movf	?i2_in_high_int+1,w,c
  8646  001ADC  1034               	iorwf	?i2_in_high_int,w,c
  8647  001ADE  B4D8               	btfsc	status,2,c
  8648  001AE0  D005               	goto	i2l2462
  8649                           
  8650                           ;interrupts.c: 35: return (0);
  8651  001AE2  0E00               	movlw	0
  8652  001AE4  6E37               	movwf	?i2_in_low_int+1,c
  8653  001AE6  0E00               	movlw	0
  8654  001AE8  6E36               	movwf	?i2_in_low_int,c
  8655  001AEA  0012               	return	
  8656  001AEC                     i2l2462:
  8657                           
  8658                           ;interrupts.c: 37: return (1);
  8659  001AEC  0E00               	movlw	0
  8660  001AEE  6E37               	movwf	?i2_in_low_int+1,c
  8661  001AF0  0E01               	movlw	1
  8662  001AF2  6E36               	movwf	?i2_in_low_int,c
  8663  001AF4  0012               	return	
  8664  001AF6                     __end_ofi2_in_low_int:
  8665                           	opt stack 0
  8666                           pclatu	equ	0xFFB
  8667                           pclath	equ	0xFFA
  8668                           tblptru	equ	0xFF8
  8669                           tblptrh	equ	0xFF7
  8670                           tblptrl	equ	0xFF6
  8671                           tablat	equ	0xFF5
  8672                           prodh	equ	0xFF4
  8673                           prodl	equ	0xFF3
  8674                           intcon	equ	0xFF2
  8675                           postinc0	equ	0xFEE
  8676                           fsr0h	equ	0xFEA
  8677                           fsr0l	equ	0xFE9
  8678                           wreg	equ	0xFE8
  8679                           indf1	equ	0xFE7
  8680                           fsr1h	equ	0xFE2
  8681                           fsr1l	equ	0xFE1
  8682                           bsr	equ	0xFE0
  8683                           indf2	equ	0xFDF
  8684                           postinc2	equ	0xFDE
  8685                           postdec2	equ	0xFDD
  8686                           fsr2h	equ	0xFDA
  8687                           fsr2l	equ	0xFD9
  8688                           status	equ	0xFD8
  8689                           
  8690 ;; *************** function i2_in_high_int *****************
  8691 ;; Defined at:
  8692 ;;		line 23 in file "src/interrupts.c"
  8693 ;; Parameters:    Size  Location     Type
  8694 ;;		None
  8695 ;; Auto vars:     Size  Location     Type
  8696 ;;		None
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  2   51[COMRAM] int 
  8699 ;; Registers used:
  8700 ;;		wreg, status,2
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8706 ;;      Params:         2       0       0       0       0
  8707 ;;      Locals:         0       0       0       0       0
  8708 ;;      Temps:          0       0       0       0       0
  8709 ;;      Totals:         2       0       0       0       0
  8710 ;;Total ram usage:        2 bytes
  8711 ;; Hardware stack levels used:    1
  8712 ;; This function calls:
  8713 ;;		Nothing
  8714 ;; This function is called by:
  8715 ;;		_SleepIfOkay
  8716 ;;		i2_in_low_int
  8717 ;; This function uses a non-reentrant model
  8718 ;;
  8719                           
  8720                           	psect	text54
  8721  001C80                     __ptext54:
  8722                           	opt stack 0
  8723  001C80                     i2_in_high_int:
  8724                           	opt stack 17
  8725                           
  8726                           ;interrupts.c: 24: return (!INTCONbits.GIEH);
  8727                           
  8728                           ;incstack = 0
  8729  001C80  0E00               	movlw	0
  8730  001C82  AEF2               	btfss	intcon,7,c	;volatile
  8731  001C84  0E01               	movlw	1
  8732  001C86  6E34               	movwf	?i2_in_high_int,c
  8733  001C88  6A35               	clrf	?i2_in_high_int+1,c
  8734  001C8A  0012               	return	
  8735  001C8C                     __end_ofi2_in_high_int:
  8736                           	opt stack 0
  8737                           pclatu	equ	0xFFB
  8738                           pclath	equ	0xFFA
  8739                           tblptru	equ	0xFF8
  8740                           tblptrh	equ	0xFF7
  8741                           tblptrl	equ	0xFF6
  8742                           tablat	equ	0xFF5
  8743                           prodh	equ	0xFF4
  8744                           prodl	equ	0xFF3
  8745                           intcon	equ	0xFF2
  8746                           postinc0	equ	0xFEE
  8747                           fsr0h	equ	0xFEA
  8748                           fsr0l	equ	0xFE9
  8749                           wreg	equ	0xFE8
  8750                           indf1	equ	0xFE7
  8751                           fsr1h	equ	0xFE2
  8752                           fsr1l	equ	0xFE1
  8753                           bsr	equ	0xFE0
  8754                           indf2	equ	0xFDF
  8755                           postinc2	equ	0xFDE
  8756                           postdec2	equ	0xFDD
  8757                           fsr2h	equ	0xFDA
  8758                           fsr2l	equ	0xFD9
  8759                           status	equ	0xFD8
  8760                           
  8761 ;; *************** function i2_check_msg *****************
  8762 ;; Defined at:
  8763 ;;		line 220 in file "src/messages.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  qptr            2   51[COMRAM] PTR struct __msg_queue
  8766 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8767 ;; Auto vars:     Size  Location     Type
  8768 ;;		None
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  1    wreg      unsigned char 
  8771 ;; Registers used:
  8772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8778 ;;      Params:         2       0       0       0       0
  8779 ;;      Locals:         0       0       0       0       0
  8780 ;;      Temps:          1       0       0       0       0
  8781 ;;      Totals:         3       0       0       0       0
  8782 ;;Total ram usage:        3 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_SleepIfOkay
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           	psect	text55
  8792  001BD8                     __ptext55:
  8793                           	opt stack 0
  8794  001BD8                     i2_check_msg:
  8795                           	opt stack 18
  8796                           
  8797                           ;messages.c: 221: return (qptr->queue[qptr->cur_read_ind].full);
  8798                           
  8799                           ;incstack = 0
  8800  001BD8  EE20 F035          	lfsr	2,53
  8801  001BDC  5034               	movf	i2check_msg@qptr,w,c
  8802  001BDE  26D9               	addwf	fsr2l,f,c
  8803  001BE0  5035               	movf	i2check_msg@qptr+1,w,c
  8804  001BE2  22DA               	addwfc	fsr2h,f,c
  8805  001BE4  50DF               	movf	indf2,w,c
  8806  001BE6  6E36               	movwf	??i2_check_msg& (0+255),c
  8807  001BE8  5036               	movf	??i2_check_msg,w,c
  8808  001BEA  0D0D               	mullw	13
  8809  001BEC  50F3               	movf	prodl,w,c
  8810  001BEE  2434               	addwf	i2check_msg@qptr,w,c
  8811  001BF0  6ED9               	movwf	fsr2l,c
  8812  001BF2  50F4               	movf	prodh,w,c
  8813  001BF4  2035               	addwfc	i2check_msg@qptr+1,w,c
  8814  001BF6  6EDA               	movwf	fsr2h,c
  8815  001BF8  50DF               	movf	indf2,w,c
  8816  001BFA  0012               	return	
  8817  001BFC                     __end_ofi2_check_msg:
  8818                           	opt stack 0
  8819                           pclatu	equ	0xFFB
  8820                           pclath	equ	0xFFA
  8821                           tblptru	equ	0xFF8
  8822                           tblptrh	equ	0xFF7
  8823                           tblptrl	equ	0xFF6
  8824                           tablat	equ	0xFF5
  8825                           prodh	equ	0xFF4
  8826                           prodl	equ	0xFF3
  8827                           intcon	equ	0xFF2
  8828                           postinc0	equ	0xFEE
  8829                           fsr0h	equ	0xFEA
  8830                           fsr0l	equ	0xFE9
  8831                           wreg	equ	0xFE8
  8832                           indf1	equ	0xFE7
  8833                           fsr1h	equ	0xFE2
  8834                           fsr1l	equ	0xFE1
  8835                           bsr	equ	0xFE0
  8836                           indf2	equ	0xFDF
  8837                           postinc2	equ	0xFDE
  8838                           postdec2	equ	0xFDD
  8839                           fsr2h	equ	0xFDA
  8840                           fsr2l	equ	0xFD9
  8841                           status	equ	0xFD8
  8842                           
  8843 ;; *************** function _enter_sleep_mode *****************
  8844 ;; Defined at:
  8845 ;;		line 202 in file "src/messages.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;		None
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;		None               void
  8852 ;; Registers used:
  8853 ;;		None
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8859 ;;      Params:         0       0       0       0       0
  8860 ;;      Locals:         0       0       0       0       0
  8861 ;;      Temps:          0       0       0       0       0
  8862 ;;      Totals:         0       0       0       0       0
  8863 ;;Total ram usage:        0 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; This function calls:
  8866 ;;		Nothing
  8867 ;; This function is called by:
  8868 ;;		_SleepIfOkay
  8869 ;; This function uses a non-reentrant model
  8870 ;;
  8871                           
  8872                           	psect	text56
  8873  001C94                     __ptext56:
  8874                           	opt stack 0
  8875  001C94                     _enter_sleep_mode:
  8876                           	opt stack 18
  8877                           
  8878                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8879                           
  8880                           ;incstack = 0
  8881  001C94  8ED3               	bsf	4051,7,c	;volatile
  8882  001C96  0003               	sleep		;# 
  8883  001C98  0012               	return	
  8884  001C9A                     __end_of_enter_sleep_mode:
  8885                           	opt stack 0
  8886  0000                     pclatu	equ	0xFFB
  8887                           pclath	equ	0xFFA
  8888                           tblptru	equ	0xFF8
  8889                           tblptrh	equ	0xFF7
  8890                           tblptrl	equ	0xFF6
  8891                           tablat	equ	0xFF5
  8892                           prodh	equ	0xFF4
  8893                           prodl	equ	0xFF3
  8894                           intcon	equ	0xFF2
  8895                           postinc0	equ	0xFEE
  8896                           fsr0h	equ	0xFEA
  8897                           fsr0l	equ	0xFE9
  8898                           wreg	equ	0xFE8
  8899                           indf1	equ	0xFE7
  8900                           fsr1h	equ	0xFE2
  8901                           fsr1l	equ	0xFE1
  8902                           bsr	equ	0xFE0
  8903                           indf2	equ	0xFDF
  8904                           postinc2	equ	0xFDE
  8905                           postdec2	equ	0xFDD
  8906                           fsr2h	equ	0xFDA
  8907                           fsr2l	equ	0xFD9
  8908                           status	equ	0xFD8
  8909                           pclatu	equ	0xFFB
  8910                           pclath	equ	0xFFA
  8911                           tblptru	equ	0xFF8
  8912                           tblptrh	equ	0xFF7
  8913                           tblptrl	equ	0xFF6
  8914                           tablat	equ	0xFF5
  8915                           prodh	equ	0xFF4
  8916                           prodl	equ	0xFF3
  8917                           intcon	equ	0xFF2
  8918                           postinc0	equ	0xFEE
  8919                           fsr0h	equ	0xFEA
  8920                           fsr0l	equ	0xFE9
  8921                           wreg	equ	0xFE8
  8922                           indf1	equ	0xFE7
  8923                           fsr1h	equ	0xFE2
  8924                           fsr1l	equ	0xFE1
  8925                           bsr	equ	0xFE0
  8926                           indf2	equ	0xFDF
  8927                           postinc2	equ	0xFDE
  8928                           postdec2	equ	0xFDD
  8929                           fsr2h	equ	0xFDA
  8930                           fsr2l	equ	0xFD9
  8931                           status	equ	0xFD8
  8932                           
  8933                           	psect	rparam
  8934  0000                     pclatu	equ	0xFFB
  8935                           pclath	equ	0xFFA
  8936                           tblptru	equ	0xFF8
  8937                           tblptrh	equ	0xFF7
  8938                           tblptrl	equ	0xFF6
  8939                           tablat	equ	0xFF5
  8940                           prodh	equ	0xFF4
  8941                           prodl	equ	0xFF3
  8942                           intcon	equ	0xFF2
  8943                           postinc0	equ	0xFEE
  8944                           fsr0h	equ	0xFEA
  8945                           fsr0l	equ	0xFE9
  8946                           wreg	equ	0xFE8
  8947                           indf1	equ	0xFE7
  8948                           fsr1h	equ	0xFE2
  8949                           fsr1l	equ	0xFE1
  8950                           bsr	equ	0xFE0
  8951                           indf2	equ	0xFDF
  8952                           postinc2	equ	0xFDE
  8953                           postdec2	equ	0xFDD
  8954                           fsr2h	equ	0xFDA
  8955                           fsr2l	equ	0xFD9
  8956                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         224
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      76
    BANK0           128     37      99
    BANK1           256     30     192
    BANK2           256     79      79
    BANK3           256      0       0

Pointer List with Targets:

    init_uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK2[11]), NULL(NULL[0]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK2[11]), NULL(NULL[0]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK1[2]), turn@test(BANK1[2]), moveDist@test(COMRAM[2]), move@test(BANK1[2]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@uthread_data(BANK2[10]), main@ic(BANK2[28]), main@uc(BANK2[5]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK0[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK1[10]), 
		 -> ToMainLow_MQ.queue.data(BANK0[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK1[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK1[2]), turn@test(BANK1[2]), moveDist@test(COMRAM[2]), move@test(BANK1[2]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@uthread_data(BANK2[10]), main@ic(BANK2[28]), main@uc(BANK2[5]), NULL(NULL[0]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 11
		 -> main@t1thread_data(BANK2[11]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 11
		 -> main@t1thread_data(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 9
		 -> main@t0thread_data(BANK2[9]), 

    init_timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 9
		 -> main@t0thread_data(BANK2[9]), 

    sendUARTarr@data	PTR unsigned char  size(2) Largest target is 2
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), stop@test(BANK1[2]), turn@test(BANK1[2]), 
		 -> moveDist@test(COMRAM[2]), move@test(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 5
		 -> main@uc(BANK2[5]), NULL(NULL[0]), 

    uart_trans_int_handler@data	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), 

    start_i2c_slave_reply@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 28
		 -> main@ic(BANK2[28]), NULL(NULL[0]), 

    stop@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 11
		 -> main@t1thread_data(BANK2[11]), 

    turn@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 9
		 -> main@t0thread_data(BANK2[9]), 

    move@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 11
		 -> main@t1thread_data(BANK2[11]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    FromMainLow_recvmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FromMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), 

    FromMainLow_sendmsg@data	PTR void  size(2) Largest target is 10
		 -> main@uthread_data(BANK2[10]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 28
		 -> i2c_int_handler@error_buf(BANK0[3]), main@ic(BANK2[28]), NULL(NULL[0]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 5
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), sendUARTbyte@temp(COMRAM[1]), stop@test(BANK1[2]), 
		 -> turn@test(BANK1[2]), moveDist@test(COMRAM[2]), move@test(BANK1[2]), main@uc(BANK2[5]), 
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> uart_trans_int_handler@msgtype(COMRAM[1]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), NULL(NULL[0]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 
		 -> main@msgbuffer(BANK2[11]), NULL(NULL[0]), 

    send_msg@data	PTR void  size(2) Largest target is 28
		 -> timer1_lthread@temp(BANK1[2]), timer0_lthread@temp(BANK1[2]), sendUARTbyte@temp(COMRAM[1]), i2c_int_handler@error_buf(BANK0[3]), 
		 -> stop@test(BANK1[2]), turn@test(BANK1[2]), moveDist@test(COMRAM[2]), move@test(BANK1[2]), 
		 -> main@uthread_data(BANK2[10]), main@ic(BANK2[28]), main@uc(BANK2[5]), NULL(NULL[0]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK1[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK0[52]), 
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK1[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK0[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    _InterruptHandlerHigh->_ToMainHigh_sendmsg
    _i2c_int_handler->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_trans_int_handler
    _uart_trans_int_handler->_FromMainLow_recvmsg
    _FromMainLow_recvmsg->i1_recv_msg
    i1_recv_msg->i1_memcpy
    _uart_recv_int_handler->i1_ToMainLow_sendmsg
    i1_ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_i2c_int_handler
    _ToMainHigh_sendmsg->i2_send_msg

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer0_lthread
    _main->_timer1_lthread
    _uart_lthread->_FromMainLow_sendmsg
    _FromMainLow_sendmsg->_send_msg
    _turn->_sendUARTarr
    _timer1_lthread->_sendUARTarr
    _timer0_lthread->_sendUARTarr
    _stop->_sendUARTarr
    _move->_sendUARTarr
    _sendUARTarr->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->_send_msg
    _send_msg->_memcpy
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                79    79      0   32981
                                              0 BANK2     79    79      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                           _init_i2c
                        _init_queues
                _init_timer0_lthread
                _init_timer1_lthread
                  _init_uart_lthread
                     _init_uart_recv
                               _move
              _start_i2c_slave_reply
                               _stop
                     _timer0_lthread
                     _timer1_lthread
                               _turn
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                        11     3      8    3234
                                             18 BANK1     11     3      8
                _FromMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (2) _FromMainLow_sendmsg                                  4     1      3    2449
                                             36 BANK0      1     1      0
                                             15 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _turn                                                 6     2      4    4271
                                             22 BANK1      6     2      4
                        _WriteTimer0
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                       8     6      2    4452
                                             22 BANK1      8     6      2
                        _WriteTimer1
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                       8     6      2    4375
                                             22 BANK1      8     6      2
                        _WriteTimer0
                            ___lwmod
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     372
                                             29 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     253
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _stop                                                 4     2      2    3925
                                             22 BANK1      4     2      2
                        _WriteTimer1
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _WriteTimer1                                          4     2      2     330
                                             29 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _start_i2c_slave_reply                                5     3      2     170
                                             29 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _move                                                 4     2      2    3663
                                             22 BANK1      4     2      2
                        _sendUARTarr
 ---------------------------------------------------------------------------------
 (2) _sendUARTarr                                          4     2      2    3444
                                             18 BANK1      4     2      2
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (3) _ToMainLow_sendmsg                                    4     1      3    2855
                                             36 BANK0      1     1      0
                                             15 BANK1      3     0      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    2202
                                             35 BANK0      1     1      0
                                              4 BANK1     11     5      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2     108
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_uart_lthread                                    2     0      2      77
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2     263
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer0_lthread                                  2     0      2     263
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          0     0      0     500
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           3     1      2     500
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2     108
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                0     0      0     331
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                             33 BANK0      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                             31 BANK0      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                             29 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     300
                                             29 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2480
                                             16 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2480
                                             16 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    2233
                                             35 BANK0      2     2      0
                                              4 BANK1     12     5      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     636
                                             29 BANK0      6     0      6
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     387
                                             29 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                             29 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptHandlerLow                                 17    17      0    4184
                                             34 COMRAM    17    17      0
              _uart_recv_int_handler
             _uart_trans_int_handler
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _uart_trans_int_handler                               5     5      0    1548
                                             29 COMRAM     5     5      0
                _FromMainLow_recvmsg
 ---------------------------------------------------------------------------------
 (8) _FromMainLow_recvmsg                                  5     1      4    1276
                                             24 COMRAM     5     1      4
                         i1_recv_msg
 ---------------------------------------------------------------------------------
 (9) i1_recv_msg                                          14     7      7    1029
                                             10 COMRAM    14     7      7
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (7) _uart_recv_int_handler                                1     1      0    1335
                                             26 COMRAM     1     1      0
                          _ReadUSART
                i1_ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainLow_sendmsg                                  4     1      3    1301
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6     998
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     384
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptHandlerHigh                               14    14      0    3911
                                             15 BANK0     14    14      0
                        _SleepIfOkay
                 _ToMainHigh_sendmsg
                    _i2c_int_handler
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler                                    10    10      0    2213
                                              5 BANK0     10    10      0
                 _ToMainHigh_sendmsg
                       _handle_start
 ---------------------------------------------------------------------------------
 (13) _handle_start                                        1     1      0      31
                                             51 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ToMainHigh_sendmsg                                  4     1      3    1602
                                             68 COMRAM     4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (14) i2_send_msg                                         12     6      6     893
                                             61 COMRAM     7     1      6
                                              0 BANK0      5     5      0
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (15) i2_memcpy                                           10     4      6     279
                                             51 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (12) _SleepIfOkay                                         0     0      0      96
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (13) i2_in_low_int                                        2     0      2       0
                                             53 COMRAM     2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (14) i2_in_high_int                                       2     0      2       0
                                             51 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (13) i2_check_msg                                         3     1      2      96
                                             51 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (13) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _init_i2c
   _init_queues
     _init_queue
   _init_timer0_lthread
   _init_timer1_lthread
   _init_uart_lthread
   _init_uart_recv
   _move
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _start_i2c_slave_reply
   _stop
     _WriteTimer1
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer0_lthread
     _WriteTimer0
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _timer1_lthread
     _WriteTimer1
     ___lwmod
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _turn
     _WriteTimer0
     _sendUARTarr
       _ToMainLow_sendmsg
         _send_msg
           _memcpy
   _uart_lthread
     _FromMainLow_sendmsg
       _send_msg
         _memcpy

 _InterruptHandlerLow (ROOT)
   _uart_recv_int_handler
     _ReadUSART
     i1_ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_trans_int_handler
     _FromMainLow_recvmsg
       i1_recv_msg
         i1_memcpy
   i1_ToMainLow_sendmsg
     i1_send_msg
       i1_memcpy

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _ToMainHigh_sendmsg
     i2_send_msg
       i2_memcpy
   _i2c_int_handler
     _ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy
     _handle_start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     4F      4F       8       30.9%
BITBANK1           100      0       0       5        0.0%
BANK1              100     1E      C0       6       75.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     25      63       4       77.3%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      4C       1       59.8%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BE      11        0.0%
DATA                 0      0     1BE      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Wed Mar 25 11:25:47 2015

               main@uthread_data 020E         _MQ_Main_Willing_to_block 004B  
                    _SSPSTATbits 000FC7        __end_of_ToMainLow_recvmsg 19A4  
                             bsr 000FE0        __end_of_ToMainLow_sendmsg 1AC8  
                   __CFG_CP0$OFF 000000             ?_FromMainLow_recvmsg 0019  
                            l132 0750                              l125 0704  
                            l139 07E4                              l514 1A22  
                            l516 1A38                              l517 1A3A  
                            l551 14B6                              l490 1B64  
                            l491 1B66                              l555 14D0  
                            l556 14D2                              l557 14DE  
                            l558 14E0             ?_FromMainLow_sendmsg 01B1  
                            l799 1C3C  __size_of_uart_trans_int_handler 0056  
           __size_of_WriteTimer0 0012             __size_of_WriteTimer1 0012  
                 _FromMainLow_MQ 0136                              wreg 000FE8  
                   __CFG_IESO$ON 000000                     ?_in_high_int 00D9  
               ??_init_uart_recv 00DB                             l1105 162C  
                           l3114 0B80                             l3310 0A2A  
                           l3090 16B4                             l3162 1924  
                           l3154 1906                             l3260 1960  
                           l3334 1A7A                             l3096 16D4  
                           l3276 15AE                             l3380 15F4  
                           l3294 096C                             l3382 15FA  
                           l3640 1A24                             l3386 161E  
                           l3378 15E8                             l3732 166A  
                           l3726 164A                             l3806 0CE8  
                           l3830 10EA                             l3920 0756  
                           l3666 14B8                             l3658 14A6  
                           l3738 168A                             l3754 0DD2  
                           l3826 10CA                             l3922 076C  
                           l3930 07C6                             l3932 07EA  
                           l3940 0816                             l3924 078E  
                           l3782 0A4A                             l3934 07FE  
                           l3942 082C                             l3926 07B0  
                           l3918 073A                             l3960 08EE  
                           l3936 0808                             l3786 0AC6  
                           l3954 0894                             l3946 0846  
                           l3956 08AA                             l3948 0862  
                           _LATA 000F89                             _LATB 000F8A  
                           u2815 0CC4                             u2785 0DAE  
                           i1l52 0088                             u2957 1C3E  
                _FromMainHigh_MQ 0100                    __CFG_FCMEN$ON 000000  
         ?_block_on_To_msgqueues 0001                       i1_recv_msg 0DF6  
                           _main 0634                             _move 17E4  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           fsr0l 000FE9                             fsr2h 000FDA  
                           indf1 000FE7                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           _stop 182E                             _turn 11BA  
                    main@msgtype 021D                       i1_send_msg 1110  
                           pclat 000FFA                      i2_check_msg 1BD8  
                           prodh 000FF4                             prodl 000FF3  
          handle_start@data_read 0034                             start 00CE  
                  __CFG_FOSC2$ON 000000                       i2_send_msg 0F8E  
      ToMainHigh_recvmsg@msgtype 01B2                   send_msg@length 01A8  
                    _Delay1KTCYx 1C38            ??_FromMainLow_recvmsg 001D  
          ??_FromMainLow_sendmsg 00E0                            ?_main 0001  
                          ?_move 01B8     __size_ofi1_ToMainLow_sendmsg 0024  
                          _CMCON 000FB4                            ?_stop 01B8  
                          ?_turn 01B8                            _T0CON 000FD5  
                          _T1CON 000FCD            init_uart_lthread@uptr 00D9  
                __end_of___lwmod 1636                       i1memcpy@d1 0001  
                          i2l311 0F42                            i2l321 048E  
                          i1l394 1792                            i2l323 0152  
                          i2l341 02FC                            i1l397 176A  
                          i2l327 0184                            i1l569 1C28  
                          i2l355 049C                            i2l349 041E  
                     i1memcpy@s1 0003                            _RCREG 000FAE  
                          _RCSTA 000FAB                            _TMR0H 000FD7  
                          _TMR1H 000FCF                            _TMR0L 000FD6  
                          _TMR1L 000FCE                            _SPBRG 000FAF  
                          _PORTA 000F80                            _PORTB 000F81  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TXREG 000FAD                            _TXSTA 000FAC  
              sendUARTarr@length 01B7                       i2memcpy@d1 0034  
                     i2memcpy@s1 0036                     ?_init_queues 0001  
      __size_of_enter_sleep_mode 0006                sendUARTarr@retval 01B6  
                __end_of_in_main 196E       ToMainLow_recvmsg@maxlength 01B6  
        i2c_configure_slave@addr 00D9                            tablat 000FF5  
                          status 000FD8           _uart_trans_int_handler 1740  
               __end_ofi1_memcpy 18B4                 __end_ofi2_memcpy 18F4  
                   ?_sendUARTarr 01B4                  __initialization 1B1E  
     uart_trans_int_handler@data 001E                     __end_of_main 090C  
   uart_trans_int_handler@length 0022                     __end_of_move 182E  
                   __end_of_stop 1874                     __end_of_turn 125A  
     __size_of_ToMainLow_recvmsg 0036       __size_of_ToMainLow_sendmsg 002E  
          __size_ofi2_in_low_int 002E                           ??_main 00E1  
                         ??_move 00E1                           ??_stop 00E1  
                         ??_turn 00E1                  send_msg@msgtype 01A9  
                  __activetblptr 000002                  send_msg@tlength 01AC  
     FromMainLow_sendmsg@msgtype 01B1             __end_of_handle_start 0F8E  
                         _ADCON1 000FC1          ??_uart_recv_int_handler 001B  
                         i1l3134 18A2                           i1l3230 0E3C  
                         i1l3128 1886                           i1l3182 1148  
                         i1l3246 0EC4                           i1l3550 12D2  
                         i1l3572 1784                           i1l3860 007E  
                         i2l3206 0FD2                           i1l3854 0074  
                         i2l3144 18E2                       _OpenTimer0 1B44  
                         i2l3138 18C6                           i2l3410 013C  
                     _OpenTimer1 1A0C                           i2l2462 1AEC  
                         i2l2454 1AD6                           i2l2622 179C  
                         i2l3510 04A0                   __CFG_WDTEN$OFF 000000  
                         i2l3504 0462                           i2l3416 014A  
                         i2l3354 0F5E                           i2l3434 01B0  
                         i2l3356 0F76                           i2l3532 060E  
                         i2l3524 0582                           i2l3516 04FE  
                         i2l3452 022E                           i2l3436 01DC  
                         i2l3454 026E                           i2l3446 0216  
                         i2l3482 03B4                           i2l3476 036A  
                         i2l3478 03AC                           i2l3840 1324  
                         i2l3846 133C      __end_of_i2c_configure_slave 1B1E  
                  ??_SleepIfOkay 0038               __size_of_ReadUSART 001E  
                         _OSCCON 000FD3                           _SPBRGH 000FB0  
                    ?i1_recv_msg 000B                           _SSPADD 000FC8  
                         _SSPBUF 000FC9   __size_of_start_i2c_slave_reply 0104  
                    ?i1_send_msg 000B    __end_of_start_i2c_slave_reply 0B32  
             timer0_lthread@temp 01BE               timer0_lthread@tptr 01B8  
        FromMainLow_recvmsg@data 001B                     i2_in_low_int 1AC8  
                    ?i2_send_msg 003E                   __CFG_XINST$OFF 000000  
             __size_of_OpenUSART 0082                  _i2c_int_handler 00D2  
               OpenTimer0@config 00D9                           _ic_ptr 00E1  
                      ??___lwmod 00DD                    main@msgbuffer 0200  
               __end_of_init_i2c 1572                 OpenTimer1@config 00D9  
                         _memcpy 1692                           clear_0 1B24  
                         clear_1 1B30                           _uc_ptr 0049  
                         main@ic 0233                           main@uc 0218  
               __end_of_recv_msg 0A2E      start_i2c_slave_reply@length 00DD  
                      ??_in_main 00DF                 __end_of_send_msg 0C22  
        i2c_int_handler@i2c_data 00C7                           tblptrh 000FF7  
                         tblptrl 000FF6                           tblptru 000FF8  
                    init_queue@i 00DB         ToMainLow_recvmsg@msgtype 01B2  
           __size_of_in_high_int 0010          FromMainLow_sendmsg@data 01B2  
                __CFG_FOSC$HSPLL 000000                _init_uart_lthread 1C9A  
                     __accesstop 0080          __end_of__initialization 1B3A  
     __end_of_ToMainHigh_recvmsg 19DA       __end_of_ToMainHigh_sendmsg 1BD8  
             ?_init_uart_lthread 00D9      __end_of_init_timer0_lthread 148A  
    __end_of_init_timer1_lthread 1402              __end_of_SleepIfOkay 17E4  
                 __pcstackCOMRAM 0001           __size_ofi2_in_high_int 000C  
            ??_init_uart_lthread 00DB               __size_of_check_msg 0032  
              __end_of_ReadUSART 1C38              __size_ofi1_recv_msg 00D2  
            __size_ofi1_send_msg 00AA                        ?i1_memcpy 0001  
  __size_of_InterruptHandlerHigh 1372      __end_of_InterruptHandlerLow 00CE  
                      ?i2_memcpy 0034                    _ToMainHigh_MQ 016C  
               _enter_sleep_mode 1C94              __size_ofi2_send_msg 00C6  
                  ReadUSART@data 0001                __end_of_OpenUSART 150C  
                  check_msg@qptr 00D9        __end_of_init_uart_lthread 1C9C  
        ??_block_on_To_msgqueues 00DF             __size_of_init_queues 0056  
                     __pbssBANK0 0080                       __pbssBANK1 0100  
                    ?_OpenTimer0 0001                      ?_OpenTimer1 0001  
 uart_trans_int_handler@curIndex 0021                       __pnvCOMRAM 0049  
            i1_ToMainLow_sendmsg 1B90          __end_of_i2c_int_handler 0634  
                   ?i2_check_msg 0034               timer1_lthread@temp 01BE  
             timer1_lthread@tptr 01B8             __size_of_sendUARTarr 002E  
              recv_msg@maxlength 01A8                  recv_msg@msgtype 01A9  
                recv_msg@tlength 01AE            __size_of_handle_start 00C6  
                   ?_Delay1KTCYx 0001                 WriteTimer0@timer 00DB  
                        ?_memcpy 00D9                 WriteTimer1@timer 00DB  
                  ??_WriteTimer0 00DB                    ??_WriteTimer1 00DB  
        __size_of_timer0_lthread 00EA             ?i1_ToMainLow_sendmsg 0017  
        __size_of_timer1_lthread 00EA              timer0_lthread@F5145 0082  
                     ??i1_memcpy 0007                       ??i2_memcpy 003A  
               i1send_msg@length 000D                    i2_in_high_int 1C80  
                        _SSPCON1 000FC6                          _SSPCON2 000FC5  
                        _SSPSTAT 000FC7          ?_uart_trans_int_handler 0001  
              __end_of_check_msg 1A0C                        ?_init_i2c 00D9  
                    _SleepIfOkay 1796                        ?_recv_msg 01A6  
                     _in_low_int 18F4                     _handle_start 0EC8  
                        __Hparam 0000                        ?_send_msg 01A6  
                        __Lparam 0000      __end_of_FromMainLow_recvmsg 1B90  
    __end_of_FromMainLow_sendmsg 1A6C                 init_uart_recv@uc 00D9  
                        ___lwmod 15D6                  __CFG_STVREN$OFF 000000  
                        __pcinit 1B1E                  __size_of_memcpy 0058  
                     _init_queue 1572                          __ramtop 0400  
          ??i1_ToMainLow_sendmsg 001A              __size_of_OpenTimer0 0026  
            __size_of_OpenTimer1 0032                          __ptext0 0634  
                        __ptext1 1054                          __ptext2 1A3E  
                        __ptext3 11BA                          __ptext4 0C22  
                        __ptext5 0D0C                          __ptext6 15D6  
                        __ptext7 1C4C                          __ptext8 182E  
                        __ptext9 1C5E                uart_lthread@index 01BD  
                      _T0CONbits 000FD5                          _in_main 1932  
                      _T1CONbits 000FCD              __end_of_WriteTimer0 1C5E  
            __end_of_WriteTimer1 1C70                   ?i2_in_high_int 0034  
 __end_of_uart_trans_int_handler 1796       __size_of_init_uart_lthread 0002  
                 __pintcode_body 12EE             end_of_initialization 1B3A  
 __size_of_uart_recv_int_handler 0094                          memcpy@d 01A2  
                        memcpy@n 00DD                          memcpy@s 01A4  
  __end_of_uart_recv_int_handler 12EE                       ??_init_i2c 00DB  
                   ??i1_recv_msg 0012      i2c_int_handler@data_written 00C5  
                  __Lmediumconst 0000                          int_func 12EE  
                   ??i1_send_msg 0011                    ?_uart_lthread 01B4  
        __size_of_init_uart_recv 001E                 ?_i2c_int_handler 0001  
                     ??_recv_msg 00DF                     ??i2_send_msg 0044  
                     ??_send_msg 00DF                        _RCSTAbits 000FAB  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc2 000FDE        ToMainHigh_sendmsg@msgtype 0045  
             __end_ofi1_recv_msg 0EC8               __end_ofi1_send_msg 11BA  
                      _TRISCbits 000F94               __end_ofi2_send_msg 1054  
                 ??_uart_lthread 00E1                        _TXSTAbits 000FAC  
                     main@length 021E                      ?_in_low_int 00DB  
          _start_i2c_slave_reply 0A2E     __size_of_i2c_configure_slave 0028  
           __size_ofi2_check_msg 0024         __end_of_enter_sleep_mode 1C9A  
             _ToMainHigh_recvmsg 19A4                        i1memcpy@d 0007  
             _ToMainHigh_sendmsg 1BB4                        i1memcpy@n 0005  
                      i1memcpy@s 0009                   _timer0_lthread 0D0C  
                    ?_init_queue 00D9                        i2memcpy@d 003A  
                    _WriteTimer0 1C4C                      _WriteTimer1 1C5E  
                      i2memcpy@n 0038                        i2memcpy@s 003C  
                 _timer1_lthread 0C22                   __end_of_memcpy 16EA  
              _enable_interrupts 1C8C             __size_of_Delay1KTCYx 0014  
            ?_ToMainHigh_recvmsg 01B2                  ??i2_in_high_int 0036  
       i2c_int_handler@data_read 00CA              ?_ToMainHigh_sendmsg 0045  
        i1ToMainLow_sendmsg@data 0018               ?_enable_interrupts 0001  
            start_initialization 1B1E                    ??_in_high_int 00DB  
                      _ReadUSART 1C1A                __size_ofi1_memcpy 0040  
              __size_ofi2_memcpy 0040        FromMainLow_sendmsg@length 00E0  
            ??_enable_interrupts 00D9                     ??_OpenTimer0 00D9  
                   ??_OpenTimer1 00D9   __size_of_block_on_To_msgqueues 005C  
  __end_of_block_on_To_msgqueues 1692                        _OpenUSART 148A  
   __end_of_InterruptHandlerHigh 137A                       init_i2c@ic 00D9  
           ??_ToMainHigh_recvmsg 00E1             ??_ToMainHigh_sendmsg 0048  
         __end_of_timer0_lthread 0DF6         i2c_int_handler@error_buf 00C2  
         __end_of_timer1_lthread 0D0C        __end_of_enable_interrupts 1C94  
                       ??_memcpy 00DF     __size_of_init_timer0_lthread 0088  
   __size_of_init_timer1_lthread 0088               __end_of_OpenTimer0 1B6A  
             __end_of_OpenTimer1 1A3E         i2c_int_handler@msg_ready 00C9  
            timer1_lthread@F5146 0084                      __pbssCOMRAM 004B  
                     ?_ReadUSART 0001                    ??_init_queues 00DC  
                  __pcstackBANK0 00BC                    __pcstackBANK1 01A2  
                  __pcstackBANK2 0200              __size_of_in_low_int 003E  
       start_i2c_slave_reply@msg 00D9              __CFG_CCP2MX$DEFAULT 000000  
                Delay1KTCYx@unit 00D9         ToMainLow_sendmsg@msgtype 01B1  
   __size_of_InterruptHandlerLow 00B6              __end_of_in_high_int 1C80  
                     ?_OpenUSART 00D9                     ?_SleepIfOkay 0001  
          ToMainLow_recvmsg@data 01B4                     _ToMainLow_MQ 0086  
            __size_of_init_queue 0064                   _init_uart_recv 1BFC  
                      _check_msg 19DA                        __pnvBANK0 00E1  
         ?_start_i2c_slave_reply 00D9                __size_of_init_i2c 0066  
                  ??_sendUARTarr 00E1                     recv_msg@data 01AB  
                   recv_msg@qmsg 01B0                     recv_msg@slot 01AD  
                   recv_msg@qptr 01A6                __size_of_recv_msg 0122  
                      __pintcode 0008                __size_of_send_msg 00F0  
                ?_timer0_lthread 01B8                         ?___lwmod 00D9  
                ?_timer1_lthread 01B8                      __pintcodelo 0018  
         ToMainHigh_recvmsg@data 01B4             __end_of_uart_lthread 1110  
     i2c_int_handler@msg_to_send 00C8                         ?_in_main 00DD  
              WriteTimer0@timer0 00D9                WriteTimer1@timer1 00D9  
     i1ToMainLow_sendmsg@msgtype 0017              uart_lthread@msgtype 01B6  
        init_timer0_lthread@tptr 00D9            ToMainLow_sendmsg@data 01B2  
            i1recv_msg@maxlength 000D                 uart_lthread@uptr 01B4  
         __end_of_init_uart_recv 1C1A              __end_of_init_queues 1740  
                i2check_msg@qptr 0034                       ?_check_msg 00D9  
                       _IPR1bits 000F9F                         _PIE1bits 000F9D  
                  ?i2_in_low_int 0036                         _PIR1bits 000F9E  
         ToMainHigh_sendmsg@data 0046      __end_ofi1_ToMainLow_sendmsg 1BB4  
                       _RCONbits 000FD0                 __CFG_WDTPS$32768 000000  
                 i1recv_msg@data 0010                   i1recv_msg@qmsg 0017  
                 i1recv_msg@slot 0014                   i1recv_msg@qptr 000B  
   FromMainLow_recvmsg@maxlength 001D       __size_of_enable_interrupts 0008  
              i1send_msg@msgtype 000E              __end_of_sendUARTarr 1A9A  
              i1send_msg@tlength 0012       FromMainLow_recvmsg@msgtype 0019  
   __size_of_FromMainLow_recvmsg 0026     __size_of_FromMainLow_sendmsg 002E  
                       i1_memcpy 1874             _InterruptHandlerHigh 0008  
                    ??_ReadUSART 0001                         i2_memcpy 18B4  
                    _in_high_int 1C70                     send_msg@data 01AA  
            _i2c_configure_slave 1AF6                     send_msg@qmsg 01AF  
                   send_msg@slot 01AE                     send_msg@qptr 01A6  
                sendUARTarr@data 01B4            uart_lthread@msgbuffer 01BA  
                ?_init_uart_recv 00D9                      ??_OpenUSART 00DB  
                OpenUSART@config 00DE                   ??i2_in_low_int 0038  
          _uart_recv_int_handler 125A                     ??_in_low_int 00DD  
                       __Hrparam 0000             ?_i2c_configure_slave 0001  
                       __Lrparam 0000                ?_enter_sleep_mode 0001  
       __size_of_i2c_int_handler 0562               ??_enter_sleep_mode 0034  
               __size_of___lwmod 0060                     ??_init_queue 00DB  
                   ?_WriteTimer0 00D9                     ?_WriteTimer1 00D9  
        ToMainLow_sendmsg@length 00E0                main@t0thread_data 022A  
          ?_InterruptHandlerHigh 0001                 __size_of_in_main 003C  
              i2send_msg@msgtype 0041      ToMainHigh_recvmsg@maxlength 01B6  
              i2send_msg@tlength 00BC          init_timer1_lthread@tptr 00D9  
                    _init_queues 16EA               __end_of_in_low_int 1932  
                       __ptext10 0A2E                         __ptext11 17E4  
                       __ptext20 1572                         __ptext12 1A6C  
                       __ptext21 150C                         __ptext13 1A9A  
                       __ptext30 196E                         __ptext22 1AF6  
                       __ptext14 0B32                         __ptext31 19A4  
                       __ptext23 1C8C                         __ptext15 1BFC  
                       __ptext40 0DF6                         __ptext32 090C  
                       __ptext24 1636                         __ptext16 1C9A  
                       __ptext41 125A                         __ptext33 1692  
                       __ptext25 1932                         __ptext17 137A  
                       __ptext50 0F8E                         __ptext42 1B90  
                       __ptext34 148A                         __ptext26 18F4  
                       __ptext18 1402                         __ptext51 18B4  
                       __ptext43 1110                         __ptext35 1A0C  
                       __ptext27 1C70                         __ptext19 16EA  
                       __ptext52 1796                         __ptext44 1874  
                       __ptext36 1B44                         __ptext28 19DA  
                       __ptext53 1AC8                         __ptext45 1C1A  
                       __ptext29 1C38                         __ptext54 1C80  
                       __ptext38 1740                         __ptext55 1BD8  
                       __ptext47 00D2                         __ptext39 1B6A  
                       __ptext56 1C94                         __ptext48 0EC8  
                       __ptext49 1BB4                   i1send_msg@data 000F  
      i1ToMainLow_sendmsg@length 001A                   i1send_msg@qmsg 0015  
                 i1send_msg@slot 0014                   i1send_msg@qptr 000B  
             uart_lthread@length 01B8              _init_timer0_lthread 1402  
             uart_lthread@status 01BC                         _init_i2c 150C  
            _init_timer1_lthread 137A                    __size_of_main 02D8  
                  __size_of_move 004A                    __size_of_stop 0046  
                  ??i2_check_msg 0036                    __size_of_turn 00A0  
              main@t1thread_data 021F                      ??_check_msg 00DB  
             __end_of_init_queue 15D6             __size_of_SleepIfOkay 004E  
                       _recv_msg 090C            ??_i2c_configure_slave 00D9  
                       _send_msg 0B32                      _sendUARTarr 1A6C  
                 init_queue@qptr 00D9            __size_of_uart_lthread 00BC  
  uart_trans_int_handler@msgtype 0020                    ??_Delay1KTCYx 00D9  
                       main@baud 020B             ?_init_timer0_lthread 00D9  
            _InterruptHandlerLow 0018             ?_init_timer1_lthread 00D9  
                      stop@F5114 0080         ??_uart_trans_int_handler 001E  
                    _OSCTUNEbits 000F9B                       _INTCONbits 000FF2  
                 OpenUSART@spbrg 00D9                         memcpy@d1 00D9  
                       memcpy@s1 00DB            __end_ofi2_in_high_int 1C8C  
   i2c_int_handler@overrun_error 00C6                 i2send_msg@length 0040  
                       intlevel1 0000                         intlevel2 0000  
           ?_InterruptHandlerLow 0001          ??_start_i2c_slave_reply 00DB  
               ___lwmod@dividend 00D9           ?_uart_recv_int_handler 0001  
                       move@test 01BA                         move@tptr 01B8  
                      turn@angle 01BA                     _uart_lthread 1054  
                 main@UARTConfig 020C            _block_on_To_msgqueues 1636  
                  ?_handle_start 0001                 ??_timer0_lthread 01BA  
    __size_of_ToMainHigh_recvmsg 0036      __size_of_ToMainHigh_sendmsg 0024  
                     _OSCCONbits 000FD3                 ??_timer1_lthread 01BA  
              i1recv_msg@msgtype 000E                i1recv_msg@tlength 0015  
       ToMainHigh_sendmsg@length 0048              __end_ofi2_check_msg 1BFC  
          ??_init_timer0_lthread 00DB            ??_init_timer1_lthread 00DB  
         ??_InterruptHandlerHigh 00CB                _ToMainLow_recvmsg 196E  
                       stop@test 01BA                _ToMainLow_sendmsg 1A9A  
                       stop@tptr 01B8               main@last_reg_recvd 020D  
                ___lwmod@divisor 00DB             __end_ofi2_in_low_int 1AF6  
             ?_ToMainLow_recvmsg 01B2              __end_of_Delay1KTCYx 1C4C  
              ??_i2c_int_handler 00C1                  ___lwmod@counter 00DD  
             ?_ToMainLow_sendmsg 01B1                         turn@test 01BC  
                       turn@tptr 01B8                      _SSPCON1bits 000FC6  
                    _SSPCON2bits 000FC5                   i2send_msg@data 0042  
          ??_InterruptHandlerLow 0023              ??_ToMainLow_recvmsg 00E1  
                 i2send_msg@qmsg 00BF                   i2send_msg@slot 00BE  
                 i2send_msg@qptr 003E              ??_ToMainLow_sendmsg 00E0  
            _FromMainLow_recvmsg 1B6A                   ??_handle_start 0034  
            _FromMainLow_sendmsg 1A3E                     _USART_Status 004C  
